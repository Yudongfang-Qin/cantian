CONN / AS SYSDBA
--环境初始化
DROP USER IF EXISTS PL_DC1 CASCADE;
CREATE USER PL_DC1 IDENTIFIED BY Cantian_123456;
GRANT DBA TO PL_DC1;
CONN PL_DC1/Cantian_123456@127.0.0.1:1611
SET SERVEROUTPUT ON

--一、基本查找功能测试
--1.递归 FUNCTION/PROCEDURE

DROP TABLE IF EXISTS T1;
CREATE TABLE T1(C1 INT);

CREATE OR REPLACE FUNCTION F1(C1 INT) RETURN INT IS
BEGIN
 IF C1 > 0 THEN
  RETURN F1(C1 - 1) + C1;
 ELSE
  RETURN 0;
 END IF;
END;
/
SELECT F1(10);
SELECT F1(10,1);--error

CREATE OR REPLACE PROCEDURE P1(C1 INT) IS
BEGIN
 IF C1 > 0 THEN
  INSERT INTO T1 VALUES(C1);
  P1(C1 - 1);
 ELSE
  INSERT INTO T1 VALUES(0);
 END IF;
 COMMIT;
END;
/

CALL P1(1);
CALL P1(1,1);--error
select p1(1);
SELECT MAX(C1) FROM T1;

CREATE OR REPLACE SYNONYM L_SYN_F1 FOR F1;
CREATE OR REPLACE SYNONYM L_SYN_P1 FOR P1;
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_F1 FOR F1;
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_P1 FOR P1;
SELECT L_SYN_F1(12);
CALL L_SYN_P1(2);
SELECT MAX(C1) FROM T1;
SELECT P_SYN_F1(12);
CALL P_SYN_P1(3);
SELECT MAX(C1) FROM T1;

--2.包内自调用 PACKAGE
CREATE OR REPLACE PACKAGE PKG2 IS
 FUNCTION F1(C1 INT) RETURN INT;
 FUNCTION F2(C1 INT) RETURN INT;
END;
/

CREATE OR REPLACE PACKAGE BODY PKG2 IS
 FUNCTION F1(C1 INT) RETURN INT IS
 BEGIN
  RETURN C1;
 END;
 FUNCTION F2(C1 INT) RETURN INT IS
 BEGIN
  RETURN 10 * C1 + F1(C1);
 END;
END;
/

SELECT PKG2.F2(10);
SELECT PKG2.F4(10);--error
CREATE OR REPLACE SYNONYM L_SYN_PKG2 FOR PKG2;
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_PKG2 FOR PKG2;
SELECT L_SYN_PKG2.F2(11);
SELECT P_SYN_PKG2.F2(11);

--3.内置函数
SELECT ABS(-1);
SELECT ABS(-1,1);
CREATE OR REPLACE SYNONYM L_SYN_ABS FOR ABS; --error
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_ABS FOR ABS; --error

--4.标准包
CREATE OR REPLACE PROCEDURE P4(C1 INT) IS
 A INT;
BEGIN
 A := C1 / 0;
EXCEPTION
 when Zero_divide then 
 SYS.dbe_output.print_line('Zero divide');
 SYS.dbe_output.print_line(DBE_STD.SQL_ERR_CODE||' error '||SQL_ERR_MSG);
 when others then
 SYS.dbe_output.print_line('other error');
 SYS.dbe_output.print_line(DBE_STD.SQL_ERR_CODE||' error '||SQL_ERR_MSG);
END;
/
CALL P4(1);
CREATE OR REPLACE SYNONYM L_SYN_ERR FOR SQL_ERR_CODE; --error
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_ERR FOR SQL_ERR_CODE; --error

--5.用户自定义函数
CREATE OR REPLACE FUNCTION F5(C1 INT) RETURN INT IS
BEGIN
 RETURN 1;
END;
/
SELECT F5(11);
SELECT F5('asf3');--error

CREATE OR REPLACE PROCEDURE P5(C1 INT) IS
BEGIN
 INSERT INTO T1 VALUES(C1);
 COMMIT;
END;
/
CALL P5(6);
SELECT MAX(C1) FROM T1;

CREATE OR REPLACE SYNONYM L_SYN_F5 FOR F5;
CREATE OR REPLACE SYNONYM L_SYN_P5 FOR P5;
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_F5 FOR F5;
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_P5 FOR P5;
SELECT L_SYN_F5(12);
SELECT P_SYN_F5(12);
CALL L_SYN_P5(7);
SELECT MAX(C1) FROM T1;
CALL P_SYN_P5(8);
SELECT MAX(C1) FROM T1;

--6.PUBLIC用户对象
CREATE OR REPLACE FUNCTION "PUBLIC".F6(C1 INT) RETURN INT IS
BEGIN
 RETURN C1 + 6;
END;
/

GRANT INSERT ON PL_DC1.T1 TO PUBLIC;
CREATE OR REPLACE PROCEDURE "PUBLIC".P6(C1 INT) IS
BEGIN
 INSERT INTO PL_DC1.T1 VALUES(C1 + 6);
 COMMIT;
END;
/

CREATE OR REPLACE PACKAGE "PUBLIC".PL_DC_PKG6 IS
 FUNCTION PL_DC_PKG6_F1(C1 INT) RETURN INT;
 FUNCTION PL_DC_PKG6_F2(C1 INT) RETURN INT;
END;
/

CREATE OR REPLACE PACKAGE BODY "PUBLIC".PL_DC_PKG6 IS
 FUNCTION PL_DC_PKG6_F1(C1 INT) RETURN INT IS
 BEGIN
  RETURN C1 * 10;
 END;
 FUNCTION PL_DC_PKG6_F2(C1 INT) RETURN INT IS
 BEGIN
  RETURN PL_DC_PKG6_F1(C1) + C1;
 END;
END;
/

SELECT F6(6);
CALL P6(6);
SELECT MAX(C1) FROM T1;
SELECT PL_DC_PKG6.PL_DC_PKG6_F1(6);
SELECT PL_DC_PKG6.PL_DC_PKG6_F2(6);
SELECT PL_DC_PKG6.PL_DC_PKG6_F3(6);--error

CREATE OR REPLACE SYNONYM L_SYN_F6 FOR "PUBLIC".F6;
CREATE OR REPLACE SYNONYM L_SYN_P6 FOR "PUBLIC".P6;
CREATE OR REPLACE SYNONYM L_SYN_PKG6 FOR "PUBLIC".PL_DC_PKG6;
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_F6 FOR "PUBLIC".F6;
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_P6 FOR "PUBLIC".P6;
CREATE OR REPLACE PUBLIC SYNONYM P_SYN_PKG6 FOR "PUBLIC".PL_DC_PKG6;
SELECT L_SYN_F6(7);
CALL L_SYN_P6(7);
SELECT MAX(C1) FROM T1;
SELECT L_SYN_PKG6.PL_DC_PKG6_F1(7);
SELECT L_SYN_PKG6.PL_DC_PKG6_F2(7);
SELECT P_SYN_F6(8);
CALL P_SYN_P6(8);
SELECT MAX(C1) FROM T1;
SELECT P_SYN_PKG6.PL_DC_PKG6_F1(8);
SELECT P_SYN_PKG6.PL_DC_PKG6_F2(8);

--7.报错
SELECT F_ERR(1);
CALL P_ERR(1);

--二.优先级
--7.包内自调用
----用户自定义函数
----PUBLIC用户对象
CREATE OR REPLACE FUNCTION F7(C1 INT) RETURN INT IS
BEGIN
 RETURN 7;
END;
/
CREATE OR REPLACE PUBLIC SYNONYM F7 FOR F7;

CREATE OR REPLACE FUNCTION F7_1(C1 INT) RETURN INT IS
BEGIN
 RETURN 8;
END;
/
CREATE OR REPLACE PUBLIC SYNONYM F7_1 FOR F7_1;

CREATE OR REPLACE FUNCTION "PUBLIC".F7_2(C1 INT) RETURN INT IS
BEGIN
 RETURN 9;
END;
/

CREATE OR REPLACE PACKAGE PKG7 IS
 FUNCTION F7(C1 INT) RETURN INT;
 FUNCTION F8(C1 INT) RETURN INT;
 FUNCTION F9(C1 INT) RETURN INT;
 FUNCTION F10(C1 INT) RETURN INT;
END;
/

CREATE OR REPLACE PACKAGE BODY PKG7 IS
 FUNCTION F7(C1 INT) RETURN INT IS
 BEGIN
  RETURN C1 * 10 + 7;
 END;
 FUNCTION F8(C1 INT) RETURN INT IS
 BEGIN
  RETURN F7(C1);
 END;
 FUNCTION F9(C1 INT) RETURN INT IS
 BEGIN
  RETURN F7_1(C1);
 END;
 FUNCTION F10(C1 INT) RETURN INT IS
 BEGIN
  RETURN F7_2(C1);
 END;
END;
/

SELECT PKG7.F7(10);
SELECT PKG7.F8(10);
SELECT F7_1(10);
SELECT PKG7.F9(10);
SELECT F7_2(10);
SELECT PKG7.F10(10);

CONN / AS SYSDBA
DROP USER IF EXISTS PL_DC1 CASCADE;