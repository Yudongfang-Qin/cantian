--FLASHBACK QUERY WITH INVALID SCN
DROP TABLE IF EXISTS FB_QTBL_INVALID_1;
CREATE TABLE FB_QTBL_INVALID_1 (ID INT);
INSERT INTO FB_QTBL_INVALID_1 VALUES(1);
COMMIT;
SELECT * FROM FB_QTBL_INVALID_1;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 0;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 1;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 9999999999999999;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 9999999999999998 + 1/1;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 'ASDFGAG';
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN (SELECT CURRENT_SCN FROM V$DATABASE);
DROP TABLE FB_QTBL_INVALID_1;

--FLASHBACK QUERY WITH INVALID TIMESTAMP
DROP TABLE IF EXISTS FB_QTBL_INVALID_2;
CREATE TABLE FB_QTBL_INVALID_2 (ID INT);
INSERT INTO FB_QTBL_INVALID_2 VALUES(1);
COMMIT;
SELECT * FROM FB_QTBL_INVALID_2;
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP 0;
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP 123.45678;
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP 'ASDFGAG';
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP SYSDATE - 1/24;
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP SYSTIMESTAMP + 1/24;
SELECT * FROM FB_QTBL_INVALID_1 AS OF TIMESTAMP (SELECT CURRENT_SCN FROM V$DATABASE);
DROP TABLE FB_QTBL_INVALID_2;

--FLASHBACK QUERY TO BEFORE DDL
DROP TABLE IF EXISTS FB_QTBL_INVALID_3;
CREATE TABLE FB_QTBL_INVALID_3 (ID INT);
INSERT INTO FB_QTBL_INVALID_3 VALUES(1);
COMMIT;
SELECT SLEEP(2);

CREATE INDEX IDX_FB_QTBL_INVALID_3 ON FB_QTBL_INVALID_3 (ID);
DROP INDEX IDX_FB_QTBL_INVALID_3 ON FB_QTBL_INVALID_3;
SELECT * FROM FB_QTBL_INVALID_3 AS OF TIMESTAMP SYSDATE - 1/(24*60*60);
DROP TABLE FB_QTBL_INVALID_3;

DROP TABLE IF EXISTS FB_QTBL_INVALID_4;
CREATE TABLE FB_QTBL_INVALID_4 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
INSERT INTO FB_QTBL_INVALID_4 VALUES(1);
COMMIT;
SELECT SLEEP(2);

ALTER TABLE FB_QTBL_INVALID_4 ADD PARTITION P3 VALUES LESS THAN (30);
SELECT * FROM FB_QTBL_INVALID_4 AS OF TIMESTAMP SYSDATE - 1/(24*60*60);
DROP TABLE FB_QTBL_INVALID_4;

--FLASHBACK QUERY NORMAL TABLE
DROP TABLE IF EXISTS FB_QTBL_NORMAL_1;
CREATE TABLE FB_QTBL_NORMAL_1 (ID INT);
INSERT INTO FB_QTBL_NORMAL_1 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_NORMAL_1 SET ID = 2 WHERE ID = 1;
COMMIT;
SELECT * FROM FB_QTBL_NORMAL_1;
SELECT * FROM FB_QTBL_NORMAL_1 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
DROP TABLE FB_QTBL_NORMAL_1;

--FLASHBACK QUERY NORMAL TABLE WITH INDEX
DROP TABLE IF EXISTS FB_QTBL_NORMAL_2;
CREATE TABLE FB_QTBL_NORMAL_2 (ID INT);
CREATE INDEX IDX_FB_QTBL_NORMAL_2 ON FB_QTBL_NORMAL_2 (ID);
INSERT INTO FB_QTBL_NORMAL_2 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_NORMAL_2 SET ID = 2 WHERE ID = 1;
COMMIT;
INSERT INTO FB_QTBL_NORMAL_2 VALUES (10);
COMMIT;
SELECT * FROM FB_QTBL_NORMAL_2;
SELECT * FROM FB_QTBL_NORMAL_2 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID > 0;

DROP TABLE FB_QTBL_NORMAL_2;

--FLASHBACK QUERY NORMAL TABLE WITH INDEX AND LOB
DROP TABLE IF EXISTS FB_QTBL_NORMAL_3;
CREATE TABLE FB_QTBL_NORMAL_3 (ID INT, TT CLOB);
CREATE INDEX IDX_FB_QTBL_NORMAL_3 ON FB_QTBL_NORMAL_3 (ID);
INSERT INTO FB_QTBL_NORMAL_3 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_NORMAL_3 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_QTBL_NORMAL_3 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_QTBL_NORMAL_3;
SELECT * FROM FB_QTBL_NORMAL_3 AS OF TIMESTAMP SYSTIMESTAMP - 2/(24*60*60) WHERE ID > 0;
DROP TABLE FB_QTBL_NORMAL_3;

--FLASHBACK QUERY PARTITION TABLE
DROP TABLE IF EXISTS FB_QTBL_PART_1;
CREATE TABLE FB_QTBL_PART_1 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
INSERT INTO FB_QTBL_PART_1 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_PART_1 SET ID = 2 WHERE ID = 1;
COMMIT;
SELECT * FROM FB_QTBL_PART_1;
SELECT * FROM FB_QTBL_PART_1 AS OF TIMESTAMP SYSTIMESTAMP - 2/(24*60*60);
DROP TABLE FB_QTBL_PART_1;

--FLASHBACK QUERY PARTITION TABLE WITH GLOBAL INDEX
DROP TABLE IF EXISTS FB_QTBL_PART_2;
CREATE TABLE FB_QTBL_PART_2 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
CREATE INDEX IDX_FB_QTBL_PART_2 ON FB_QTBL_PART_2 (ID);
INSERT INTO FB_QTBL_PART_2 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_PART_2 SET ID = 2 WHERE ID = 1;
COMMIT;
INSERT INTO FB_QTBL_PART_2 VALUES (10);
COMMIT;
SELECT * FROM FB_QTBL_PART_2;
SELECT * FROM FB_QTBL_PART_2 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID > 0;

DROP TABLE FB_QTBL_PART_2;

--FLASHBACK QUERY PARTITION TABLE WITH LOCAL INDEX AND LOB
DROP TABLE IF EXISTS FB_QTBL_PART_3;
CREATE TABLE FB_QTBL_PART_3 (ID INT, TT CLOB)
PARTITION BY LIST(ID)
(
PARTITION P1 VALUES (1,2,3,4,5),
PARTITION P2 VALUES (6,7,8,9,10)
);
CREATE INDEX IDX_FB_QTBL_PART_3 ON FB_QTBL_PART_3 (ID) LOCAL;
INSERT INTO FB_QTBL_PART_3 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_PART_3 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_QTBL_PART_3 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_QTBL_PART_3;
SELECT * FROM FB_QTBL_PART_3 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID > 0;
DROP TABLE FB_QTBL_PART_3;


--FLASHBACK WITH INVALID SCN
DROP TABLE IF EXISTS FB_TBL_INVALID_1;
CREATE TABLE FB_TBL_INVALID_1 (ID INT);
INSERT INTO FB_TBL_INVALID_1 VALUES(1);
COMMIT;
SELECT * FROM FB_TBL_INVALID_1;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 0;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 1;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 9999999999999999;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 9999999999999999 / 1;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 'ASDFGAG';
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN (SELECT CURRENT_SCN FROM V$DATABASE);
DROP TABLE FB_TBL_INVALID_1;

--FLASHBACK WITH INVALID TIMESTAMP
DROP TABLE IF EXISTS FB_TBL_INVALID_2;
CREATE TABLE FB_TBL_INVALID_2 (ID INT);
INSERT INTO FB_TBL_INVALID_2 VALUES(1);
COMMIT;
SELECT * FROM FB_TBL_INVALID_2;
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP 0;
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP 123.45678;
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP 'ASDFGAG';
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP SYSDATE - 1/24;
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP SYSTIMESTAMP + 1/24;
FLASHBACK TABLE FB_TBL_INVALID_1 TO TIMESTAMP (SELECT CURRENT_SCN FROM V$DATABASE);
DROP TABLE FB_TBL_INVALID_2;

--FLASHBACK TO BEFORE DDL
DROP TABLE IF EXISTS FB_TBL_INVALID_3;
CREATE TABLE FB_TBL_INVALID_3 (ID INT);
INSERT INTO FB_TBL_INVALID_3 VALUES(1);
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CREATE OR REPLACE PROCEDURE PRO_FLASHBACK1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT SYSDATE INTO SCN_NUM FROM DUAL;
	INSERT INTO TEMP VALUES(SCN_NUM);
END;
/
CALL PRO_FLASHBACK1();

CREATE INDEX IDX_FB_TBL_INVALID_3 ON FB_TBL_INVALID_3 (ID);
DROP INDEX IDX_FB_TBL_INVALID_3 ON FB_TBL_INVALID_3;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_INVALID_3()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_INVALID_3 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_INVALID_3();
DROP TABLE TEMP;
DROP TABLE FB_TBL_INVALID_3;

DROP TABLE IF EXISTS FB_TBL_INVALID_4;
CREATE TABLE FB_TBL_INVALID_4 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
INSERT INTO FB_TBL_INVALID_4 VALUES(1);
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();

ALTER TABLE FB_TBL_INVALID_4 ADD PARTITION P3 VALUES LESS THAN (30);
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_INVALID_4()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_INVALID_4 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_INVALID_4();
DROP TABLE TEMP;
DROP TABLE FB_TBL_INVALID_4;

--FLASHBACK NORMAL TABLE
DROP TABLE IF EXISTS FB_TBL_NORMAL_1;
CREATE TABLE FB_TBL_NORMAL_1 (ID INT);
INSERT INTO FB_TBL_NORMAL_1 VALUES(1);
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_NORMAL_1 SET ID = 2 WHERE ID = 1;
COMMIT;
SELECT * FROM FB_TBL_NORMAL_1;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_NORMAL_1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_NORMAL_1 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_NORMAL_1();
SELECT * FROM FB_TBL_NORMAL_1;
DROP TABLE TEMP;
DROP TABLE FB_TBL_NORMAL_1;

--FLASHBACK NORMAL TABLE WITH INDEX
DROP TABLE IF EXISTS FB_TBL_NORMAL_2;
CREATE TABLE FB_TBL_NORMAL_2 (ID INT);
CREATE INDEX IDX_FB_TBL_NORMAL_2 ON FB_TBL_NORMAL_2 (ID);
INSERT INTO FB_TBL_NORMAL_2 VALUES(1);
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_NORMAL_2 SET ID = 2 WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_NORMAL_2 VALUES (10);
COMMIT;
SELECT * FROM FB_TBL_NORMAL_2;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_NORMAL_2()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_NORMAL_2 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_NORMAL_2();
SELECT * FROM FB_TBL_NORMAL_2 WHERE ID > 0;
DROP TABLE TEMP;
DROP TABLE FB_TBL_NORMAL_2;

--FLASHBACK NORMAL TABLE WITH INDEX AND LOB
DROP TABLE IF EXISTS FB_TBL_NORMAL_3;
CREATE TABLE FB_TBL_NORMAL_3 (ID INT, TT CLOB);
CREATE INDEX IDX_FB_TBL_NORMAL_3 ON FB_TBL_NORMAL_3 (ID);
INSERT INTO FB_TBL_NORMAL_3 VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_NORMAL_3 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_NORMAL_3 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_NORMAL_3;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_NORMAL_3()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_NORMAL_3 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_NORMAL_3();
SELECT * FROM FB_TBL_NORMAL_3;
DROP TABLE TEMP;
DROP TABLE FB_TBL_NORMAL_3;

--FLASHBACK PARTITION TABLE
DROP TABLE IF EXISTS FB_TBL_PART_1;
CREATE TABLE FB_TBL_PART_1 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
INSERT INTO FB_TBL_PART_1 VALUES(1);
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_PART_1 SET ID = 2 WHERE ID = 1;
COMMIT;
SELECT * FROM FB_TBL_PART_1;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_PART_1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_PART_1 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_PART_1();
SELECT * FROM FB_TBL_PART_1;
DROP TABLE TEMP;
DROP TABLE FB_TBL_PART_1;

--FLASHBACK PARTITION TABLE WITH GLOBAL INDEX
DROP TABLE IF EXISTS FB_TBL_PART_2;
CREATE TABLE FB_TBL_PART_2 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
CREATE INDEX IDX_FB_TBL_PART_2 ON FB_TBL_PART_2 (ID);
INSERT INTO FB_TBL_PART_2 VALUES(1);
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_PART_2 SET ID = 2 WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_PART_2 VALUES (10);
COMMIT;
SELECT * FROM FB_TBL_PART_2;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_PART_2()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_PART_2 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_PART_2();
SELECT * FROM FB_TBL_PART_2;

DROP TABLE TEMP;
DROP TABLE FB_TBL_PART_2;

--FLASHBACK PARTITION TABLE WITH LOCAL INDEX AND LOB
DROP TABLE IF EXISTS FB_TBL_PART_3;
CREATE TABLE FB_TBL_PART_3 (ID INT, TT CLOB)
PARTITION BY LIST(ID)
(
PARTITION P1 VALUES (1,2,3,4,5),
PARTITION P2 VALUES (6,7,8,9,10)
);
CREATE INDEX IDX_FB_TBL_PART_3 ON FB_TBL_PART_3 (ID) LOCAL;
INSERT INTO FB_TBL_PART_3 VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_PART_3 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_PART_3 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_PART_3;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_PART_3()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_PART_3 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_PART_3();
SELECT * FROM FB_TBL_PART_3;
DROP TABLE TEMP;
DROP TABLE FB_TBL_PART_3;


--RE-FLASHBACK NORMAL TABLE
DROP TABLE IF EXISTS FB_TBL_NORMAL_RE1;
CREATE TABLE FB_TBL_NORMAL_RE1 (ID INT, TT CLOB) CRMODE ROW;
CREATE INDEX IDX_FB_TBL_NORMAL_RE1 ON FB_TBL_NORMAL_RE1 (ID);
INSERT INTO FB_TBL_NORMAL_RE1 VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CREATE OR REPLACE PROCEDURE PRO_FLASHBACK1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT SYSDATE INTO SCN_NUM FROM DUAL;
	INSERT INTO TEMP VALUES(SCN_NUM);
END;
/
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_NORMAL_RE1 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_NORMAL_RE1 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_NORMAL_RE1;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_NORMAL_RE1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_NORMAL_RE1 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_NORMAL_RE1();
SELECT * FROM FB_TBL_NORMAL_RE1;
DROP TABLE TEMP;
DROP TABLE FB_TBL_NORMAL_RE1;

--RE-FLASHBACK PART TABLE
DROP TABLE IF EXISTS FB_TBL_PART_RE1;
CREATE TABLE FB_TBL_PART_RE1 (ID INT, TT CLOB)
PARTITION BY LIST(ID)
(
PARTITION P1 VALUES (1,2,3,4,5),
PARTITION P2 VALUES (6,7,8,9,10)
) CRMODE ROW;
CREATE INDEX IDX_FB_TBL_PART_RE1 ON FB_TBL_PART_RE1 (ID) LOCAL;
INSERT INTO FB_TBL_PART_RE1 VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_PART_RE1 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_PART_RE1 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_PART_RE1;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_PART_RE1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_PART_RE1 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_PART_RE1();
SELECT * FROM FB_TBL_PART_RE1;
FLASHBACK TABLE FB_TBL_PART_RE1 TO BEFORE TRUNCATE FORCE;
SELECT * FROM FB_TBL_PART_RE1;
CALL PRO_FB_TBL_PART_RE1();
SELECT * FROM FB_TBL_PART_RE1;
DROP TABLE TEMP;
DROP TABLE FB_TBL_PART_RE1;

--FLASHBACK NORMAL TABLE AFTER FLASHBACK DROP
DROP TABLE IF EXISTS FB_TBL_NORMAL_RB1;
CREATE TABLE FB_TBL_NORMAL_RB1 (ID INT, TT CLOB) tablespace users;
CREATE INDEX IDX_FB_TBL_NORMAL_RB1 ON FB_TBL_NORMAL_RB1 (ID);
INSERT INTO FB_TBL_NORMAL_RB1 VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_NORMAL_RB1 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
DROP TABLE FB_TBL_NORMAL_RB1;
FLASHBACK TABLE FB_TBL_NORMAL_RB1 TO BEFORE DROP;
INSERT INTO FB_TBL_NORMAL_RB1 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_NORMAL_RB1;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_NORMAL_RB1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_NORMAL_RB1 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_NORMAL_RB1();
SELECT * FROM FB_TBL_NORMAL_RB1;
DROP TABLE TEMP;
DROP TABLE FB_TBL_NORMAL_RB1;

--FLASHBACK NORMAL TABLE AFTER FLASHBACK TRUNCATE
DROP TABLE IF EXISTS FB_TBL_NORMAL_RB2;
CREATE TABLE FB_TBL_NORMAL_RB2 (ID INT, TT CLOB) tablespace users;
CREATE INDEX IDX_FB_TBL_NORMAL_RB2 ON FB_TBL_NORMAL_RB2 (ID);
INSERT INTO FB_TBL_NORMAL_RB2 VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_NORMAL_RB2 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
TRUNCATE TABLE FB_TBL_NORMAL_RB2;
INSERT INTO FB_TBL_NORMAL_RB2 VALUES (10, 'QWETYUUQER');
COMMIT;
FLASHBACK TABLE FB_TBL_NORMAL_RB2 TO BEFORE TRUNCATE;
FLASHBACK TABLE FB_TBL_NORMAL_RB2 TO BEFORE TRUNCATE FORCE;
SELECT * FROM FB_TBL_NORMAL_RB2;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_NORMAL_RB2()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_NORMAL_RB2 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_NORMAL_RB2();
SELECT * FROM FB_TBL_NORMAL_RB2;
DROP TABLE TEMP;
DROP TABLE FB_TBL_NORMAL_RB2;

--FLASHBACK PART TABLE AFTER FLASHBACK DROP
DROP TABLE IF EXISTS FB_TBL_PART_RB1;
CREATE TABLE FB_TBL_PART_RB1 (ID INT, TT CLOB)
PARTITION BY RANGE(ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
) tablespace users;
CREATE INDEX IDX_FB_TBL_PART_RB1 ON FB_TBL_PART_RB1 (ID) LOCAL;
INSERT INTO FB_TBL_PART_RB1 VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_PART_RB1 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
DROP TABLE FB_TBL_PART_RB1;
FLASHBACK TABLE FB_TBL_PART_RB1 TO BEFORE DROP;
INSERT INTO FB_TBL_PART_RB1 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_PART_RB1;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_PART_RB1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_PART_RB1 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_PART_RB1();
SELECT * FROM FB_TBL_PART_RB1;
DROP TABLE TEMP;
DROP TABLE FB_TBL_PART_RB1;

--FLASHBACK PART TABLE AFTER FLASHBACK TRUNCATE
DROP TABLE IF EXISTS FB_TBL_PART_RB2;
CREATE TABLE FB_TBL_PART_RB2 (ID INT, TT CLOB)
PARTITION BY RANGE(ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
) tablespace users;
CREATE INDEX IDX_FB_TBL_PART_RB2 ON FB_TBL_PART_RB2 (ID) LOCAL;
INSERT INTO FB_TBL_PART_RB2 VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_PART_RB2 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
TRUNCATE TABLE FB_TBL_PART_RB2;
INSERT INTO FB_TBL_PART_RB2 VALUES (10, 'QWETYUUQER');
COMMIT;
FLASHBACK TABLE FB_TBL_PART_RB2 TO BEFORE TRUNCATE;
FLASHBACK TABLE FB_TBL_PART_RB2 TO BEFORE TRUNCATE FORCE;
SELECT * FROM FB_TBL_PART_RB2;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_PART_RB2()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_PART_RB2 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_PART_RB2();
SELECT * FROM FB_TBL_PART_RB2;
DROP TABLE TEMP;
DROP TABLE FB_TBL_PART_RB2;

--FLASHBACK PART TABLE TO BEFORE SCN AFTER TRUNCATE(ALLOWED BUT NOT RECOMMENDED)
DROP TABLE IF EXISTS FB_TABLE_PART_RB3;
CREATE TABLE FB_TBL_PART_RB3(ID1 INT, CONSTRAINT PK_FB_TBL_PART_RB3 PRIMARY KEY(ID1), ID2 INT, ID3 INT)
PARTITION BY RANGE (ID3)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20),
PARTITION P3 VALUES LESS THAN (30)
) TABLESPACE USERS;
CREATE INDEX IDX_FB_TBL_PART_RB3_1 ON FB_TBL_PART_RB3 (ID2);
CREATE INDEX IDX_FB_TBL_PART_RB3_2 ON FB_TBL_PART_RB3 (ID3) LOCAL;

INSERT INTO FB_TBL_PART_RB3 VALUES (1, 1, 1);
INSERT INTO FB_TBL_PART_RB3 VALUES (11, 11, 11);
INSERT INTO FB_TBL_PART_RB3 VALUES (21, 21, 21);
COMMIT;
SELECT SLEEP(2);

ALTER TABLE FB_TBL_PART_RB3 TRUNCATE PARTITION P1;
UPDATE FB_TBL_PART_RB3 SET ID1 = 22, ID2 = 22, ID3 = 22 WHERE ID3 = 21;
DROP TABLE FB_TBL_PART_RB3 PURGE;

DROP TABLE IF EXISTS FB_TBL_PART_RB4;
CREATE TABLE FB_TBL_PART_RB4(ID1 INT, ID2 INT, ID3 INT)
PARTITION BY RANGE (ID3)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20),
PARTITION P3 VALUES LESS THAN (30)
) TABLESPACE USERS;
CREATE INDEX IDX_FB_TBL_PART_RB3_1 ON FB_TBL_PART_RB4 (ID1, upper(ID2));
CREATE INDEX IDX_FB_TBL_PART_RB3_2 ON FB_TBL_PART_RB4 (upper(ID3), ID1) LOCAL;

INSERT INTO FB_TBL_PART_RB4 VALUES (1, 1, 1);
INSERT INTO FB_TBL_PART_RB4 VALUES (11, 11, 11);
INSERT INTO FB_TBL_PART_RB4 VALUES (21, 21, 21);
COMMIT;

ALTER TABLE FB_TBL_PART_RB4 TRUNCATE PARTITION P1;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
CREATE INDEX IDX_FUN ON TEMP(UPPER(A));
SELECT SLEEP(2);
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_PART_RB4 SET ID1 = 22, ID2 = 22, ID3 = 22 WHERE ID3 = 21;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_PART_RB4()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_PART_RB4 TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_PART_RB4();
DROP TABLE FB_TBL_PART_RB4 PURGE;

CREATE TABLE FLASH_TABLE(c_id INT, c_first VARCHAR(8000), c_first2 VARCHAR(8000)) CRMODE PAGE  TABLESPACE USERS;
INSERT INTO FLASH_TABLE VALUES(1, lpad(' ', 1000, 'a'), lpad(' ', 2000, 'a'));
INSERT INTO FLASH_TABLE VALUES(2, lpad(' ', 1000, 'a'), lpad(' ', 2000, 'a'));
INSERT INTO FLASH_TABLE VALUES(3, 'a', 'b');
INSERT INTO FLASH_TABLE VALUES(4, 'a', 'b');
INSERT INTO FLASH_TABLE VALUES(5, 'a', 'b');
COMMIT;

UPDATE FLASH_TABLE SET c_first = lpad(' ', 5000, 'a') WHERE c_id = 2;
COMMIT;

CREATE TABLE TEMP_SCN(c_scn varchar(200));
INSERT INTO TEMP_SCN SELECT current_scn FROM v$database;
COMMIT;
UPDATE FLASH_TABLE SET c_first2 = lpad(' ', 2000, 'b') WHERE c_id = 2;
COMMIT;

SELECT COUNT(*) FROM FLASH_TABLE;

CREATE OR REPLACE PROCEDURE FLASHBACK_PRO()
AS
FLASH_SCN varchar2(200);
BEGIN
SELECT c_scn INTO FLASH_SCN FROM TEMP_SCN;
EXECUTE IMMEDIATE 'FLASHBACK TABLE FLASH_TABLE TO SCN '||FLASH_SCN;
END;
/
CALL FLASHBACK_PRO();

SELECT COUNT(*) FROM FLASH_TABLE;
DROP TABLE TEMP_SCN;
DROP TABLE FLASH_TABLE;

--FLASHBACK NORMAL TABLE TO THE SAME SCN MORE TIMES
DROP TABLE IF EXISTS FB_TBL_NORMAL;
CREATE TABLE FB_TBL_NORMAL (ID INT, TT CLOB) tablespace users;
CREATE INDEX IDX_FB_TBL_NORMAL ON FB_TBL_NORMAL (ID);
INSERT INTO FB_TBL_NORMAL VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(A VARCHAR2(200));
SELECT SLEEP(2);
CREATE OR REPLACE PROCEDURE PRO_FLASHBACK1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT SYSDATE INTO SCN_NUM FROM DUAL;
	INSERT INTO TEMP VALUES(SCN_NUM);
END;
/
CALL PRO_FLASHBACK1();
UPDATE FB_TBL_NORMAL SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
INSERT INTO FB_TBL_NORMAL VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_NORMAL;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_NORMAL_RB1()
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT A INTO SCN_NUM FROM TEMP;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_NORMAL TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_NORMAL_RB1();
SELECT * FROM FB_TBL_NORMAL;
UPDATE FB_TBL_NORMAL SET ID = 3, TT = 'AFAGADGHH' WHERE ID = 1;
INSERT INTO FB_TBL_NORMAL VALUES (20, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_NORMAL;
CALL PRO_FB_TBL_NORMAL_RB1();
SELECT * FROM FB_TBL_NORMAL;
DROP TABLE TEMP;
DROP TABLE FB_TBL_NORMAL;

--FLASHBACK NORMAL TABLE TO THE SCN1, EXCUTE DML, FLASHBACK TO SCN2, EXCUTE DML, FLASHBACK TO SCN3, EXCUTE DML, FLASHBACK TO SCN1
DROP TABLE IF EXISTS FB_TBL_NORMAL;
CREATE TABLE FB_TBL_NORMAL (ID INT, TT CLOB) tablespace users;
CREATE INDEX IDX_FB_TBL_NORMAL ON FB_TBL_NORMAL (ID);
INSERT INTO FB_TBL_NORMAL VALUES(1,'ADGASDFASG');
COMMIT;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE TEMP(ID INT, NAME VARCHAR2(200));
SELECT SLEEP(2);
INSERT INTO TEMP SELECT 1, SYSDATE;
UPDATE FB_TBL_NORMAL SET ID = 10 WHERE ID = 1;
INSERT INTO FB_TBL_NORMAL VALUES(100, 'SFGSAFJHAF');
SELECT SLEEP(2);
INSERT INTO TEMP SELECT 2, SYSDATE;
UPDATE FB_TBL_NORMAL SET ID = 20 WHERE ID = 10;
INSERT INTO TEMP SELECT 3, SYSDATE;
COMMIT;
SELECT * FROM FB_TBL_NORMAL;
CREATE OR REPLACE PROCEDURE PRO_FB_TBL_NORMAL_RB1(V_ID INT)
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT NAME INTO SCN_NUM FROM TEMP WHERE ID = V_ID;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_TBL_NORMAL TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/
CALL PRO_FB_TBL_NORMAL_RB1(1);
SELECT * FROM FB_TBL_NORMAL;
CALL PRO_FB_TBL_NORMAL_RB1(2);
SELECT * FROM FB_TBL_NORMAL;
CALL PRO_FB_TBL_NORMAL_RB1(3);
SELECT * FROM FB_TBL_NORMAL;
DROP TABLE TEMP;
DROP TABLE FB_TBL_NORMAL;

DROP TABLE IF EXISTS FB_TBL_PART_RB;
CREATE TABLE FB_TBL_PART_RB(ID INT, C1 INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (maxvalue)
) TABLESPACE USERS;
CREATE INDEX IDX_FB_TBL_PART_RB_1 ON FB_TBL_PART_RB (C1);

INSERT INTO FB_TBL_PART_RB VALUES (1, 1);
COMMIT;
TRUNCATE TABLE FB_TBL_PART_RB;
INSERT INTO FB_TBL_PART_RB VALUES (1, 1);
ALTER TABLE FB_TBL_PART_RB TRUNCATE PARTITION P1;
FLASHBACK TABLE FB_TBL_PART_RB TO BEFORE TRUNCATE;

INSERT INTO FB_TBL_PART_RB VALUES (11, 11);
TRUNCATE TABLE FB_TBL_PART_RB;
FLASHBACK TABLE FB_TBL_PART_RB TO BEFORE TRUNCATE;
DELETE FROM FB_TBL_PART_RB;
DROP TABLE IF EXISTS FB_TBL_PART_RB;

DROP PROCEDURE IF EXISTS PRO_SAVE_TIME;
DROP PROCEDURE IF EXISTS PRO_FB_TABLE_TIMESTAMP;
DROP TABLE IF EXISTS FB_REFERENCE_STUDENT_TABLE;
DROP TABLE IF EXISTS FB_REFERENCE_SCORE_TABLE;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE FB_REFERENCE_STUDENT_TABLE(ID INT, NAME VARCHAR(20), CONSTRAINT _PK_FB_TAB_ID PRIMARY KEY(ID)) PARTITION BY RANGE(ID)
(
PARTITION P1 VALUES LESS THAN(50),
PARTITION P2 VALUES LESS THAN(100)
);
CREATE TABLE FB_REFERENCE_SCORE_TABLE(ID INT REFERENCES FB_REFERENCE_STUDENT_TABLE(ID), SCORE INT);
CREATE TABLE TEMP(NUM INT, TIME_STAMP VARCHAR(200));
CREATE OR REPLACE PROCEDURE PRO_SAVE_TIME(ID INT)
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT SYSDATE INTO SCN_NUM FROM DUAL;
	INSERT INTO TEMP VALUES(ID, SCN_NUM);
END;
/

CREATE OR REPLACE PROCEDURE PRO_FB_TABLE_TIMESTAMP(ID INT)
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT TIME_STAMP INTO SCN_NUM FROM TEMP WHERE NUM = ID;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_REFERENCE_STUDENT_TABLE TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/

INSERT INTO FB_REFERENCE_STUDENT_TABLE VALUES(10, 'ZHANGSAN');
INSERT INTO FB_REFERENCE_STUDENT_TABLE VALUES(60, 'LISI');
COMMIT;
SELECT SLEEP(2);
CALL PRO_SAVE_TIME(1);
UPDATE FB_REFERENCE_STUDENT_TABLE SET NAME = 'ZHANGSANSAN' WHERE ID = 10;
CALL PRO_FB_TABLE_TIMESTAMP(1);
DROP TABLE FB_REFERENCE_SCORE_TABLE;
ALTER TABLE FB_REFERENCE_STUDENT_TABLE SPLIT PARTITION P2 AT(80) INTO(PARTITION P3, PARTITION P4);
SELECT SLEEP(2);
CALL PRO_SAVE_TIME(2);
UPDATE FB_REFERENCE_STUDENT_TABLE SET NAME = 'WANGWU' WHERE ID = 60;
CALL PRO_FB_TABLE_TIMESTAMP(2);
DROP PROCEDURE IF EXISTS PRO_SAVE_TIME;
DROP PROCEDURE IF EXISTS PRO_FB_TABLE_TIMESTAMP;
DROP TABLE IF EXISTS FB_REFERENCE_STUDENT_TABLE;
DROP TABLE IF EXISTS FB_REFERENCE_SCORE_TABLE;
DROP TABLE IF EXISTS TEMP;

DROP TABLE IF EXISTS FB_CONSTRAINT_TABLE;
DROP TABLE IF EXISTS TEMP;
CREATE TABLE FB_CONSTRAINT_TABLE(ID INT, NAME VARCHAR(20)) CRMODE ROW;
CREATE TABLE TEMP(NUM INT, TIME_STAMP VARCHAR(200));
CREATE OR REPLACE PROCEDURE PRO_SAVE_TIME(ID INT)
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT SYSDATE INTO SCN_NUM FROM DUAL;
	INSERT INTO TEMP VALUES(ID, SCN_NUM);
END;
/

CREATE OR REPLACE PROCEDURE PRO_FB_TABLE_TIMESTAMP(ID INT)
AS
SCN_NUM VARCHAR2(200);
BEGIN
	SELECT TIME_STAMP INTO SCN_NUM FROM TEMP WHERE NUM = ID;
	EXECUTE IMMEDIATE 'FLASHBACK TABLE FB_CONSTRAINT_TABLE TO TIMESTAMP TO_TIMESTAMP ('''|| SCN_NUM ||''',''yyyy-mm-dd hh24:mi:ss'')';
END;
/

INSERT INTO FB_CONSTRAINT_TABLE VALUES(10, 'ZHANGSAN');
INSERT INTO FB_CONSTRAINT_TABLE VALUES(60, 'LISI');
COMMIT;
SELECT SLEEP(2);
CALL PRO_SAVE_TIME(1);
ALTER TABLE FB_CONSTRAINT_TABLE ADD CONSTRAINT CK_ID CHECK(ID>5);
INSERT INTO FB_CONSTRAINT_TABLE VALUES(30, 'WANGWU');
ALTER TABLE FB_CONSTRAINT_TABLE DISABLE VALIDATE CONSTRAINT CK_ID;
CALL PRO_FB_TABLE_TIMESTAMP(1);
ALTER TABLE FB_CONSTRAINT_TABLE ENABLE CONSTRAINT CK_ID;
DELETE FROM FB_CONSTRAINT_TABLE WHERE ID = 30;
DELETE FROM FB_CONSTRAINT_TABLE WHERE ID = 60;
ALTER TABLE FB_CONSTRAINT_TABLE DISABLE VALIDATE CONSTRAINT CK_ID;
CALL PRO_FB_TABLE_TIMESTAMP(1);
DROP PROCEDURE IF EXISTS PRO_SAVE_TIME;
DROP PROCEDURE IF EXISTS PRO_FB_TABLE_TIMESTAMP;
DROP TABLE IF EXISTS FB_CONSTRAINT_TABLE;
DROP TABLE IF EXISTS TEMP;

DROP TABLE IF EXISTS training;
DROP INDEX IF EXISTS training_index ON TRAINING;
CREATE TABLE training(staff_id INT NOT NULL, score INT)
PARTITION BY RANGE(staff_id)
(
PARTITION training1 VALUES LESS than(10),
PARTITION training2 VALUES LESS than(20),
PARTITION training3 VALUES LESS than(30)
);
CREATE INDEX training_index ON TRAINING(STAFF_ID)
LOCAL 
(
  PARTITION training1,
  PARTITION training2,
  PARTITION training3
);

CREATE OR REPLACE PROCEDURE table_version
AS
SCN_NUM VARCHAR2(200);
result_num int;
BEGIN
	SELECT current_scn INTO SCN_NUM from dv_database;
	EXECUTE IMMEDIATE'ALTER TABLE training ADD PARTITION training4 VALUES LESS THAN (40)';
	EXECUTE IMMEDIATE'select count(*) from db_tab_partitions as of scn ('||SCN_NUM||') where table_name = upper(''training'')' into result_num;
	DBE_OUTPUT.PRINT_LINE('result_num='||result_num);
END;
/
set SERVEROUTPUT on;
call table_version;
set SERVEROUTPUT off;
DROP TABLE training;
DROP PROCEDURE table_version;
--CLEANUP
PURGE RECYCLEBIN;
