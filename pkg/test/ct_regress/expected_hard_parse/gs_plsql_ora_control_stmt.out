

SQL> --
SQL> -- gs_plsql
SQL> -- testing oracle example
SQL> --
SQL> drop table if exists employees;

Succeed.

SQL> CREATE TABLE employees
  2 (
  3 employee_id number,
  4 salary number,
  5 job_id           varchar2(32),
  6 last_name        varchar2(32),
  7 first_name       varchar2(32),
  8 commission_pct   number
  9 );

Succeed.

SQL> 
SQL> insert into employees values(110, 1001, 'AF', 'jom','ZHANG',2.5);

1 rows affected.

SQL> insert into employees values(102, 1002, 'BF', 'back','ZHANG',2);

1 rows affected.

SQL> insert into employees values(103, 1003, 'BF',  'tom','ZHANG',3);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> set serveroutput on;

ON
SQL> 
SQL> --Example 4-6 Simple CASE Statement
SQL> 
SQL> DECLARE
  2   grade CHAR(1);
  3 BEGIN
  4   grade := 'B';
  5 
  6   CASE grade
  7     WHEN 'A' THEN dbe_output.print_line('Excellent');
  8     WHEN 'B' THEN dbe_output.print_line('Very Good');
  9     WHEN 'C' THEN dbe_output.print_line('Good');
 10     WHEN 'D' THEN dbe_output.print_line('Fair');
 11     WHEN 'F' THEN dbe_output.print_line('Poor');
 12     ELSE dbe_output.print_line('No such grade');
 13   END CASE;
 14 END;
 15 /

Very Good

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-7 Searched CASE Statement
SQL> 
SQL> DECLARE
  2   grade CHAR(1);
  3 BEGIN
  4   grade := 'B';
  5   
  6   CASE
  7     WHEN grade = 'A' THEN dbe_output.print_line('Excellent');
  8     WHEN grade = 'B' THEN dbe_output.print_line('Very Good');
  9     WHEN grade = 'C' THEN dbe_output.print_line('Good');
 10     WHEN grade = 'D' THEN dbe_output.print_line('Fair');
 11     WHEN grade = 'F' THEN dbe_output.print_line('Poor');
 12     ELSE dbe_output.print_line('No such grade');
 13   END CASE;
 14 END;
 15 /

Very Good

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-8 EXCEPTION Instead of ELSE Clause in CASE Statement
SQL> 
SQL> DECLARE
  2   grade CHAR(1);
  3 BEGIN
  4   grade := 'B';
  5   
  6   CASE
  7     WHEN grade = 'A' THEN dbe_output.print_line('Excellent');
  8     WHEN grade = 'B' THEN dbe_output.print_line('Very Good');
  9     WHEN grade = 'C' THEN dbe_output.print_line('Good');
 10     WHEN grade = 'D' THEN dbe_output.print_line('Fair');
 11     WHEN grade = 'F' THEN dbe_output.print_line('Poor');
 12   END CASE;
 13 EXCEPTION
 14   WHEN CASE_NOT_FOUND THEN
 15     dbe_output.print_line('No such grade');
 16 END;
 17 /

Very Good

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-15 FOR LOOP Statements
SQL> BEGIN
  2   dbe_output.print_line ('lower_bound < upper_bound');
  3  
  4   FOR i IN 1..3 LOOP
  5     dbe_output.print_line (i);
  6   END LOOP;
  7  
  8   dbe_output.print_line ('lower_bound = upper_bound');
  9  
 10   FOR i IN 2..2 LOOP
 11     dbe_output.print_line (i);
 12   END LOOP;
 13  
 14   dbe_output.print_line ('lower_bound > upper_bound');
 15  
 16   FOR i IN 3..1 LOOP
 17     dbe_output.print_line (i);
 18   END LOOP;
 19 END;
 20 /

lower_bound < upper_bound
1
2
3
lower_bound = upper_bound
2
lower_bound > upper_bound

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> --Example 4-16 Reverse FOR LOOP Statements
SQL> BEGIN
  2   dbe_output.print_line ('upper_bound > lower_bound');
  3  
  4   FOR i IN REVERSE 1..3 LOOP
  5     dbe_output.print_line (i);
  6   END LOOP;
  7  
  8   dbe_output.print_line ('upper_bound = lower_bound');
  9  
 10   FOR i IN REVERSE 2..2 LOOP
 11     dbe_output.print_line (i);
 12   END LOOP;
 13  
 14   dbe_output.print_line ('upper_bound < lower_bound');
 15  
 16   FOR i IN REVERSE 3..1 LOOP
 17     dbe_output.print_line (i);
 18   END LOOP;
 19 END;
 20 /

upper_bound > lower_bound
3
2
1
upper_bound = lower_bound
2
upper_bound < lower_bound

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-17 Simulating STEP Clause in FOR LOOP Statement
SQL> DECLARE
  2   step  PLS_INTEGER := 5;
  3 BEGIN
  4   FOR i IN 1..3 LOOP
  5     dbe_output.print_line (i*step);
  6   END LOOP;
  7 END;
  8 /

5
10
15

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-18 FOR LOOP Statement Tries to Change Index Value
SQL> BEGIN
  2   FOR i IN 1..3 LOOP
  3     IF i < 3 THEN
  4       dbe_output.print_line (TO_CHAR(i));
  5     ELSE
  6       i := 2;
  7     END IF;
  8   END LOOP;
  9 END;
 10 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[6:7] PLC-00950 The expression I was used as the assignment target (left operand of the assignment statement).
[9:1] PLC-00954 OTHERS expected but END found
[10:1] PLC-00954 more text expected but EOF found

SQL> 
SQL> --Example 4-19 Outside Statement References FOR LOOP Statement Index
SQL> BEGIN
  2   FOR i IN 1..3 LOOP
  3     dbe_output.print_line ('Inside loop, i is ' || TO_CHAR(i));
  4   END LOOP;
  5   
  6   dbe_output.print_line ('Outside loop, i is ' || TO_CHAR(i));
  7 END;
  8 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[6:59] PLC-00601 Sql syntax error: invalid column name 'I'

SQL> 
SQL> --Example 4-20 FOR LOOP Statement Index with Same Name as Variable
SQL> DECLARE
  2   i NUMBER := 5;
  3 BEGIN
  4   FOR i IN 1..3 LOOP
  5     dbe_output.print_line ('Inside loop, i is ' || TO_CHAR(i));
  6   END LOOP;
  7   
  8   dbe_output.print_line ('Outside loop, i is ' || TO_CHAR(i));
  9 END;
 10 /

Inside loop, i is 1
Inside loop, i is 2
Inside loop, i is 3
Outside loop, i is 5

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Example 4-21 FOR LOOP Statement References Variable with Same Name as Index
SQL> --expect success
SQL> <<main>>  -- Label block.
  2 DECLARE
  3   i NUMBER := 5;
  4 BEGIN
  5   FOR i IN 1..3 LOOP
  6     dbe_output.print_line (
  7       'local: ' || TO_CHAR(i) || ', global: ' ||
  8       TO_CHAR(main.i)  -- Qualify reference with block label.
  9     );
 10   END LOOP;
 11 END main;
 12 /

local: 1, global: 5
local: 2, global: 5
local: 3, global: 5

PL/SQL procedure successfully completed.

SQL> 
SQL> --expect success
SQL> <<main>>  -- Label block.
  2 DECLARE
  3   i NUMBER := 5;
  4 BEGIN
  5   FOR i IN 1..3 LOOP
  6     dbe_output.print_line (
  7       'local: ' || TO_CHAR(i) || ', global: ' ||
  8       TO_CHAR(main.i)  -- Qualify reference with block label.
  9     );
 10   END LOOP;
 11 END;
 12 /

local: 1, global: 5
local: 2, global: 5
local: 3, global: 5

PL/SQL procedure successfully completed.

SQL> 
SQL> --expect error
SQL> create or replace procedure proc_test is
  2 <<main>>  -- Label block.
  3 DECLARE
  4   i NUMBER := 5;
  5 BEGIN
  6   FOR i IN 1..3 LOOP
  7     dbe_output.print_line (
  8       'local: ' || TO_CHAR(i) || ', global: ' ||
  9       TO_CHAR(main.i)  -- Qualify reference with block label.
 10     );
 11   END LOOP;
 12 END main;
 13 /

Succeed.
Warning:
PL/SQL(SYS.PROC_TEST) terminated with compiling errors
[2:1] PLC-00954 variant name expected but << found


SQL> 
SQL> 
SQL> --Example 4-22 Nested FOR LOOP Statements with Same Index Name
SQL> BEGIN
  2   <<outer_loop>>
  3   FOR i IN 1..3 LOOP
  4     <<inner_loop>>
  5     FOR i IN 1..3 LOOP
  6       IF outer_loop.i = 2 THEN
  7         dbe_output.print_line
  8           ('outer: ' || TO_CHAR(outer_loop.i) || ' inner: '
  9            || TO_CHAR(inner_loop.i));
 10       END IF;
 11     END LOOP inner_loop;
 12   END LOOP outer_loop;
 13 END;
 14 /

outer: 2 inner: 1
outer: 2 inner: 2
outer: 2 inner: 3

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-23 FOR LOOP Statement Bounds
SQL> DECLARE
  2   first  INTEGER := 1;
  3   last   INTEGER := 10;
  4   high   INTEGER := 100;
  5   low    INTEGER := 12;
  6 BEGIN
  7   -- Bounds are numeric literals:
  8   FOR j IN -5..5 LOOP
  9     NULL;
 10   END LOOP;
 11  
 12   -- Bounds are numeric variables:
 13   FOR k IN REVERSE first..last LOOP
 14     NULL;
 15   END LOOP;
 16  
 17  -- Lower bound is numeric literal,
 18  -- Upper bound is numeric expression:
 19   FOR step IN 0..(TRUNC(high/low) * 2) LOOP
 20     NULL;
 21   END LOOP;
 22 END;
 23 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-24 Specifying FOR LOOP Statement Bounds at Run Time
SQL> DROP TABLE if exists temp;

Succeed.

SQL> CREATE TABLE temp (
  2   emp_no      NUMBER,
  3   email_addr  VARCHAR2(50)
  4 );

Succeed.

SQL> 
SQL> DECLARE
  2   emp_count  NUMBER;
  3 BEGIN
  4   SELECT COUNT(employee_id) INTO emp_count
  5   FROM employees;
  6   
  7   FOR i IN 1..emp_count LOOP
  8     INSERT INTO temp (emp_no, email_addr)
  9     VALUES(i, 'to be added later');
 10   END LOOP;
 11 END;
 12 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select * from temp;

EMP_NO                                   EMAIL_ADDR                                        
---------------------------------------- --------------------------------------------------
1                                        to be added later                                 
2                                        to be added later                                 
3                                        to be added later                                 

3 rows fetched.

SQL> 
SQL> --Example 4-25 EXIT WHEN Statement in FOR LOOP Statement
SQL> DECLARE
  2   v_employees employees%ROWTYPE;
  3   CURSOR c1 is SELECT * FROM employees;
  4 BEGIN
  5   OPEN c1;
  6   -- Fetch entire row into v_employees record:
  7   FOR i IN 1..10 LOOP
  8     FETCH c1 INTO v_employees;
  9     EXIT WHEN c1%NOTFOUND;
 10     -- Process data here
 11   END LOOP;
 12   CLOSE c1;
 13 END;
 14 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-26 EXIT WHEN Statement in Inner FOR LOOP Statement
SQL> 
SQL> DECLARE
  2   v_employees employees%ROWTYPE;
  3   CURSOR c1 is SELECT * FROM employees;
  4 BEGIN
  5   OPEN c1;
  6   
  7   -- Fetch entire row into v_employees record:
  8   <<outer_loop>>
  9   FOR i IN 1..10 LOOP
 10     -- Process data here
 11     FOR j IN 1..10 LOOP
 12       FETCH c1 INTO v_employees;
 13       EXIT outer_loop WHEN c1%NOTFOUND;
 14       -- Process data here
 15     END LOOP;
 16   END LOOP outer_loop;
 17  
 18   CLOSE c1;
 19 END;
 20 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-27 CONTINUE WHEN Statement in Inner FOR LOOP Statement
SQL> 
SQL> DECLARE
  2   v_employees employees%ROWTYPE;
  3   CURSOR c1 is SELECT * FROM employees;
  4 BEGIN
  5   OPEN c1;
  6   
  7   -- Fetch entire row into v_employees record:
  8   <<outer_loop>>
  9   FOR i IN 1..10 LOOP
 10     -- Process data here
 11     FOR j IN 1..10 LOOP
 12       FETCH c1 INTO v_employees;
 13       CONTINUE outer_loop WHEN c1%NOTFOUND;
 14       -- Process data here
 15     END LOOP;
 16   END LOOP outer_loop;
 17  
 18   CLOSE c1;
 19 END;
 20 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --test case when
SQL> --add 2018/07/09
SQL> --Example 3-2 Printing BOOLEAN Values
SQL> drop PROCEDURE if exists print_boolean;

Succeed.

SQL> CREATE PROCEDURE print_boolean (b BOOLEAN)
  2 AS
  3 BEGIN
  4   dbe_output.print_line (
  5     CASE
  6       WHEN b IS NULL THEN 'Unknown'
  7       WHEN b THEN 'Yes'
  8       WHEN NOT b THEN 'No'
  9     END
 10   );
 11 END;
 12 /

Succeed.

SQL> BEGIN
  2   print_boolean(TRUE);
  3   print_boolean(FALSE);
  4   print_boolean(NULL);
  5 END;
  6 /

Yes
No
Unknown

PL/SQL procedure successfully completed.

SQL> 
SQL> drop PROCEDURE print_boolean;

Succeed.

SQL> 
SQL> --Example 4-6 Simple CASE Statement
SQL> DECLARE
  2   grade CHAR(1);
  3 BEGIN
  4   grade := 'B';
  5 
  6   CASE grade
  7     WHEN 'A' THEN dbe_output.print_line('Excellent');
  8     WHEN 'B' THEN dbe_output.print_line('Very Good');
  9     WHEN 'C' THEN dbe_output.print_line('Good');
 10     WHEN 'D' THEN dbe_output.print_line('Fair');
 11     WHEN 'F' THEN dbe_output.print_line('Poor');
 12     ELSE dbe_output.print_line('No such grade');
 13   END CASE;
 14 END;
 15 /

Very Good

PL/SQL procedure successfully completed.

SQL> 
SQL> --test case ..end;
SQL> --expect error
SQL> DECLARE
  2   grade CHAR(1);
  3 BEGIN
  4   grade := 'B';
  5 
  6   CASE grade
  7     WHEN 'A' THEN dbe_output.print_line('Excellent');
  8     WHEN 'B' THEN dbe_output.print_line('Very Good');
  9     WHEN 'C' THEN dbe_output.print_line('Good');
 10     WHEN 'D' THEN dbe_output.print_line('Fair');
 11     WHEN 'F' THEN dbe_output.print_line('Poor');
 12     ELSE dbe_output.print_line('No such grade');
 13   END;
 14 END;
 15 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[13:3] PLC-00954 OTHERS expected but END found
[14:1] PLC-00954 OTHERS expected but END found
[15:1] PLC-00954 more text expected but EOF found

SQL> 
SQL> --Example 4-7 Searched CASE Statement
SQL> DECLARE
  2   grade CHAR(1);
  3 BEGIN
  4   grade := 'B';
  5   
  6   CASE
  7     WHEN grade = 'A' THEN dbe_output.print_line('Excellent');
  8     WHEN grade = 'B' THEN dbe_output.print_line('Very Good');
  9     WHEN grade = 'C' THEN dbe_output.print_line('Good');
 10     WHEN grade = 'D' THEN dbe_output.print_line('Fair');
 11     WHEN grade = 'F' THEN dbe_output.print_line('Poor');
 12     ELSE dbe_output.print_line('No such grade');
 13   END CASE;
 14 END;
 15 /

Very Good

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-8 EXCEPTION Instead of ELSE Clause in CASE Statement
SQL> 
SQL> DECLARE
  2   grade CHAR(1);
  3 BEGIN
  4   grade := 'E';
  5   
  6   CASE
  7     WHEN grade = 'A' THEN dbe_output.print_line('Excellent');
  8     WHEN grade = 'B' THEN dbe_output.print_line('Very Good');
  9     WHEN grade = 'C' THEN dbe_output.print_line('Good');
 10     WHEN grade = 'D' THEN dbe_output.print_line('Fair');
 11     WHEN grade = 'F' THEN dbe_output.print_line('Poor');
 12   END CASE;
 13 EXCEPTION
 14   WHEN CASE_NOT_FOUND THEN
 15     dbe_output.print_line('No such grade');
 16 END;
 17 /

No such grade

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-9 Basic LOOP Statement with EXIT Statement
SQL> DECLARE
  2   x NUMBER := 0;
  3 BEGIN
  4   LOOP
  5     dbe_output.print_line ('Inside loop:  x = ' || TO_CHAR(x));
  6     x := x + 1;
  7     IF x > 3 THEN
  8       EXIT;
  9     END IF;
 10   END LOOP;
 11   -- After EXIT, control resumes here
 12   dbe_output.print_line(' After loop:  x = ' || TO_CHAR(x));
 13 END;
 14 /

Inside loop:  x = 0
Inside loop:  x = 1
Inside loop:  x = 2
Inside loop:  x = 3
 After loop:  x = 4

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-10 Basic LOOP Statement with EXIT WHEN Statement
SQL> DECLARE
  2   x NUMBER := 0;
  3 BEGIN
  4   LOOP
  5     dbe_output.print_line('Inside loop:  x = ' || TO_CHAR(x));
  6     x := x + 1;  -- prevents infinite loop
  7     EXIT WHEN x > 3;
  8   END LOOP;
  9   -- After EXIT statement, control resumes here
 10   dbe_output.print_line('After loop:  x = ' || TO_CHAR(x));
 11 END;
 12 /

Inside loop:  x = 0
Inside loop:  x = 1
Inside loop:  x = 2
Inside loop:  x = 3
After loop:  x = 4

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> --Example 4-11 Nested, Labeled Basic LOOP Statements with EXIT WHEN Statements
SQL> DECLARE
  2   s  INTEGER := 0;
  3   i  INTEGER := 0;
  4   j  INTEGER;
  5 BEGIN
  6   <<outer_loop>>
  7   LOOP
  8     i := i + 1;
  9     j := 0;
 10     <<inner_loop>>
 11     LOOP
 12       j := j + 1;
 13       s := s + i * j; -- Sum several products
 14       EXIT inner_loop WHEN (j > 5);
 15       EXIT outer_loop WHEN ((i * j) > 15);
 16     END LOOP inner_loop;
 17   END LOOP outer_loop;
 18   dbe_output.print_line
 19     ('The sum of products equals: ' || TO_CHAR(s));
 20 END;
 21 /

The sum of products equals: 166

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-12 Nested, Unabeled Basic LOOP Statements with EXIT WHEN Statements
SQL> DECLARE
  2   i INTEGER := 0;
  3   j INTEGER := 0;
  4  
  5 BEGIN
  6   LOOP
  7     i := i + 1;
  8     dbe_output.print_line ('i = ' || i);
  9     
 10     LOOP
 11       j := j + 1;
 12       dbe_output.print_line ('j = ' || j);
 13       EXIT WHEN (j > 3);
 14     END LOOP;
 15  
 16     dbe_output.print_line ('Exited inner loop');
 17  
 18     EXIT WHEN (i > 2);
 19   END LOOP;
 20  
 21   dbe_output.print_line ('Exited outer loop');
 22 END;
 23 / 

i = 1
j = 1
j = 2
j = 3
j = 4
Exited inner loop
i = 2
j = 5
Exited inner loop
i = 3
j = 6
Exited inner loop
Exited outer loop

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-13 CONTINUE Statement in Basic LOOP Statement
SQL> DECLARE
  2   x NUMBER := 0;
  3 BEGIN
  4   LOOP -- After CONTINUE statement, control resumes here
  5     dbe_output.print_line ('Inside loop:  x = ' || TO_CHAR(x));
  6     x := x + 1;
  7     IF x < 3 THEN
  8       CONTINUE;
  9     END IF;
 10     dbe_output.print_line
 11       ('Inside loop, after CONTINUE:  x = ' || TO_CHAR(x));
 12     EXIT WHEN x = 5;
 13   END LOOP;
 14  
 15   dbe_output.print_line (' After loop:  x = ' || TO_CHAR(x));
 16 END;
 17 /

Inside loop:  x = 0
Inside loop:  x = 1
Inside loop:  x = 2
Inside loop, after CONTINUE:  x = 3
Inside loop:  x = 3
Inside loop, after CONTINUE:  x = 4
Inside loop:  x = 4
Inside loop, after CONTINUE:  x = 5
 After loop:  x = 5

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-15 FOR LOOP Statements
SQL> BEGIN
  2   dbe_output.print_line ('lower_bound < upper_bound');
  3  
  4   FOR i IN 1..3 LOOP
  5     dbe_output.print_line (i);
  6   END LOOP;
  7  
  8   dbe_output.print_line ('lower_bound = upper_bound');
  9  
 10   FOR i IN 2..2 LOOP
 11     dbe_output.print_line (i);
 12   END LOOP;
 13  
 14   dbe_output.print_line ('lower_bound > upper_bound');
 15  
 16   FOR i IN 3..1 LOOP
 17     dbe_output.print_line (i);
 18   END LOOP;
 19 END;
 20 /

lower_bound < upper_bound
1
2
3
lower_bound = upper_bound
2
lower_bound > upper_bound

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-16 Reverse FOR LOOP Statements
SQL> BEGIN
  2   dbe_output.print_line ('upper_bound > lower_bound');
  3  
  4   FOR i IN REVERSE 1..3 LOOP
  5     dbe_output.print_line (i);
  6   END LOOP;
  7  
  8   dbe_output.print_line ('upper_bound = lower_bound');
  9  
 10   FOR i IN REVERSE 2..2 LOOP
 11     dbe_output.print_line (i);
 12   END LOOP;
 13  
 14   dbe_output.print_line ('upper_bound < lower_bound');
 15  
 16   FOR i IN REVERSE 3..1 LOOP
 17     dbe_output.print_line (i);
 18   END LOOP;
 19 END;
 20 /

upper_bound > lower_bound
3
2
1
upper_bound = lower_bound
2
upper_bound < lower_bound

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-17 Simulating STEP Clause in FOR LOOP Statement
SQL> DECLARE
  2   step  PLS_INTEGER := 5;
  3 BEGIN
  4   FOR i IN 1..3 LOOP
  5     dbe_output.print_line (i*step);
  6   END LOOP;
  7 END;
  8 /

5
10
15

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-18 FOR LOOP Statement Tries to Change Index Value
SQL> BEGIN
  2   FOR i IN 1..3 LOOP
  3     IF i < 3 THEN
  4       dbe_output.print_line (TO_CHAR(i));
  5     ELSE
  6       i := 2;
  7     END IF;
  8   END LOOP;
  9 END;
 10 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[6:7] PLC-00950 The expression I was used as the assignment target (left operand of the assignment statement).
[9:1] PLC-00954 OTHERS expected but END found
[10:1] PLC-00954 more text expected but EOF found

SQL> 
SQL> --Example 4-19 Outside Statement References FOR LOOP Statement Index
SQL> BEGIN
  2   FOR i IN 1..3 LOOP
  3     dbe_output.print_line ('Inside loop, i is ' || TO_CHAR(i));
  4   END LOOP;
  5   
  6   dbe_output.print_line ('Outside loop, i is ' || TO_CHAR(i));
  7 END;
  8 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[6:59] PLC-00601 Sql syntax error: invalid column name 'I'

SQL> 
SQL> --Example 4-20 FOR LOOP Statement Index with Same Name as Variable
SQL> DECLARE
  2   i NUMBER := 5;
  3 BEGIN
  4   FOR i IN 1..3 LOOP
  5     dbe_output.print_line ('Inside loop, i is ' || TO_CHAR(i));
  6   END LOOP;
  7   
  8   dbe_output.print_line ('Outside loop, i is ' || TO_CHAR(i));
  9 END;
 10 /

Inside loop, i is 1
Inside loop, i is 2
Inside loop, i is 3
Outside loop, i is 5

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-21 FOR LOOP Statement References Variable with Same Name as Index
SQL> <<main>>  -- Label block.
  2 DECLARE
  3   i NUMBER := 5;
  4 BEGIN
  5   FOR i IN 1..3 LOOP
  6     dbe_output.print_line (
  7       'local: ' || TO_CHAR(i) || ', global: ' ||
  8       TO_CHAR(main.i)  -- Qualify reference with block label.
  9     );
 10   END LOOP;
 11 END main;
 12 / 

local: 1, global: 5
local: 2, global: 5
local: 3, global: 5

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-22 Nested FOR LOOP Statements with Same Index Name
SQL> BEGIN
  2   <<outer_loop>>
  3   FOR i IN 1..3 LOOP
  4     <<inner_loop>>
  5     FOR i IN 1..3 LOOP
  6       IF outer_loop.i = 2 THEN
  7         dbe_output.print_line
  8           ('outer: ' || TO_CHAR(outer_loop.i) || ' inner: '
  9            || TO_CHAR(inner_loop.i));
 10       END IF;
 11     END LOOP inner_loop;
 12   END LOOP outer_loop;
 13 END;
 14 /

outer: 2 inner: 1
outer: 2 inner: 2
outer: 2 inner: 3

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-23 FOR LOOP Statement Bounds
SQL> DECLARE
  2   first  INTEGER := 1;
  3   last   INTEGER := 10;
  4   high   INTEGER := 100;
  5   low    INTEGER := 12;
  6 BEGIN
  7   -- Bounds are numeric literals:
  8   FOR j IN -5..5 LOOP
  9     NULL;
 10   END LOOP;
 11  
 12   -- Bounds are numeric variables:
 13   FOR k IN REVERSE first..last LOOP
 14     NULL;
 15   END LOOP;
 16  
 17  -- Lower bound is numeric literal,
 18  -- Upper bound is numeric expression:
 19   FOR step IN 0..(TRUNC(high/low) * 2) LOOP
 20     NULL;
 21   END LOOP;
 22 END;
 23 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-24 Specifying FOR LOOP Statement Bounds at Run Time
SQL> DROP TABLE if exists temp;

Succeed.

SQL> CREATE TABLE temp (
  2   emp_no      NUMBER,
  3   email_addr  VARCHAR2(50)
  4 );

Succeed.

SQL> 
SQL> 
SQL> DECLARE
  2   emp_count  NUMBER;
  3 BEGIN
  4   SELECT COUNT(employee_id) INTO emp_count
  5   FROM employees;
  6   
  7   FOR i IN 1..emp_count LOOP
  8     INSERT INTO temp (emp_no, email_addr)
  9     VALUES(i, 'to be added later');
 10 	dbe_output.print_line('LOOP:' || i);
 11   END LOOP;
 12 END;
 13 /

LOOP:1
LOOP:2
LOOP:3

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-25 EXIT WHEN Statement in FOR LOOP Statement
SQL> DECLARE
  2   v_employees employees%ROWTYPE;
  3   CURSOR c1 is SELECT * FROM employees;
  4 BEGIN
  5   OPEN c1;
  6   -- Fetch entire row into v_employees record:
  7   FOR i IN 1..10 LOOP
  8     FETCH c1 INTO v_employees;
  9 	dbe_output.print_line('LOOP:' || i);
 10     EXIT WHEN c1%NOTFOUND;
 11     -- Process data here
 12   END LOOP;
 13   CLOSE c1;
 14 END;
 15 /

LOOP:1
LOOP:2
LOOP:3
LOOP:4

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-26 EXIT WHEN Statement in Inner FOR LOOP Statement
SQL> DECLARE
  2   v_employees employees%ROWTYPE;
  3   CURSOR c1 is SELECT * FROM employees;
  4 BEGIN
  5   OPEN c1;
  6   
  7   -- Fetch entire row into v_employees record:
  8   <<outer_loop>>
  9   FOR i IN 1..10 LOOP
 10     -- Process data here
 11     FOR j IN 1..10 LOOP
 12       FETCH c1 INTO v_employees;
 13 	  dbe_output.print_line('LOOP:' || i);
 14       EXIT outer_loop WHEN c1%NOTFOUND;
 15       -- Process data here
 16     END LOOP;
 17   END LOOP outer_loop;
 18  
 19   CLOSE c1;
 20 END;
 21 /

LOOP:1
LOOP:1
LOOP:1
LOOP:1

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-27 CONTINUE WHEN Statement in Inner FOR LOOP Statement
SQL> DECLARE
  2   v_employees employees%ROWTYPE;
  3   CURSOR c1 is SELECT * FROM employees;
  4 BEGIN
  5   OPEN c1;
  6   
  7   -- Fetch entire row into v_employees record:
  8   <<outer_loop>>
  9   FOR i IN 1..10 LOOP
 10     -- Process data here
 11     FOR j IN 1..10 LOOP
 12       FETCH c1 INTO v_employees;
 13 	  dbe_output.print_line('LOOP:' || j);
 14       CONTINUE outer_loop WHEN c1%NOTFOUND;
 15       -- Process data here
 16     END LOOP;
 17   END LOOP outer_loop;
 18  
 19   CLOSE c1;
 20 END;
 21 /

LOOP:1
LOOP:2
LOOP:3
LOOP:4
LOOP:1
LOOP:1
LOOP:1
LOOP:1
LOOP:1
LOOP:1
LOOP:1
LOOP:1
LOOP:1

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-28 WHILE LOOP Statements
SQL> DECLARE
  2   done  BOOLEAN := FALSE;
  3 BEGIN
  4   WHILE done LOOP
  5     dbe_output.print_line ('This line does not print.');
  6     done := TRUE;  -- This assignment is not made.
  7   END LOOP;
  8 
  9   WHILE NOT done LOOP
 10     dbe_output.print_line ('Hello, world!');
 11     done := TRUE;
 12   END LOOP;
 13 END;
 14 /

Hello, world!

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-29 GOTO Statement
SQL> DECLARE
  2   p  VARCHAR2(30);
  3   n  INTEGER := 37;
  4 BEGIN
  5   FOR j in 2..ROUND(SQRT(n)) LOOP
  6     IF n % j = 0 THEN
  7       p := ' is not a prime number';
  8       GOTO print_now;
  9     END IF;
 10   END LOOP;
 11 
 12   p := ' is a prime number';
 13  
 14   <<print_now>>
 15   dbe_output.print_line(TO_CHAR(n) || p);
 16 END;
 17 /

37 is a prime number

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-30 Incorrect Label Placement
SQL> --expect error
SQL> DECLARE
  2   done  BOOLEAN;
  3 BEGIN
  4   FOR i IN 1..50 LOOP
  5     IF done THEN
  6        GOTO end_loop;
  7     END IF;
  8     <<end_loop>>
  9   END LOOP;
 10 END;
 11 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[8:5] PLC-00916 PL/SQL:syntax error(END_LOOP is an invalid label)

SQL> 
SQL> --Example 4-31 GOTO Statement Goes to Labeled NULL Statement
SQL> DECLARE
  2   done  BOOLEAN;
  3 BEGIN
  4   FOR i IN 1..50 LOOP
  5     IF done THEN
  6       GOTO end_loop;
  7     END IF;
  8     <<end_loop>>
  9     NULL;
 10   END LOOP;
 11 END;
 12 /  

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> 
SQL> --Example 4-32 GOTO Statement Transfers Control to Enclosing Block
SQL> DECLARE
  2   v_last_name  VARCHAR2(25);
  3   v_emp_id     NUMBER(6) := 120;
  4 BEGIN
  5   <<get_name>>
  6   SELECT last_name INTO v_last_name
  7   FROM employees
  8   WHERE employee_id = v_emp_id;
  9   
 10   BEGIN
 11     dbe_output.print_line (v_last_name);
 12     v_emp_id := v_emp_id + 5;
 13  
 14     IF v_emp_id < 120 THEN
 15       GOTO get_name;
 16     END IF;
 17   END;
 18 END;
 19 /

CT-00932, [6:3] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[6:3] CT-00906, In PL/SQL, running SELECT INTO or EXECUTE IMMEDIATE INTO to grant values to variables had no data found.

SQL> 
SQL> --Example 4-33 GOTO Statement Cannot Transfer Control into IF Statement
SQL> --expect success
SQL> DECLARE
  2   valid BOOLEAN := TRUE;
  3 BEGIN
  4   GOTO update_row;
  5   
  6   IF valid THEN
  7   <<update_row>>
  8     NULL;
  9   END IF;
 10 END;
 11 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[4:3] PLC-00916 PL/SQL:syntax error(UPDATE_ROW is an invalid label(ctl_block depth more than goto))

SQL> 
SQL> --Example 4-34 NULL Statement Showing No Action
SQL> DECLARE
  2   v_job_id  VARCHAR2(10);
  3    v_emp_id  NUMBER(6) := 110;
  4 BEGIN
  5   SELECT job_id INTO v_job_id
  6   FROM employees
  7   WHERE employee_id = v_emp_id;
  8   
  9   IF v_job_id = 'SA_REP' THEN
 10     UPDATE employees
 11     SET commission_pct = commission_pct * 1.2;
 12   ELSE
 13     NULL;  -- Employee is not a sales rep
 14   END IF;
 15 END;
 16 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 4-35 NULL Statement as Placeholder During Subprogram Creation
SQL> CREATE OR REPLACE PROCEDURE award_bonus (
  2   emp_id NUMBER,
  3   bonus NUMBER
  4 )  AS
  5 BEGIN    -- Executable part starts here
  6   NULL;  -- Placeholder
  7   -- (raises "unreachable code" if warnings enabled)
  8 END award_bonus;
  9 / 

Succeed.

SQL> 
SQL> 
SQL> --Example 4-36 NULL Statement in ELSE Clause of Simple CASE Statement
SQL> CREATE OR REPLACE PROCEDURE print_grade (
  2   grade CHAR
  3 )  AS
  4 BEGIN
  5   CASE grade
  6     WHEN 'A' THEN dbe_output.print_line('Excellent');
  7     WHEN 'B' THEN dbe_output.print_line('Very Good');
  8     WHEN 'C' THEN dbe_output.print_line('Good');
  9     WHEN 'D' THEN dbe_output.print_line('Fair');
 10     WHEN 'F' THEN dbe_output.print_line('Poor');
 11     ELSE NULL;
 12   END CASE;
 13 END;
 14 /

Succeed.

SQL> BEGIN
  2   print_grade('A');
  3   print_grade('S');
  4 END;
  5 /

Excellent

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 6-18 Implicit Cursor FOR LOOP Statement
SQL> BEGIN
  2   FOR item IN (
  3     SELECT last_name, job_id
  4     FROM employees
  5   )
  6   LOOP
  7     dbe_output.print_line
  8       ('Name = ' || item.last_name || ', Job = ' || item.job_id);
  9   END LOOP;
 10 END;
 11 /

Name = jom, Job = AF
Name = back, Job = BF
Name = tom, Job = BF

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 6-19 Explicit Cursor FOR LOOP Statement
SQL> 
SQL> DECLARE
  2   CURSOR c1 IS
  3     SELECT last_name, job_id FROM employees;
  4 BEGIN
  5   FOR item IN c1
  6   LOOP
  7     dbe_output.print_line
  8       ('Name = ' || item.last_name || ', Job = ' || item.job_id);
  9   END LOOP;
 10 END;
 11 /

Name = jom, Job = AF
Name = back, Job = BF
Name = tom, Job = BF

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 6-20 Passing Parameters to Explicit Cursor FOR LOOP Statement
SQL> DECLARE
  2   CURSOR c1 (job VARCHAR2, max_wage NUMBER) IS
  3     SELECT * FROM employees
  4     WHERE job_id = job
  5     AND salary > max_wage;
  6 BEGIN
  7   FOR person IN c1('AF', 0)
  8   LOOP
  9      -- process data record
 10     dbe_output.print_line (
 11       'Name = ' || person.last_name || ', salary = ' ||
 12       person.salary || ', Job Id = ' || person.job_id
 13     );
 14   END LOOP;
 15 END;
 16 /

Name = jom, salary = 1001, Job Id = AF

PL/SQL procedure successfully completed.

SQL> 
SQL> --Example 6-21 Cursor FOR Loop References Virtual Columns
SQL> BEGIN
  2   FOR item IN (
  3     SELECT first_name || ' ' || last_name AS full_name,
  4            salary * 10                    AS dream_salary 
  5     FROM employees
  6     WHERE ROWNUM <= 5
  7     ORDER BY dream_salary DESC, last_name ASC
  8   ) LOOP
  9     dbe_output.print_line
 10       (item.full_name || ' dreams of making ' || item.dream_salary);
 11   END LOOP;
 12 END;
 13 /

ZHANG tom dreams of making 10030
ZHANG back dreams of making 10020
ZHANG jom dreams of making 10010

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> --dynamic sql execute need change schema.
SQL> --begin
SQL> create user whf001 identified by Whf00174302;

Succeed.

SQL> grant dba to whf001;

Succeed.

SQL> conn whf001/Whf00174302@127.0.0.1:1611

connected.

SQL> drop table if exists test;

Succeed.

SQL> create table test(a int);

Succeed.

SQL> create or replace procedure xxxx(a1 int)
  2 as
  3 a varchar2(100);
  4 begin
  5  a := 'select * from test';
  6  execute immediate a;
  7 end;
  8 /

Succeed.

SQL> call xxxx(1);

PL/SQL procedure successfully completed.

SQL> conn sys/sys@127.0.0.1:1611

connected.

SQL> call whf001.xxxx(1);

PL/SQL procedure successfully completed.

SQL> drop table whf001.test;

Succeed.

SQL> drop procedure whf001.xxxx;

Succeed.

SQL> --purge recyclebin;
SQL> --select sleep(1);
SQL> --drop user whf001 cascade;
SQL> --end
SQL> 
SQL> set autocommit on

ON
SQL> drop table if exists plsql_ora_test;

Succeed.

SQL> create table plsql_ora_test(a int);

Succeed.

SQL> 
SQL> create or replace procedure plsql_ora_test_x1
  2 is
  3 begin
  4 insert into plsql_ora_test values(1);
  5 insert into plsql_ora_test values(1);
  6 insert into plsql_ora_test values(1);
  7 insert into plsql_ora_test values(1);
  8 end;
  9 /

Succeed.

SQL> 
SQL> create or replace procedure plsql_ora_test_x2
  2 is
  3 begin
  4 insert into plsql_ora_test values('asdfsdf');
  5 end;
  6 /

Succeed.

SQL> 
SQL> create or replace procedure plsql_ora_test_x3
  2 is
  3 begin
  4 plsql_ora_test_x1();
  5 plsql_ora_test_x2();
  6 end;
  7 /

Succeed.

SQL> exec plsql_ora_test_x3;

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[4:1] PL/SQL(SYS.PLSQL_ORA_TEST_X3) terminated with execute errors
[3:1] PL/SQL(SYS.PLSQL_ORA_TEST_X2) terminated with execute errors
[3:1] CT-00636, Invalid number -- unexpected character

SQL> select count(*) from plsql_ora_test;

COUNT(*)            
--------------------
0                   

1 rows fetched.

SQL> 
SQL> create or replace procedure plsql_ora_test_x3
  2 is
  3 begin
  4 plsql_ora_test_x1();
  5 end;
  6 /

Succeed.

SQL> exec plsql_ora_test_x3;

PL/SQL procedure successfully completed.

SQL> rollback;

Succeed.

SQL> select count(*) from plsql_ora_test;

COUNT(*)            
--------------------
4                   

1 rows fetched.

SQL> 
SQL> set autocommit off

OFF
SQL> ----test anonymous soft-parse
SQL> select sql_text,ref_count from v$sqlarea where sql_text like '%select%soft-parse%';

SQL_TEXT                                                         REF_COUNT   
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> 
SQL> declare
  2 a varchar(20);
  3 begin
  4 select 'soft-parse' into a from dual;
  5 end;
  6 /

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 cursor a is select 'soft-parse-cursor' from dual;
  3 b varchar(20);
  4 begin
  5 open a;
  6 fetch a into b;
  7 close a;
  8 end;
  9 /

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 b int;
  3 begin
  4 for i in (select 'soft-parse-inloop' from dual) loop
  5     null;
  6 end loop;
  7 end;
  8 /

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> declare
  2 cursor a is select 'soft-parse-cursor-loop' from dual;
  3 b int;
  4 begin
  5 for i in a loop
  6     null;
  7 end loop;
  8 end;
  9 /

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 cursor a is select 'soft-parse-cursor' from dual;
  3 begin
  4 null;
  5 end;
  6 /

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 cursor a is select 'soft-parse-cursor' from dual;
  3 begin
  4 open a;
  5 end;
  6 /

PL/SQL procedure successfully completed.

SQL> 
SQL> create or replace procedure soft_parse_proc_test
  2 is
  3 cursor a is select 'soft-parse-cursor' from dual;
  4 begin
  5 null;
  6 end;
  7 /

Succeed.

SQL> select sql_text,ref_count from v$sqlarea where sql_text like '%select%soft-parse%' order by sql_text;

SQL_TEXT                                                         REF_COUNT   
---------------------------------------------------------------- ------------
select 'soft-parse' from dual                                    0           
select 'soft-parse-cursor' from dual                             0           
select 'soft-parse-cursor-loop' from dual                        0           
select 'soft-parse-inloop' from dual                             0           

4 rows fetched.

SQL> select sql_text,ref_count from dv_anonymous where sql_text like '%select%soft-parse%' order by sql_text;

SQL_TEXT                                                         REF_COUNT   
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> exec soft_parse_proc_test();

PL/SQL procedure successfully completed.

SQL> call soft_parse_proc_test();

PL/SQL procedure successfully completed.

SQL> select sql_text,ref_count from v$sqlarea where sql_text like '%soft_parse_proc_test%' order by sql_text;

SQL_TEXT                                                         REF_COUNT   
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> select sql_text,ref_count from dv_anonymous where sql_text like '%soft_parse_proc_test%' order by sql_text;

SQL_TEXT                                                         REF_COUNT   
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> --DTS2018091106833
SQL> declare
  2   v_int int;
  3 begin
  4     if('true')
  5     then
  6         dbe_output.print_line('The condition is true');
  7     end if;
  8 end;
  9 /

The condition is true

PL/SQL procedure successfully completed.

SQL> declare
  2   v_int int;
  3 begin
  4     if('false')
  5     then
  6         dbe_output.print_line('The condition is false');
  7     end if;
  8 end;
  9 /

PL/SQL procedure successfully completed.

SQL> --DTS2018092807688
SQL> drop table if exists t_expression_base;

Succeed.

SQL> create table t_expression_base(f1 int, f2 int);

Succeed.

SQL> insert into t_expression_base values(1,100);

1 rows affected.

SQL> insert into t_expression_base values(2,1000);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> create or replace procedure sp_expression_00002(v_PlanID in number)
  2 as 
  3     v_Temp_1 number(10, 0);
  4 begin
  5     v_Temp_1 :=10000;
  6     insert into t_expression_base(f1, f2) select f1,SUM(v_Temp_1+f1+f2) from t_expression_base group by f1;
  7 end;
  8 /

Succeed.

SQL> --DTS2018092708071
SQL> declare
  2 v_num number;
  3 begin
  4 select 
  5 1+2*2  +a1  into v_num from dual;
  6 dbe_output.print_line(v_num);
  7 end;
  8 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[5:9] PLC-00601 Sql syntax error: invalid column name 'A1'

SQL> --
SQL> create table if not exists t_P_BTSESN_A4(PLANID NUMBER(10), CMENEID NUMBER(10),BTSID NUMBER(10), MAINDEVTAB VARCHAR(96), BAKDEVTAB VARCHAR(96), OMBEARBOARD NUMBER(3));

Succeed.

SQL> create table if not exists t_D_BTSESN_A4(SAVEPOINTID NUMBER(10), OPERTYPE NUMBER(3),PLANID NUMBER(10), CMENEID NUMBER(10),BTSID NUMBER(10),MAINDEVTAB VARCHAR(96),BAKDEVTAB VARCHAR(96), OMBEARBOARD NUMBER(3), LOGUPTID VARCHAR(383), NBI_RECID NUMBER(10), ISGENMML NUMBER(3));

Succeed.

SQL> create or replace function M_BTS_BTSTYPE__NG(v_EnumValue in number) return number
  2 is
  3     v_Result number(10, 0);
  4 begin
  5     v_Result := 0;
  6     begin
  7         select 1 into v_Result from dual where (v_EnumValue in  (20, 21, 22, 17, 18, 19, 30, 23, 24)) and rownum <= 1;
  8     exception
  9         when no_data_found then
 10             null;
 11     end;
 12     return v_Result;
 13 end;
 14 /

Succeed.

SQL> insert into t_P_BTSESN_A4 (planid) values(1);

1 rows affected.

SQL> insert into t_D_BTSESN_A4 (planid) values(1);

1 rows affected.

SQL> commit;

Succeed.

SQL> select * from t_P_BTSESN_A4 a join t_D_BTSESN_A4 b on 0 = M_BTS_BTSTYPE__NG(b.OPERTYPE);

PLANID                                   CMENEID                                  BTSID                                    MAINDEVTAB                                                       BAKDEVTAB                                                        OMBEARBOARD                              SAVEPOINTID                              OPERTYPE                                 PLANID                                   CMENEID                                  BTSID                                    MAINDEVTAB                                                       BAKDEVTAB                                                        OMBEARBOARD                              LOGUPTID                                                         NBI_RECID                                ISGENMML                                



1 rows fetched.

SQL> 
SQL> --DTS2018100910219 
SQL> drop user if exists user9 cascade;

Succeed.

SQL> create user user9 identified by cantian_234;

Succeed.

SQL> grant all to user9;

Succeed.

SQL> conn user9/cantian_234@127.0.0.1:1611

connected.

SQL> DROP table if exists t_prd_009;

Succeed.

SQL> create table t_prd_009(id int,name varchar2(20));

Succeed.

SQL> drop sequence if exists s_t_prd_009;

Succeed.

SQL> create sequence s_t_prd_009 INCREMENT by 1 start with 10 nocycle NOCACHE;

Succeed.

SQL> select user9.s_t_prd_009.NEXTVAL ,user9.s_t_prd_009.CURRVAL from dual;

NEXTVAL              CURRVAL             
-------------------- --------------------
10                   10                  

1 rows fetched.

SQL> create or replace procedure p_t_prd_009_mid(
  2   v_id    in  int
  3   ) AS
  4   v_sql VARCHAR2(2000);
  5 BEGIN
  6         insert into t_prd_009 values(user9.s_t_prd_009.NEXTVAL,'HW'||user9.s_t_prd_009.NEXTVAL);
  7         commit;
  8         dbe_output.print_line(user9.s_t_prd_009.NEXTVAL);
  9 END p_t_prd_009_mid;
 10 /

Succeed.

SQL> set serveroutput on;

ON
SQL> call p_t_prd_009_mid(5);

12

PL/SQL procedure successfully completed.

SQL> 
SQL> CREATE OR REPLACE FUNCTION F1 RETURN varchar IS
  2  A varchar(100) ;
  3  BEGIN
  4 	 declare
  5 	 B NUMERIC(6,4);
  6 	 begin
  7 	 B := 20.2345;
  8 	 SELECT B INTO A FROM dual;
  9 	 RETURN A;
 10 	 end;
 11  END F1;
 12  /

Succeed.

SQL> select f1();

F1()                                                            
----------------------------------------------------------------
20.2345                                                         

1 rows fetched.

SQL> 
SQL> create or replace procedure p1(f1 in int)
  2 is 
  3 v_refcur2 SYS_REFCURSOR;
  4 i decimal := 12567890123456;
  5 begin
  6 open v_refcur2 for select i from dual;
  7 dbe_sql.return_cursor(v_refcur2);
  8 end;
  9 /

Succeed.

SQL> call p1(1);

PL/SQL procedure successfully completed.

ResultSet #1

:1                                      
----------------------------------------
12567890123456                          

1 rows fetched.


SQL> create or replace procedure p2(f1 in int, f2 in int) 
  2 is 
  3 v_refcur2 SYS_REFCURSOR;
  4 begin
  5 for i in 1..2
  6 loop
  7 open v_refcur2 for select i from dual;
  8 dbe_sql.return_cursor(v_refcur2); 
  9 end loop;
 10 end;
 11 /

Succeed.

SQL> call p2(1,2);

PL/SQL procedure successfully completed.

ResultSet #1

:1          
------------
1           

1 rows fetched.


ResultSet #2

:1          
------------
2           

1 rows fetched.


SQL> 
SQL> --DTS2018111610061 
SQL> drop table if exists emp;

Succeed.

SQL> create table emp(empno int,ename varchar(10),job varchar(10) ,sal integer);

Succeed.

SQL> insert into emp values(1,'zhangsan','doctor1',10000),(2,'zhangsan2','doctor2',10000),(123,'zhangsan3','doctor3',10000);

3 rows affected.

SQL> insert into emp values(1,'zhansi','doctor1',10000),(2,'lisiabc','doctor2',10000),(123,'zhangwu123','doctor3',10000);

3 rows affected.

SQL> insert into emp values(10,'abc','worker',9000);

1 rows affected.

SQL> insert into emp values(716,'ZHANGSAN','leader',20000);

1 rows affected.

SQL> set serveroutput on;

ON
SQL> declare
  2 a emp%rowtype;
  3 cursor mycursor is  select * from emp;
  4 begin
  5 open mycursor;
  6 loop
  7 if  mycursor%isopen  then  dbe_output.print_line('open');
  8 fetch mycursor into a;
  9 end if;
 10 exit when  mycursor%notfound;
 11 dbe_output.print_line('a is:'||a);
 12 dbe_output.print_line(mycursor%rowcount);
 13 end loop;
 14 end;
 15 /

open
CT-00932, [11:1] PL/SQL(USER9.ANONYMOUS BLOCK) terminated with execute errors
[11:1] PL/SQL(DBE_OUTPUT.PRINT_LINE) terminated with execute errors
CT-00606, Inconsistent datatypes, expected VARCHAR - got RECORD

SQL> --DTS2018111410787
SQL> drop table if exists FVT_PROC_CLOB_007_T_01;

Succeed.

SQL> create table FVT_PROC_CLOB_007_T_01 (a int,b varchar(100),c clob,name char(10) );

Succeed.

SQL> insert into FVT_PROC_CLOB_007_T_01 values(1,'apple','I like apple','jims');

1 rows affected.

SQL> create or replace procedure FVT_PROC_CLOB_007_P_02 (c1 clob ) 
  2 is 
  3 v_clob clob;
  4 begin
  5 update FVT_PROC_CLOB_007_T_01 set c = c || c1 where name like 'j%';
  6 select c into v_clob from FVT_PROC_CLOB_007_T_01 ;
  7 dbe_output.print_line('v_clob is:' ||v_clob);
  8 commit ;
  9 end;
 10 /

Succeed.

SQL> call FVT_PROC_CLOB_007_P_02('and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i likeand i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i likef],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like');

v_clob is:I like appleand i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i likeand i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i likef],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like

PL/SQL procedure successfully completed.

SQL> call FVT_PROC_CLOB_007_P_02('and i like %!aaadffsffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i likeand i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i likef],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like %!aaadffsfdffdaafdfafdsfhajdfjlsfjlslfjlsfldlfjlsfjldjfljlafepru[rfjg;sjfeorpjus;reopruospjfsdjf],and i like');

CT-00932, [1:2] PL/SQL(USER9.ANONYMOUS BLOCK) terminated with execute errors
[6:1] PL/SQL(USER9.FVT_PROC_CLOB_007_P_02) terminated with execute errors
[6:1] CT-00635, Value error: character string buffer too small

SQL> 
SQL> --DTS2018121006433 
SQL> drop table if exists p_r_tbl;

Succeed.

SQL> create table p_r_tbl(f1 int);

Succeed.

SQL> insert into p_r_tbl values(1);

1 rows affected.

SQL> 
SQL> create or replace procedure p_r1(a int) 
  2 as
  3 x int;
  4 begin
  5 select f1 into x from p_r_tbl;
  6 dbe_output.print_line(a);
  7 end;
  8 /

Succeed.

SQL> create or replace procedure p_r2(a int) 
  2 as
  3 begin
  4 p_r1(a);
  5 end;
  6 /

Succeed.

SQL> create or replace procedure p_r3(a int) 
  2 as
  3 begin
  4 p_r2(a);
  5 end;
  6 /

Succeed.

SQL> create or replace procedure p_r4(a int) 
  2 as
  3 begin
  4 p_r3(a);
  5 end;
  6 /

Succeed.

SQL> create or replace procedure p_r5(a int) 
  2 as
  3 begin
  4 p_r4(a);
  5 end;
  6 /

Succeed.

SQL> create or replace procedure p_r6(a int) 
  2 as
  3 begin
  4 p_r5(a);
  5 end;
  6 /

Succeed.

SQL> create or replace procedure p_r7(a int) 
  2 as
  3 begin
  4 p_r6(a);
  5 end;
  6 /

Succeed.

SQL> create or replace procedure p_r8(a int) 
  2 as
  3 begin
  4 p_r7(a);
  5 end;
  6 /

Succeed.

SQL> drop table if exists p_r_tbl;

Succeed.

SQL> create table p_r_tbl(f1 int, f2 int);

Succeed.

SQL> insert into p_r_tbl values(1,2);

1 rows affected.

SQL> call p_r8(1);

1

PL/SQL procedure successfully completed.

SQL> 
SQL> --DTS2018122205593
SQL> drop table if exists mtba;

Succeed.

SQL> create table mtba(x timestamp);

Succeed.

SQL> insert into mtba values(systimestamp);

1 rows affected.

SQL> insert into mtba values(systimestamp-100);

1 rows affected.

SQL> insert into mtba values(systimestamp+100);

1 rows affected.

SQL> CREATE OR REPLACE FUNCTION datediff(msg1 in date, msg2 in date) return int
  2 AS
  3 BEGIN
  4   return msg1 - msg2;
  5 END;
  6 /

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE mk_del2(msg in varchar) AS
  2 BEGIN
  3   delete from mtba where rowid in (select a.rowid from mtba a where datediff(a.x, sysdate) > 1);
  4 END;
  5 /

Succeed.

SQL> 
SQL> call mk_del2('1234');

PL/SQL procedure successfully completed.

SQL> select count(*) from mtba;

COUNT(*)            
--------------------
2                   

1 rows fetched.

SQL> 
SQL> --DTS2018122611702 
SQL> drop table if exists  FVT_PRO_TAB_001;

Succeed.

SQL> create table FVT_PRO_TAB_001
  2 (
  3     id int,
  4     name varchar2(10),
  5     time date,
  6     age number
  7 );

Succeed.

SQL> insert into FVT_PRO_TAB_001 values('1','feng',to_date('2018','yyyy'),25);

1 rows affected.

SQL> insert into FVT_PRO_TAB_001 values('2','li',to_date('2017','yyyy'),24);

1 rows affected.

SQL> insert into FVT_PRO_TAB_001 values('3','wang',to_date('2016','yyyy'),23);

1 rows affected.

SQL> insert into FVT_PRO_TAB_001 values('4','zhang',to_date('2015','yyyy'),22);

1 rows affected.

SQL> commit; 

Succeed.

SQL> 
SQL> create or replace procedure proc_for_in_loop6 as
  2 a int :=0;
  3 b int :=0;
  4 str varchar2(100);
  5 begin 
  6  str := 'select name   from FVT_PRO_TAB_001  order by 1 limit 1  ';
  7  for i in 1.. 3     
  8   loop
  9   dbe_output.print_line('out I='||i);
 10     a :=a+1;  
 11    if a/2+ a + length(a) -2 < 5
 12    then 
 13    --execute immediate str using out str;
 14    dbe_output.print_line(str) ;
 15     for i in 1.. 4    
 16     loop
 17     if b< 2 then 
 18     dbe_output.print_line('in I='||i);
 19     dbe_output.print_line('b='||b) ;
 20     b :=b+1;
 21     dbe_output.print_line('into goto');    
 22     else 
 23     dbe_output.print_line('b='||b) ;
 24     dbe_output.print_line('no into goto');
 25     exit;
 26     end if;
 27     end loop;
 28     else 
 29    dbe_output.print_line('........end if 1 ') ;
 30    --exit;
 31    end if ;  
 32   end loop;
 33 end;
 34 /

Succeed.

SQL> call proc_for_in_loop6;

out I=1
select name   from FVT_PRO_TAB_001  order by 1 limit 1  
in I=1
b=0
into goto
in I=2
b=1
into goto
b=2
no into goto
out I=2
select name   from FVT_PRO_TAB_001  order by 1 limit 1  
b=2
no into goto
out I=3
select name   from FVT_PRO_TAB_001  order by 1 limit 1  
b=2
no into goto

PL/SQL procedure successfully completed.

SQL> create or replace procedure proc_for_in_loop5 as
  2 a int :=0;
  3 b int :=0;
  4 str varchar2(100);
  5 begin 
  6  str := 'select name   from FVT_PRO_TAB_001  order by 1 limit 1  ';
  7  for i in 1.. 3     
  8   loop
  9   dbe_output.print_line('out I='||i);
 10     a :=a+1;  
 11    if a/2+ a + length(a) -2 < 5
 12    then 
 13    --execute immediate str using out str;
 14    dbe_output.print_line(str) ;
 15     for i in 1.. 4    
 16     loop
 17     if b< 2 then 
 18     dbe_output.print_line('in I='||i);
 19     dbe_output.print_line('b='||b) ;
 20     b :=b+1;
 21     dbe_output.print_line('into goto');    
 22     else 
 23     dbe_output.print_line('b='||b) ;
 24     dbe_output.print_line('no into goto');
 25     exit;
 26 	if true then
 27 	   dbe_output.print_line('true') ;
 28 	elsif true then
 29 	   dbe_output.print_line('fake') ;
 30 	else
 31 	   dbe_output.print_line('false') ;
 32     end if;
 33 	null;
 34 	end if;
 35     end loop;
 36     else 
 37     dbe_output.print_line('........end if 1 ') ;
 38    --exit;
 39    end if ;  
 40    dbe_output.print_line('is it right break?') ;
 41   end loop;
 42 end;
 43 /

Succeed.

SQL> call proc_for_in_loop5;

out I=1
select name   from FVT_PRO_TAB_001  order by 1 limit 1  
in I=1
b=0
into goto
in I=2
b=1
into goto
b=2
no into goto
is it right break?
out I=2
select name   from FVT_PRO_TAB_001  order by 1 limit 1  
b=2
no into goto
is it right break?
out I=3
select name   from FVT_PRO_TAB_001  order by 1 limit 1  
b=2
no into goto
is it right break?

PL/SQL procedure successfully completed.

SQL> --expected error
SQL> create or replace procedure proc_for_in_loop4 as
  2 a int :=0;
  3 b int :=0;
  4 str varchar2(100);
  5 begin 
  6  str := 'select name   from FVT_PRO_TAB_001  order by 1 limit 1  ';
  7  for i in 1.. 3     
  8   loop
  9   dbe_output.print_line('out I='||i);
 10     a :=a+1;  
 11    if a/2+ a + length(a) -2 < 5
 12    then 
 13    --execute immediate str using out str;
 14    dbe_output.print_line(str) ;
 15     for i in 1.. 4    
 16     loop
 17     if b< 2 then 
 18     dbe_output.print_line('in I='||i);
 19     dbe_output.print_line('b='||b) ;
 20     b :=b+1;
 21     dbe_output.print_line('into goto');    
 22     else 
 23     dbe_output.print_line('b='||b) ;
 24     dbe_output.print_line('no into goto');
 25     exit;
 26 	if true then
 27 	   dbe_output.print_line('true') ;
 28 	elsif true then
 29 	   dbe_output.print_line('fake') ;
 30 	end if;
 31 	else
 32 	   dbe_output.print_line('false') ;
 33     end if;
 34     end loop;
 35     else 
 36     dbe_output.print_line('........end if 1 ') ;
 37    --exit;
 38    end if ;  
 39    dbe_output.print_line('is it right break?') ;
 40   end loop;
 41 end;
 42 /

Succeed.
Warning:
PL/SQL(USER9.PROC_FOR_IN_LOOP4) terminated with compiling errors
[31:2] PLC-00955 Unexpected ELSE found
[35:5] PLC-00955 Unexpected ELSE found
[38:4] PLC-00954 OTHERS expected but END found
[42:1] PLC-00954 more text expected but EOF found


SQL> call proc_for_in_loop4;

CT-00944, PL/SQL(USER9.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(USER9.PROC_FOR_IN_LOOP4) terminated with compiling errors
[31:2] PLC-00955 Unexpected ELSE found
[35:5] PLC-00955 Unexpected ELSE found
[38:4] PLC-00954 OTHERS expected but END found
[42:1] PLC-00954 more text expected but EOF found


SQL> create or replace procedure proc_for_in_loop3 as
  2 a int :=0;
  3 b int :=0;
  4 str varchar2(100);
  5 begin 
  6  str := 'select name   from FVT_PRO_TAB_001  order by 1 limit 1  ';
  7  if true then
  8     <<lable1>>
  9     dbe_output.print_line('true');
 10  end if;
 11  for i in 1.. 3     
 12   loop
 13   dbe_output.print_line('out I='||i);
 14     a :=a+1;  
 15    if a/2+ a + length(a) -2 < 5
 16    then 
 17    --execute immediate str using out str;
 18    dbe_output.print_line(str) ;
 19     for i in 1.. 4    
 20     loop
 21     if b< 2 then 
 22     dbe_output.print_line('in I='||i);
 23     dbe_output.print_line('b='||b) ;
 24     b :=b+1;
 25     dbe_output.print_line('into goto');    
 26     else 
 27     dbe_output.print_line('b='||b) ;
 28     dbe_output.print_line('no into goto');
 29     goto lable1;
 30 	if true then
 31 	   dbe_output.print_line('true') ;
 32 	elsif true then
 33 	   dbe_output.print_line('fake') ;
 34 	else
 35 	   dbe_output.print_line('false') ;
 36     end if;
 37 	end if;
 38     end loop;
 39     else 
 40     dbe_output.print_line('........end if 1 ') ;
 41    --exit;
 42    end if ;  
 43    dbe_output.print_line('is it right break?') ;
 44   end loop;
 45 end;
 46 /

Succeed.
Warning:
PL/SQL(USER9.PROC_FOR_IN_LOOP3) terminated with compiling errors
[29:5] PLC-00916 PL/SQL:syntax error(LABLE1 is an invalid label(not in equal ctl_block))


SQL> call proc_for_in_loop3;

CT-00944, PL/SQL(USER9.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(USER9.PROC_FOR_IN_LOOP3) terminated with compiling errors
[29:5] PLC-00916 PL/SQL:syntax error(LABLE1 is an invalid label(not in equal ctl_block))


SQL> create or replace procedure proc_for_in_loop2 as
  2 a int :=0;
  3 b int :=0;
  4 str varchar2(100);
  5 begin 
  6  str := 'select name   from FVT_PRO_TAB_001  order by 1 limit 1  ';
  7  if true then    
  8     dbe_output.print_line('true');
  9  end if;
 10  for i in 1.. 3     
 11   loop
 12     dbe_output.print_line('out I='||i);
 13     a :=a+1;  
 14 	if true then
 15     <<lable1>>
 16 	if a/2+ a + length(a) -2 < 5
 17     then 
 18    --execute immediate str using out str;  
 19    dbe_output.print_line(str) ;
 20     for i in 1.. 4    
 21     loop
 22     if b< 2 then 
 23     dbe_output.print_line('in I='||i);
 24     dbe_output.print_line('b='||b) ;
 25     b :=b+1;
 26     dbe_output.print_line('into goto');    
 27     else 
 28     dbe_output.print_line('b='||b) ;
 29     dbe_output.print_line('no into goto');
 30 	a := 10000;
 31     goto lable1;
 32 	if true then
 33 	   dbe_output.print_line('true') ;
 34 	elsif true then
 35 	   dbe_output.print_line('fake') ;
 36 	else
 37 	   dbe_output.print_line('false') ;
 38     end if;
 39 	end if;
 40     end loop;
 41     else 
 42     dbe_output.print_line('........end if 1 ') ;
 43    --exit;
 44    end if ;  
 45    dbe_output.print_line('is it right break?') ;
 46    end if;
 47   end loop;
 48 end;
 49 /

Succeed.

SQL> call proc_for_in_loop2;

true
out I=1
select name   from FVT_PRO_TAB_001  order by 1 limit 1  
in I=1
b=0
into goto
in I=2
b=1
into goto
b=2
no into goto
........end if 1 
is it right break?
out I=2
........end if 1 
is it right break?
out I=3
........end if 1 
is it right break?

PL/SQL procedure successfully completed.

SQL> create or replace procedure proc_for_in_loop1 as
  2 a int :=0;
  3 b int :=0;
  4 str varchar2(100);
  5 begin 
  6  str := 'select name   from FVT_PRO_TAB_001  order by 1 limit 1  ';
  7  if true then    
  8     dbe_output.print_line('true');
  9  end if;
 10  for i in 1.. 3     
 11   loop
 12     dbe_output.print_line('out I='||i);
 13     a :=a+1;  
 14 	if true then
 15 
 16 	if a/2+ a + length(a) -2 < 5
 17     then 
 18    --execute immediate str using out str;  
 19    dbe_output.print_line(str) ;
 20     for i in 1.. 4    
 21     loop
 22     if b< 2 then 
 23     dbe_output.print_line('in I='||i);
 24     dbe_output.print_line('b='||b) ;
 25     b :=b+1;
 26     dbe_output.print_line('into goto');    
 27     else 
 28     dbe_output.print_line('b='||b) ;
 29     dbe_output.print_line('no into goto');
 30 	a := 10000;
 31     goto lable1;
 32 	if true then
 33 	   dbe_output.print_line('true') ;
 34 	elsif true then
 35 	   dbe_output.print_line('fake') ;
 36 	else
 37 	   dbe_output.print_line('false') ;
 38     end if;
 39 	end if;
 40     end loop;
 41     else 
 42     dbe_output.print_line('........end if 1 ') ;
 43    --exit;
 44    end if ;  
 45    <<lable1>>
 46    dbe_output.print_line('is it right break?') ;
 47    end if;
 48   end loop;
 49 end;
 50 /

Succeed.

SQL> call proc_for_in_loop1;

true
out I=1
select name   from FVT_PRO_TAB_001  order by 1 limit 1  
in I=1
b=0
into goto
in I=2
b=1
into goto
b=2
no into goto
is it right break?
out I=2
........end if 1 
is it right break?
out I=3
........end if 1 
is it right break?

PL/SQL procedure successfully completed.

SQL> 
SQL> --
SQL> begin
  2    execute immediate 'explain select 1 from dual';
  3 end;
  4 /

CT-00932, [2:4] PL/SQL(USER9.ANONYMOUS BLOCK) terminated with execute errors
[2:4] CT-00101, Capability: explain sql plan in PL dynamic sql is not supported

SQL> 
SQL> --
SQL> drop table if exists  FVT_PRO_TAB_001;

Succeed.

SQL> create table FVT_PRO_TAB_001
  2 (
  3     id int,
  4     name varchar2(10),
  5     time date,
  6     age number
  7 );

Succeed.

SQL> insert into FVT_PRO_TAB_001 values('1','feng',to_date('2018','yyyy'),25);

1 rows affected.

SQL> insert into FVT_PRO_TAB_001 values('2','li',to_date('2017','yyyy'),24);

1 rows affected.

SQL> insert into FVT_PRO_TAB_001 values('3','wang',to_date('2016','yyyy'),23);

1 rows affected.

SQL> insert into FVT_PRO_TAB_001 values('4','zhang',to_date('2015','yyyy'),22);

1 rows affected.

SQL> commit; 

Succeed.

SQL> create or replace procedure proc_for_in_loop7 as 
  2 str varchar2(10) :='m';
  3 str1 varchar2(100) :='a';
  4 begin 
  5 for i  in  1.. 3
  6     loop
  7         case str 
  8         when 'a' then select name into str1 from FVT_PRO_TAB_001 where age=22;
  9         dbe_output.print_line('str1='||str);        
 10         when b then select name into str1 from FVT_PRO_TAB_001 where age=23;
 11         dbe_output.print_line('str2='||str);
 12         when c then select name into str1 from FVT_PRO_TAB_001 where age=24;
 13         dbe_output.print_line('str3='||str);
 14         when d then select name into str1 from FVT_PRO_TAB_001 where age=25;
 15         dbe_output.print_line('str4='||str);
 16         else str :=str1;
 17         dbe_output.print_line('str5='||str);
 18         end case;
 19     end loop;
 20 end;
 21 /

Succeed.
Warning:
PL/SQL(USER9.PROC_FOR_IN_LOOP7) terminated with compiling errors
[10:14] PLC-00601 Sql syntax error: invalid column name 'B'
[12:9] PLC-00958 Unsupported feature
[14:9] PLC-00958 Unsupported feature
[18:9] PLC-00954 OTHERS expected but END found
[19:5] PLC-00955 Unexpected END LOOP found


SQL> 
SQL> create or replace procedure xxx_p1() as
  2 begin
  3 null;
  4 end;
  5 /

Succeed.

SQL> begin xxx_p1; end;
  2 /

PL/SQL procedure successfully completed.

SQL> 
SQL> call xxx_p1;

PL/SQL procedure successfully completed.

SQL> exec xxx_p1;

PL/SQL procedure successfully completed.

SQL> 
SQL> create or replace procedure xxx_p2() as
  2 begin
  3 xxx_p1;
  4 end;
  5 /

Succeed.

SQL> begin xxx_p2; end;
  2 /

PL/SQL procedure successfully completed.

SQL> call xxx_p2;

PL/SQL procedure successfully completed.

SQL> exec xxx_p2;

PL/SQL procedure successfully completed.

SQL> 
SQL> create or replace function xxx_f1() return int as
  2 begin
  3 return 1;
  4 end;
  5 /

Succeed.

SQL> select xxx_f1;

XXX_F1      
------------
1           

1 rows fetched.

SQL> select xxx_f1+1;

XXX_F1+1            
--------------------
2                   

1 rows fetched.

SQL> 
SQL> create or replace function xxx_f2() return int as
  2  a int;
  3 begin
  4  a := xxx_f1;
  5  dbe_output.print_line(a);
  6  select xxx_f1 into a from dual;
  7  dbe_output.print_line(a);
  8  
  9  a := xxx_f1 + 1;
 10  dbe_output.print_line(a);
 11  select xxx_f1 + 1 into a from dual;
 12  dbe_output.print_line(a);
 13  return a;
 14 end;
 15 /

Succeed.

SQL> 
SQL> select xxx_f2 + 1;

XXX_F2 + 1          
--------------------
3                   

1 rows fetched.

1
1
2
2

SQL> 
SQL> drop table if exists xxx_t;

Succeed.

SQL> create table xxx_t(a int);

Succeed.

SQL> select xxx_f2 from dual;

XXX_F2      
------------
2           

1 rows fetched.

1
1
2
2

SQL> select xxx_f2 from xxx_t;

XXX_F2      
------------

0 rows fetched.

SQL> select xxx_f2 + a from xxx_t;

XXX_F2 + A          
--------------------

0 rows fetched.

SQL> insert into xxx_t values(1);

1 rows affected.

SQL> select a from xxx_t where a = xxx_f2;

A           
------------

0 rows fetched.

1
1
2
2

SQL> 
SQL> conn sys/sys@127.0.0.1:1611

connected.

SQL> drop user if exists job_schema_001 cascade;

Succeed.

SQL> create user job_schema_001 identified by Cantian_234;

Succeed.

SQL> grant dba to job_schema_001;

Succeed.

SQL> grant sysdba to job_schema_001;

Succeed.

SQL> grant create session to job_schema_001;

Succeed.

SQL> 
SQL> conn job_schema_001/Cantian_234@127.0.0.1:1611

connected.

SQL> 
SQL> drop table if exists FVT_FUNCTION_DDL_001_T;

Succeed.

SQL> drop table if exists FVT_FUNCTION_DDL_001_T_02;

Succeed.

SQL> create table FVT_FUNCTION_DDL_001_T(id int,name varchar2(100));

Succeed.

SQL> create table FVT_FUNCTION_DDL_001_T_02(id int,name varchar2(100));

Succeed.

SQL> create or replace function FVT_FUNCTION_DDL_001_Fun return int
  2 is
  3 a int := 0;
  4 begin
  5 for i in 1..5
  6 loop
  7 insert into FVT_FUNCTION_DDL_001_T values(30,'commit');
  8 commit;
  9 insert into FVT_FUNCTION_DDL_001_T values(3,'rollback');
 10 rollback;
 11 a := a+1;
 12 end loop;
 13 return a;
 14 end;
 15 /

Succeed.

SQL> insert into FVT_FUNCTION_DDL_001_T values (FVT_FUNCTION_DDL_001_Fun(),'function');

CT-00932, [8:1] PL/SQL(JOB_SCHEMA_001.FVT_FUNCTION_DDL_001_FUN) terminated with execute errors
[8:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> insert into FVT_FUNCTION_DDL_001_T_02 values (FVT_FUNCTION_DDL_001_Fun(),'function');

CT-00932, [8:1] PL/SQL(JOB_SCHEMA_001.FVT_FUNCTION_DDL_001_FUN) terminated with execute errors
[8:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> select * from FVT_FUNCTION_DDL_001_T;

ID           NAME                                                            
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> select * from FVT_FUNCTION_DDL_001_T_02;

ID           NAME                                                            
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> commit ;

Succeed.

SQL> select * from FVT_FUNCTION_DDL_001_T_02;

ID           NAME                                                            
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> conn sys/sys@127.0.0.1:1611

connected.

SQL> begin 
  2 insert into job_schema_001.FVT_FUNCTION_DDL_001_T values (job_schema_001.FVT_FUNCTION_DDL_001_Fun(),'function');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[8:1] PL/SQL(JOB_SCHEMA_001.FVT_FUNCTION_DDL_001_FUN) terminated with execute errors
[8:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> begin 
  2 insert into job_schema_001.FVT_FUNCTION_DDL_001_T values (job_schema_001.FVT_FUNCTION_DDL_001_Fun,'function');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[8:1] PL/SQL(JOB_SCHEMA_001.FVT_FUNCTION_DDL_001_FUN) terminated with execute errors
[8:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> drop user whf001 cascade;

Succeed.

SQL> 
SQL> declare
  2 ct SYS_REFCURSOR;
  3 cursor idx is select 1 from dual;
  4 a int;
  5 b int;
  6 begin
  7   open ct for select 1 from dual;
  8   if ct%found then
  9     a := 1;
 10   else
 11     a := 0;
 12   end if;
 13   dbe_output.print_line(a);
 14 
 15   fetch ct into b;
 16   if ct%found then
 17     a := 1;
 18   else
 19     a := 0;
 20   end if;
 21   dbe_output.print_line(a);
 22 
 23   open ct for select 1 from dual;
 24   if ct%found then
 25     a := 1;
 26   else
 27     a := 0;
 28   end if;
 29   dbe_output.print_line(a);
 30 end;
 31 /

0
1
0

PL/SQL procedure successfully completed.

SQL> 
SQL> set serveroutput off;
OFF



