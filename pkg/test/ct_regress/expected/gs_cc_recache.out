

SQL> alter system set UNDO_RETENTION_TIME=1;

Succeed.

SQL> alter system set DB_ISOLEVEL=CC;

Succeed.

SQL> drop table if exists table_1;

Succeed.

SQL> drop table if exists table_2;

Succeed.

SQL> drop table if exists table_3;

Succeed.

SQL> drop table if exists table_4;

Succeed.

SQL> create table table_1(c1 int, c2 int, c3 varchar(20)) CRMODE PAGE;

Succeed.

SQL> create index x_1 on table_1(c2,c3) CRMODE PAGE;

Succeed.

SQL> create table table_2(c1 int, c2 int, c3 varchar(20)) CRMODE ROW;

Succeed.

SQL> create index x_2 on table_2(c2,c3) CRMODE ROW;

Succeed.

SQL> create table table_3(c1 int);

Succeed.

SQL> create table table_4(c1 int);

Succeed.

SQL> 
SQL> CREATE or replace procedure tmp_1(startnum int,endall int) is
  2 i INT :=1;
  3 BEGIN
  4   FOR i IN startnum..endall LOOP
  5    execute immediate 'insert into table_1 values('||i||','||i||',''dwsds'')';
  6    execute immediate 'insert into table_1 values('||i||','||i||',''dwsds'')';
  7   END LOOP;
  8 END;
  9 /

Succeed.

SQL> call tmp_1(0,6);

PL/SQL procedure successfully completed.

SQL> 
SQL> CREATE or replace procedure tmp_2(startnum int,endall int) is
  2 i INT :=1;
  3 BEGIN
  4   FOR i IN startnum..endall LOOP
  5    execute immediate 'insert into table_2 values('||i||','||i||',''dwsds'')';
  6    execute immediate 'insert into table_2 values('||i||','||i||',''dwsds'')';
  7   END LOOP;
  8 END;
  9 /

Succeed.

SQL> call tmp_2(0,6);

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 pval int;
  3 cursor hash_cursor is select c1 from table_1 where c2 < 5;
  4 begin
  5    open hash_cursor;
  6    fetch hash_cursor into pval;
  7    while hash_cursor%found loop
  8    sleep(1);
  9    execute immediate 'update table_1 set c2=c2+1 where c2 < 10';
 10    execute immediate 'insert into table_3 values('||pval||')';
 11    fetch hash_cursor into pval;
 12    end loop;
 13    close hash_cursor;
 14  end;
 15 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select * from table_3;

C1          
------------
0           
0           
1           
1           
2           
2           
3           
3           
4           
4           

10 rows fetched.

SQL> 
SQL> declare
  2 pval int;
  3 cursor hash_cursor is select c1 from table_1 limit 5;
  4 begin
  5    open hash_cursor;
  6    fetch hash_cursor into pval;
  7    while hash_cursor%found loop
  8    sleep(1);
  9    execute immediate 'insert into table_4 values('||pval||')';
 10    fetch hash_cursor into pval;
 11    end loop;
 12    close hash_cursor;
 13  end;
 14 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select *from table_4;

C1          
------------
0           
0           
1           
1           
2           

5 rows fetched.

SQL> 
SQL> declare
  2 pval int;
  3 cursor hash_cursor is select c1 from table_2 where c2 < 5;
  4 begin
  5    open hash_cursor;
  6    fetch hash_cursor into pval;
  7    while hash_cursor%found loop
  8    sleep(1);
  9    execute immediate 'update table_1 set c2=c2+1 where c2 < 10';
 10    execute immediate 'insert into table_3 values('||pval||')';
 11    fetch hash_cursor into pval;
 12    end loop;
 13    close hash_cursor;
 14  end;
 15 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select * from table_3;

C1          
------------
0           
0           
1           
1           
2           
2           
3           
3           
4           
4           
0           
0           
1           
1           
2           
2           
3           
3           
4           
4           

20 rows fetched.

SQL> 
SQL> declare
  2 pval int;
  3 cursor hash_cursor is select c1 from table_2 limit 5;
  4 begin
  5    open hash_cursor;
  6    fetch hash_cursor into pval;
  7    while hash_cursor%found loop
  8    sleep(1);
  9    execute immediate 'insert into table_4 values('||pval||')';
 10    fetch hash_cursor into pval;
 11    end loop;
 12    close hash_cursor;
 13  end;
 14 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select *from table_4;

C1          
------------
0           
0           
1           
1           
2           
0           
0           
1           
1           
2           

10 rows fetched.

SQL> 
SQL> alter system set UNDO_RETENTION_TIME=100;

Succeed.

SQL> alter system set DB_ISOLEVEL=RC;

Succeed.

SQL> 


