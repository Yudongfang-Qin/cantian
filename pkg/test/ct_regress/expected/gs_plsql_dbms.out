

SQL> --
SQL> -- gs_plsql_DBE
SQL> -- testing system procedure
SQL> --
SQL> 
SQL> set serveroutput on;

ON
SQL> 
SQL> 
SQL> --BEGIN:TEST ERROR, not allow to appear column
SQL> begin
  2 dbe_output.print_line("-------------------");
  3 end;
  4 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[2:23] PLC-00601 Sql syntax error: invalid column name '-------------------'

SQL> --END
SQL> 
SQL> 
SQL> --test for dbe_stats.AUTO_SAMPLE_SIZE and dbe_random.get_string
SQL> declare
  2 a int;
  3 c1 varchar2(20);
  4 c2 varchar2(20);
  5 c3 varchar2(20);
  6 c4 varchar2(20);
  7 c5 varchar2(20);
  8 c6 varchar2(20);
  9 c7 varchar2(20);
 10 c8 varchar2(20);
 11 c9 varchar2(20);
 12 c10 varchar2(20);
 13 c11 varchar2(20);
 14 c12 varchar2(20);
 15 begin
 16 a := dbe_stats.AUTO_SAMPLE_SIZE;
 17 c1 := dbe_random.get_string('u', 3);
 18 c2 := dbe_random.get_string('U', 3);
 19 c3 := dbe_random.get_string('l', 3);
 20 c4 := dbe_random.get_string('L', 3);
 21 c5 := dbe_random.get_string('a', 3);
 22 c6 := dbe_random.get_string('A', 3);
 23 c7 := dbe_random.get_string('x', 3);
 24 c8 := dbe_random.get_string('X', 3);
 25 c9 := dbe_random.get_string('p', 3);
 26 c10 := dbe_random.get_string('P', 3);
 27 c11 := dbe_random.get_string('P', 0);
 28 c12 := dbe_random.get_string('1', (a+7)*2.3);
 29 dbe_output.print_line(length(c1)||length(c2)||length(c3)||length(c4)||length(c5)||length(c6)||length(c7)||length(c8)||length(c9)||length(c10)||length(c11)||a);
 30 dbe_output.print_line(length(c12));
 31 end; 
 32 /

33333333330
16

PL/SQL procedure successfully completed.

SQL> 
SQL> select length(dbe_random.get_string('', 3));

LENGTH(DBE_RANDOM.GET_STRING('', 3))
------------------------------------
3                                   

1 rows fetched.

SQL> select length(dbe_random.get_string('ab', 3));

CT-00614, [1:37]Parameter error: the flag of random get_string is incorrect
SQL> select length(dbe_random.get_string('1', 3.1));

LENGTH(DBE_RANDOM.GET_STRING('1', 3.1))
---------------------------------------
3                                      

1 rows fetched.

SQL> select length(dbe_random.get_string(NULL, 3));

LENGTH(DBE_RANDOM.GET_STRING(NULL, 3))
--------------------------------------
3                                     

1 rows fetched.

SQL> select length(dbe_random.get_string(NULL, NULL));

CT-00614, [1:37]Parameter error: the len of random get_string is incorrect
SQL> 
SQL> select length(dbe_random.get_string(replace('2x','2',''),3)) from dual;

LENGTH(DBE_RANDOM.GET_STRING(REPLACE('2X','2',''),3))
-----------------------------------------------------
3                                                    

1 rows fetched.

SQL> select dbe_random.get_string() from dual;

CT-00615, [1:8]Invalid argument number for GET_STRING, min=2, max=2
SQL> select dbe_random.get_string('u',) from dual;

CT-00601, [1:34]Sql syntax error: invalid expression
SQL> select dbe_random.get_string(,1) from dual;

CT-00601, [1:30]Sql syntax error: invalid expression
SQL> select dbe_random.get_string(,1,) from dual;

CT-00601, [1:30]Sql syntax error: invalid expression
SQL> 
SQL> select dbe_random.get_string('u', -100) from dual;

DBE_RANDOM.GET_STRING('U', -100)                                
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select dbe_random.get_string('u', 0) from dual;

DBE_RANDOM.GET_STRING('U', 0)                                   
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> select length(dbe_random.get_string('u', 0)) from dual;

LENGTH(DBE_RANDOM.GET_STRING('U', 0))
-------------------------------------
                                     

1 rows fetched.

SQL> 
SQL> select length(dbe_random.get_string('u', 4001)) from dual;

LENGTH(DBE_RANDOM.GET_STRING('U', 4001))
----------------------------------------
4001                                    

1 rows fetched.

SQL> select length(dbe_random.get_string('u', 4000)) from dual;

LENGTH(DBE_RANDOM.GET_STRING('U', 4000))
----------------------------------------
4000                                    

1 rows fetched.

SQL> select length(dbe_random.get_string('u', 3999)) from dual;

LENGTH(DBE_RANDOM.GET_STRING('U', 3999))
----------------------------------------
3999                                    

1 rows fetched.

SQL> 
SQL> select dbe_random.get_string() from dual;

CT-00615, [1:8]Invalid argument number for GET_STRING, min=2, max=2
SQL> select dbe_random.get_string('u',) from dual;

CT-00601, [1:34]Sql syntax error: invalid expression
SQL> select dbe_random.get_string(,1) from dual;

CT-00601, [1:30]Sql syntax error: invalid expression
SQL> select dbe_random.get_string('u',1,1) from dual;

CT-00615, [1:8]Invalid argument number for GET_STRING, min=2, max=2
SQL> 
SQL> --test for dbe_stats.AUTO_SAMPLE_SIZE and dbe_random.get_string
SQL> declare
  2 c varchar2(20);
  3 begin
  4 c := dbe_random.get_string('k', 3);
  5 dbe_output.print_line(length(c));
  6 end; 
  7 /

3

PL/SQL procedure successfully completed.

SQL> 
SQL> --test for dbe_stats.AUTO_SAMPLE_SIZE and dbe_random.get_string
SQL> declare
  2 c varchar2(20);
  3 begin
  4 c2 := dbe_random.get_string('U', -1);
  5 dbe_output.print_line(length(c));
  6 end; 
  7 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[4:1] PLC-00916 PL/SQL:syntax error(unexpected pl-variant occurs)

SQL> 
SQL> --test for DBE_STATS.COLLECT_TABLE_STATS
SQL> drop table if exists test_gather;

Succeed.

SQL> create table test_gather(a int);

Succeed.

SQL> 
SQL> declare
  2 c varchar2(20);
  3 begin
  4 c := dbe_random.get_string('U', 1);
  5 DBE_STATS.COLLECT_TABLE_STATS(schema => 'SYS',name => 'test_gather');
  6 DBE_STATS.PURGE_STATS(sysdate-5);
  7 DBE_STATS.FLUSH_DB_STATS_INFO();
  8 end; 
  9 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --expect right
SQL> execute DBE_STATS.COLLECT_TABLE_STATS(schema => 'SYS',name => 'test_gather');

PL/SQL procedure successfully completed.

SQL> execute DBE_STATS.COLLECT_TABLE_STATS('SYS','test_gather');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.PURGE_STATS(sysdate-101);

PL/SQL procedure successfully completed.

SQL> 
SQL> --expect success
SQL> execute DBE_STATS.COLLECT_TABLE_STATS('SYS','test_gather', NULL, 0.000001);

PL/SQL procedure successfully completed.

SQL> --expect success
SQL> execute DBE_STATS.COLLECT_TABLE_STATS('SYS','test_gather', NULL, 0.000001, true);

PL/SQL procedure successfully completed.

SQL> execute DBE_STATS.COLLECT_TABLE_STATS('SYS','test_gather', NULL, 0.000001, false);

PL/SQL procedure successfully completed.

SQL> execute DBE_STATS.COLLECT_TABLE_STATS('SYS','test_gather', NULL, 100, true);

PL/SQL procedure successfully completed.

SQL> --expect error
SQL> execute DBE_STATS.COLLECT_TABLE_STATS('SYS','test_gather', NULL, 0.0000001);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: the valid range of sample_ratio is [0.000001,100]

SQL> execute DBE_STATS.COLLECT_TABLE_STATS('SYS','test_gather', NULL, 0.000001, null);

PL/SQL procedure successfully completed.

SQL> execute DBE_STATS.COLLECT_TABLE_STATS('SYS','test_gather', NULL, 100.00001, true);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: the valid range of sample_ratio is [0.000001,100]

SQL> 
SQL> 
SQL> 
SQL> drop table test_gather;

Succeed.

SQL> 
SQL> 
SQL> --test dbe_util.get_date_time
SQL> --begin
SQL> --expect success:2-0
SQL> declare
  2 a number;
  3 b number;
  4 c int := 1;
  5 begin
  6 	a := dbe_util.get_date_time();
  7 	b := dbe_util.get_date_time();
  8 	if b-a < 2 then
  9 	c := 0;
 10 	end if;
 11 	dbe_output.print_line(round(a/100000000000)||'-'||(b-a));
 12 end;
 13 /

2-0

PL/SQL procedure successfully completed.

SQL> 
SQL> --end
SQL> 
SQL> --test dbe_sql.return_cursor Procedure
SQL> --Example 7-11 dbe_sql.return_cursor Procedure
SQL> --begin
SQL> drop table if exists employees;

Succeed.

SQL> drop table if exists locations;

Succeed.

SQL> create table employees(employee_id int, first_name varchar2(32), last_name varchar2(32));

Succeed.

SQL> insert into employees values(1, 'zhang', 'wei');

1 rows affected.

SQL> insert into employees values(2, 'wang', 'hai');

1 rows affected.

SQL> commit;

Succeed.

SQL> create table locations(country_id varchar2(16), city varchar2(16), state_province varchar2(16));

Succeed.

SQL> insert into locations values('AU', 'beijing', 'beijing');

1 rows affected.

SQL> insert into locations values('NKG', 'nanjing', 'jiangsu');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE p_DBE AS
  2   c1 SYS_REFCURSOR;
  3   c2 SYS_REFCURSOR;
  4 BEGIN
  5   OPEN c1 FOR
  6     SELECT first_name, last_name
  7     FROM employees
  8     WHERE employee_id > 0
  9     ORDER BY first_name, last_name;
 10  
 11   dbe_sql.return_cursor (c1);
 12   -- Now p cannot access the result.
 13  
 14   OPEN c2 FOR
 15     SELECT city, state_province
 16     FROM locations
 17     WHERE country_id = 'AU'
 18     ORDER BY city, state_province;
 19  
 20   dbe_sql.return_cursor (c2);
 21   -- Now p cannot access the result.
 22 END;
 23 /

Succeed.

SQL> BEGIN
  2   p_DBE();
  3 END;
  4 /

PL/SQL procedure successfully completed.

ResultSet #1

FIRST_NAME                       LAST_NAME                       
-------------------------------- --------------------------------
wang                             hai                             
zhang                            wei                             

2 rows fetched.


ResultSet #2

CITY             STATE_PROVINCE  
---------------- ----------------
beijing          beijing         

1 rows fetched.


SQL> 
SQL> --end
SQL> 
SQL> --test return result set in function
SQL> --begin
SQL> drop table if exists employees;

Succeed.

SQL> create table employees(employeesno int,ename varchar(10),job varchar(10) ,sal integer);

Succeed.

SQL> insert into employees values(1,'zhangsan','doctor1',10000);

1 rows affected.

SQL> insert into employees values(2,'zhangsan2','doctor2',10010);

1 rows affected.

SQL> insert into employees values(123,'zhangsan3','doctor3',10020);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> alter table employees add hiretime date;

Succeed.

SQL> 
SQL> create or replace function test_outf return sys_refcursor 
  2 is 
  3 cursorv1 sys_refcursor;
  4 begin
  5 open cursorv1 for select ename as name, sal, sal*2 ep_sal from employees where ename like 'zhangsan%' ;
  6 return cursorv1;
  7 end;
  8 /

Succeed.

SQL> 
SQL> --expect error
SQL> declare
  2 sys_cur1 sys_refcursor;
  3 type XXX is record(
  4 a varchar2(100),
  5 b number(10,1),
  6 c number(11,1)
  7 );
  8 var1 XXX;
  9 begin
 10 open sys_cur1 for select test_outf() from dual;
 11 loop
 12 fetch sys_cur1 into var1;
 13 exit when sys_cur1%notfound;
 14 dbe_output.print_line('line NO:'||sys_cur1%rowcount||': +'||var1.a||'+'||var1.b||'+'||var1.c); 
 15 end loop;
 16 close sys_cur1;
 17 end;
 18 /

CT-00932, [12:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[12:1] CT-00926, PL/SQL: Return types of Result Set variables or query do not match

SQL> 
SQL> --expect success and print result of set
SQL> select test_outf(), 1234 from dual;

TEST_OUTF()                                                      1234        
---------------------------------------------------------------- ------------
CURSOR STATEMENT                                                 1234        

1 rows fetched.

ResultSet #1

NAME       SAL          EP_SAL              
---------- ------------ --------------------
zhangsan   10000        20000               
zhangsan2  10010        20020               
zhangsan3  10020        20040               

3 rows fetched.


SQL> --end
SQL> 
SQL> --test return invaild cursor
SQL> --begin
SQL> drop table if exists emp;

Succeed.

SQL> create table emp(empno int,ename varchar(10),job varchar(10) ,sal integer);

Succeed.

SQL> insert into emp values(1,'zhangsan','doctor1',10000),(2,'zhangsan2','doctor2',10000),(123,'zhangsan3','doctor3',10000);

3 rows affected.

SQL> insert into emp values(1,'zhansi','doctor1',10000),(2,'lisiabc','doctor2',10000),(123,'zhangwu123','doctor3',10000);

3 rows affected.

SQL> insert into emp values(10,'abc','worker',9000);

1 rows affected.

SQL> insert into emp values(716,'ZHANGSAN','leader',20000);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> create or replace procedure p1 is 
  2    a emp%rowtype;
  3    v_refcur1 SYS_REFCURSOR;
  4 begin
  5 open v_refcur1 for   select * from emp where emp.ename like  'zhang%' ;
  6 dbe_sql.return_cursor(v_refcur1); close v_refcur1;
  7 open v_refcur1 for  select * from emp where emp.ename like  'zhang___';
  8 dbe_sql.return_cursor(v_refcur1); close v_refcur1;
  9 end;
 10 /

Succeed.

SQL> 
SQL> --expect error
SQL> call p1();

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[6:35] PL/SQL(SYS.P1) terminated with execute errors
[6:35] CT-00905, The cursor was invalid.

SQL> 
SQL> create or replace procedure p1 is 
  2    v_refcur1 SYS_REFCURSOR;
  3    a   int := 1;
  4 begin
  5 open v_refcur1 for   select * from emp where emp.ename like  'zhang%' ;
  6 dbe_sql.return_cursor(v_refcur1); 
  7    a := a/0;
  8 end;
  9 /

Succeed.

SQL> 
SQL> --expect error
SQL> call p1();

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[7:4] PL/SQL(SYS.P1) terminated with execute errors
[7:10] CT-00637, The divisor was zero

SQL> 
SQL> drop procedure if exists p1;

Succeed.

SQL> --end
SQL> 
SQL> --test: RETURN_CURSOR() can only be used in procedure or anonymous block
SQL> --begin
SQL> drop table if exists employees;

Succeed.

SQL> create table employees(employeesno int,ename varchar(10),job varchar(10) ,sal integer);

Succeed.

SQL> 
SQL> commit;

Succeed.

SQL> 
SQL> --expect error
SQL> create or replace function test_outf return sys_refcursor 
  2 is 
  3 cursorv1 sys_refcursor;
  4 begin
  5 open cursorv1 for select ename , sal, sal*2 ep_sal from employees where ename like 'zhangsan%' ;
  6 dbe_sql.return_cursor(cursorv1)
  7 end;
  8 /

Succeed.
Warning:
PL/SQL(SYS.TEST_OUTF) terminated with compiling errors
[7:1] PLC-00954 ';' or ':=' expected but end found
[8:1] PLC-00954 more text expected but EOF found


SQL> --end
SQL> 
SQL> --test:RETURN_CURSOR only support sysrefcursor
SQL> --begin
SQL> --expect error
SQL> CREATE or replace PROCEDURE proc AS
  2   cursor rc1 is SELECT 1 FROM dual;
  3 BEGIN
  4   OPEN rc1;
  5   dbe_sql.return_cursor(rc1);
  6 END;
  7 /

Succeed.
Warning:
PL/SQL(SYS.PROC) terminated with compiling errors
[5:25] PLC-00601 Sql syntax error: unexpected cursor type


SQL> --end
SQL> 
SQL> --test: one sys_refcursor can be return only once.
SQL> create or replace procedure p1(f1 in int) is 
  2    v_refcur2 SYS_REFCURSOR;
  3 begin
  4 open v_refcur2 for   select  sal,f1*sal  from emp where ename like '%zhangsan%' and sal > 9000;
  5 dbe_sql.return_cursor(v_refcur2); 
  6 dbe_sql.return_cursor(v_refcur2); 
  7 dbe_sql.return_cursor(v_refcur2); 
  8 end;
  9 /

Succeed.

SQL> 
SQL> --expect error
SQL> exec p1(2);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[6:1] PL/SQL(SYS.P1) terminated with execute errors
[6:1] PL/SQL(DBE_SQL.RETURN_CURSOR) terminated with execute errors
[6:23] CT-00905, The cursor was invalid.

SQL> 
SQL> --test the max result set size is 300:dts DTS2018081003915
SQL> --begin
SQL> CREATE OR REPLACE PROCEDURE test_proc AS
  2   rc1 sys_refcursor;
  3 BEGIN
  4   OPEN rc1 FOR SELECT 1 FROM dual;
  5   dbe_sql.return_cursor(rc1);
  6 END;
  7 / 

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE test_proc_2 AS
  2   rc1 sys_refcursor;
  3 BEGIN
  4   OPEN rc1 FOR SELECT 2 FROM dual;
  5   dbe_sql.return_cursor(rc1);
  6 END;
  7 / 

Succeed.

SQL> 
SQL> --expect error
SQL> declare
  2 v_refcur2      SYS_REFCURSOR;
  3 begin
  4 open v_refcur2  for   SELECT 1 FROM dual;
  5 dbe_sql.return_cursor(v_refcur2); 
  6 for i in 1..1000
  7 loop
  8 test_proc();
  9 test_proc_2();
 10 end loop;
 11 end;
 12 /

CT-00932, [8:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[4:3] PL/SQL(SYS.TEST_PROC) terminated with execute errors
[4:3] CT-01356, The number of statements exceeds the maximum: 2000

SQL> 
SQL> --expect success
SQL> declare
  2 v_refcur2      SYS_REFCURSOR;
  3 v_refcur3      SYS_REFCURSOR;
  4 begin
  5 open v_refcur2  for   SELECT 1 FROM dual;
  6 open v_refcur3  for   SELECT 2 FROM dual;
  7 dbe_sql.return_cursor(v_refcur2); 
  8 dbe_sql.return_cursor(v_refcur3);
  9 
 10 end;
 11 /

PL/SQL procedure successfully completed.

ResultSet #1

1           
------------
1           

1 rows fetched.


ResultSet #2

2           
------------
2           

1 rows fetched.


SQL> 
SQL> 
SQL> CREATE OR REPLACE PROCEDURE test_proc AS
  2 BEGIN
  3   execute immediate 'declare rc sys_refcursor; begin open rc for select 1 from dual; dbe_sql.return_cursor(rc); end;';
  4 END;
  5 / 

Succeed.

SQL> 
SQL> --expect error
SQL> begin
  2 test_proc();
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[3:3] PL/SQL(SYS.TEST_PROC) terminated with execute errors
[1:65] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:65] PL/SQL(DBE_SQL.RETURN_CURSOR) terminated with execute errors
[1:87] CT-00940, Return_result be allowed in procedure or anonymous block

SQL> --end
SQL> 
SQL> --test max number of put_line:8192
SQL> CREATE OR REPLACE PROCEDURE test_proc_1(a int) AS
  2 BEGIN
  3   dbe_output.print_line(a);
  4 END;
  5 / 

Succeed.

SQL> 
SQL> --expect error
SQL> set serveroutput off

OFF
SQL> begin
  2 dbe_output.print_line(0);
  3 for i in 1..8192
  4 loop
  5 test_proc_1(i);
  6 end loop;
  7 end;
  8 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --expect error
SQL> begin
  2 dbe_output.print_line(0);
  3 for i in 1..8193
  4 loop
  5 execute immediate 'begin dbe_output.print_line(0);end;';
  6 end loop;
  7 end;
  8 /

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> CREATE OR REPLACE PROCEDURE test_proc_1(a int) AS
  2 BEGIN
  3   dbe_output.print_line(a);
  4   execute immediate 'begin dbe_output.print_line(0);end;';
  5 END;
  6 / 

Succeed.

SQL> 
SQL> --expect error
SQL> begin
  2 for i in 1..4097
  3 loop
  4 	test_proc_1(i);
  5 end loop;
  6 end;
  7 /

PL/SQL procedure successfully completed.

SQL> 
SQL> --expect success
SQL> begin
  2 for i in 1..4096
  3 loop
  4 	test_proc_1(i);
  5 end loop;
  6 end;
  7 /

PL/SQL procedure successfully completed.

SQL> 
SQL> set serveroutput on;

ON
SQL> --end
SQL> --test the counter of stmt has been reset
SQL> --expect success
SQL> begin
  2 dbe_output.print_line(0);
  3 for i in 1..1
  4 loop
  5 test_proc_1(i);
  6 end loop;
  7 end;
  8 /

0
1
0

PL/SQL procedure successfully completed.

SQL> --end
SQL> 
SQL> --test dbe_random.get_values
SQL> --begin
SQL> select dbe_random.get_value(0) from dual;

CT-00615, [1:8]Invalid argument number for GET_VALUE, min=2, max=2
SQL> select dbe_random.get_value(0, 'a') from dual;

CT-00614, [1:29]Parameter error: the second argument of random get_value is incorrect
SQL> select dbe_random.get_value(0, 1, 1) from dual;

CT-00615, [1:8]Invalid argument number for GET_VALUE, min=2, max=2
SQL> 
SQL> select 1 from dual where (select dbe_random.get_value from dual) between 0 and 1;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where (select dbe_random.get_value from dual) < 1;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where (select dbe_random.get_value() from dual) between 0 and 1;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where (select dbe_random.get_value() from dual) < 1;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where (select dbe_random.get_value(1, 10.5) from dual) between 1 and 10.5;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where (select dbe_random.get_value(1, 10.5) from dual) < 10.5;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where (select dbe_random.get_value(1, -10.5) from dual) between -10.5 and 1;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where (select dbe_random.get_value(1, -10.5) from dual) > -10.5;

1           
------------
1           

1 rows fetched.

SQL> 
SQL> --DTS2018082211480
SQL> select dbe_random.get_value(null,null);

CT-00614, [1:29]Parameter error: the first argument of random get_value is incorrect
SQL> select dbe_random.get_value(2,null);

CT-00614, [1:29]Parameter error: the second argument of random get_value is incorrect
SQL> select dbe_random.get_value(null, 2);

CT-00614, [1:29]Parameter error: the first argument of random get_value is incorrect
SQL> --end
SQL> 
SQL> --DBE_LOB.SUBSTR
SQL> select TO_CHAR(rawtohex(DBE_LOB.SUBSTR())) from dual;

CT-00615, [1:25]Invalid argument number for SUBSTR, min=1, max=3
SQL> select TO_CHAR(rawtohex(DBE_LOB.SUBSTR('CERTPIC'))) from dual;

TO_CHAR(RAWTOHEX(DBE_LOB.SUBSTR('CERTPIC')))
--------------------------------------------
43455254504943                              

1 rows fetched.

SQL> select TO_CHAR(rawtohex(DBE_LOB.SUBSTR('CERTPIC',4))) from dual;

TO_CHAR(RAWTOHEX(DBE_LOB.SUBSTR('CERTPIC',4)))
----------------------------------------------
43455254                                      

1 rows fetched.

SQL> select TO_CHAR(rawtohex(DBE_LOB.SUBSTR('CERTPIC',4,1))) from dual;

TO_CHAR(RAWTOHEX(DBE_LOB.SUBSTR('CERTPIC',4,1)))
------------------------------------------------
43455254                                        

1 rows fetched.

SQL> 
SQL> --test return result and close the cursor
SQL> --begin
SQL> CREATE OR REPLACE PROCEDURE proc_1(a int) AS
  2   rc1 sys_refcursor;
  3   rc2 sys_refcursor;
  4 BEGIN
  5   OPEN rc1 FOR SELECT 1 FROM dual where a > 1;
  6   dbe_sql.return_cursor(rc1);
  7   close rc1;
  8   OPEN rc2 FOR SELECT 2 FROM dual where a > 1;
  9   dbe_sql.return_cursor(rc2);
 10 END;
 11 / 

Succeed.

SQL> 
SQL> --expect error
SQL> exec proc_1(2);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[7:3] PL/SQL(SYS.PROC_1) terminated with execute errors
[7:3] CT-00905, The cursor was invalid.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE proc_2(a int) AS
  2   rc1 sys_refcursor;
  3   rc2 sys_refcursor;
  4 BEGIN
  5   OPEN rc1 FOR SELECT 1 FROM dual where a > 1;
  6   dbe_sql.return_cursor(rc1);
  7   OPEN rc2 FOR SELECT 2 FROM dual where a > 1;
  8   dbe_sql.return_cursor(rc2);
  9   close rc2;
 10 END;
 11 / 

Succeed.

SQL> 
SQL> --expect error
SQL> exec proc_2(2);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[9:3] PL/SQL(SYS.PROC_2) terminated with execute errors
[9:3] CT-00905, The cursor was invalid.

SQL> 
SQL> create or replace procedure p1(v_nePhyID   IN NUMBER) as
  2    SWC_Current SYS_REFCURSOR;
  3    SWC_Current2 SYS_REFCURSOR;
  4    v_p  NUMBER(19,0);
  5    SWP_Ret_Value number;
  6 BEGIN
  7    open SWC_Current for SELECT 1 from dual where v_nePhyID > 1;
  8    dbe_sql.return_cursor(SWC_Current);   
  9    CLOSE SWC_Current;
 10 END;
 11 /

Succeed.

SQL> 
SQL> --expect error
SQL> exec p1(2);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[9:4] PL/SQL(SYS.P1) terminated with execute errors
[9:4] CT-00905, The cursor was invalid.

SQL> --end
SQL> 
SQL> drop user if exists GS_PL_DBE cascade;

Succeed.

SQL> create user GS_PL_DBE identified by root_1234;

Succeed.

SQL> grant dba to GS_PL_DBE;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_TABLES TO GS_PL_DBE;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_COLUMNS TO GS_PL_DBE;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_HISTGRAM_ABSTR TO GS_PL_DBE;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_DML_STATS TO GS_PL_DBE;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_INDEXES TO GS_PL_DBE;

Succeed.

SQL> conn GS_PL_DBE/root_1234@127.0.0.1:1611

connected.

SQL> 
SQL> drop table if exists tbl_stat;

Succeed.

SQL> 
SQL> create table tbl_stat
  2 (
  3 f1 int,
  4 f2 varchar2(16)
  5 );

Succeed.

SQL> 
SQL> create index idx_tbl_stat_f1 on tbl_stat(f1);

Succeed.

SQL> 
SQL> insert into tbl_stat values(1, 'mike');

1 rows affected.

SQL> insert into tbl_stat values(1, 'bob');

1 rows affected.

SQL> insert into tbl_stat values(1, 'backham');

1 rows affected.

SQL> insert into tbl_stat values(1, 'own');

1 rows affected.

SQL> insert into tbl_stat values(2, 'bc');

1 rows affected.

SQL> insert into tbl_stat values(3, 'abc');

1 rows affected.

SQL> insert into tbl_stat values(3, 'zk');

1 rows affected.

SQL> insert into tbl_stat values(3, 'aq');

1 rows affected.

SQL> insert into tbl_stat values(4, 'bob');

1 rows affected.

SQL> insert into tbl_stat values(4, 'aq');

1 rows affected.

SQL> insert into tbl_stat values(4, 'zk');

1 rows affected.

SQL> insert into tbl_stat values(4, 'mike');

1 rows affected.

SQL> insert into tbl_stat values(4, 'pike');

1 rows affected.

SQL> insert into tbl_stat values(4, 'mike');

1 rows affected.

SQL> insert into tbl_stat values(4, 'mike');

1 rows affected.

SQL> insert into tbl_stat values(11, 'mike');

1 rows affected.

SQL> insert into tbl_stat values(11, 'bob');

1 rows affected.

SQL> insert into tbl_stat values(11, 'backham');

1 rows affected.

SQL> insert into tbl_stat values(11, 'own');

1 rows affected.

SQL> insert into tbl_stat values(12, 'bc');

1 rows affected.

SQL> insert into tbl_stat values(13, 'abc');

1 rows affected.

SQL> insert into tbl_stat values(13, 'zk');

1 rows affected.

SQL> insert into tbl_stat values(13, 'aq');

1 rows affected.

SQL> insert into tbl_stat values(14, 'bob');

1 rows affected.

SQL> insert into tbl_stat values(14, 'aq');

1 rows affected.

SQL> insert into tbl_stat values(14, 'zk');

1 rows affected.

SQL> insert into tbl_stat values(14, 'mike');

1 rows affected.

SQL> insert into tbl_stat values(14, 'pike');

1 rows affected.

SQL> 
SQL> 
SQL> SELECT A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A , DV_ME M WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID;

NUM_ROWS     AVG_ROW_LEN         
------------ --------------------
                                 

1 rows fetched.

SQL> SELECT C.NUM_DISTINCT, C.LOW_VALUE,C.HIGH_VALUE,C.HISTOGRAM FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_COLUMNS C WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID AND C.USER#=M.USER_ID AND C.TABLE#=A.ID ORDER BY C.ID;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
                                                                                                                                                                                                               
                                                                                                                                                                                                               

2 rows fetched.

SQL> SELECT H.ROW_NUM, H.NULL_NUM,H.MINVALUE, H.MAXVALUE,H.DIST_NUM,H.DENSITY FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_HISTGRAM_ABSTR H
  2  WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID AND H.USER#=M.USER_ID AND H.TAB#=A.ID
  3  ORDER BY H.USER#, H.TAB#, H.COL#;

ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------

0 rows fetched.

SQL> select H.* from sys.SYS_TABLES A , DV_ME M, sys.SYS_DML_STATS h
  2  where A.name='TBL_STAT' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id;

USER#        TABLE#       INSERTS      UPDATES      DELETES      MODIFY_TIME                      FLAGS        DROP_SEGMENTS PARTED       PART#       
------------ ------------ ------------ ------------ ------------ -------------------------------- ------------ ------------- ------------ ------------

0 rows fetched.

SQL> 
SQL> insert into tbl_stat values(14, 'mike');

1 rows affected.

SQL> call DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','tbl_stat'); 

PL/SQL procedure successfully completed.

SQL> SELECT A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A , V$ME M WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID;

NUM_ROWS     AVG_ROW_LEN         
------------ --------------------
29           18                  

1 rows fetched.

SQL> 
SQL> insert into tbl_stat values(14, 'mike');

1 rows affected.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','tbl_stat');

PL/SQL procedure successfully completed.

SQL> SELECT A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A , V$ME M WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID;

NUM_ROWS     AVG_ROW_LEN         
------------ --------------------
30           18                  

1 rows fetched.

SQL> 
SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_pl_DBE','tbl_stat');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_pl_DBE','TBL_STAT');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_pl_DBE1','TBL_STAT1');

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
CT-00843, The table or view GS_PL_DBE1.TBL_STAT1 does not exist.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_pl_DBE1');

CT-00944, PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for COLLECT_TABLE_STATS, min=2, max=6

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_pl_DBE','TBL_STAT',3);

CT-00944, PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with compiling errors
[1:55] PLC-00614 Parameter error: part_name should be string

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(,'TBL_STAT',3);

CT-00944, PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with compiling errors
[1:32] PLC-00601 Sql syntax error: invalid expression

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(NULL,'TBL_STAT',3);

CT-00944, PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with compiling errors
[1:48] PLC-00614 Parameter error: part_name should be string

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(NULL,'TBL_STAT');

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: schema

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(NULL,NULL,3);

CT-00944, PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with compiling errors
[1:42] PLC-00614 Parameter error: part_name should be string

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(NULL,NULL,NULL);

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: schema

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(NULL);

CT-00944, PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for COLLECT_TABLE_STATS, min=2, max=6

SQL> exec DBE_STATS.COLLECT_TABLE_STATS (schema=>'GS_PL_DBE', name=>'tbl_stat');

PL/SQL procedure successfully completed.

SQL> 
SQL> SELECT A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A , DV_ME M WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID;

NUM_ROWS     AVG_ROW_LEN         
------------ --------------------
30           18                  

1 rows fetched.

SQL> SELECT C.NUM_DISTINCT, C.LOW_VALUE,C.HIGH_VALUE,C.HISTOGRAM FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_COLUMNS C WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID AND C.USER#=M.USER_ID AND C.TABLE#=A.ID ORDER BY C.ID;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
8            1                                                                14                                                               FREQUENCY                                                       
9            abc                                                              zk                                                               FREQUENCY                                                       

2 rows fetched.

SQL> SELECT H.ROW_NUM, H.NULL_NUM,H.MINVALUE, H.MAXVALUE,H.DIST_NUM,H.DENSITY FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_HISTGRAM_ABSTR H
  2  WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID AND H.USER#=M.USER_ID AND H.TAB#=A.ID
  3  ORDER BY H.USER#, H.TAB#, H.COL#;

ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
30           0            1                                                                14                                                               8            0.125               
30           0            abc                                                              zk                                                               9            0.111111111111111   

2 rows fetched.

SQL> select H.DISTINCT_KEYS from sys.SYS_TABLES A , DV_ME M, sys.SYS_INDEXES h
  2  where A.name='TBL_STAT' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id;

DISTINCT_KEYS
-------------
8            

1 rows fetched.

SQL> select H.* from sys.SYS_TABLES A , DV_ME M, sys.SYS_DML_STATS h
  2  where A.name='TBL_STAT' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id;

USER#        TABLE#       INSERTS      UPDATES      DELETES      MODIFY_TIME                      FLAGS        DROP_SEGMENTS PARTED       PART#       
------------ ------------ ------------ ------------ ------------ -------------------------------- ------------ ------------- ------------ ------------

0 rows fetched.

SQL> 
SQL> select SAMPLE_SIZE, decode(LAST_ANALYZED, null,0,1) from all_tables where table_NAME='TBL_STAT';

SAMPLE_SIZE  DECODE(LAST_ANALYZED, NULL,0,1)
------------ -------------------------------
30           1                              

1 rows fetched.

SQL> select SAMPLE_SIZE, decode(LAST_ANALYZED, null,0,1) from dba_tables where table_NAME='TBL_STAT';

SAMPLE_SIZE  DECODE(LAST_ANALYZED, NULL,0,1)
------------ -------------------------------
30           1                              

1 rows fetched.

SQL> select SAMPLE_SIZE, decode(LAST_ANALYZED, null,0,1) from user_tables where table_NAME='TBL_STAT';

SAMPLE_SIZE  DECODE(LAST_ANALYZED, NULL,0,1)
------------ -------------------------------
30           1                              

1 rows fetched.

SQL> 
SQL> 
SQL> drop table if exists tbl_stat1;

Succeed.

SQL> create table tbl_stat1
  2 (
  3 f1 int,
  4 f2 varchar2(16)
  5 );

Succeed.

SQL> 
SQL> create index idx_tbl_stat1_f1 on tbl_stat1(f1);

Succeed.

SQL> 
SQL> insert into tbl_stat1 values(31, 'mike');

1 rows affected.

SQL> insert into tbl_stat1 values(31, 'bobs');

1 rows affected.

SQL> insert into tbl_stat1 values(41, 'backhams');

1 rows affected.

SQL> insert into tbl_stat1 values(41, 'ownd');

1 rows affected.

SQL> insert into tbl_stat1 values(52, 'bcd');

1 rows affected.

SQL> insert into tbl_stat1 values(63, 'abcz');

1 rows affected.

SQL> insert into tbl_stat1 values(33, 'zk2');

1 rows affected.

SQL> insert into tbl_stat1 values(3, 'aq');

1 rows affected.

SQL> insert into tbl_stat1 values(24, 'bob');

1 rows affected.

SQL> insert into tbl_stat1 values(44, 'aq');

1 rows affected.

SQL> insert into tbl_stat1 values(34, 'zks');

1 rows affected.

SQL> insert into tbl_stat1 values(4, 'mike');

1 rows affected.

SQL> insert into tbl_stat1 values(4, 'pike');

1 rows affected.

SQL> commit; 

Succeed.

SQL> 
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 0.000001);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100, true);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100, false);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100, null);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('gs_pl_DBE');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('');

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:33] CT-00614, Parameter error: schema

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS();

CT-00944, PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for COLLECT_SCHEMA_STATS, min=1, max=4

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS(NULL);

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:33] CT-00614, Parameter error: schema

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS(null);

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:33] CT-00614, Parameter error: schema

SQL> 
SQL> --expect error
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 0.0000001);

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:33] CT-00614, Parameter error: the valid range of sample_ratio is [0.000001,100]

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100.001);

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:33] CT-00614, Parameter error: the valid range of sample_ratio is [0.000001,100]

SQL> 
SQL> SELECT A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A , DV_ME M WHERE A.NAME LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID ORDER BY A.NAME;

NUM_ROWS     AVG_ROW_LEN         
------------ --------------------
30           18                  
13           19                  

2 rows fetched.

SQL> SELECT C.NUM_DISTINCT, C.LOW_VALUE,C.HIGH_VALUE,C.HISTOGRAM FROM  DV_ME M, SYS.SYS_COLUMNS C,SYS.SYS_TABLES A  
  2 WHERE A.NAME LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID AND C.USER#=M.USER_ID AND C.TABLE#=A.ID ORDER BY A.NAME;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
8            1                                                                14                                                               FREQUENCY                                                       
9            abc                                                              zk                                                               FREQUENCY                                                       
10           3                                                                63                                                               FREQUENCY                                                       
11           abcz                                                             zks                                                              FREQUENCY                                                       

4 rows fetched.

SQL> SELECT H.ROW_NUM, H.NULL_NUM,H.MINVALUE, H.MAXVALUE,H.DIST_NUM,H.DENSITY FROM DV_ME M, SYS.SYS_HISTGRAM_ABSTR H,SYS.SYS_TABLES A 
  2  WHERE A.NAME LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID AND H.USER#=M.USER_ID AND H.TAB#=A.ID
  3  ORDER BY H.USER#, A.NAME, H.COL#;

ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
30           0            1                                                                14                                                               8            0.125               
30           0            abc                                                              zk                                                               9            0.111111111111111   
13           0            3                                                                63                                                               10           0.1                 
13           0            abcz                                                             zks                                                              11           0.0909090909090909  

4 rows fetched.

SQL> SELECT H.DISTINCT_KEYS FROM DV_ME M, SYS.SYS_INDEXES H,SYS.SYS_TABLES A 
  2  WHERE A.NAME LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID AND H.USER#=M.USER_ID AND H.TABLE#=A.ID;

DISTINCT_KEYS
-------------
8            
10           

2 rows fetched.

SQL> SELECT H.* FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_DML_STATS H
  2  WHERE A.NAME LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID AND H.USER#=M.USER_ID AND H.TABLE#=A.ID;

USER#        TABLE#       INSERTS      UPDATES      DELETES      MODIFY_TIME                      FLAGS        DROP_SEGMENTS PARTED       PART#       
------------ ------------ ------------ ------------ ------------ -------------------------------- ------------ ------------- ------------ ------------

0 rows fetched.

SQL> 
SQL> select DBE_STATS.FLUSH_DB_STATS_INFO() from dual;

DBE_STATS.FLUSH_DB_STATS_INFO()                                 
----------------------------------------------------------------
                                                                

1 rows fetched.

SQL> 
SQL> --test temp table will be gather
SQL> CREATE GLOBAL TEMPORARY TABLE DBE_PL_T1(
  2 f1 int,
  3 f2 varchar2(16)
  4 );

Succeed.

SQL> insert into DBE_PL_T1 values(24, 'bob');

1 rows affected.

SQL> insert into DBE_PL_T1 values(44, 'aq');

1 rows affected.

SQL> insert into DBE_PL_T1 values(34, 'zks');

1 rows affected.

SQL> insert into DBE_PL_T1 values(4, 'mike');

1 rows affected.

SQL> insert into DBE_PL_T1 values(4, 'pike');

1 rows affected.

SQL> commit; 

Succeed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE');

PL/SQL procedure successfully completed.

SQL> SELECT A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A where a.name ='DBE_PL_T1';

NUM_ROWS     AVG_ROW_LEN         
------------ --------------------
                                 

1 rows fetched.

SQL> 
SQL> drop table if exists TBL_STAT;

Succeed.

SQL> drop table if exists TBL_STAT1;

Succeed.

SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> 
SQL> --test COLLECT_SCHEMA_STATS
SQL> --begin
SQL> drop user if exists wms cascade;

Succeed.

SQL> create user wms identified by Cantian_234;

Succeed.

SQL> grant create session,create table to wms;

Succeed.

SQL> grant dba to wms;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_TABLES TO WMS;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_COLUMNS TO WMS;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_HISTGRAM_ABSTR TO WMS;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_DML_STATS TO WMS;

Succeed.

SQL> GRANT SELECT ON SYS.SYS_INDEXES TO WMS;

Succeed.

SQL> conn wms/Cantian_234@127.0.0.1:1611

connected.

SQL> 
SQL> CREATE TABLE DBE_T1(A INT);

Succeed.

SQL> INSERT INTO DBE_T1 VALUES(2);

1 rows affected.

SQL> select table_name,num_rows,AVG_ROW_LEN ,EMPTY_BLOCKS from all_tables where table_name='DBE_T1';

TABLE_NAME                                                       NUM_ROWS     AVG_ROW_LEN          EMPTY_BLOCKS
---------------------------------------------------------------- ------------ -------------------- ------------
DBE_T1                                                                                                         

1 rows fetched.

SQL> select table_name,num_rows,AVG_ROW_LEN ,EMPTY_BLOCKS from all_tables where table_name='DBE_T1';

TABLE_NAME                                                       NUM_ROWS     AVG_ROW_LEN          EMPTY_BLOCKS
---------------------------------------------------------------- ------------ -------------------- ------------
DBE_T1                                                                                                         

1 rows fetched.

SQL> 
SQL> CREATE TABLE DBE_T2(A INT);

Succeed.

SQL> INSERT INTO DBE_T2 VALUES(2);

1 rows affected.

SQL> select table_name,num_rows,AVG_ROW_LEN ,EMPTY_BLOCKS from all_tables where table_name='DBE_T2';

TABLE_NAME                                                       NUM_ROWS     AVG_ROW_LEN          EMPTY_BLOCKS
---------------------------------------------------------------- ------------ -------------------- ------------
DBE_T2                                                                                                         

1 rows fetched.

SQL> call DBE_STATS.COLLECT_TABLE_STATS('wms','DBE_T2');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows,AVG_ROW_LEN ,EMPTY_BLOCKS from all_tables where table_name='DBE_T2';

TABLE_NAME                                                       NUM_ROWS     AVG_ROW_LEN          EMPTY_BLOCKS
---------------------------------------------------------------- ------------ -------------------- ------------
DBE_T2                                                           1            16                   0           

1 rows fetched.

SQL> DROP TABLE IF EXISTS DBE_T2;

Succeed.

SQL> 
SQL> --test purge_stats
SQL> --begin
SQL> 
SQL> --test syntax
SQL> EXEC DBE_STATS.PURGE_STATS();

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for PURGE_STATS, min=1, max=1

SQL> EXEC DBE_STATS.PURGE_STATS(null);

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.PURGE_STATS) terminated with execute errors
[1:24] CT-00614, Parameter error: before

SQL> EXEC DBE_STATS.PURGE_STATS(sysdate, null);

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for PURGE_STATS, min=1, max=1

SQL> EXEC DBE_STATS.PURGE_STATS('2017-01-01');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.PURGE_STATS) terminated with execute errors
[1:24] CT-00614, Parameter error: before

SQL> EXEC DBE_STATS.PURGE_STATS(to_date('2004-05-07','yyyy-mm-dd'));

PL/SQL procedure successfully completed.

SQL> EXEC DBE_STATS.PURGE_STATS(to_date('2004-05-07 13:23:44','yyyy-mm-dd hh24:mi:ss'));

PL/SQL procedure successfully completed.

SQL> EXEC DBE_STATS.PURGE_STATS(sysdate + 1);

PL/SQL procedure successfully completed.

SQL> 
SQL> DROP TABLE IF EXISTS TBL_STAT;

Succeed.

SQL> CREATE TABLE TBL_STAT
  2 (
  3 F1 INT,
  4 F2 VARCHAR2(16)
  5 );

Succeed.

SQL> 
SQL> CREATE INDEX IDX_TBL_STAT_F1 ON TBL_STAT(F1);

Succeed.

SQL> 
SQL> INSERT INTO TBL_STAT VALUES(31, 'MIKE');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(31, 'BOBS');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(41, 'BACKHAMS');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(41, 'OWND');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(52, 'BCD');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(63, 'ABCZ');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(33, 'ZK2');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(3, 'AQ');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(24, 'BOB');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(44, 'AQ');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(34, 'ZKS');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(4, 'MIKE');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(4, 'PIKE');

1 rows affected.

SQL> COMMIT; 

Succeed.

SQL> 
SQL> DROP TABLE IF EXISTS TBL_STAT1;

Succeed.

SQL> CREATE TABLE TBL_STAT1
  2 (
  3 F1 INT,
  4 F2 VARCHAR2(16)
  5 );

Succeed.

SQL> 
SQL> CREATE INDEX IDX_TBL_STAT1_F1 ON TBL_STAT1(F1);

Succeed.

SQL> 
SQL> INSERT INTO TBL_STAT1 VALUES(123331, 'MIDAFDAKE');

1 rows affected.

SQL> INSERT INTO TBL_STAT1 VALUES(123331, 'BODAFBS');

1 rows affected.

SQL> INSERT INTO TBL_STAT1 VALUES(123341, 'OWDAFDND');

1 rows affected.

SQL> INSERT INTO TBL_STAT1 VALUES(123333, 'ZDAFK2');

1 rows affected.

SQL> INSERT INTO TBL_STAT1 VALUES(12333, 'ADAFQ');

1 rows affected.

SQL> INSERT INTO TBL_STAT1 VALUES(123324, 'BDAFOB');

1 rows affected.

SQL> INSERT INTO TBL_STAT1 VALUES(123334, 'FDAZKS');

1 rows affected.

SQL> INSERT INTO TBL_STAT1 VALUES(12334, 'MIFDAKE');

1 rows affected.

SQL> COMMIT; 

Succeed.

SQL> 
SQL> SELECT NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE FROM SYS.SYS_TABLES WHERE NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY NAME;

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
                                                                        
                                                                        

2 rows fetched.

SQL> SELECT NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM FROM SYS.SYS_COLUMNS A, SYS.SYS_TABLES B WHERE A.TABLE#=B.ID AND A.USER#=B.USER# AND
  2  B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.ID;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
                                                                                                                                                                                                               
                                                                                                                                                                                                               
                                                                                                                                                                                                               
                                                                                                                                                                                                               

4 rows fetched.

SQL> SELECT BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,
  2         AVG_DATA_BLOCKS_PER_KEY,EMPTY_LEAF_BLOCKS,CLUFAC 
  3 		FROM SYS.SYS_INDEXES A, SYS.SYS_TABLES B WHERE A.TABLE#=B.ID AND A.USER#=B.USER# AND B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.ID;

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY EMPTY_LEAF_BLOCKS CLUFAC      
------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
                                                                                                                      
                                                                                                                      

2 rows fetched.

SQL> SELECT BUCKET_NUM,ROW_NUM,NULL_NUM, MINVALUE,MAXVALUE,DIST_NUM,DENSITY  FROM SYS.SYS_HISTGRAM_ABSTR A, SYS.SYS_TABLES B WHERE A.TAB#=B.ID AND A.USER#=B.USER# AND B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.COL#;

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------

0 rows fetched.

SQL> 
SQL> EXEC DBE_STATS.COLLECT_SCHEMA_STATS('WMS');

PL/SQL procedure successfully completed.

SQL> 
SQL> SELECT NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE FROM SYS.SYS_TABLES WHERE NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY NAME;

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
13           1            0            19                   13          
8            1            0            22                   8           

2 rows fetched.

SQL> SELECT NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM FROM SYS.SYS_COLUMNS A, SYS.SYS_TABLES B WHERE A.TABLE#=B.ID AND A.USER#=B.USER# AND
  2  B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.ID;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
10           3                                                                63                                                               FREQUENCY                                                       
11           ABCZ                                                             ZKS                                                              FREQUENCY                                                       
7            12333                                                            123341                                                           FREQUENCY                                                       
8            ADAFQ                                                            ZDAFK2                                                           FREQUENCY                                                       

4 rows fetched.

SQL> SELECT BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,
  2         AVG_DATA_BLOCKS_PER_KEY,EMPTY_LEAF_BLOCKS,CLUFAC
  3 		FROM SYS.SYS_INDEXES A, SYS.SYS_TABLES B WHERE A.TABLE#=B.ID AND A.USER#=B.USER# AND B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.ID;

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY EMPTY_LEAF_BLOCKS CLUFAC      
------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
1            1            10            0.1                     0.8                     0                 1           
1            1            7             0.142857142857143       1.14285714285714        0                 1           

2 rows fetched.

SQL> SELECT BUCKET_NUM,ROW_NUM,NULL_NUM, MINVALUE,MAXVALUE,DIST_NUM,DENSITY  FROM SYS.SYS_HISTGRAM_ABSTR A, SYS.SYS_TABLES B WHERE A.TAB#=B.ID AND A.USER#=B.USER# AND B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.COL#;

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
10           13           0            3                                                                63                                                               10           0.1                 
11           13           0            ABCZ                                                             ZKS                                                              11           0.0909090909090909  
7            8            0            12333                                                            123341                                                           7            0.142857142857143   
8            8            0            ADAFQ                                                            ZDAFK2                                                           8            0.125               

4 rows fetched.

SQL> 
SQL> EXEC DBE_STATS.PURGE_STATS(SYSTIMESTAMP);

PL/SQL procedure successfully completed.

SQL> 
SQL> SELECT NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE FROM SYS.SYS_TABLES WHERE NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY NAME;

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
                                                                        
                                                                        

2 rows fetched.

SQL> SELECT NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM FROM SYS.SYS_COLUMNS A, SYS.SYS_TABLES B WHERE A.TABLE#=B.ID AND A.USER#=B.USER# AND
  2  B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.ID;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
                                                                                                                                                                                                               
                                                                                                                                                                                                               
                                                                                                                                                                                                               
                                                                                                                                                                                                               

4 rows fetched.

SQL> SELECT BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,
  2         AVG_DATA_BLOCKS_PER_KEY,EMPTY_LEAF_BLOCKS,CLUFAC
  3 		FROM SYS.SYS_INDEXES A, SYS.SYS_TABLES B WHERE A.TABLE#=B.ID AND A.USER#=B.USER# AND B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.ID;

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY EMPTY_LEAF_BLOCKS CLUFAC      
------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
                                                                                                                      
                                                                                                                      

2 rows fetched.

SQL> SELECT BUCKET_NUM,ROW_NUM,NULL_NUM, MINVALUE,MAXVALUE,DIST_NUM,DENSITY  FROM SYS.SYS_HISTGRAM_ABSTR A, SYS.SYS_TABLES B WHERE A.TAB#=B.ID AND A.USER#=B.USER# AND B.NAME IN ('TBL_STAT','TBL_STAT1') ORDER BY B.NAME, A.COL#;

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------

0 rows fetched.

SQL> 
SQL> --END
SQL> 
SQL> --TEST DBE_UTIL.COMPILE_SCHEMA
SQL> --begin
SQL> --create user wms identified by Cantian_234;
SQL> --grant create session,create table to wms;
SQL> --grant dba to wms;
SQL> --conn wms/Cantian_234@127.0.0.1:1611
SQL> DROP TABLE IF EXISTS DBE_T1;

Succeed.

SQL> DROP TABLE IF EXISTS DBE_T2;

Succeed.

SQL> DROP VIEW IF EXISTS DBE_V1;

Succeed.

SQL> DROP VIEW IF EXISTS DBE_V2;

Succeed.

SQL> DROP VIEW IF EXISTS DBE_V3;

Succeed.

SQL> DROP VIEW IF EXISTS DBE_V4;

Succeed.

SQL> DROP VIEW IF EXISTS DBE_T1;

Succeed.

SQL> DROP SYNONYM IF EXISTS DBE_S1;

Succeed.

SQL> DROP SYNONYM IF EXISTS DBE_S2;

Succeed.

SQL> DROP PROCEDURE IF EXISTS DBE_P1;

Succeed.

SQL> DROP PROCEDURE IF EXISTS DBE_P2;

Succeed.

SQL> CREATE TABLE DBE_T1 (A INT);

Succeed.

SQL> CREATE TABLE DBE_T2 (A INT);

Succeed.

SQL> CREATE VIEW DBE_V1 AS SELECT * FROM DBE_T1;

Succeed.

SQL> CREATE VIEW DBE_V2 AS SELECT * FROM DBE_V1;

Succeed.

SQL> CREATE OR REPLACE SYNONYM DBE_S1 FOR DBE_T1;

Succeed.

SQL> CREATE OR REPLACE SYNONYM DBE_S2 FOR DBE_V1;

Succeed.

SQL> CREATE VIEW DBE_V3 AS SELECT * FROM DBE_S2;

Succeed.

SQL> CREATE VIEW DBE_V4 AS SELECT * FROM DBE_V2;

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE DBE_P1(A INT)
  2 AS
  3 C INT := 1;
  4 D VARCHAR2(20) := '2';
  5 BEGIN
  6 	SELECT count(*) INTO C FROM DBE_S2;
  7 END;
  8 /

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE DBE_P2
  2 AS
  3 C INT := 1;
  4 D INT := 2;
  5 BEGIN
  6   DBE_P1(c);
  7   SELECT COUNT(*) INTO D FROM DBE_T1;
  8 END;
  9 /

Succeed.

SQL> 
SQL> select OBJECT_NAME,OBJECT_TYPE, STATUS from user_objects where OBJECT_NAME LIKE 'DBE%' ORDER BY OBJECT_NAME;

OBJECT_NAME                                                      OBJECT_TYPE     STATUS 
---------------------------------------------------------------- --------------- -------
DBE_P1                                                           PROCEDURE       VALID  
DBE_P2                                                           PROCEDURE       VALID  
DBE_S1                                                           SYNONYM         VALID  
DBE_S2                                                           SYNONYM         VALID  
DBE_T1                                                           TABLE           VALID  
DBE_T2                                                           TABLE           VALID  
DBE_V1                                                           VIEW            VALID  
DBE_V2                                                           VIEW            VALID  
DBE_V3                                                           VIEW            VALID  
DBE_V4                                                           VIEW            VALID  

10 rows fetched.

SQL> 
SQL> 
SQL> DROP TABLE DBE_T1;

Succeed.

SQL> select OBJECT_NAME,OBJECT_TYPE, STATUS from user_objects where OBJECT_NAME LIKE 'DBE%' ORDER BY OBJECT_NAME;

OBJECT_NAME                                                      OBJECT_TYPE     STATUS 
---------------------------------------------------------------- --------------- -------
DBE_P1                                                           PROCEDURE       UNKNOWN
DBE_P2                                                           PROCEDURE       UNKNOWN
DBE_S1                                                           SYNONYM         UNKNOWN
DBE_S2                                                           SYNONYM         UNKNOWN
DBE_T2                                                           TABLE           VALID  
DBE_V1                                                           VIEW            UNKNOWN
DBE_V2                                                           VIEW            UNKNOWN
DBE_V3                                                           VIEW            UNKNOWN
DBE_V4                                                           VIEW            UNKNOWN

9 rows fetched.

SQL> 
SQL> CREATE VIEW DBE_T1 AS SELECT * FROM DBE_T2;

Succeed.

SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> EXEC DBE_UTIL.COMPILE_SCHEMA('WMS', FALSE);

PL/SQL procedure successfully completed.

SQL> conn wms/Cantian_234@127.0.0.1:1611

connected.

SQL> select OBJECT_NAME,OBJECT_TYPE, STATUS from user_objects where OBJECT_NAME LIKE 'DBE%' ORDER BY OBJECT_NAME;

OBJECT_NAME                                                      OBJECT_TYPE     STATUS 
---------------------------------------------------------------- --------------- -------
DBE_P1                                                           PROCEDURE       VALID  
DBE_P2                                                           PROCEDURE       VALID  
DBE_S1                                                           SYNONYM         VALID  
DBE_S2                                                           SYNONYM         VALID  
DBE_T1                                                           VIEW            VALID  
DBE_T2                                                           TABLE           VALID  
DBE_V1                                                           VIEW            VALID  
DBE_V2                                                           VIEW            VALID  
DBE_V3                                                           VIEW            VALID  
DBE_V4                                                           VIEW            VALID  

10 rows fetched.

SQL> select * from user_dependencies where NAME LIKE 'DBE%' ORDER BY name, referenced_name;

OWNER                                                            NAME                                                             TYPE         REFERENCED_OWNER                                                 REFERENCED_NAME                                                  REFERENCED_TYPE
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------
WMS                                                              DBE_P1                                                           PROCEDURE    WMS                                                              DBE_S2                                                           SYNONYM        
WMS                                                              DBE_P2                                                           PROCEDURE    WMS                                                              DBE_P1                                                           PROCEDURE      
WMS                                                              DBE_P2                                                           PROCEDURE    WMS                                                              DBE_T1                                                           VIEW           
WMS                                                              DBE_S1                                                           SYNONYM      WMS                                                              DBE_T1                                                           VIEW           
WMS                                                              DBE_S2                                                           SYNONYM      WMS                                                              DBE_V1                                                           VIEW           
WMS                                                              DBE_T1                                                           VIEW         WMS                                                              DBE_T2                                                           TABLE          
WMS                                                              DBE_V1                                                           VIEW         WMS                                                              DBE_T1                                                           VIEW           
WMS                                                              DBE_V2                                                           VIEW         WMS                                                              DBE_V1                                                           VIEW           
WMS                                                              DBE_V3                                                           VIEW         WMS                                                              DBE_S2                                                           SYNONYM        
WMS                                                              DBE_V4                                                           VIEW         WMS                                                              DBE_V2                                                           VIEW           

10 rows fetched.

SQL> 
SQL> DROP VIEW DBE_T1;

Succeed.

SQL> select OBJECT_NAME,OBJECT_TYPE, STATUS from user_objects where OBJECT_NAME LIKE 'DBE%' ORDER BY OBJECT_NAME;

OBJECT_NAME                                                      OBJECT_TYPE     STATUS 
---------------------------------------------------------------- --------------- -------
DBE_P1                                                           PROCEDURE       UNKNOWN
DBE_P2                                                           PROCEDURE       UNKNOWN
DBE_S1                                                           SYNONYM         UNKNOWN
DBE_S2                                                           SYNONYM         UNKNOWN
DBE_T2                                                           TABLE           VALID  
DBE_V1                                                           VIEW            UNKNOWN
DBE_V2                                                           VIEW            UNKNOWN
DBE_V3                                                           VIEW            UNKNOWN
DBE_V4                                                           VIEW            UNKNOWN

9 rows fetched.

SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> EXEC DBE_UTIL.COMPILE_SCHEMA('WMS', FALSE);

PL/SQL procedure successfully completed.

SQL> 
SQL> conn wms/Cantian_234@127.0.0.1:1611

connected.

SQL> select OBJECT_NAME,OBJECT_TYPE, STATUS from user_objects where OBJECT_NAME LIKE 'DBE%' ORDER BY OBJECT_NAME;

OBJECT_NAME                                                      OBJECT_TYPE     STATUS 
---------------------------------------------------------------- --------------- -------
DBE_P1                                                           PROCEDURE       INVALID
DBE_P2                                                           PROCEDURE       INVALID
DBE_S1                                                           SYNONYM         INVALID
DBE_S2                                                           SYNONYM         INVALID
DBE_T2                                                           TABLE           VALID  
DBE_V1                                                           VIEW            INVALID
DBE_V2                                                           VIEW            INVALID
DBE_V3                                                           VIEW            INVALID
DBE_V4                                                           VIEW            INVALID

9 rows fetched.

SQL> select * from user_dependencies where NAME LIKE 'DBE%' ORDER BY name, referenced_name;

OWNER                                                            NAME                                                             TYPE         REFERENCED_OWNER                                                 REFERENCED_NAME                                                  REFERENCED_TYPE
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------

0 rows fetched.

SQL> --end
SQL> 
SQL> 
SQL> --test dbe_stats.delete_table_stats
SQL> --begin
SQL> exec dbe_stats.delete_table_stats();

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> exec dbe_stats.delete_table_stats(1);

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> exec dbe_stats.delete_table_stats('SYS','TABLE');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
CT-00843, The table or view SYS.TABLE does not exist.

SQL> exec dbe_stats.delete_table_stats('SYS','TABLE', TRUE);

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:46] PLC-00614 Parameter error: part_name should be string

SQL> exec dbe_stats.delete_table_stats('SYS','TABLE', NULL);

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
CT-00843, The table or view SYS.TABLE does not exist.

SQL> 
SQL> exec dbe_stats.delete_table_stats('SYS','SYS_TABLES');

PL/SQL procedure successfully completed.

SQL> 
SQL> create global temporary table TBL_STAT_TEMP(id int, description varchar(400)) ON COMMIT preserve ROWS; 

Succeed.

SQL> 
SQL> insert into TBL_STAT_TEMP values(1, 'aaaaaaa'), (3, 'bbbb'), (5, 'xxxxxx');

3 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> DROP TABLE IF EXISTS TBL_STAT;

Succeed.

SQL> CREATE TABLE TBL_STAT
  2 (
  3 F1 INT,
  4 F2 VARCHAR2(16)
  5 );

Succeed.

SQL> 
SQL> CREATE INDEX IDX_TBL_STAT_F1 ON TBL_STAT(F1);

Succeed.

SQL> 
SQL> INSERT INTO TBL_STAT VALUES(1, 'MIKE');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(1, 'BOB');

1 rows affected.

SQL> INSERT INTO TBL_STAT VALUES(14, 'MIKE');

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> 
SQL> exec DBE_STATS.COLLECT_TABLE_STATS(schema => 'WMS',name => 'TBL_STAT');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(schema => 'WMS',name => 'TBL_STAT_TEMP');

PL/SQL procedure successfully completed.

SQL> SELECT A.NAME, A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A , DV_ME M WHERE A.NAME like 'TBL_STAT%' AND A.USER#=M.USER_ID ORDER BY NUM_ROWS;

NAME                                                             NUM_ROWS     AVG_ROW_LEN         
---------------------------------------------------------------- ------------ --------------------
TBL_STAT                                                         3            20                  
TBL_STAT_TEMP                                                    3            21                  
TBL_STAT1                                                                                         

3 rows fetched.

SQL> SELECT C.NUM_DISTINCT, C.LOW_VALUE,C.HIGH_VALUE,C.HISTOGRAM FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_COLUMNS C WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID AND C.USER#=M.USER_ID AND C.TABLE#=A.ID ORDER BY C.ID;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
2            1                                                                14                                                               FREQUENCY                                                       
2            BOB                                                              MIKE                                                             FREQUENCY                                                       

2 rows fetched.

SQL> SELECT H.ROW_NUM, H.NULL_NUM,H.MINVALUE, H.MAXVALUE,H.DIST_NUM,H.DENSITY FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_HISTGRAM_ABSTR H
  2  WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID AND H.USER#=M.USER_ID AND H.TAB#=A.ID
  3  ORDER BY H.USER#, H.TAB#, H.COL#;

ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
3            0            1                                                                14                                                               2            0.5                 
3            0            BOB                                                              MIKE                                                             2            0.5                 

2 rows fetched.

SQL> select H.DISTINCT_KEYS from sys.SYS_TABLES A , DV_ME M, sys.SYS_INDEXES h
  2  where A.name='TBL_STAT' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id;

DISTINCT_KEYS
-------------
2            

1 rows fetched.

SQL> select H.* from sys.SYS_TABLES A , DV_ME M, sys.SYS_DML_STATS h
  2  where A.name='TBL_STAT' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id;

USER#        TABLE#       INSERTS      UPDATES      DELETES      MODIFY_TIME                      FLAGS        DROP_SEGMENTS PARTED       PART#       
------------ ------------ ------------ ------------ ------------ -------------------------------- ------------ ------------- ------------ ------------

0 rows fetched.

SQL> 
SQL> exec dbe_stats.delete_table_stats(schema => 'WMS',NAME => 'TBL_STAT');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats(schema => 'WMS',NAME => 'TBL_STAT_TEMP');

PL/SQL procedure successfully completed.

SQL> SELECT A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A , DV_ME M WHERE A.NAME like 'TBL_STAT%' AND A.USER#=M.USER_ID ORDER BY NUM_ROWS;

NUM_ROWS     AVG_ROW_LEN         
------------ --------------------
                                 
                                 
                                 

3 rows fetched.

SQL> SELECT C.NUM_DISTINCT, C.LOW_VALUE,C.HIGH_VALUE,C.HISTOGRAM FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_COLUMNS C WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID AND C.USER#=M.USER_ID AND C.TABLE#=A.ID ORDER BY C.ID;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
                                                                                                                                                                                                               
                                                                                                                                                                                                               

2 rows fetched.

SQL> SELECT H.ROW_NUM, H.NULL_NUM,H.MINVALUE, H.MAXVALUE,H.DIST_NUM,H.DENSITY FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_HISTGRAM_ABSTR H
  2  WHERE A.NAME='TBL_STAT' AND A.USER#=M.USER_ID AND H.USER#=M.USER_ID AND H.TAB#=A.ID
  3  ORDER BY H.USER#, H.TAB#, H.COL#;

ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------

0 rows fetched.

SQL> select H.DISTINCT_KEYS from sys.SYS_TABLES A , DV_ME M, sys.SYS_INDEXES h
  2  where A.name='TBL_STAT' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id;

DISTINCT_KEYS
-------------
             

1 rows fetched.

SQL> select H.* from sys.SYS_TABLES A , DV_ME M, sys.SYS_DML_STATS h
  2  where A.name='TBL_STAT' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id;

USER#        TABLE#       INSERTS      UPDATES      DELETES      MODIFY_TIME                      FLAGS        DROP_SEGMENTS PARTED       PART#       
------------ ------------ ------------ ------------ ------------ -------------------------------- ------------ ------------- ------------ ------------

0 rows fetched.

SQL> 
SQL> DROP TABLE IF EXISTS TBL_STAT;

Succeed.

SQL> DROP TABLE IF EXISTS TBL_STAT_TEMP;

Succeed.

SQL> 
SQL> 
SQL> --end
SQL> 
SQL> --test dbe_stats.delete_schema_stats
SQL> DROP TABLE IF EXISTS TBL_STAT1;

Succeed.

SQL> DROP TABLE IF EXISTS TBL_STAT2;

Succeed.

SQL> CREATE TABLE TBL_STAT1(F1 INT,F2 VARCHAR2(16));

Succeed.

SQL> CREATE TABLE TBL_STAT2(F1 INT,F2 VARCHAR2(16));

Succeed.

SQL> 
SQL> CREATE INDEX IDX_TBL_STAT_F1 ON TBL_STAT1(F1);

Succeed.

SQL> 
SQL> INSERT INTO TBL_STAT1 VALUES(1, 'MIKE');

1 rows affected.

SQL> INSERT INTO TBL_STAT1 VALUES(3, 'BOB');

1 rows affected.

SQL> INSERT INTO TBL_STAT2 VALUES(14, 'MIKE');

1 rows affected.

SQL> INSERT INTO TBL_STAT2 VALUES(1, 'MIKE');

1 rows affected.

SQL> INSERT INTO TBL_STAT2 VALUES(8, 'BOB');

1 rows affected.

SQL> INSERT INTO TBL_STAT2 VALUES(14, 'MIKE');

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> 
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('WMS');

PL/SQL procedure successfully completed.

SQL> 
SQL> exec DBE_STATS.DELETE_SCHEMA_STATS('WMS');

PL/SQL procedure successfully completed.

SQL> SELECT A.NUM_ROWS, A.AVG_ROW_LEN  FROM SYS.SYS_TABLES A , DV_ME M WHERE A.NAME LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID ORDER BY A.NAME;

NUM_ROWS     AVG_ROW_LEN         
------------ --------------------
                                 
                                 

2 rows fetched.

SQL> SELECT C.NUM_DISTINCT, C.LOW_VALUE,C.HIGH_VALUE,C.HISTOGRAM FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_COLUMNS C WHERE A.NAME LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID AND C.USER#=M.USER_ID AND C.TABLE#=A.ID ORDER BY C.TABLE#, C.ID;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
                                                                                                                                                                                                               
                                                                                                                                                                                                               
                                                                                                                                                                                                               
                                                                                                                                                                                                               

4 rows fetched.

SQL> SELECT H.ROW_NUM, H.NULL_NUM,H.MINVALUE, H.MAXVALUE,H.DIST_NUM,H.DENSITY FROM SYS.SYS_TABLES A , DV_ME M, SYS.SYS_HISTGRAM_ABSTR H
  2  WHERE A.NAME LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID AND H.USER#=M.USER_ID AND H.TAB#=A.ID
  3  ORDER BY H.USER#, H.TAB#, H.COL#;

ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------

0 rows fetched.

SQL> select H.DISTINCT_KEYS from sys.SYS_TABLES A , DV_ME M, sys.SYS_INDEXES h
  2  where A.name LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id ORDER BY H.TABLE#,H.ID;

DISTINCT_KEYS
-------------
             

1 rows fetched.

SQL> select H.* from sys.SYS_TABLES A , DV_ME M, sys.SYS_DML_STATS h
  2  where A.name LIKE 'TBL_STAT%' AND A.USER#=M.USER_ID and h.user#=m.user_id and h.table#=a.id ORDER BY H.TABLE#;

USER#        TABLE#       INSERTS      UPDATES      DELETES      MODIFY_TIME                      FLAGS        DROP_SEGMENTS PARTED       PART#       
------------ ------------ ------------ ------------ ------------ -------------------------------- ------------ ------------- ------------ ------------

0 rows fetched.

SQL> 
SQL> DROP TABLE IF EXISTS TBL_STAT1;

Succeed.

SQL> DROP TABLE IF EXISTS TBL_STAT2;

Succeed.

SQL> --end
SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> 
SQL> --test trigger can not execute dbe_stats
SQL> --begin
SQL> drop table if exists gs_dbe_ww;

Succeed.

SQL> create table gs_dbe_ww(a int);

Succeed.

SQL> create or replace trigger gs_dbe_TIGER_1 after insert on gs_dbe_ww
  2 begin
  3 dbe_stats.delete_schema_stats('sys');
  4 end;
  5 /

Succeed.

SQL> 
SQL> --expect error
SQL> insert into gs_dbe_ww values(3);

CT-00932, [3:1] PL/SQL(SYS.GS_DBE_TIGER_1) terminated with execute errors
[3:1] PL/SQL(DBE_STATS.DELETE_SCHEMA_STATS) terminated with execute errors
CT-00909, Cannot COMMIT in a trigger

SQL> 
SQL> create or replace trigger gs_dbe_TIGER_1 after insert on gs_dbe_ww
  2 begin
  3 dbe_stats.delete_table_stats('sys','gs_dbe_ww');
  4 end;
  5 /

Succeed.

SQL> 
SQL> --expect error
SQL> insert into gs_dbe_ww values(3);

CT-00932, [3:1] PL/SQL(SYS.GS_DBE_TIGER_1) terminated with execute errors
[3:1] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
CT-00909, Cannot COMMIT in a trigger

SQL> 
SQL> create or replace trigger gs_dbe_TIGER_1 after insert on gs_dbe_ww
  2 begin
  3 DBE_STATS.FLUSH_DB_STATS_INFO();
  4 end;
  5 /

Succeed.

SQL> 
SQL> --expect error
SQL> insert into gs_dbe_ww values(3);

CT-00932, [3:1] PL/SQL(SYS.GS_DBE_TIGER_1) terminated with execute errors
[3:1] PL/SQL(DBE_STATS.FLUSH_DB_STATS_INFO) terminated with execute errors
CT-00909, Cannot COMMIT in a trigger

SQL> 
SQL> create or replace trigger gs_dbe_TIGER_1 after insert on gs_dbe_ww
  2 begin
  3 DBE_STATS.COLLECT_SCHEMA_STATS('sys');
  4 end;
  5 /

Succeed.

SQL> 
SQL> --expect error
SQL> insert into gs_dbe_ww values(3);

CT-00932, [3:1] PL/SQL(SYS.GS_DBE_TIGER_1) terminated with execute errors
[3:1] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
CT-00909, Cannot COMMIT in a trigger

SQL> 
SQL> create or replace trigger gs_dbe_TIGER_1 after insert on gs_dbe_ww
  2 begin
  3 DBE_STATS.COLLECT_TABLE_STATS('sys','gs_dbe_ww');
  4 end;
  5 /

Succeed.

SQL> --expect error
SQL> insert into gs_dbe_ww values(3);

CT-00932, [3:1] PL/SQL(SYS.GS_DBE_TIGER_1) terminated with execute errors
[3:1] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
CT-00909, Cannot COMMIT in a trigger

SQL> 
SQL> create or replace trigger gs_dbe_TIGER_1 after insert on gs_dbe_ww
  2 begin
  3 DBE_STATS.PURGE_STATS(sysdate);
  4 end;
  5 /

Succeed.

SQL> 
SQL> --expect error
SQL> insert into gs_dbe_ww values(3);

CT-00932, [3:1] PL/SQL(SYS.GS_DBE_TIGER_1) terminated with execute errors
[3:1] PL/SQL(DBE_STATS.PURGE_STATS) terminated with execute errors
CT-00909, Cannot COMMIT in a trigger

SQL> 
SQL> 
SQL> create or replace trigger gs_dbe_TIGER_1 after insert on gs_dbe_ww
  2 begin
  3    analyze table gs_dbe_ww compute statistics;
  4 end;
  5 /

Succeed.
Warning:
PL/SQL(SYS.GS_DBE_TIGER_1) terminated with compiling errors
[3:12] PLC-00954 ';' or ':=' expected but table found


SQL> 
SQL> --expect error
SQL> insert into gs_dbe_ww values(3);

CT-00944, PL/SQL(SYS.GS_DBE_TIGER_1) terminated with compiling errors
[3:12] PLC-00954 ';' or ':=' expected but table found

SQL> 
SQL> drop table if exists gs_dbe_ww;

Succeed.

SQL> --end
SQL> 
SQL> --test scn&ssn in RETURN_CURSOR
SQL> --begin
SQL> drop table if exists dbe_test_t1;

Succeed.

SQL> create table dbe_test_t1(f1 int);

Succeed.

SQL> insert into dbe_test_t1 (f1) values(1);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE dbe_test_proc AS
  2   rc1 sys_refcursor;
  3 BEGIN  
  4   --OPEN rc1 FOR SELECT * FROM dbe_test_t1;
  5   --dbe_sql.return_cursor(rc1);
  6   insert into dbe_test_t1 (f1) values(3);
  7   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
  8   update dbe_test_t1 set f1 = 4;
  9   dbe_sql.return_cursor(rc1);
 10   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
 11   dbe_sql.return_cursor(rc1);
 12   update dbe_test_t1 set f1 = 2;
 13   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
 14   dbe_sql.return_cursor(rc1);
 15   --rollback;
 16   --commit;
 17   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
 18   dbe_sql.return_cursor(rc1);
 19 END;
 20 / 

Succeed.

SQL> 
SQL> --expect 1, 3
SQL> --expect 4, 4
SQL> --expect 2, 2
SQL> --expect 2, 2
SQL> exec dbe_test_proc();

PL/SQL procedure successfully completed.

ResultSet #1

F1          
------------
1           
3           

2 rows fetched.


ResultSet #2

F1          
------------
4           
4           

2 rows fetched.


ResultSet #3

F1          
------------
2           
2           

2 rows fetched.


ResultSet #4

F1          
------------
2           
2           

2 rows fetched.


SQL> 
SQL> 
SQL> drop table if exists dbe_test_t1;

Succeed.

SQL> create table dbe_test_t1(f1 int);

Succeed.

SQL> insert into dbe_test_t1 (f1) values(1);

1 rows affected.

SQL> commit;  

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE dbe_test_proc AS
  2   rc1 sys_refcursor;
  3 BEGIN  
  4   insert into dbe_test_t1 (f1) values(3);
  5   OPEN rc1 FOR SELECT * FROM dbe_test_t1;  
  6   update dbe_test_t1 set f1 = 4;
  7   dbe_sql.return_cursor(rc1);
  8   OPEN rc1 FOR SELECT * FROM dbe_test_t1; 
  9   dbe_sql.return_cursor(rc1);
 10   update dbe_test_t1 set f1 = 2;
 11   OPEN rc1 FOR SELECT * FROM dbe_test_t1;  
 12   dbe_sql.return_cursor(rc1);
 13   --rollback;
 14   commit;
 15   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
 16   dbe_sql.return_cursor(rc1);
 17 END;
 18 / 

Succeed.

SQL> 
SQL> --ora
SQL> --expect 1, 3
SQL> --expect 4, 4
SQL> --expect 2, 2
SQL> --expect 2, 2
SQL> exec dbe_test_proc();

PL/SQL procedure successfully completed.

ResultSet #1

F1          
------------
1           
3           

2 rows fetched.


ResultSet #2

F1          
------------
4           
4           

2 rows fetched.


ResultSet #3

F1          
------------
2           
2           

2 rows fetched.


ResultSet #4

F1          
------------
2           
2           

2 rows fetched.


SQL> 
SQL> drop table if exists dbe_test_t1;

Succeed.

SQL> create table dbe_test_t1(f1 int);

Succeed.

SQL> insert into dbe_test_t1 (f1) values(1);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE dbe_test_proc AS
  2   rc1 sys_refcursor;
  3 BEGIN  
  4   insert into dbe_test_t1 (f1) values(3);
  5   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
  6   update dbe_test_t1 set f1 = 4;
  7   dbe_sql.return_cursor(rc1);
  8   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
  9   dbe_sql.return_cursor(rc1);
 10   update dbe_test_t1 set f1 = 2;
 11   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
 12   dbe_sql.return_cursor(rc1);
 13   rollback;
 14   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
 15   dbe_sql.return_cursor(rc1);
 16 END;
 17 / 

Succeed.

SQL> 
SQL> --zenith
SQL> --ora will error ORA-01002
SQL> exec dbe_test_proc();

PL/SQL procedure successfully completed.

CT-00905, The cursor was invalid.

SQL> 
SQL> drop table if exists dbe_test_t1;

Succeed.

SQL> create table dbe_test_t1(f1 int);

Succeed.

SQL> insert into dbe_test_t1 (f1) values(1);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE dbe_test_proc AS
  2   rc1 sys_refcursor;
  3 BEGIN  
  4   insert into dbe_test_t1 (f1) values(3);
  5   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
  6   dbe_sql.return_cursor(rc1);
  7   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
  8   execute immediate 'drop table dbe_test_t1';  
  9   dbe_sql.return_cursor(rc1);
 10 END;
 11 / 

Succeed.

SQL> 
SQL> --ora 
SQL> --expect 1, 3
SQL> --expect 1, 3
SQL> exec dbe_test_proc();

PL/SQL procedure successfully completed.

ResultSet #1

F1          
------------
1           
3           

2 rows fetched.


ResultSet #2

F1          
------------
1           
3           

2 rows fetched.


SQL> --end
SQL> 
SQL> --DTS2018122806030
SQL> --begin
SQL> drop table if exists dbe_test_t1;

Succeed.

SQL> create table dbe_test_t1(f1 int);

Succeed.

SQL> insert into dbe_test_t1 (f1) values(1);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE dbe_test_proc AS
  2   rc1 sys_refcursor;
  3 BEGIN  
  4   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
  5   dbe_sql.return_cursor(rc1);
  6   update dbe_test_t1 set f1 = 3;
  7 END;
  8 / 

Succeed.

SQL> 
SQL> --ora 
SQL> --expect 1
SQL> exec dbe_test_proc();

PL/SQL procedure successfully completed.

ResultSet #1

F1          
------------
1           

1 rows fetched.


SQL> 
SQL> 
SQL> drop table if exists dbe_test_t1;

Succeed.

SQL> create table dbe_test_t1(f1 int);

Succeed.

SQL> insert into dbe_test_t1 (f1) values(1);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE dbe_test_proc AS
  2   rc1 sys_refcursor;
  3 BEGIN  
  4   OPEN rc1 FOR SELECT * FROM dbe_test_t1;
  5   dbe_sql.return_cursor(rc1);
  6   update dbe_test_t1 set f1 = 3;
  7   delete from dbe_test_t1;
  8   execute immediate 'drop table dbe_test_t1';  
  9 END;
 10 / 

Succeed.

SQL> 
SQL> --ora 
SQL> --expect 1
SQL> exec dbe_test_proc();

PL/SQL procedure successfully completed.

ResultSet #1

F1          
------------
1           

1 rows fetched.


SQL> --end
SQL> 
SQL> create or replace procedure DBE_P1()
  2 as
  3 a timestamp;
  4 b timestamp;
  5 a1 timestamp;
  6 b1 timestamp;
  7 
  8 begin
  9   a := systimestamp;
 10   sleep(1);
 11   b := systimestamp;
 12   if a != b then
 13   	dbe_output.print_line('true');  	
 14   else
 15   	dbe_output.print_line('false');
 16   end if;  
 17   
 18   select systimestamp,systimestamp into a1, b1 from dual;
 19   if a1 != b1 then
 20   	dbe_output.print_line('true');
 21   else
 22   	dbe_output.print_line('false');
 23   end if;  
 24   
 25   select systimestamp into a1 from dual;
 26   sleep(1);
 27   select systimestamp into b1 from dual;
 28   if a1 != b1 then
 29   	dbe_output.print_line('true');
 30   else
 31   	dbe_output.print_line('false');
 32   end if;  
 33 end;
 34 /

Succeed.

SQL> 
SQL> exec DBE_P1;

true
false
true

PL/SQL procedure successfully completed.

SQL> drop procedure DBE_P1;

Succeed.

SQL> 
SQL> --DTS2019010701347 
SQL> drop table if exists employees;

Succeed.

SQL> create table employees(employeesno int,ename varchar(10),job varchar(10) ,sal integer);

Succeed.

SQL> insert into employees values(1,'zhangsan','doctor1',10000),(2,'zhangsan2','doctor2',10010),(123,'zhangsan3','doctor3',10020);

3 rows affected.

SQL> alter table employees add  hiretime datetime;

Succeed.

SQL> declare
  2 type mycurtp  is  ref  cursor;
  3 cur1 mycurtp;
  4 cur2 mycurtp;
  5 var1 employees%rowtype;
  6 --f1  employees.employeesno%type :=1;
  7 str1 varchar2(100);
  8 begin
  9 str1 := 'select * from employees where  EMPLOYEESNO = :f1 ';
 10 open cur1 for str1 using 2  ;
 11 cur2 := cur1;
 12 fetch  cur2 into var1;
 13 dbe_output.print_line(var1.ename||' sal:'||var1.sal);
 14 close cur2;
 15 end;
 16 /

zhangsan2 sal:10010

PL/SQL procedure successfully completed.

SQL> --DTS2019010409322 
SQL> alter system set LOCAL_TEMPORARY_TABLE_ENABLED=true;

Succeed.

SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER_018_1 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER_018_2 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER_018_3 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER_018_4 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> --I1.create table
SQL> drop table if exists PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018;

Succeed.

SQL> drop table if exists PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2;

Succeed.

SQL> drop table if exists PROC_FOR_LOOP_JOIN_1_DML_USER_018_3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3;

Succeed.

SQL> create table PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018 
  2 (
  3 c_int int,
  4 c_number number,
  5 c_varchar varchar(4000),
  6 c_date date
  7 );

Succeed.

SQL> insert into PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018 values
  2 (1,1.25,'abcd','2015-5-5');

1 rows affected.

SQL> insert into PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018 values
  2 (2,2.25,'你好','2016-6-6');

1 rows affected.

SQL> insert into PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018 values
  2 (2,2.25,lpad('ab',75,'c'),'2017-7-7');

1 rows affected.

SQL> create table PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2 
  2 (
  3 c_int int,
  4 c_number number,
  5 c_varchar varchar(4000),
  6 c_date date
  7 )
  8 partition by range (c_number)
  9 (
 10 partition p1 values less than (3),
 11 partition p2 values less than (10)
 12 );

Succeed.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2 values
  2 (1,1.12345,'aaa','2015-5-5');

1 rows affected.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2 values
  2 (2,2.12345,'shengming','2016-6-6');

1 rows affected.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2 values
  2 (2,2.25,lpad('ab',78,'c'),'2017-7-7');

1 rows affected.

SQL> create global temporary table PROC_FOR_LOOP_JOIN_1_DML_USER_018_3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3 
  2 (
  3 c_int int,
  4 c_number number,
  5 c_varchar varchar(4000),
  6 c_date date
  7 );

Succeed.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER_018_3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3 values
  2 (1,1.12345,'aaa','2015-5-5');

1 rows affected.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER_018_3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3 values
  2 (2,2.12345,'shengming','2016-6-6');

1 rows affected.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER_018_3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3 values
  2 (2,2.25,lpad('ab',78,'c'),'2017-7-7');

1 rows affected.

SQL> drop PROCEDURE if exists  PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_018_1;

Succeed.

SQL> grant select on PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2 to PROC_FOR_LOOP_JOIN_1_DML_USER_018_1;

Succeed.

SQL> grant select on sys.SYS_TABLES to PROC_FOR_LOOP_JOIN_1_DML_USER_018_1;

Succeed.

SQL> grant update on PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2 to PROC_FOR_LOOP_JOIN_1_DML_USER_018_1;

Succeed.

SQL> CREATE OR REPLACE PROCEDURE  PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_018_1()
  2 IS
  3 b_bigint bigint:=0;
  4 c_cur1 date :='2016-6-6';
  5 v_refcur1 sys_refcursor;
  6 b_varchar varchar(15):='df';
  7 b_date date :='2000-1-1';
  8 b_temp int :=15;
  9 b_sql varchar(2000);
 10 BEGIN  
 11  for i in 
 12  (  select a.c_int from PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018 as a  join  PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2 as b  where a.c_int =b.c_int and a.c_int<=2 )
 13   loop
 14     b_sql := 'drop table if exists PROC_FOR_LOOP_JOIN_1_DML_USER_018_3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3';
 15     execute immediate b_sql;
 16     b_sql :=' create global temporary table PROC_FOR_LOOP_JOIN_1_DML_USER_018_3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3 
 17 (
 18 c_int int,
 19 c_number number,
 20 c_varchar varchar(4000),
 21 c_date date
 22 )' ;
 23     execute immediate b_sql;
 24     select name  into b_sql from  sys.SYS_TABLES where name ='PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3';
 25     dbe_output.print_line(b_sql);
 26     open v_refcur1 for select c_date from PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018 where c_date=c_cur1;
 27     dbe_sql.return_cursor(v_refcur1);
 28  update PROC_FOR_LOOP_JOIN_1_DML_USER_018_2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_2 set  c_varchar= '123456789';  
 29  end loop;
 30 END;
 31 /

Succeed.

SQL> call PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_018_1();

PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3

PL/SQL procedure successfully completed.

ResultSet #1

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #2

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #3

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #4

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #5

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


SQL> call PROC_FOR_LOOP_JOIN_1_DML_USER_018_1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_018_1();

PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_018_3

PL/SQL procedure successfully completed.

ResultSet #1

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #2

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #3

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #4

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #5

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


SQL> 
SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER_018_1 cascade;

Succeed.

SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER_018_2 cascade;

Succeed.

SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER_018_3 cascade;

Succeed.

SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER_018_4 cascade;

Succeed.

SQL> --DTS2019010207906
SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER1 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER2 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER3 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER4 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> --I1.create table
SQL> drop table if exists PROC_FOR_LOOP_JOIN_1_DML_USER1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011;

Succeed.

SQL> drop table if exists PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2;

Succeed.

SQL> drop table if exists PROC_FOR_LOOP_JOIN_1_DML_USER3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3;

Succeed.

SQL> create table PROC_FOR_LOOP_JOIN_1_DML_USER1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011 
  2 (
  3 c_int int,
  4 c_number number,
  5 c_varchar varchar(80),
  6 c_date date
  7 );

Succeed.

SQL> insert into PROC_FOR_LOOP_JOIN_1_DML_USER1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011 values
  2 (1,1.25,'abcd','2015-5-5');

1 rows affected.

SQL> insert into PROC_FOR_LOOP_JOIN_1_DML_USER1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011 values
  2 (2,2.25,'你好','2016-6-6');

1 rows affected.

SQL> insert into PROC_FOR_LOOP_JOIN_1_DML_USER1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011 values
  2 (2,2.25,lpad('ab',75,'c'),'2017-7-7');

1 rows affected.

SQL> create table PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 
  2 (
  3 c_int int,
  4 c_number number,
  5 c_varchar varchar(80),
  6 c_date date
  7 )
  8 partition by range (c_number)
  9 (
 10 partition p1 values less than (3),
 11 partition p2 values less than (10)
 12 );

Succeed.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 values
  2 (1,1.12345,'aaa','2015-5-5');

1 rows affected.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 values
  2 (2,2.12345,'shengming','2016-6-6');

1 rows affected.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 values
  2 (2,2.25,lpad('ab',78,'c'),'2017-7-7');

1 rows affected.

SQL> create global temporary table PROC_FOR_LOOP_JOIN_1_DML_USER3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3 
  2 (
  3 c_int int,
  4 c_number number,
  5 c_varchar varchar(80),
  6 c_date date
  7 );

Succeed.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3 values
  2 (2,2.25,lpad('ab',78,'c'),'2016-6-6');

1 rows affected.

SQL> 
SQL> drop PROCEDURE if exists  PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_011_1;

Succeed.

SQL> CREATE OR REPLACE PROCEDURE  PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_011_1()
  2 IS
  3 --declare
  4 b_bigint bigint:=0;
  5 c_cur1 date :='2016-6-6';
  6 v_refcur1 sys_refcursor;
  7 b_varchar varchar(15):='df';
  8 b_date date :='2000-1-1';
  9 b_temp int :=15;
 10 b_sql varchar(2000);
 11 BEGIN  
 12  for i in 
 13  (  select a.c_int from PROC_FOR_LOOP_JOIN_1_DML_USER1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011 as a  join  PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 as b  where a.c_int =b.c_int and a.c_int<=3)
 14   loop
 15     insert into PROC_FOR_LOOP_JOIN_1_DML_USER3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3 values (11,3.456,'eret','2145-8-9');
 16     b_sql := 'drop table if exists PROC_FOR_LOOP_JOIN_1_DML_USER3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3';
 17     execute immediate b_sql;
 18     b_sql :=' create table PROC_FOR_LOOP_JOIN_1_DML_USER3.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3 
 19 (
 20 c_int int,
 21 c_number number,
 22 c_varchar varchar(80),
 23 c_date date
 24 )
 25 partition by range (c_number)
 26 (partition p2 values less than (10))' ;
 27     execute immediate b_sql;
 28     select name  into b_sql from  SYS_TABLES where name ='PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3';
 29     dbe_output.print_line(b_sql);
 30     open v_refcur1 for select c_date from PROC_FOR_LOOP_JOIN_1_DML_USER1.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011 where c_date=c_cur1;
 31     dbe_sql.return_cursor(v_refcur1);
 32 
 33     b_temp :=15;
 34     b_temp := b_temp-1;
 35     dbe_output.print_line(b_temp);
 36  
 37  end loop;
 38 END;
 39 /

Succeed.

SQL> call PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_011_1();

PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14

PL/SQL procedure successfully completed.

ResultSet #1

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #2

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #3

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #4

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #5

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER2 cascade;

Succeed.

SQL> call PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_011_1();

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(SYS.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_011_1) terminated with compiling errors
PLC-00781 The user PROC_FOR_LOOP_JOIN_1_DML_USER2 does not exist.
[13:105] PLC-00843 The table or view PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 does not exist.


SQL> create  user PROC_FOR_LOOP_JOIN_1_DML_USER2 IDENTIFIED BY DATABASE_123 PASSWORD EXPIRE;

Succeed.

SQL> create table PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 
  2 (
  3 c_int int,
  4 c_number number,
  5 c_varchar varchar(80),
  6 c_date date
  7 )
  8 partition by range (c_number)
  9 (
 10 partition p1 values less than (3),
 11 partition p2 values less than (10)
 12 );

Succeed.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 values
  2 (1,1.12345,'aaa','2015-5-5');

1 rows affected.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 values
  2 (2,2.12345,'shengming','2016-6-6');

1 rows affected.

SQL> insert into  PROC_FOR_LOOP_JOIN_1_DML_USER2.PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_2 values
  2 (2,2.25,lpad('ab',78,'c'),'2017-7-7');

1 rows affected.

SQL> call PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PROC_011_1();

PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14
PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_011_3
14

PL/SQL procedure successfully completed.

ResultSet #1

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #2

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #3

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #4

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


ResultSet #5

C_DATE                
----------------------
2016-06-06 00:00:00   

1 rows fetched.


SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER1 cascade;

Succeed.

SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER2 cascade;

Succeed.

SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER3 cascade;

Succeed.

SQL> drop user PROC_FOR_LOOP_JOIN_1_DML_USER4 cascade;

Succeed.

SQL> 
SQL> create or replace procedure xx_p2
  2 as
  3 begin
  4 execute immediate 'drop table if exists xxxxx';
  5 execute immediate 'create table xxxxx(a int)';
  6 end;
  7 /

Succeed.

SQL> 
SQL> create or replace function xx_f2 return int
  2 as
  3 begin
  4 xx_p2;
  5 return 1;
  6 end;
  7 /

Succeed.

SQL> 
SQL> select xx_f2 from dual;

CT-00932, [4:1] PL/SQL(SYS.XX_F2) terminated with execute errors
[3:1] PL/SQL(SYS.XX_P2) terminated with execute errors
[3:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> 
SQL> declare
  2 a int;
  3 begin
  4 a := xx_f2;
  5 end;
  6 /

PL/SQL procedure successfully completed.

SQL> drop table if exists xxxxx;

Succeed.

SQL> 
SQL> create or replace procedure xx_p1
  2 as
  3 begin
  4 commit;
  5 end;
  6 /

Succeed.

SQL> 
SQL> create or replace function xx_f1 return int
  2 as
  3 begin
  4 xx_p1;
  5 return 1;
  6 end;
  7 /

Succeed.

SQL> 
SQL> select xx_f1 from dual;

CT-00932, [4:1] PL/SQL(SYS.XX_F1) terminated with execute errors
[3:1] PL/SQL(SYS.XX_P1) terminated with execute errors
[3:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> 
SQL> declare
  2 a int;
  3 begin
  4 a := xx_f1;
  5 end;
  6 /

PL/SQL procedure successfully completed.

SQL> --DTS2019010310372 
SQL> drop table if exists FVT_FUNCTION_DDL_001_T;

Succeed.

SQL> drop table if exists FVT_FUNCTION_DDL_001_T_02;

Succeed.

SQL> create table FVT_FUNCTION_DDL_001_T(id int,name varchar2(100));

Succeed.

SQL> create table FVT_FUNCTION_DDL_001_T_02(id int,name varchar2(100));

Succeed.

SQL> create or replace function  FVT_FUNCTION_DDL_001_Fun return int
  2 is 
  3 a int := 0;
  4 begin
  5 for i in  1..5
  6 loop
  7 insert into FVT_FUNCTION_DDL_001_T values(30,'commit');
  8 commit;
  9 insert into FVT_FUNCTION_DDL_001_T values(3,'rollback');
 10 rollback;
 11 a := a+1;
 12 end loop;
 13 return a;
 14 end;
 15 /

Succeed.

SQL> insert into FVT_FUNCTION_DDL_001_T values (FVT_FUNCTION_DDL_001_Fun(),'function');

CT-00932, [8:1] PL/SQL(SYS.FVT_FUNCTION_DDL_001_FUN) terminated with execute errors
[8:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> insert into FVT_FUNCTION_DDL_001_T_02 values (FVT_FUNCTION_DDL_001_Fun(),'function');

CT-00932, [8:1] PL/SQL(SYS.FVT_FUNCTION_DDL_001_FUN) terminated with execute errors
[8:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> select * from FVT_FUNCTION_DDL_001_T;

ID           NAME                                                            
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> select * from FVT_FUNCTION_DDL_001_T_02;

ID           NAME                                                            
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> commit ;

Succeed.

SQL> select * from FVT_FUNCTION_DDL_001_T_02;

ID           NAME                                                            
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> --DTS2019010503538 
SQL> drop table if exists FVT_FUNCTION_DDL_001_T;

Succeed.

SQL> drop table if exists FVT_FUNCTION_DDL_001_T_02;

Succeed.

SQL> create table FVT_FUNCTION_DDL_001_T(id int,name varchar2(100));

Succeed.

SQL> create table FVT_FUNCTION_DDL_001_T_02(id int,name varchar2(100));

Succeed.

SQL> create or replace function  FVT_FUNCTION_DDL_001_Fun() return int
  2 is 
  3 a int := 0;
  4 begin
  5 for i in  1..5
  6 loop
  7 insert into FVT_FUNCTION_DDL_001_T values(30,'commit');
  8 commit;
  9 insert into FVT_FUNCTION_DDL_001_T values(3,'rollback');
 10 rollback;
 11 a := a+1;
 12 end loop;
 13 return a;
 14 end;
 15 /

Succeed.

SQL> 
SQL> insert into FVT_FUNCTION_DDL_001_T_02 values (FVT_FUNCTION_DDL_001_Fun(),'function');

CT-00932, [8:1] PL/SQL(SYS.FVT_FUNCTION_DDL_001_FUN) terminated with execute errors
[8:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> update FVT_FUNCTION_DDL_001_T_02 set id = FVT_FUNCTION_DDL_001_Fun() + 3;

0 rows affected.

SQL> insert into FVT_FUNCTION_DDL_001_T_02 values(1,'123');

1 rows affected.

SQL> update FVT_FUNCTION_DDL_001_T_02 set id = FVT_FUNCTION_DDL_001_Fun() + 3;

CT-00932, [8:1] PL/SQL(SYS.FVT_FUNCTION_DDL_001_FUN) terminated with execute errors
[8:1] CT-00973, There was a statement that affects transaction commission or rollback in the user-defined function invoked by the DML operation.

SQL> 
SQL> --test dbe with =>
SQL> --begin
SQL> drop user if exists gs_dbe cascade;

Succeed.

SQL> create user gs_dbe identified by root_1234;

Succeed.

SQL> grant dba to gs_dbe;

Succeed.

SQL> conn gs_dbe/root_1234@127.0.0.1:1611

connected.

SQL> 
SQL> create table TMP_CELL_A0JM (f1 int, f2 varchar(32), f3 date);

Succeed.

SQL> create index idx_f1_tep_A0JM on TMP_CELL_A0JM(f1);

Succeed.

SQL> create index idx_f2_tep_A0JM on TMP_CELL_A0JM(f2);

Succeed.

SQL> 
SQL> insert into TMP_CELL_A0JM(f1, f2, f3) values(10002, 'mike', '2018-12-20');

1 rows affected.

SQL> insert into TMP_CELL_A0JM(f1, f2, f3) values(10003, 'backham', '2018-12-20');

1 rows affected.

SQL> insert into TMP_CELL_A0JM(f1, f2, f3) values(10004, 'mike', '2018-12-21');

1 rows affected.

SQL> insert into TMP_CELL_A0JM(f1, f2, f3) values(10002, 'coco', '2018-12-20');

1 rows affected.

SQL> insert into TMP_CELL_A0JM(f1, f2, f3) values(10004, 'johndan', '2018-12-20');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> 
SQL> begin DBE_STATS.COLLECT_TABLE_STATS( schema=>'gs_dbe', name=>'TMP_CELL_A0JM', part_name=>NULL, sample_ratio => 10, method_opt=>'for all indexed columns'); end;
  2 /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin DBE_STATS.COLLECT_TABLE_STATS( schema=>'gs_dbe', name=>'TMP_CELL_A0JM', part_name=>NULL, sample_ratio => 10, method_opt=>'for all indexed columns'); end;
  2 /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin DBE_STATS.COLLECT_TABLE_STATS( schema=>'gs_dbe', name=>'TMP_CELL_A0JM', part_name=>NULL, sample_ratio => 10, method_opt=>'for all indexed columns'); end;
  2 /

PL/SQL procedure successfully completed.

SQL> 
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS
  2 (
  3 	schema          => 'gs_dbe',
  4 	sample_ratio => dbe_stats.AUTO_SAMPLE_SIZE,
  5 	method_opt       => 'for all columns size repeat'
  6 );

PL/SQL procedure successfully completed.

SQL> 
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS
  2 (
  3 	schema          => 'gs_dbe',
  4 	sample_ratio => 30,
  5 	method_opt       => 'for all columns size repeat'
  6 );

PL/SQL procedure successfully completed.

SQL> 
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS
  2 (
  3 	schema          => 'gs_dbe',
  4 	sample_ratio => 30,
  5 	method_opt       => 'for all columns size repeat'
  6 );

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> --end
SQL> 
SQL> --test DBE_UTIL.compile_schema priv
SQL> --begin
SQL> --expect success
SQL> exec DBE_UTIL.compile_schema('GS_PL_DBE');

PL/SQL procedure successfully completed.

SQL> 
SQL> conn gs_dbe/root_1234@127.0.0.1:1611

connected.

SQL> exec DBE_UTIL.compile_schema('GS_PL_DBE');

PL/SQL procedure successfully completed.

SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> revoke dba from wms;

Succeed.

SQL> conn wms/Cantian_234@127.0.0.1:1611

connected.

SQL> exec DBE_UTIL.compile_schema('wms');

PL/SQL procedure successfully completed.

SQL> 
SQL> --expect error
SQL> exec DBE_UTIL.compile_schema('GS_PL_DBE');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_UTIL.COMPILE_SCHEMA) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> --end
SQL> 
SQL> --test DBE_STATS priv
SQL> --begin
SQL> --expect error
SQL> conn wms/Cantian_234@127.0.0.1:1611

connected.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('gs_dbe');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec dbe_stats.delete_schema_stats('gs_dbe');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_SCHEMA_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('wms');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_schema_stats('wms');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_dbe', 'TMP_CELL_A0JM');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec dbe_stats.delete_table_stats('gs_dbe', 'TMP_CELL_A0JM');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> 
SQL> --expect success
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('gs_dbe');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_schema_stats('gs_dbe');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_dbe', 'TMP_CELL_A0JM');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('gs_dbe', 'TMP_CELL_A0JM');

PL/SQL procedure successfully completed.

SQL> 
SQL> grant dba to wms;

Succeed.

SQL> conn wms/Cantian_234@127.0.0.1:1611

connected.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('gs_dbe');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('gs_dbe');

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_dbe', 'TMP_CELL_A0JM');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('gs_dbe', 'TMP_CELL_A0JM');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.PURGE_STATS(sysdate-1);

PL/SQL procedure successfully completed.

SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> revoke dba from wms;

Succeed.

SQL> grant select any table to wms;

Succeed.

SQL> conn wms/Cantian_234@127.0.0.1:1611

connected.

SQL> CREATE TABLE dbe_STAT_T1(A INT);

Succeed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('gs_dbe');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec dbe_stats.delete_table_stats('gs_dbe');

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_dbe', 'TMP_CELL_A0JM');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec dbe_stats.delete_table_stats('gs_dbe', 'TMP_CELL_A0JM');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec DBE_STATS.FLUSH_DB_STATS_INFO ();

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.FLUSH_DB_STATS_INFO) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> analyze table wms.dbe_STAT_T1 compute statistics;

Succeed.

SQL> analyze table gs_dbe.TMP_CELL_A0JM compute statistics;

CT-01001, Permissions were insufficient
SQL> analyze table sys.test_gather compute statistics;

CT-01001, Permissions were insufficient
SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> create table test_gather(a int);

Succeed.

SQL> revoke select any table from wms;

Succeed.

SQL> grant analyze any to wms;

Succeed.

SQL> conn wms/Cantian_234@127.0.0.1:1611

connected.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('gs_dbe');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('gs_dbe');

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_dbe', 'TMP_CELL_A0JM');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('gs_dbe', 'TMP_CELL_A0JM');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.PURGE_STATS(sysdate-1);

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.PURGE_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec DBE_STATS.FLUSH_DB_STATS_INFO ();

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('sys');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec dbe_stats.delete_table_stats('sys');

CT-00944, PL/SQL(WMS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('sys', 'test_gather');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> exec dbe_stats.delete_table_stats('sys', 'test_gather');

CT-00932, [1:2] PL/SQL(WMS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
[1:2] CT-01001, Permissions were insufficient

SQL> analyze table wms.dbe_STAT_T1 compute statistics;

Succeed.

SQL> analyze table gs_dbe.TMP_CELL_A0JM compute statistics;

Succeed.

SQL> analyze table sys.test_gather compute statistics;

CT-01001, Permissions were insufficient
SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> revoke analyze any from wms;

Succeed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('gs_dbe');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('gs_dbe');

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('gs_dbe', 'TMP_CELL_A0JM');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('gs_dbe', 'TMP_CELL_A0JM');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.PURGE_STATS(sysdate-1);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.FLUSH_DB_STATS_INFO ();

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('sys');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('sys');

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('sys', 'test_gather');

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.delete_table_stats('sys', 'test_gather');

PL/SQL procedure successfully completed.

SQL> analyze table wms.dbe_STAT_T1 compute statistics;

Succeed.

SQL> analyze table gs_dbe.TMP_CELL_A0JM compute statistics;

Succeed.

SQL> analyze table sys.test_gather compute statistics;

Succeed.

SQL> drop table if exists test_gather;

Succeed.

SQL> 
SQL> 
SQL> --test estimate_percent is 0
SQL> --begin
SQL> drop table if exists tbl_sta;

Succeed.

SQL> CREATE TABLE tbl_sta(
  2      id int,
  3      DATA VARCHAR2(20)
  4  );

Succeed.

SQL> insert into tbl_sta values(61, 'a1');

1 rows affected.

SQL> insert into tbl_sta values(71, 'aq');

1 rows affected.

SQL> insert into tbl_sta values(81, 'aa');

1 rows affected.

SQL> commit; 

Succeed.

SQL> 
SQL> exec DBE_STATS.COLLECT_TABLE_STATS(schema=>'sys', name=>'tbl_sta', sample_ratio=>dbe_stats.AUTO_SAMPLE_SIZE);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(schema=>'sys', name=>'tbl_sta', sample_ratio=>0);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(schema=>'sys', name=>'tbl_sta', sample_ratio=>0.000000001);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:40] CT-00614, Parameter error: the valid range of sample_ratio is [0.000001,100]

SQL> 
SQL> drop table tbl_sta;

Succeed.

SQL> --end
SQL> 
SQL> begin
  2 THROW_EXCEPTION(1, 'aaa');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT-00614, Parameter error: error number argument to throw_exception is out of range(-20999..-20000)

SQL> 
SQL> begin
  2 THROW_EXCEPTION(-20000, 'aaa');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT--20000, aaa

SQL> 
SQL> begin
  2 THROW_EXCEPTION(-19999, 'aaa');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT-00614, Parameter error: error number argument to throw_exception is out of range(-20999..-20000)

SQL> begin
  2 THROW_EXCEPTION(-20999, 'aaa');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT--20999, aaa

SQL> begin
  2 THROW_EXCEPTION(-21000, 'aaa');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT-00614, Parameter error: error number argument to throw_exception is out of range(-20999..-20000)

SQL> 
SQL> --test gather stats of partitioned table
SQL> --begin
SQL> conn GS_PL_DBE/root_1234@127.0.0.1:1611

connected.

SQL> 
SQL> drop table if exists TEST_PART_T;

Succeed.

SQL> create table TEST_PART_T(f1 int, f2 real, f3 number, f4 char(30), f5 varchar(30), f6 date, f7 timestamp)
  2 PARTITION BY RANGE(f1)
  3 (
  4  PARTITION p1 values less than(10),
  5  PARTITION p2 values less than(20),
  6  PARTITION p3 values less than(30),
  7  PARTITION p4 values less than(MAXVALUE)
  8 );

Succeed.

SQL> insert into test_part_t values(5, 15, 28, 'abcd', 'abcd', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t values(6, 16, 29, '16', '29', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t values(16, 26, 39, '26', '39', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t values(26, 36, 49, '36', '49', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t values(36, 46, 59, '46', '59', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t values(46, 56, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TEST_PART_T';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TEST_PART_T                                                      6           

1 rows fetched.

SQL> 
SQL> exec dbe_stats.delete_table_stats('GS_PL_DBE');

CT-00944, PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> select table_name,num_rows from user_tables where table_name='TEST_PART_T';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TEST_PART_T                                                      6           

1 rows fetched.

SQL> 
SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE', 'TEST_PART_T');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TEST_PART_T';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TEST_PART_T                                                      6           

1 rows fetched.

SQL> exec dbe_stats.delete_table_stats('GS_PL_DBE', 'TEST_PART_T');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TEST_PART_T';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TEST_PART_T                                                                  

1 rows fetched.

SQL> 
SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE', 'TEST_PART_T', 'P1');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TEST_PART_T';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TEST_PART_T                                                      6           

1 rows fetched.

SQL> exec dbe_stats.delete_table_stats('GS_PL_DBE', 'TEST_PART_T', 'P2');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TEST_PART_T';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TEST_PART_T                                                      6           

1 rows fetched.

SQL> exec dbe_stats.delete_table_stats('GS_PL_DBE', 'TEST_PART_T', 'P1');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TEST_PART_T';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TEST_PART_T                                                      6           

1 rows fetched.

SQL> 
SQL> exec DBE_STATS.PURGE_STATS(systimestamp);

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TEST_PART_T';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TEST_PART_T                                                                  

1 rows fetched.

SQL> 
SQL> --end
SQL> 
SQL> --test gather partitioned table statistic info
SQL> --begin
SQL> drop table if exists TAB_PART_DBE;

Succeed.

SQL> create table TAB_PART_DBE(f1 int, f2 varchar(30), f3 clob)
  2 PARTITION BY RANGE(f1)
  3 (
  4  PARTITION t_p1 values less than(10),
  5  PARTITION t_p2 values less than(20),
  6  PARTITION t_p3 values less than(30),
  7  PARTITION t_p4 values less than(100),
  8  PARTITION t_p5 values less than(MAXVALUE)
  9 );

Succeed.

SQL> 
SQL> create index IDX_TAB_PART_DBE_F12 on TAB_PART_DBE(f1, f2) local(partition t_p1, partition t_p2, partition t_p3, partition t_p4, partition t_p5);

Succeed.

SQL> create index IDX_TAB_PART_DBE_F2 on TAB_PART_DBE(f2);

Succeed.

SQL> 
SQL> insert into TAB_PART_DBE values(1, 'a', 'bbb');

1 rows affected.

SQL> insert into TAB_PART_DBE values(1, 'a', 'tte');

1 rows affected.

SQL> insert into TAB_PART_DBE values(13, 'a', 'aaqqqaaa');

1 rows affected.

SQL> insert into TAB_PART_DBE values(14, 'a', 'sss');

1 rows affected.

SQL> insert into TAB_PART_DBE values(22, 'a', 'aasdsaaa');

1 rows affected.

SQL> insert into TAB_PART_DBE values(22, 'a', 'aaasdfdsaa');

1 rows affected.

SQL> insert into TAB_PART_DBE values(91, 'a', 'aaasdfdsaa');

1 rows affected.

SQL> insert into TAB_PART_DBE values(91, 'b', 'aasdsfaaaa');

1 rows affected.

SQL> insert into TAB_PART_DBE values(92, 'b', 'aaadafdxxaa');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> exec DBE_STATS.FLUSH_DB_STATS_INFO;

PL/SQL procedure successfully completed.

SQL> 
SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from DBA_TAB_MODIFICATIONS where table_name ='TAB_PART_DBE' ORDER BY PARTITION_NAME;

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P1                                                                                                                              2            0            0            0            
GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P2                                                                                                                              2            0            0            0            
GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P3                                                                                                                              2            0            0            0            
GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P4                                                                                                                              3            0            0            0            
GS_PL_DBE                                                        TAB_PART_DBE                                                                                                                                                                                       9            0            0            0            

5 rows fetched.

SQL> 
SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE', 'TAB_PART_DBE', 't_p0', 10);

CT-00932, [1:2] PL/SQL(GS_PL_DBE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
CT-00800, A table (sub)partition T_P0 does not exist.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE', 'TAB_PART_DBE', 't_p1', 10);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE', 'TAB_PART_DBE', 't_p5', 10);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE', 'TAB_PART_DBE', null, 10);

PL/SQL procedure successfully completed.

SQL> 
SQL> select table_name,num_rows from user_tables where table_name='TAB_PART_DBE';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TAB_PART_DBE                                                     9           

1 rows fetched.

SQL> select PARTITION_NAME,PARTITION_POSITION, num_rows from USER_TAB_PARTITIONS where table_name='TAB_PART_DBE' order by PARTITION_POSITION;

PARTITION_NAME                                                   PARTITION_POSITION NUM_ROWS    
---------------------------------------------------------------- ------------------ ------------
T_P1                                                             1                  2           
T_P2                                                             2                  2           
T_P3                                                             3                  2           
T_P4                                                             4                  3           
T_P5                                                             5                  0           

5 rows fetched.

SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from DBA_TAB_MODIFICATIONS where table_name ='TAB_PART_DBE' ORDER BY PARTITION_NAME;

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------

0 rows fetched.

SQL> 
SQL> exec dbe_stats.delete_table_stats('GS_PL_DBE', 'TAB_PART_DBE');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TAB_PART_DBE';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TAB_PART_DBE                                                                 

1 rows fetched.

SQL> select PARTITION_NAME,PARTITION_POSITION, num_rows from USER_TAB_PARTITIONS where table_name='TAB_PART_DBE' order by PARTITION_POSITION;

PARTITION_NAME                                                   PARTITION_POSITION NUM_ROWS    
---------------------------------------------------------------- ------------------ ------------
T_P1                                                             1                              
T_P2                                                             2                              
T_P3                                                             3                              
T_P4                                                             4                              
T_P5                                                             5                              

5 rows fetched.

SQL> 
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE');

PL/SQL procedure successfully completed.

SQL> select table_name,num_rows from user_tables where table_name='TAB_PART_DBE';

TABLE_NAME                                                       NUM_ROWS    
---------------------------------------------------------------- ------------
TAB_PART_DBE                                                     9           

1 rows fetched.

SQL> 
SQL> --(1)CHECK USER_TAB_PARTITIONS
SQL> select PARTITION_NAME,PARTITION_POSITION, num_rows from USER_TAB_PARTITIONS where table_name='TAB_PART_DBE' order by PARTITION_POSITION;

PARTITION_NAME                                                   PARTITION_POSITION NUM_ROWS    
---------------------------------------------------------------- ------------------ ------------
T_P1                                                             1                  2           
T_P2                                                             2                  2           
T_P3                                                             3                  2           
T_P4                                                             4                  3           
T_P5                                                             5                  0           

5 rows fetched.

SQL> select PARTITION_NAME,PARTITION_POSITION, num_rows from ALL_TAB_PARTITIONS where table_name='TAB_PART_DBE' order by PARTITION_POSITION;

PARTITION_NAME                                                   PARTITION_POSITION NUM_ROWS    
---------------------------------------------------------------- ------------------ ------------
T_P1                                                             1                  2           
T_P2                                                             2                  2           
T_P3                                                             3                  2           
T_P4                                                             4                  3           
T_P5                                                             5                  0           

5 rows fetched.

SQL> select PARTITION_NAME,PARTITION_POSITION, num_rows from DBA_TAB_PARTITIONS where table_name='TAB_PART_DBE' order by PARTITION_POSITION;

PARTITION_NAME                                                   PARTITION_POSITION NUM_ROWS    
---------------------------------------------------------------- ------------------ ------------
T_P1                                                             1                  2           
T_P2                                                             2                  2           
T_P3                                                             3                  2           
T_P4                                                             4                  3           
T_P5                                                             5                  0           

5 rows fetched.

SQL> 
SQL> --(2)CHECK DBA_TAB_MODIFICATIONS
SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from DBA_TAB_MODIFICATIONS where table_name ='TAB_PART_DBE' ORDER BY PARTITION_NAME;

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------

0 rows fetched.

SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from ALL_TAB_MODIFICATIONS where table_name ='TAB_PART_DBE' ORDER BY PARTITION_NAME;

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------

0 rows fetched.

SQL> select TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from USER_TAB_MODIFICATIONS where table_name ='TAB_PART_DBE' ORDER BY PARTITION_NAME;

TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------

0 rows fetched.

SQL> 
SQL> --(3)check user_tab_col_statistics 
SQL> select TABLE_NAME,COLUMN_NAME,NUM_DISTINCT, LOW_VALUE,HIGH_VALUE,DENSITY,NUM_NULLS,AVG_COL_LEN,HISTOGRAM  from USER_TAB_COL_STATISTICS where table_name = 'TAB_PART_DBE' ORDER BY COLUMN_NAME;

TABLE_NAME                                                       COLUMN_NAME                                                      NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       DENSITY              NUM_NULLS    AVG_COL_LEN                              HISTOGRAM                                                       
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- -------------------- ------------ ---------------------------------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     F1                                                               6            1                                                                92                                                               0.166666666666667    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     F2                                                               2            a                                                                b                                                                0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     F3                                                                                                                                                                                                                                                                                                                                                         

3 rows fetched.

SQL> select TABLE_NAME,COLUMN_NAME,NUM_DISTINCT, LOW_VALUE,HIGH_VALUE,DENSITY,NUM_NULLS,AVG_COL_LEN,HISTOGRAM  from ALL_TAB_COL_STATISTICS where table_name = 'TAB_PART_DBE' ORDER BY COLUMN_NAME;

TABLE_NAME                                                       COLUMN_NAME                                                      NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       DENSITY              NUM_NULLS    AVG_COL_LEN                              HISTOGRAM                                                       
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- -------------------- ------------ ---------------------------------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     F1                                                               6            1                                                                92                                                               0.166666666666667    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     F2                                                               2            a                                                                b                                                                0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     F3                                                                                                                                                                                                                                                                                                                                                         

3 rows fetched.

SQL> select TABLE_NAME,COLUMN_NAME,NUM_DISTINCT, LOW_VALUE,HIGH_VALUE,DENSITY,NUM_NULLS,AVG_COL_LEN,HISTOGRAM  from DBA_TAB_COL_STATISTICS where table_name = 'TAB_PART_DBE' ORDER BY COLUMN_NAME;

TABLE_NAME                                                       COLUMN_NAME                                                      NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       DENSITY              NUM_NULLS    AVG_COL_LEN                              HISTOGRAM                                                       
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- -------------------- ------------ ---------------------------------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     F1                                                               6            1                                                                92                                                               0.166666666666667    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     F2                                                               2            a                                                                b                                                                0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     F3                                                                                                                                                                                                                                                                                                                                                         

3 rows fetched.

SQL> 
SQL> --(4)CHECK user_part_col_statistics
SQL> select TABLE_NAME,PARTITION_NAME,COLUMN_NAME,NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,DENSITY,NUM_NULLS,AVG_COL_LEN,HISTOGRAM from user_part_col_statistics where table_name = 'TAB_PART_DBE' ORDER BY PARTITION_NAME, COLUMN_NAME;

TABLE_NAME                                                       PARTITION_NAME                                                   COLUMN_NAME                                                      NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       DENSITY              NUM_NULLS    AVG_COL_LEN                              HISTOGRAM                                                       
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- -------------------- ------------ ---------------------------------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     T_P1                                                             F1                                                               1            1                                                                1                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P1                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P1                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P2                                                             F1                                                               2            13                                                               14                                                               0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P2                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P2                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P3                                                             F1                                                               1            22                                                               22                                                               1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P3                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P3                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P4                                                             F1                                                               2            91                                                               92                                                               0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P4                                                             F2                                                               2            a                                                                b                                                                0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P4                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P5                                                             F1                                                                                                                                                                                                                                                                                         FREQUENCY                                                       
TAB_PART_DBE                                                     T_P5                                                             F2                                                                                                                                                                                                                                                                                         FREQUENCY                                                       
TAB_PART_DBE                                                     T_P5                                                             F3                                                                                                                                                                                                                                                                                                                                                         

15 rows fetched.

SQL> select TABLE_NAME,PARTITION_NAME,COLUMN_NAME,NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,DENSITY,NUM_NULLS,AVG_COL_LEN,HISTOGRAM from all_part_col_statistics where table_name = 'TAB_PART_DBE' ORDER BY PARTITION_NAME, COLUMN_NAME;

TABLE_NAME                                                       PARTITION_NAME                                                   COLUMN_NAME                                                      NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       DENSITY              NUM_NULLS    AVG_COL_LEN                              HISTOGRAM                                                       
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- -------------------- ------------ ---------------------------------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     T_P1                                                             F1                                                               1            1                                                                1                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P1                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P1                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P2                                                             F1                                                               2            13                                                               14                                                               0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P2                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P2                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P3                                                             F1                                                               1            22                                                               22                                                               1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P3                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P3                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P4                                                             F1                                                               2            91                                                               92                                                               0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P4                                                             F2                                                               2            a                                                                b                                                                0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P4                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P5                                                             F1                                                                                                                                                                                                                                                                                         FREQUENCY                                                       
TAB_PART_DBE                                                     T_P5                                                             F2                                                                                                                                                                                                                                                                                         FREQUENCY                                                       
TAB_PART_DBE                                                     T_P5                                                             F3                                                                                                                                                                                                                                                                                                                                                         

15 rows fetched.

SQL> select TABLE_NAME,PARTITION_NAME,COLUMN_NAME,NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,DENSITY,NUM_NULLS,AVG_COL_LEN,HISTOGRAM from dba_part_col_statistics where table_name = 'TAB_PART_DBE' ORDER BY PARTITION_NAME, COLUMN_NAME;

TABLE_NAME                                                       PARTITION_NAME                                                   COLUMN_NAME                                                      NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       DENSITY              NUM_NULLS    AVG_COL_LEN                              HISTOGRAM                                                       
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- -------------------- ------------ ---------------------------------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     T_P1                                                             F1                                                               1            1                                                                1                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P1                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P1                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P2                                                             F1                                                               2            13                                                               14                                                               0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P2                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P2                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P3                                                             F1                                                               1            22                                                               22                                                               1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P3                                                             F2                                                               1            a                                                                a                                                                1                    0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P3                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P4                                                             F1                                                               2            91                                                               92                                                               0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P4                                                             F2                                                               2            a                                                                b                                                                0.5                  0                                                     FREQUENCY                                                       
TAB_PART_DBE                                                     T_P4                                                             F3                                                                                                                                                                                                                                                                                                                                                         
TAB_PART_DBE                                                     T_P5                                                             F1                                                                                                                                                                                                                                                                                         FREQUENCY                                                       
TAB_PART_DBE                                                     T_P5                                                             F2                                                                                                                                                                                                                                                                                         FREQUENCY                                                       
TAB_PART_DBE                                                     T_P5                                                             F3                                                                                                                                                                                                                                                                                                                                                         

15 rows fetched.

SQL> 
SQL> --(5)check ALL_TAB_STATISTICS,DBA_TAB_STATISTICS,USER_TAB_STATISTICS
SQL> select OWNER,TABLE_NAME,PARTITION_NAME,PARTITION_POSITION,OBJECT_TYPE,NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_SPACE,CHAIN_CNT,AVG_ROW_LEN,AVG_SPACE_FREELIST_BLOCKS,NUM_FREELIST_BLOCKS,AVG_CACHED_BLOCKS,AVG_CACHE_HIT_RATIO from ALL_TAB_STATISTICS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, PARTITION_NAME;

OWNER                                                            TABLE_NAME                                                       PARTITION_NAME                                                   PARTITION_POSITION                       OBJECT_TYPE NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_SPACE                                CHAIN_CNT                                AVG_ROW_LEN          AVG_SPACE_FREELIST_BLOCKS                NUM_FREELIST_BLOCKS                      AVG_CACHED_BLOCKS                        AVG_CACHE_HIT_RATIO                     

GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P1                                                             1                                        PARTITION   2            1            0                                                                                              36                                                                                                                                                                                      
GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P2                                                             2                                        PARTITION   2            1            0                                                                                              38                                                                                                                                                                                      
GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P3                                                             3                                        PARTITION   2            1            0                                                                                              40                                                                                                                                                                                      
GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P4                                                             4                                        PARTITION   3            1            0                                                                                              41                                                                                                                                                                                      
GS_PL_DBE                                                        TAB_PART_DBE                                                     T_P5                                                             5                                        PARTITION   0            0            0                                                                                              0                                                                                                                                                                                       
GS_PL_DBE                                                        TAB_PART_DBE                                                                                                                                                               TABLE       9            4            0                                                                                              39                                                                                                                                                                                      

6 rows fetched.

SQL> select TABLE_NAME,PARTITION_NAME,PARTITION_POSITION,OBJECT_TYPE,NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_SPACE,CHAIN_CNT,AVG_ROW_LEN,AVG_SPACE_FREELIST_BLOCKS,NUM_FREELIST_BLOCKS,AVG_CACHED_BLOCKS,AVG_CACHE_HIT_RATIO from USER_TAB_STATISTICS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, PARTITION_NAME;

TABLE_NAME                                                       PARTITION_NAME                                                   PARTITION_POSITION                       OBJECT_TYPE NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_SPACE                                CHAIN_CNT                                AVG_ROW_LEN          AVG_SPACE_FREELIST_BLOCKS                NUM_FREELIST_BLOCKS                      AVG_CACHED_BLOCKS                        AVG_CACHE_HIT_RATIO                     
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------- ----------- ------------ ------------ ------------ ---------------------------------------- ---------------------------------------- -------------------- ---------------------------------------- ---------------------------------------- ---------------------------------------- ----------------------------------------
TAB_PART_DBE                                                     T_P1                                                             1                                        PARTITION   2            1            0                                                                                              36                                                                                                                                                                                      
TAB_PART_DBE                                                     T_P2                                                             2                                        PARTITION   2            1            0                                                                                              38                                                                                                                                                                                      
TAB_PART_DBE                                                     T_P3                                                             3                                        PARTITION   2            1            0                                                                                              40                                                                                                                                                                                      
TAB_PART_DBE                                                     T_P4                                                             4                                        PARTITION   3            1            0                                                                                              41                                                                                                                                                                                      
TAB_PART_DBE                                                     T_P5                                                             5                                        PARTITION   0            0            0                                                                                              0                                                                                                                                                                                       
TAB_PART_DBE                                                                                                                                                               TABLE       9            4            0                                                                                              39                                                                                                                                                                                      

6 rows fetched.

SQL> select TABLE_NAME,PARTITION_NAME,PARTITION_POSITION,OBJECT_TYPE,NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_SPACE,CHAIN_CNT,AVG_ROW_LEN,AVG_SPACE_FREELIST_BLOCKS,NUM_FREELIST_BLOCKS,AVG_CACHED_BLOCKS,AVG_CACHE_HIT_RATIO from DBA_TAB_STATISTICS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, PARTITION_NAME;

TABLE_NAME                                                       PARTITION_NAME                                                   PARTITION_POSITION                       OBJECT_TYPE NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_SPACE                                CHAIN_CNT                                AVG_ROW_LEN          AVG_SPACE_FREELIST_BLOCKS                NUM_FREELIST_BLOCKS                      AVG_CACHED_BLOCKS                        AVG_CACHE_HIT_RATIO                     
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------- ----------- ------------ ------------ ------------ ---------------------------------------- ---------------------------------------- -------------------- ---------------------------------------- ---------------------------------------- ---------------------------------------- ----------------------------------------
TAB_PART_DBE                                                     T_P1                                                             1                                        PARTITION   2            1            0                                                                                              36                                                                                                                                                                                      
TAB_PART_DBE                                                     T_P2                                                             2                                        PARTITION   2            1            0                                                                                              38                                                                                                                                                                                      
TAB_PART_DBE                                                     T_P3                                                             3                                        PARTITION   2            1            0                                                                                              40                                                                                                                                                                                      
TAB_PART_DBE                                                     T_P4                                                             4                                        PARTITION   3            1            0                                                                                              41                                                                                                                                                                                      
TAB_PART_DBE                                                     T_P5                                                             5                                        PARTITION   0            0            0                                                                                              0                                                                                                                                                                                       
TAB_PART_DBE                                                                                                                                                               TABLE       9            4            0                                                                                              39                                                                                                                                                                                      

6 rows fetched.

SQL> 
SQL> 
SQL> --(6) ALL_TAB_COLUMNS,DBA_TAB_COLUMNS,USER_TAB_COLUMNS
SQL> select OWNER,TABLE_NAME,COLUMN_NAME,DATA_TYPE,DATA_LENGTH,DATA_PRECISION,DATA_SCALE,NULLABLE,COLUMN_ID,DATA_DEFAULT,NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,NUM_NULLS,NUM_BUCKETS,CHAR_LENGTH,CHAR_USED,SAMPLE_SIZE,HISTOGRAM,AUTO_INCREMENT from ALL_TAB_COLUMNS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, COLUMN_NAME;

OWNER                                                            TABLE_NAME                                                       COLUMN_NAME                                                      DATA_TYPE                                                        DATA_LENGTH  DATA_PRECISION DATA_SCALE   NULLABLE COLUMN_ID    DATA_DEFAULT                                                     NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       NUM_NULLS    NUM_BUCKETS  CHAR_LENGTH  CHAR_USED SAMPLE_SIZE          HISTOGRAM                                                        AUTO_INCREMENT

GS_PL_DBE                                                        TAB_PART_DBE                                                     F1                                                               BINARY_INTEGER                                                   4            0                           Y        0                                                                             6            1                                                                92                                                               0            6            0                      9                    FREQUENCY                                                        N             
GS_PL_DBE                                                        TAB_PART_DBE                                                     F2                                                               VARCHAR                                                          30                                       Y        1                                                                             2            a                                                                b                                                                0            2            30           B         9                    FREQUENCY                                                        N             
GS_PL_DBE                                                        TAB_PART_DBE                                                     F3                                                               CLOB                                                             8000                                     Y        2                                                                                                                                                                                                                                                      0                                                                                                            N             

3 rows fetched.

SQL> select TABLE_NAME,COLUMN_NAME,DATA_TYPE,DATA_LENGTH,DATA_PRECISION,DATA_SCALE,NULLABLE,COLUMN_ID,DATA_DEFAULT,NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,NUM_NULLS,NUM_BUCKETS,CHAR_LENGTH,CHAR_USED,SAMPLE_SIZE,HISTOGRAM,AUTO_INCREMENT from USER_TAB_COLUMNS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, COLUMN_NAME;

TABLE_NAME                                                       COLUMN_NAME                                                      DATA_TYPE                                                        DATA_LENGTH  DATA_PRECISION DATA_SCALE   NULLABLE COLUMN_ID    DATA_DEFAULT                                                     NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       NUM_NULLS    NUM_BUCKETS  CHAR_LENGTH  CHAR_USED SAMPLE_SIZE          HISTOGRAM                                                        AUTO_INCREMENT

TAB_PART_DBE                                                     F1                                                               BINARY_INTEGER                                                   4            0                           Y        0                                                                             6            1                                                                92                                                               0            6            0                      9                    FREQUENCY                                                        N             
TAB_PART_DBE                                                     F2                                                               VARCHAR                                                          30                                       Y        1                                                                             2            a                                                                b                                                                0            2            30           B         9                    FREQUENCY                                                        N             
TAB_PART_DBE                                                     F3                                                               CLOB                                                             8000                                     Y        2                                                                                                                                                                                                                                                      0                                                                                                            N             

3 rows fetched.

SQL> select TABLE_NAME,COLUMN_NAME,DATA_TYPE,DATA_LENGTH,DATA_PRECISION,DATA_SCALE,NULLABLE,COLUMN_ID,DATA_DEFAULT,NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,NUM_NULLS,NUM_BUCKETS,CHAR_LENGTH,CHAR_USED,SAMPLE_SIZE,HISTOGRAM,AUTO_INCREMENT from DBA_TAB_COLUMNS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, COLUMN_NAME;

TABLE_NAME                                                       COLUMN_NAME                                                      DATA_TYPE                                                        DATA_LENGTH  DATA_PRECISION DATA_SCALE   NULLABLE COLUMN_ID    DATA_DEFAULT                                                     NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       NUM_NULLS    NUM_BUCKETS  CHAR_LENGTH  CHAR_USED SAMPLE_SIZE          HISTOGRAM                                                        AUTO_INCREMENT

TAB_PART_DBE                                                     F1                                                               BINARY_INTEGER                                                   4            0                           Y        0                                                                             6            1                                                                92                                                               0            6            0                      9                    FREQUENCY                                                        N             
TAB_PART_DBE                                                     F2                                                               VARCHAR                                                          30                                       Y        1                                                                             2            a                                                                b                                                                0            2            30           B         9                    FREQUENCY                                                        N             
TAB_PART_DBE                                                     F3                                                               CLOB                                                             8000                                     Y        2                                                                                                                                                                                                                                                      0                                                                                                            N             

3 rows fetched.

SQL> 
SQL> --(7)DBA_IND_PARTITIONS,ALL_IND_PARTITIONS
SQL> select INDEX_NAME,COMPOSITE,PARTITION_NAME,PARTITION_POSITION,STATUS,PCT_FREE,INI_TRANS,MAX_TRANS,BLEVEL,LEAF_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY,CLUSTERING_FACTOR,NUM_ROWS from DBA_IND_PARTITIONS where INDEX_name IN ('IDX_TAB_PART_DBE_F12','IDX_TAB_PART_DBE_F1') ORDER BY INDEX_name, PARTITION_NAME;

INDEX_NAME                                                       COMPOSITE PARTITION_NAME                                                   PARTITION_POSITION STATUS  PCT_FREE     INI_TRANS    MAX_TRANS    BLEVEL       LEAF_BLOCKS  DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY CLUSTERING_FACTOR NUM_ROWS    
---------------------------------------------------------------- --------- ---------------------------------------------------------------- ------------------ ------- ------------ ------------ ------------ ------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
IDX_TAB_PART_DBE_F12                                             NO        T_P1                                                             1                  VALID   8            2            255          1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P2                                                             2                  VALID   8            2            255          1            1            2             0.5                     4                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P3                                                             3                  VALID   8            2            255          1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P4                                                             4                  VALID   8            2            255          1            1            3             0.333333333333333       2.66666666666667        1                 3           
IDX_TAB_PART_DBE_F12                                             NO        T_P5                                                             5                  VALID   8            2            255          0            0            0             0                       0                       0                 0           

5 rows fetched.

SQL> select INDEX_NAME,COMPOSITE,PARTITION_NAME,PARTITION_POSITION,STATUS,PCT_FREE,INI_TRANS,MAX_TRANS,BLEVEL,LEAF_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY,CLUSTERING_FACTOR,NUM_ROWS from ALL_IND_PARTITIONS where INDEX_name IN ('IDX_TAB_PART_DBE_F12','IDX_TAB_PART_DBE_F1') ORDER BY INDEX_name, PARTITION_NAME;

INDEX_NAME                                                       COMPOSITE PARTITION_NAME                                                   PARTITION_POSITION STATUS  PCT_FREE     INI_TRANS    MAX_TRANS    BLEVEL       LEAF_BLOCKS  DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY CLUSTERING_FACTOR NUM_ROWS    
---------------------------------------------------------------- --------- ---------------------------------------------------------------- ------------------ ------- ------------ ------------ ------------ ------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
IDX_TAB_PART_DBE_F12                                             NO        T_P1                                                             1                  VALID   8            2            255          1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P2                                                             2                  VALID   8            2            255          1            1            2             0.5                     4                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P3                                                             3                  VALID   8            2            255          1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P4                                                             4                  VALID   8            2            255          1            1            3             0.333333333333333       2.66666666666667        1                 3           
IDX_TAB_PART_DBE_F12                                             NO        T_P5                                                             5                  VALID   8            2            255          0            0            0             0                       0                       0                 0           

5 rows fetched.

SQL> select INDEX_NAME,COMPOSITE,PARTITION_NAME,PARTITION_POSITION,STATUS,PCT_FREE,INI_TRANS,MAX_TRANS,BLEVEL,LEAF_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY,CLUSTERING_FACTOR,NUM_ROWS from USER_IND_PARTITIONS where INDEX_name IN ('IDX_TAB_PART_DBE_F12','IDX_TAB_PART_DBE_F1') ORDER BY INDEX_name, PARTITION_NAME;

INDEX_NAME                                                       COMPOSITE PARTITION_NAME                                                   PARTITION_POSITION STATUS  PCT_FREE     INI_TRANS    MAX_TRANS    BLEVEL       LEAF_BLOCKS  DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY CLUSTERING_FACTOR NUM_ROWS    
---------------------------------------------------------------- --------- ---------------------------------------------------------------- ------------------ ------- ------------ ------------ ------------ ------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
IDX_TAB_PART_DBE_F12                                             NO        T_P1                                                             1                  VALID   8            2            255          1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P2                                                             2                  VALID   8            2            255          1            1            2             0.5                     4                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P3                                                             3                  VALID   8            2            255          1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             NO        T_P4                                                             4                  VALID   8            2            255          1            1            3             0.333333333333333       2.66666666666667        1                 3           
IDX_TAB_PART_DBE_F12                                             NO        T_P5                                                             5                  VALID   8            2            255          0            0            0             0                       0                       0                 0           

5 rows fetched.

SQL> 
SQL> --(8)DBA_IND_STATISTICS,USER_IND_STATISTICS
SQL> select INDEX_NAME,TABLE_NAME,PARTITION_NAME,PARTITION_POSITION,OBJECT_TYPE,BLEVEL,LEAF_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY,CLUSTERING_FACTOR,NUM_ROWS from DBA_IND_STATISTICS where INDEX_name IN ('IDX_TAB_PART_DBE_F12','IDX_TAB_PART_DBE_F1') ORDER BY INDEX_name, PARTITION_NAME;

INDEX_NAME                                                       TABLE_NAME                                                       PARTITION_NAME                                                   PARTITION_POSITION                       OBJECT_TYPE BLEVEL       LEAF_BLOCKS  DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY CLUSTERING_FACTOR NUM_ROWS    
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------- ----------- ------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P1                                                             1                                        PARTITION   1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P2                                                             2                                        PARTITION   1            1            2             0.5                     4                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P3                                                             3                                        PARTITION   1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P4                                                             4                                        PARTITION   1            1            3             0.333333333333333       2.66666666666667        1                 3           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P5                                                             5                                        PARTITION   0            0            0             0                       0                       0                 0           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                                                                                                                               INDEX       0            0            0             0                       0                       0                 9           

6 rows fetched.

SQL> select INDEX_NAME,TABLE_NAME,PARTITION_NAME,PARTITION_POSITION,OBJECT_TYPE,BLEVEL,LEAF_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY,CLUSTERING_FACTOR,NUM_ROWS from USER_IND_STATISTICS where INDEX_name IN ('IDX_TAB_PART_DBE_F12','IDX_TAB_PART_DBE_F1') ORDER BY INDEX_name, PARTITION_NAME;

INDEX_NAME                                                       TABLE_NAME                                                       PARTITION_NAME                                                   PARTITION_POSITION                       OBJECT_TYPE BLEVEL       LEAF_BLOCKS  DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY CLUSTERING_FACTOR NUM_ROWS    
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------- ----------- ------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P1                                                             1                                        PARTITION   1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P2                                                             2                                        PARTITION   1            1            2             0.5                     4                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P3                                                             3                                        PARTITION   1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P4                                                             4                                        PARTITION   1            1            3             0.333333333333333       2.66666666666667        1                 3           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P5                                                             5                                        PARTITION   0            0            0             0                       0                       0                 0           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                                                                                                                               INDEX       0            0            0             0                       0                       0                 9           

6 rows fetched.

SQL> select INDEX_NAME,TABLE_NAME,PARTITION_NAME,PARTITION_POSITION,OBJECT_TYPE,BLEVEL,LEAF_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY,CLUSTERING_FACTOR,NUM_ROWS from ALL_IND_STATISTICS where INDEX_name IN ('IDX_TAB_PART_DBE_F12','IDX_TAB_PART_DBE_F1') ORDER BY INDEX_name, PARTITION_NAME;

INDEX_NAME                                                       TABLE_NAME                                                       PARTITION_NAME                                                   PARTITION_POSITION                       OBJECT_TYPE BLEVEL       LEAF_BLOCKS  DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY CLUSTERING_FACTOR NUM_ROWS    
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------- ----------- ------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P1                                                             1                                        PARTITION   1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P2                                                             2                                        PARTITION   1            1            2             0.5                     4                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P3                                                             3                                        PARTITION   1            1            1             1                       8                       1                 2           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P4                                                             4                                        PARTITION   1            1            3             0.333333333333333       2.66666666666667        1                 3           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                     T_P5                                                             5                                        PARTITION   0            0            0             0                       0                       0                 0           
IDX_TAB_PART_DBE_F12                                             TAB_PART_DBE                                                                                                                                                               INDEX       0            0            0             0                       0                       0                 9           

6 rows fetched.

SQL> 
SQL> --(9)ALL_HISTOGRAMS,DBA_HISTOGRAMS,USER_HISTOGRAMS
SQL> select TABLE_NAME,COLUMN_NAME,ENDPOINT_NUMBER,ENDPOINT_VALUE,ENDPOINT_ACTUAL_VALUE from ALL_HISTOGRAMS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, COLUMN_NAME, ENDPOINT_NUMBER;

TABLE_NAME                                                       COLUMN_NAME                                                      ENDPOINT_NUMBER ENDPOINT_VALUE ENDPOINT_ACTUAL_VALUE                                           
---------------------------------------------------------------- ---------------------------------------------------------------- --------------- -------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     F1                                                               1               2              1                                                               
TAB_PART_DBE                                                     F1                                                               2               3              13                                                              
TAB_PART_DBE                                                     F1                                                               3               4              14                                                              
TAB_PART_DBE                                                     F1                                                               4               6              22                                                              
TAB_PART_DBE                                                     F1                                                               5               8              91                                                              
TAB_PART_DBE                                                     F1                                                               6               9              92                                                              
TAB_PART_DBE                                                     F2                                                               1               7              a                                                               
TAB_PART_DBE                                                     F2                                                               2               9              b                                                               

8 rows fetched.

SQL> select TABLE_NAME,COLUMN_NAME,ENDPOINT_NUMBER,ENDPOINT_VALUE,ENDPOINT_ACTUAL_VALUE from DBA_HISTOGRAMS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, COLUMN_NAME, ENDPOINT_NUMBER;

TABLE_NAME                                                       COLUMN_NAME                                                      ENDPOINT_NUMBER ENDPOINT_VALUE ENDPOINT_ACTUAL_VALUE                                           
---------------------------------------------------------------- ---------------------------------------------------------------- --------------- -------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     F1                                                               1               2              1                                                               
TAB_PART_DBE                                                     F1                                                               2               3              13                                                              
TAB_PART_DBE                                                     F1                                                               3               4              14                                                              
TAB_PART_DBE                                                     F1                                                               4               6              22                                                              
TAB_PART_DBE                                                     F1                                                               5               8              91                                                              
TAB_PART_DBE                                                     F1                                                               6               9              92                                                              
TAB_PART_DBE                                                     F2                                                               1               7              a                                                               
TAB_PART_DBE                                                     F2                                                               2               9              b                                                               

8 rows fetched.

SQL> select TABLE_NAME,COLUMN_NAME,ENDPOINT_NUMBER,ENDPOINT_VALUE,ENDPOINT_ACTUAL_VALUE from USER_HISTOGRAMS where table_name = 'TAB_PART_DBE' ORDER BY TABLE_NAME, COLUMN_NAME, ENDPOINT_NUMBER;

TABLE_NAME                                                       COLUMN_NAME                                                      ENDPOINT_NUMBER ENDPOINT_VALUE ENDPOINT_ACTUAL_VALUE                                           
---------------------------------------------------------------- ---------------------------------------------------------------- --------------- -------------- ----------------------------------------------------------------
TAB_PART_DBE                                                     F1                                                               1               2              1                                                               
TAB_PART_DBE                                                     F1                                                               2               3              13                                                              
TAB_PART_DBE                                                     F1                                                               3               4              14                                                              
TAB_PART_DBE                                                     F1                                                               4               6              22                                                              
TAB_PART_DBE                                                     F1                                                               5               8              91                                                              
TAB_PART_DBE                                                     F1                                                               6               9              92                                                              
TAB_PART_DBE                                                     F2                                                               1               7              a                                                               
TAB_PART_DBE                                                     F2                                                               2               9              b                                                               

8 rows fetched.

SQL> 
SQL> --end
SQL> 
SQL> --test case: fuzz test
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> 
SQL> --1.gsql_fuzz_DBE_LOB_GET_LENGTH
SQL> --2.gsql_fuzz_DBE_LOB_SUBSTR
SQL> drop table if exists pl_lob_tab;

Succeed.

SQL> create table pl_lob_tab(a int, b blob, c clob);

Succeed.

SQL> 
SQL> select DBE_LOB.substr('', 1, 2) from pl_lob_tab;

DBE_LOB.SUBSTR('', 1, 2)
------------------------

0 rows fetched.

SQL> select DBE_LOB.substr(null, 1, 2) from pl_lob_tab;

DBE_LOB.SUBSTR(NULL, 1, 2)
--------------------------

0 rows fetched.

SQL> select DBE_LOB.substr(c, null, 2) from pl_lob_tab;

DBE_LOB.SUBSTR(C, NULL, 2)                                      
----------------------------------------------------------------

0 rows fetched.

SQL> select DBE_LOB.substr(c, '', 2) from pl_lob_tab;

DBE_LOB.SUBSTR(C, '', 2)                                        
----------------------------------------------------------------

0 rows fetched.

SQL> select DBE_LOB.substr(c, 1, '') from pl_lob_tab;

DBE_LOB.SUBSTR(C, 1, '')                                        
----------------------------------------------------------------

0 rows fetched.

SQL> select DBE_LOB.substr(c, 1, null) from pl_lob_tab;

DBE_LOB.SUBSTR(C, 1, NULL)                                      
----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> select DBE_LOB.GET_LENGTH('') from pl_lob_tab;

DBE_LOB.GET_LENGTH('')
----------------------

0 rows fetched.

SQL> select DBE_LOB.GET_LENGTH(null) from pl_lob_tab;

DBE_LOB.GET_LENGTH(NULL)
------------------------

0 rows fetched.

SQL> select DBE_LOB.GET_LENGTH(NULL) from pl_lob_tab;

DBE_LOB.GET_LENGTH(NULL)
------------------------

0 rows fetched.

SQL> 
SQL> drop table if exists pl_lob_tab;

Succeed.

SQL> 
SQL> 
SQL> --3.gsql_fuzz_DBE_OUTPUT_PUT
SQL> --4.gsql_fuzz_DBE_OUTPUT_PUT_LINE
SQL> begin
  2 	dbe_output.print(null);
  3 	dbe_output.print('');
  4 	dbe_output.print_line(null);
  5 	dbe_output.print_line('');	
  6 end;
  7 /






PL/SQL procedure successfully completed.

SQL> 
SQL> --5.gsql_fuzz_dbe_random_get_value
SQL> select dbe_random.get_string('U', null);

CT-00614, [1:30]Parameter error: the len of random get_string is incorrect
SQL> 
SQL> select dbe_random.get_value(0, null) from dual;

CT-00614, [1:29]Parameter error: the second argument of random get_value is incorrect
SQL> select dbe_random.get_value(0, '') from dual;

CT-00614, [1:29]Parameter error: the second argument of random get_value is incorrect
SQL> select dbe_random.get_value(null,0) from dual;

CT-00614, [1:29]Parameter error: the first argument of random get_value is incorrect
SQL> select dbe_random.get_value('',0) from dual;

CT-00614, [1:29]Parameter error: the first argument of random get_value is incorrect
SQL> 
SQL> --6.gsql_fuzz_dbe_SQL_RETURN_CURSOR
SQL> declare
  2 v_refcur2 SYS_REFCURSOR;
  3 begin
  4 OPEN v_refcur2 FOR SELECT 1 FROM dual;
  5 OPEN v_refcur2 FOR dbe_sql.return_cursor(v_refcur2);
  6 end;
  7 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[5:20] PLC-00601 Sql syntax error: procedure is not allowed here.
[7:1] PLC-00954 more text expected but EOF found

SQL> 
SQL> declare
  2 v_refcur2 SYS_REFCURSOR;
  3 begin
  4 OPEN v_refcur2 FOR dbe_sql.return_cursor(null);
  5 end;
  6 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[4:42] PLC-00916 PL/SQL:syntax error(1st argu type must be sys_refcursor)
[6:1] PLC-00954 more text expected but EOF found

SQL> 
SQL> declare
  2 v_refcur2 SYS_REFCURSOR;
  3 begin
  4 OPEN v_refcur2 FOR dbe_sql.return_cursor(v_refcur2);
  5 end;
  6 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[4:20] PLC-00601 Sql syntax error: procedure is not allowed here.
[6:1] PLC-00954 more text expected but EOF found

SQL> 
SQL> --7.gsql_fuzz_dbe_STANDARD_THROW_EXCEPTION
SQL> begin
  2 THROW_EXCEPTION(1, 'aaa', null);
  3 end;
  4 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[2:17] PLC-00614 Parameter error: error flag

SQL> 
SQL> begin
  2 THROW_EXCEPTION(1, 'aaa', '');
  3 end;
  4 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[2:17] PLC-00614 Parameter error: error flag

SQL> 
SQL> begin
  2 THROW_EXCEPTION(1, '');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT-00614, Parameter error: error number argument to throw_exception is out of range(-20999..-20000)

SQL> 
SQL> begin
  2 THROW_EXCEPTION(1, null);
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT-00614, Parameter error: error number argument to throw_exception is out of range(-20999..-20000)

SQL> 
SQL> begin
  2 THROW_EXCEPTION(null, 'a');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT-00614, Parameter error: error number argument to throw_exception

SQL> 
SQL> begin
  2 THROW_EXCEPTION('', 'a');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT-00614, Parameter error: error number argument to throw_exception

SQL> 
SQL> begin
  2 THROW_EXCEPTION(' ', 'a');
  3 end;
  4 /

CT-00932, [2:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:1] PL/SQL(DBE_STD.THROW_EXCEPTION) terminated with execute errors
[2:17] CT-00636, Invalid number -- text is empty or too long

SQL> 
SQL> --8.gsql_fuzz_dbe_STANDARD_SLEEP
SQL> select sleep(null);

SLEEP(NULL)
-----------
           

1 rows fetched.

SQL> select sleep('');

SLEEP('')
---------
         

1 rows fetched.

SQL> 
SQL> --9.gsql_fuzz_dbe_STANDARD_SQL_ERR_CODE
SQL> --10.gsql_fuzz_dbe_STANDARD_SQL_ERR_MSG
SQL> declare 
  2 v_age number;
  3 begin 
  4 v_age:=89;
  5 v_age:= v_age/0;
  6 exception
  7  when others then
  8  SYS.dbe_output.print_line(SQL_ERR_CODE(null)||SQL_ERR_MSG);
  9  end;
 10 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[8:28] PLC-00615 Invalid argument number for SQL_ERR_CODE, min=0, max=0
[10:1] PLC-00954 more text expected but EOF found

SQL> 
SQL> declare 
  2 v_age number;
  3 begin 
  4 v_age:=89;
  5 v_age:= v_age/0;
  6 exception
  7  when others then
  8  SYS.dbe_output.print_line(SQL_ERR_CODE||SQL_ERR_MSG(null));
  9  end;
 10 /

CT-00932, [8:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[8:2] PL/SQL(SYS.PRINT_LINE) terminated with execute errors
[8:42] PL/SQL(DBE_STD.SQL_ERR_MSG) terminated with execute errors
[8:54] CT-00614, Parameter error: the error code argument of sql_err_msg is incorrect

SQL> 
SQL> declare 
  2 v_age number;
  3 begin 
  4 v_age:=89;
  5 v_age:= v_age/0;
  6 exception
  7  when others then
  8  SYS.dbe_output.print_line(SQL_ERR_CODE||SQL_ERR_MSG(''));
  9  end;
 10 /

CT-00932, [8:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[8:2] PL/SQL(SYS.PRINT_LINE) terminated with execute errors
[8:42] PL/SQL(DBE_STD.SQL_ERR_MSG) terminated with execute errors
[8:54] CT-00614, Parameter error: the error code argument of sql_err_msg is incorrect

SQL> 
SQL> --11.gsql_fuzz_dbe_STATS_AUTO_SAMPLE_SIZE
SQL> select dbe_stats.AUTO_SAMPLE_SIZE(null);

CT-00615, [1:8]Invalid argument number for AUTO_SAMPLE_SIZE, min=0, max=0
SQL> select dbe_stats.AUTO_SAMPLE_SIZE('');

CT-00615, [1:8]Invalid argument number for AUTO_SAMPLE_SIZE, min=0, max=0
SQL> 
SQL> 
SQL> --12.gsql_fuzz_dbe_STATS_FLUSH_DB_STATS_INFO
SQL> select DBE_STATS.FLUSH_DB_STATS_INFO(null);

CT-00614, [1:8]Parameter error: function FLUSH_DB_STATS_INFO doesn't support argument.
SQL> select DBE_STATS.FLUSH_DB_STATS_INFO('');

CT-00614, [1:8]Parameter error: function FLUSH_DB_STATS_INFO doesn't support argument.
SQL> 
SQL> --13.gsql_fuzz_dbe_STATS_COLLECT_SCHEMA_STATS
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100, true, null);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100, true, '');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100, null);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', 100, '');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', null);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('GS_PL_DBE', '');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS(null);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:33] CT-00614, Parameter error: schema

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('');

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
[1:33] CT-00614, Parameter error: schema

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS(' ');

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_SCHEMA_STATS) terminated with execute errors
CT-00781, The user   does not exist.

SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS(''=>'GS_PL_DBE');

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:35] PLC-00601 Sql syntax error: ',' expected but = found

SQL> 
SQL> --14.gsql_fuzz_dbe_STATS_GATHER_TABLE_STATS
SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','TAB_PART_DBE', null,100, true, null);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','TAB_PART_DBE', '',100, true, '');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','TAB_PART_DBE', '',100, null);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','TAB_PART_DBE', '',100, '');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','TAB_PART_DBE', null);

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','TAB_PART_DBE', '');

PL/SQL procedure successfully completed.

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE',null);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:44] CT-00614, Parameter error: name

SQL> exec DBE_STATS.COLLECT_TABLE_STATS('GS_PL_DBE','');

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:44] CT-00614, Parameter error: name

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(' ');

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for COLLECT_TABLE_STATS, min=2, max=6

SQL> exec DBE_STATS.COLLECT_TABLE_STATS(''=>'GS_PL_DBE');

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:34] PLC-00601 Sql syntax error: ',' expected but = found

SQL> 
SQL> --15.gsql_fuzz_dbe_STATS_DELETE_SCHEMA_STATS
SQL> exec dbe_stats.delete_table_stats('sys', null, null);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
[1:38] CT-00614, Parameter error: name

SQL> exec dbe_stats.delete_table_stats('sys', '', '', '', '', '');

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for DELETE_TABLE_STATS, min=2, max=3

SQL> 
SQL> 
SQL> --16.gsql_fuzz_dbe_STATS_DELETE_TABLE_STATS
SQL> exec dbe_stats.DELETE_TABLE_STATS('sys', 'pl_lob_tab', null);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
CT-00843, The table or view SYS.PL_LOB_TAB does not exist.

SQL> exec dbe_stats.DELETE_TABLE_STATS('sys', 'pl_lob_tab','');

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
CT-00843, The table or view SYS.PL_LOB_TAB does not exist.

SQL> exec dbe_stats.DELETE_TABLE_STATS('sys', null);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
[1:38] CT-00614, Parameter error: name

SQL> exec dbe_stats.DELETE_TABLE_STATS('sys', '');

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.DELETE_TABLE_STATS) terminated with execute errors
[1:38] CT-00614, Parameter error: name

SQL> 
SQL> --17.gsql_fuzz_dbe_STATS_PURGE_STATS
SQL> exec dbe_stats.PURGE_STATS('');

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.PURGE_STATS) terminated with execute errors
[1:24] CT-00614, Parameter error: before

SQL> exec dbe_stats.PURGE_STATS(NULL);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.PURGE_STATS) terminated with execute errors
[1:24] CT-00614, Parameter error: before

SQL> 
SQL> --18.compile_schema
SQL> exec DBE_UTIL.COMPILE_SCHEMA('GS_PL_DBE',null);

PL/SQL procedure successfully completed.

SQL> exec DBE_UTIL.COMPILE_SCHEMA('GS_PL_DBE','', '');

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for COMPILE_SCHEMA, min=1, max=2

SQL> 
SQL> --19.get_time
SQL> select dbe_util.get_date_time(null);

CT-00615, [1:8]Invalid argument number for GET_DATE_TIME, min=0, max=0
SQL> 
SQL> set serveroutput off;

OFF
SQL> 
SQL> 
SQL> --test for DBE_STATS.COLLECT_INDEX_STATS
SQL> drop table if exists TEST_GATHER_INDEX_TABLE;

Succeed.

SQL> create table TEST_GATHER_INDEX_TABLE(a int, b int, c int,d VARCHAR2(10));

Succeed.

SQL> create index INDEX_T1 on TEST_GATHER_INDEX_TABLE(a);

Succeed.

SQL> insert into TEST_GATHER_INDEX_TABLE values (1, 2, -2, 'a');

1 rows affected.

SQL> insert into TEST_GATHER_INDEX_TABLE values (2, 3, -2, 'a');

1 rows affected.

SQL> call DBE_STATS.PURGE_STATS(sysdate);

PL/SQL procedure successfully completed.

SQL> select LEVEL_BLOCKS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where NAME = 'INDEX_T1';

LEVEL_BLOCKS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ----------------------- -----------------------
                                                            

1 rows fetched.

SQL> call DBE_STATS.COLLECT_INDEX_STATS('SYS','INDEX_T1', 'TEST_GATHER_INDEX_TABLE');

PL/SQL procedure successfully completed.

SQL> select LEVEL_BLOCKS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where NAME = 'INDEX_T1';

LEVEL_BLOCKS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ----------------------- -----------------------
1            0.5                     4                      

1 rows fetched.

SQL> --expect success
SQL> call DBE_STATS.COLLECT_INDEX_STATS('SYS','INDEX_T1', 'TEST_GATHER_INDEX_TABLE');

PL/SQL procedure successfully completed.

SQL> call DBE_STATS.COLLECT_INDEX_STATS('SYS','INDEX_T1', 'TEST_GATHER_INDEX_TABLE');

PL/SQL procedure successfully completed.

SQL> call DBE_STATS.PURGE_STATS(sysdate-101);

PL/SQL procedure successfully completed.

SQL> call DBE_STATS.COLLECT_INDEX_STATS('SYS','INDEX_T1', 'TEST_GATHER_INDEX_TABLE', 0.000001);

PL/SQL procedure successfully completed.

SQL> call DBE_STATS.COLLECT_INDEX_STATS('SYS','INDEX_T1', 'TEST_GATHER_INDEX_TABLE', 100);

PL/SQL procedure successfully completed.

SQL> --expect error
SQL> call DBE_STATS.COLLECT_INDEX_STATS('SYS','INDEX_T1', 'TEST_GATHER_INDEX_TABLE', 0.0000001);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_INDEX_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: the valid range of sample_ratio is [0.000001,100]

SQL> call DBE_STATS.COLLECT_INDEX_STATS('SYS','INDEX_T1', 'TEST_GATHER_INDEX_TABLE', 100.00001);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_INDEX_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: the valid range of sample_ratio is [0.000001,100]

SQL> call DBE_STATS.COLLECT_INDEX_STATS(NULL,'INDEX_T1', 'TEST_GATHER_INDEX_TABLE');

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_INDEX_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: table_schema

SQL> call DBE_STATS.COLLECT_INDEX_STATS(NULL,'INDEX_T1', 'TEST_GATHER_INDEX_TABLE');

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_INDEX_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: table_schema

SQL> call DBE_STATS.COLLECT_INDEX_STATS(NULL, NULL, NULL);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_INDEX_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: table_schema

SQL> call DBE_STATS.COLLECT_INDEX_STATS(NULL, NULL, NULL);

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_INDEX_STATS) terminated with execute errors
[1:32] CT-00614, Parameter error: table_schema

SQL> call DBE_STATS.COLLECT_INDEX_STATS('SYS');

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for COLLECT_INDEX_STATS, min=3, max=4

SQL> call DBE_STATS.COLLECT_INDEX_STATS(NULL);

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00615 Invalid argument number for COLLECT_INDEX_STATS, min=3, max=4

SQL> drop index INDEX_T1 on TEST_GATHER_INDEX_TABLE;

Succeed.

SQL> drop table TEST_GATHER_INDEX_TABLE;

Succeed.

SQL> 


