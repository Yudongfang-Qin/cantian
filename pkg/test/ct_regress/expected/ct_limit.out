

SQL> DROP TABLE IF EXISTS T_LIMIT_1;

Succeed.

SQL> DROP TABLE IF EXISTS T_LIMIT_2;

Succeed.

SQL> CREATE TABLE T_LIMIT_1 (F_INT1 INT, F_INT2 INT, F_CHAR CHAR(16), F_DATE TIMESTAMP);

Succeed.

SQL> CREATE TABLE T_LIMIT_2 (F_INT1 INT, F_INT2 INT, F_CHAR CHAR(16), F_DATE TIMESTAMP);

Succeed.

SQL> 
SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 LIMIT 2,1 LIMIT 2,1;

CT-00601, [1:58]Sql syntax error: INVALID LIMIT
SQL> SELECT * FROM T_LIMIT_1 LIMIT 4 LIMIT 4 UNION ALL SELECT * FROM T_LIMIT_2 LIMIT 4 OFFSET 1;

CT-00601, [1:33]Sql syntax error: INVALID LIMIT
SQL> 
SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 LIMIT 2,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> SELECT * FROM (SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 LIMIT 2,1);

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT F_INT1 FROM T_LIMIT_1 ORDER BY F_INT1 LIMIT 2) UNION ALL (SELECT F_INT1 FROM T_LIMIT_2 ORDER BY F_INT1 DESC LIMIT 1) ORDER BY F_INT1 DESC LIMIT 1,1;

F_INT1      
------------

0 rows fetched.

SQL> (SELECT F_INT1 FROM T_LIMIT_1 GROUP BY F_INT1) UNION ALL (SELECT F_INT1 FROM T_LIMIT_2 GROUP BY F_INT1) ORDER BY F_INT1 DESC LIMIT 2,4;

F_INT1      
------------

0 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 UNION ALL SELECT * FROM T_LIMIT_2 ORDER BY F_INT1,F_INT2 DESC LIMIT 4 OFFSET 1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) ORDER BY F_INT1,F_INT2 DESC LIMIT 3,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) ORDER BY F_DATE DESC,F_INT1 DESC LIMIT 0,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_INT1,F_INT2 DESC LIMIT 1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_DATE DESC,F_INT1 DESC LIMIT 1 OFFSET 0;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1 WHERE F_INT1 = 1) UNION ALL (SELECT * FROM T_LIMIT_2 WHERE F_INT2 = 3) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_INT1,F_INT2 DESC LIMIT 2,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> 
SQL> INSERT INTO T_LIMIT_1 VALUES(1,2,'A','2017-12-11 14:08:00.1408');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(3,4,'C','2017-12-12 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(1,3,'A','2017-12-11 14:18:00.1418');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(2,3,'B','2017-12-11 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(4,2,'A','2017-12-11 14:08:00.1408');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(6,4,'C','2017-12-12 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(4,3,'A','2017-12-11 14:18:00.1418');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(5,3,'B','2017-12-11 16:08:00.1608');

1 rows affected.

SQL> 
SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 LIMIT 2,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
2            3            B                2017-12-11 16:08:00.160800      

1 rows fetched.

SQL> SELECT * FROM (SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 LIMIT 2,1);

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
2            3            B                2017-12-11 16:08:00.160800      

1 rows fetched.

SQL> (SELECT F_INT1 FROM T_LIMIT_1 ORDER BY F_INT1 LIMIT 2) UNION ALL (SELECT F_INT1 FROM T_LIMIT_2 ORDER BY F_INT1 DESC LIMIT 1) ORDER BY F_INT1 DESC LIMIT 1,1;

F_INT1      
------------
1           

1 rows fetched.

SQL> (SELECT F_INT1 FROM T_LIMIT_1 GROUP BY F_INT1) UNION ALL (SELECT F_INT1 FROM T_LIMIT_2 GROUP BY F_INT1) ORDER BY F_INT1 DESC LIMIT 2,4;

F_INT1      
------------
4           
3           
2           
1           

4 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 UNION ALL SELECT * FROM T_LIMIT_2 ORDER BY F_INT1,F_INT2 DESC LIMIT 4 OFFSET 1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
1            2            A                2017-12-11 14:08:00.140800      
2            3            B                2017-12-11 16:08:00.160800      
3            4            C                2017-12-12 16:08:00.160800      
4            3            A                2017-12-11 14:18:00.141800      

4 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) ORDER BY F_INT1,F_INT2 DESC LIMIT 3,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
3            4            C                2017-12-12 16:08:00.160800      

1 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) ORDER BY F_DATE DESC,F_INT1 DESC LIMIT 0,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
6            4            C                2017-12-12 16:08:00.160800      

1 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_INT1,F_INT2 DESC LIMIT 1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
1            3            A                2017-12-11 14:18:00.141800      

1 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_DATE DESC,F_INT1 DESC LIMIT 1 OFFSET 0;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
6            4            C                2017-12-12 16:08:00.160800      

1 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1 WHERE F_INT1 = 1) UNION ALL (SELECT * FROM T_LIMIT_2 WHERE F_INT2 = 3) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_INT1,F_INT2 DESC LIMIT 2,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
1            2            A                2017-12-11 14:08:00.140800      

1 rows fetched.

SQL> 
SQL> DELETE FROM T_LIMIT_1;

4 rows affected.

SQL> DELETE FROM T_LIMIT_2;

4 rows affected.

SQL> DROP TABLE IF EXISTS T_LIMIT_3;

Succeed.

SQL> CREATE TABLE T_LIMIT_3 (F_INT1 INT, F_INT3 INT, F_CHAR2 CHAR(16));

Succeed.

SQL> INSERT INTO T_LIMIT_1 VALUES(1,2,'A','2017-12-11 14:08:00.1408');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(3,4,'C','2017-12-12 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(1,3,'A','2017-12-11 14:18:00.1418');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(2,3,'B','2017-12-11 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(4,2,'A','2017-12-11 14:08:00.1408');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(6,4,'C','2017-12-12 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(4,3,'A','2017-12-11 14:18:00.1418');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(5,3,'B','2017-12-11 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_3 VALUES(1,3,'A');

1 rows affected.

SQL> INSERT INTO T_LIMIT_3 VALUES(2,3,'B');

1 rows affected.

SQL> INSERT INTO T_LIMIT_3 VALUES(4,3,'A');

1 rows affected.

SQL> INSERT INTO T_LIMIT_3 VALUES(5,3,'B');

1 rows affected.

SQL> 
SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 LIMIT 2::bigint + 0::bigint, '1'::bigint;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
2            3            B                2017-12-11 16:08:00.160800      

1 rows fetched.

SQL> SELECT * FROM (SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 LIMIT  1::bigint + '1', 1);

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
2            3            B                2017-12-11 16:08:00.160800      

1 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 OFFSET '2' + 0::bigint;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
2            3            B                2017-12-11 16:08:00.160800      
3            4            C                2017-12-12 16:08:00.160800      

2 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1,F_INT2 OFFSET '2' + 0::bigint LIMIT '10';

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
2            3            B                2017-12-11 16:08:00.160800      
3            4            C                2017-12-12 16:08:00.160800      

2 rows fetched.

SQL> SELECT (SELECT AVG(F_CHAR) FROM T_LIMIT_1 GROUP BY F_INT1 LIMIT 0), F_INT1, F_CHAR FROM T_LIMIT_1 ORDER BY F_INT1 LIMIT (1+2);

(SELECT AVG(F_CHAR) FROM T_LIMIT_1 GROUP BY F_INT1 LIMIT 0) F_INT1       F_CHAR          
----------------------------------------------------------- ------------ ----------------
                                                            1            A               
                                                            1            A               
                                                            2            B               

3 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1 OFFSET 2;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
2            3            B                2017-12-11 16:08:00.160800      
3            4            C                2017-12-12 16:08:00.160800      

2 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1 OFFSET 2+0;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
2            3            B                2017-12-11 16:08:00.160800      
3            4            C                2017-12-12 16:08:00.160800      

2 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 ORDER BY F_INT1 LIMIT NULL;

CT-00601, Sql syntax error: limit must not be null
SQL> DROP TABLE IF EXISTS T_LIMIT_3;

Succeed.

SQL> DELETE FROM T_LIMIT_1;

4 rows affected.

SQL> DELETE FROM T_LIMIT_2;

4 rows affected.

SQL> 
SQL> CREATE INDEX T_LIMIT_1_INDEX_1 ON T_LIMIT_1(F_INT1);

Succeed.

SQL> CREATE INDEX T_LIMIT_2_INDEX_1 ON T_LIMIT_2(F_INT1);

Succeed.

SQL> 
SQL> SELECT * FROM T_LIMIT_1 WHERE F_INT1 >1 ORDER BY F_INT1,F_INT2 LIMIT 2,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> SELECT * FROM (SELECT * FROM T_LIMIT_1 WHERE F_INT1 = 1 ORDER BY F_INT1,F_INT2 LIMIT 2,1);

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT F_INT1 FROM T_LIMIT_1 ORDER BY F_INT1 LIMIT 2) UNION ALL (SELECT F_INT1 FROM T_LIMIT_2 ORDER BY F_INT1 DESC LIMIT 1) ORDER BY F_INT1 DESC LIMIT 1,1;

F_INT1      
------------

0 rows fetched.

SQL> (SELECT F_INT1 FROM T_LIMIT_1 GROUP BY F_INT1) UNION ALL (SELECT F_INT1 FROM T_LIMIT_2 GROUP BY F_INT1) ORDER BY F_INT1 DESC LIMIT 2,4;

F_INT1      
------------

0 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 UNION ALL SELECT * FROM T_LIMIT_2 ORDER BY F_INT1,F_INT2 DESC LIMIT 4 OFFSET 1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1 WHERE F_INT1 >1 ) UNION ALL (SELECT * FROM T_LIMIT_2) ORDER BY F_INT1,F_INT2 DESC LIMIT 3,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) ORDER BY F_DATE DESC,F_INT1 DESC LIMIT 0,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_INT1,F_INT2 DESC LIMIT 1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2 WHERE F_INT1 >1 ) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_DATE DESC,F_INT1 DESC LIMIT 1 OFFSET 0;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1 WHERE F_INT1 = 1) UNION ALL (SELECT * FROM T_LIMIT_2 WHERE F_INT2 = 3) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_INT1,F_INT2 DESC LIMIT 2,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------

0 rows fetched.

SQL> 
SQL> INSERT INTO T_LIMIT_1 VALUES(1,2,'A','2017-12-11 14:08:00.1408');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(3,4,'C','2017-12-12 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(1,3,'A','2017-12-11 14:18:00.1418');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(2,3,'B','2017-12-11 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(4,2,'A','2017-12-11 14:08:00.1408');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(6,4,'C','2017-12-12 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(4,3,'A','2017-12-11 14:18:00.1418');

1 rows affected.

SQL> INSERT INTO T_LIMIT_2 VALUES(5,3,'B','2017-12-11 16:08:00.1608');

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> 
SQL> SELECT * FROM T_LIMIT_1 WHERE F_INT1 >1 ORDER BY F_INT1,F_INT2 LIMIT 1,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
3            4            C                2017-12-12 16:08:00.160800      

1 rows fetched.

SQL> SELECT * FROM (SELECT * FROM T_LIMIT_1 WHERE F_INT1 = 1 ORDER BY F_INT1,F_INT2 LIMIT 1,1) TT;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
1            3            A                2017-12-11 14:18:00.141800      

1 rows fetched.

SQL> (SELECT F_INT1 FROM T_LIMIT_1 ORDER BY F_INT1 LIMIT 2) UNION ALL (SELECT F_INT1 FROM T_LIMIT_2 ORDER BY F_INT1 DESC LIMIT 1) ORDER BY F_INT1 DESC LIMIT 1,1;

F_INT1      
------------
1           

1 rows fetched.

SQL> (SELECT F_INT1 FROM T_LIMIT_1 GROUP BY F_INT1) UNION ALL (SELECT F_INT1 FROM T_LIMIT_2 GROUP BY F_INT1) ORDER BY F_INT1 DESC LIMIT 2,4;

F_INT1      
------------
4           
3           
2           
1           

4 rows fetched.

SQL> SELECT * FROM T_LIMIT_1 UNION ALL SELECT * FROM T_LIMIT_2 ORDER BY F_INT1,F_INT2 DESC LIMIT 4 OFFSET 1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
1            2            A                2017-12-11 14:08:00.140800      
2            3            B                2017-12-11 16:08:00.160800      
3            4            C                2017-12-12 16:08:00.160800      
4            3            A                2017-12-11 14:18:00.141800      

4 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1 WHERE F_INT1 >1 ) UNION ALL (SELECT * FROM T_LIMIT_2) ORDER BY F_INT1,F_INT2 DESC LIMIT 3,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
4            2            A                2017-12-11 14:08:00.140800      

1 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) ORDER BY F_DATE DESC,F_INT1 DESC LIMIT 0,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
6            4            C                2017-12-12 16:08:00.160800      

1 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_INT1,F_INT2 DESC LIMIT 1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
1            3            A                2017-12-11 14:18:00.141800      

1 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1) UNION ALL (SELECT * FROM T_LIMIT_2 WHERE F_INT1 >1 ) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_DATE DESC,F_INT1 DESC LIMIT 1 OFFSET 0;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
6            4            C                2017-12-12 16:08:00.160800      

1 rows fetched.

SQL> (SELECT * FROM T_LIMIT_1 WHERE F_INT1 = 1) UNION ALL (SELECT * FROM T_LIMIT_2 WHERE F_INT2 = 3) UNION ALL (SELECT * FROM T_LIMIT_1) ORDER BY F_INT1,F_INT2 DESC LIMIT 2,1;

F_INT1       F_INT2       F_CHAR           F_DATE                          
------------ ------------ ---------------- --------------------------------
1            2            A                2017-12-11 14:08:00.140800      

1 rows fetched.

SQL> 
SQL> DELETE FROM T_LIMIT_1;

4 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(1,2,'A','2017-12-11 14:08:00.1408');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(3,4,'C','2017-12-12 16:08:00.1608');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(1,3,'A','2017-12-11 14:18:00.1418');

1 rows affected.

SQL> INSERT INTO T_LIMIT_1 VALUES(2,3,'B','2017-12-11 16:08:00.1608');

1 rows affected.

SQL> DELETE FROM T_LIMIT_1 LIMIT 2.8;

CT-01311, number for limit/offset clause must be integer or bigint
SQL> 
SQL> DROP TABLE IF EXISTS RQG_SELECT_DIS_TBL;

Succeed.

SQL> -- CREATE TABLE RQG_SELECT_DIS_TBL(C_INTEGER INTEGER, C_BIGINT BIGINT, C_DOUBLE DOUBLE, C_NUMBER NUMBER, C_CHAR CHAR, C_VARCHAR VARCHAR, C_TIMESTAMP TIMESTAMP, C_TEXT TEXT, C_BOOL BOOL) DISTRIBUTE BY REPLICATION PARTITION BY RANGE (C_CHAR) (PARTITION CHARNAME1 VALUES LESS THAN ( 'g' ), PARTITION INTNAME2 VALUES LESS THAN ( 't' ), PARTITION INTNAME3 VALUES LESS THAN ( MAXVALUE ) );
SQL> CREATE TABLE RQG_SELECT_DIS_TBL(C_INTEGER INTEGER, C_BIGINT BIGINT, C_DOUBLE DOUBLE, C_NUMBER NUMBER, C_CHAR CHAR, C_VARCHAR VARCHAR(32), C_TIMESTAMP TIMESTAMP, C_TEXT TEXT, C_BOOL BOOL) PARTITION BY RANGE (C_CHAR) (PARTITION CHARNAME1 VALUES LESS THAN ( 'g' ), PARTITION INTNAME2 VALUES LESS THAN ( 't' ), PARTITION INTNAME3 VALUES LESS THAN ( MAXVALUE ) );

Succeed.

SQL> insert into  RQG_SELECT_DIS_TBL  values(1, 1, 1.1, 1.2 ,'1', 'a', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 1);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(2, 2, 2.1, 2.2 ,'2', 'b', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 1);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(3, 3, 3.1, 3.2 ,'3', 'c', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 1);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(4, 4, 4.1, 3.2 ,'4', 'd', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 1);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(5, 5, 5.1, 5.2 ,'1', 'a', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 0);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(6, 6, 6.1, 6.2 ,'2', 'b', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 0);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(7, 7, 7.1, 7.2 ,'2', 'c', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 0);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(8, 8, 8.1, 8.2 ,'2', 'd', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 0);

1 rows affected.

SQL> SELECT c_char, c_double, c_integer, SUM( c_char ) FROM RQG_SELECT_DIS_TBL GROUP BY c_char , c_double , c_integer ORDER BY c_char DESC, c_integer DESC, c_double DESC  LIMIT 4 OFFSET 0;

C_CHAR C_DOUBLE             C_INTEGER    SUM( C_CHAR )                           
------ -------------------- ------------ ----------------------------------------
4      4.1                  4            4                                       
3      3.1                  3            3                                       
2      8.1                  8            2                                       
2      7.1                  7            2                                       

4 rows fetched.

SQL> SELECT c_char, c_double, c_integer, SUM( c_char ) FROM RQG_SELECT_DIS_TBL GROUP BY c_char , c_double , c_integer ORDER BY c_char DESC, c_integer DESC, c_double DESC OFFSET 0 LIMIT 4;

C_CHAR C_DOUBLE             C_INTEGER    SUM( C_CHAR )                           
------ -------------------- ------------ ----------------------------------------
4      4.1                  4            4                                       
3      3.1                  3            3                                       
2      8.1                  8            2                                       
2      7.1                  7            2                                       

4 rows fetched.

SQL> COMMIT;

Succeed.

SQL> 
SQL> 
SQL> DROP TABLE IF EXISTS RQG_SELECT_DIS_TBL;

Succeed.

SQL> --CREATE TABLE RQG_SELECT_DIS_TBL(C_INTEGER INTEGER, C_BIGINT BIGINT, C_DOUBLE DOUBLE, C_NUMBER NUMBER, C_CHAR CHAR, C_VARCHAR VARCHAR, C_TIMESTAMP TIMESTAMP, C_TEXT TEXT, C_BOOL BOOL) DISTRIBUTE BY REPLICATION PARTITION BY RANGE (C_CHAR) (PARTITION CHARNAME1 VALUES LESS THAN ( 'g' ), PARTITION INTNAME2 VALUES LESS THAN ( 't' ), PARTITION INTNAME3 VALUES LESS THAN ( MAXVALUE ) );
SQL> CREATE TABLE RQG_SELECT_DIS_TBL(C_INTEGER INTEGER, C_BIGINT BIGINT, C_DOUBLE DOUBLE, C_NUMBER NUMBER, C_CHAR CHAR, C_VARCHAR VARCHAR(32), C_TIMESTAMP TIMESTAMP, C_TEXT TEXT, C_BOOL BOOL) PARTITION BY RANGE (C_CHAR) (PARTITION CHARNAME1 VALUES LESS THAN ( 'g' ), PARTITION INTNAME2 VALUES LESS THAN ( 't' ), PARTITION INTNAME3 VALUES LESS THAN ( MAXVALUE ) );

Succeed.

SQL> insert into  RQG_SELECT_DIS_TBL  values(1, 1, 1.1, 1.2 ,'1', 'a', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 1);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(2, 2, 2.1, 2.2 ,'2', 'b', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 1);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(3, 3, 3.1, 3.2 ,'3', 'c', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 1);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(4, 4, 4.1, 3.2 ,'4', 'd', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 1);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(5, 5, 5.1, 5.2 ,'1', 'a', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 0);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(6, 6, 6.1, 6.2 ,'2', 'b', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 0);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(7, 7, 7.1, 7.2 ,'2', 'c', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 0);

1 rows affected.

SQL> insert into  RQG_SELECT_DIS_TBL  values(8, 8, 8.1, 8.2 ,'2', 'd', to_timestamp('2018-01-27','yyyy-mm-dd'), 'this is text', 0);

1 rows affected.

SQL> SELECT c_char, c_double, c_integer, SUM( c_char ) FROM RQG_SELECT_DIS_TBL GROUP BY c_char , c_double , c_integer ORDER BY c_char DESC, c_integer DESC, c_double DESC  LIMIT 4 OFFSET 0;

C_CHAR C_DOUBLE             C_INTEGER    SUM( C_CHAR )                           
------ -------------------- ------------ ----------------------------------------
4      4.1                  4            4                                       
3      3.1                  3            3                                       
2      8.1                  8            2                                       
2      7.1                  7            2                                       

4 rows fetched.

SQL> SELECT c_char, c_double, c_integer, SUM( c_char ) FROM RQG_SELECT_DIS_TBL GROUP BY c_char , c_double , c_integer ORDER BY c_char DESC, c_integer DESC, c_double DESC OFFSET 0 LIMIT 4;

C_CHAR C_DOUBLE             C_INTEGER    SUM( C_CHAR )                           
------ -------------------- ------------ ----------------------------------------
4      4.1                  4            4                                       
3      3.1                  3            3                                       
2      8.1                  8            2                                       
2      7.1                  7            2                                       

4 rows fetched.

SQL> COMMIT;

Succeed.

SQL> 
SQL> DROP TABLE IF EXISTS negative;

Succeed.

SQL> create table negative(a int,b int ,c int,d int);

Succeed.

SQL> insert into negative values(2,45,65,4);

1 rows affected.

SQL> insert into negative values(3,46,66,5);

1 rows affected.

SQL> insert into negative values(1,47,67,6);

1 rows affected.

SQL> ((select a from negative order by 1) union (select b from negative order by 1 desc limit 1)) union select c from negative;

A           
------------
65          
66          
67          
2           
3           
1           
47          

7 rows fetched.

SQL> select * from (select a from negative union select b from negative limit 1) union select b from negative limit 2;

A           
------------
45          
46          

2 rows fetched.

SQL> select * from (select a from negative union select b from negative  order by 1 limit 1) union select b from negative limit 2;

A           
------------
45          
46          

2 rows fetched.

SQL> insert into negative(a)(select * from (select a from negative union select b from negative limit 1) as a1);

1 rows affected.

SQL> insert into negative(a)(select * from (select a from negative minus select b from negative limit 1) as a1 );

1 rows affected.

SQL> (select a from negative union select b from negative order by a);

CT-00601, [1:64]Sql syntax error: wrong syntax to use 'LIMIT'or 'ORDER'.
SQL> (select a from negative union select b from negative limit 2)          ;

CT-00601, [1:61]Sql syntax error: wrong syntax to use 'LIMIT'or 'ORDER'.
SQL> COMMIT;

Succeed.

SQL> 


