

SQL> set autocommit off;

OFF
SQL> 
SQL> alter system set local_temporary_table_enabled=false;

Succeed.

SQL> create global temporary table #tmp (f1 int);

CT-00601, [1:31]Sql syntax error: table name is invalid
SQL> create table #tmp (f1 int);

CT-00601, [1:14]Sql syntax error: table name is invalid
SQL> create temporary table #tmp (f1 int);

CT-00601, Sql syntax error: parameter LOCAL_TEMPORARY_TABLE_ENABLED is false, can't create local temporary table
SQL> 
SQL> 
SQL> alter system set local_temporary_table_enabled=true;

Succeed.

SQL> create temporary table if not exists #tmp (f1 int);

Succeed.

SQL> truncate table #tmp;

Succeed.

SQL> insert into #tmp values (100);

1 rows affected.

SQL> insert into #tmp values (1);

1 rows affected.

SQL> update #tmp set f1 = 99 where f1=100;

1 rows affected.

SQL> delete from #tmp where f1 = 1;

1 rows affected.

SQL> select * from #tmp;

F1          
------------
99          

1 rows fetched.

SQL> 
SQL> 
SQL> truncate table #tmp;

Succeed.

SQL> insert into #tmp values (100);

1 rows affected.

SQL> insert into #tmp values (1);

1 rows affected.

SQL> update #tmp set f1 = 99 where f1=100;

1 rows affected.

SQL> delete from #tmp where f1 = 1;

1 rows affected.

SQL> select * from #tmp;

F1          
------------
99          

1 rows fetched.

SQL> select * from `#TMP`;

F1          
------------
99          

1 rows fetched.

SQL> select * from "#TMP";

F1          
------------
99          

1 rows fetched.

SQL> 
SQL> drop table #tmp;

Succeed.

SQL> drop table if exists #tmp;

Succeed.

SQL> 
SQL> --test create table with primary key
SQL> create temporary table `#ltt_t1` (f1 int constraint key001 primary key, f2 varchar(100));

Succeed.

SQL> insert into `#ltt_t1` values (1, 'a');

1 rows affected.

SQL> insert into `#ltt_t1` values (2, 'b');

1 rows affected.

SQL> commit;

Succeed.

SQL> select * from `#ltt_t1` where f1 = 2;

F1           F2                                                              
------------ ----------------------------------------------------------------
2            b                                                               

1 rows fetched.

SQL> truncate table `#ltt_t1`;

Succeed.

SQL> select count(*) from `#ltt_t1`;

COUNT(*)            
--------------------
0                   

1 rows fetched.

SQL> insert into `#ltt_t1` values (1, 'a');

1 rows affected.

SQL> insert into `#ltt_t1` values (1, 'b');

CT-00729, Unique constraint violated, index KEY001, duplicate key 1
SQL> select * from `#ltt_t1`;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               

1 rows fetched.

SQL> 
SQL> drop table `#ltt_t1`;

Succeed.

SQL> select * from `#ltt_t1`;

CT-00843, [1:15]The table or view SYS.#ltt_t1 does not exist.
SQL> 
SQL> 
SQL> -- test create index, drop index
SQL> create temporary table #ltt_tmp (f1 int, f2 varchar(100));

Succeed.

SQL> insert into #ltt_tmp values (1, 'a');

1 rows affected.

SQL> insert into #ltt_tmp values (2, 'b');

1 rows affected.

SQL> insert into #ltt_tmp values (3, 'c');

1 rows affected.

SQL> 
SQL> create index index001 on #ltt_tmp (f1);

Succeed.

SQL> create index index002 on #ltt_tmp (f2);

Succeed.

SQL> 
SQL> select * from #ltt_tmp where f1 = 1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               

1 rows fetched.

SQL> select * from #ltt_tmp where f2 = 'c';

F1           F2                                                              
------------ ----------------------------------------------------------------
3            c                                                               

1 rows fetched.

SQL>
SQL> drop index index001 on #ltt_tmp;

Succeed.

SQL>
SQL> select * from #ltt_tmp where f1 = 1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               

1 rows fetched.

SQL> select * from #ltt_tmp where f2 = 'c';

F1           F2                                                              
------------ ----------------------------------------------------------------
3            c                                                               

1 rows fetched.

SQL> insert into #ltt_tmp values (4, 'd');

1 rows affected.

SQL> select * from #ltt_tmp where f2 = 'd';

F1           F2                                                              
------------ ----------------------------------------------------------------
4            d                                                               

1 rows fetched.

SQL> select * from #ltt_tmp where f1 = 4;

F1           F2                                                              
------------ ----------------------------------------------------------------
4            d                                                               

1 rows fetched.

SQL> select * from #ltt_tmp order by f1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               
2            b                                                               
3            c                                                               
4            d                                                               

4 rows fetched.

SQL> 
SQL> drop table if exists #ltt_tmp;

Succeed.

SQL> 
SQL> 
SQL> -- test create unique index
SQL> create temporary table #ltt_tmp (f1 int, f2 varchar(100));

Succeed.

SQL> create temporary table if not exists #ltt_tmp (f1 int, f2 varchar(100));

Succeed.

SQL> 
SQL> set autocommit off;

OFF
SQL> insert into #ltt_tmp values (1, 'a');

1 rows affected.

SQL> insert into #ltt_tmp values (2, 'b');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> create unique index index001 on #ltt_tmp (f1);

Succeed.

SQL> select * from #ltt_tmp where f1 = 1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               

1 rows fetched.

SQL> 
SQL> drop index index001 on #ltt_tmp;

Succeed.

SQL> select * from #ltt_tmp where f1 = 1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               

1 rows fetched.

SQL> 
SQL> update #ltt_tmp set f1 = 1 where f2 = 'b';

1 rows affected.

SQL> select * from #ltt_tmp order by f2 desc;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            b                                                               
1            a                                                               

2 rows fetched.

SQL> commit;

Succeed.

SQL> 
SQL> -- error, f1=1 has 2 records! unique constraint (INDEX001) violated
SQL> create unique index index001 on #ltt_tmp (f1);

CT-00729, Unique constraint violated
SQL> 
SQL> drop table #ltt_tmp;

Succeed.

SQL> drop table if exists #ltt_tmp;

Succeed.

SQL> -- error
SQL> select * from #ltt_tmp;

CT-00843, [1:15]The table or view SYS.#LTT_TMP does not exist.
SQL> 
SQL> 
SQL> -- ltt dml: insert, update, delete, select, merge, join
SQL> 
SQL> create temporary table #ltt_t1 (f1 int, f2 varchar(100));

Succeed.

SQL> create temporary table #ltt_t2 (f1 int, f2 varchar(100));

Succeed.

SQL> create temporary table #ltt_t3 (f1 int, f2 varchar(100));

Succeed.

SQL> 
SQL> insert into #ltt_t1 values (1, 'a'), (2, 'b'), (3, 'c'), (4, 'd');

4 rows affected.

SQL> insert into #ltt_t2 values (2, 'bb'), (4, 'dd'), (5, 'ee');

3 rows affected.

SQL> insert into #ltt_t3 values (3, 'ccc'), (10, 't');

2 rows affected.

SQL> 
SQL> create index index001 on #ltt_t1 (f2);

Succeed.

SQL> 
SQL> select t1.f1, t1.f2, t2.f1, t2.f2 from #ltt_t1 t1 join #ltt_t2 t2 on t1.f1 = t2.f1 order by t1.f1, t1.f2, t2.f1, t2.f2;

F1           F2                                                               F1           F2                                                              
------------ ---------------------------------------------------------------- ------------ ----------------------------------------------------------------
2            b                                                                2            bb                                                              
4            d                                                                4            dd                                                              

2 rows fetched.

SQL> 
SQL> insert into #ltt_t1 values (100, 'ltt');

1 rows affected.

SQL> select * from #ltt_t1 order by f1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               
2            b                                                               
3            c                                                               
4            d                                                               
100          ltt                                                             

5 rows fetched.

SQL> update #ltt_t1 set f1 = 99 where f2 = 'ltt';

1 rows affected.

SQL> select * from #ltt_t1 order by f1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               
2            b                                                               
3            c                                                               
4            d                                                               
99           ltt                                                             

5 rows fetched.

SQL> delete from #ltt_t1 where f1 = 99;

1 rows affected.

SQL> select * from #ltt_t1 order by f1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               
2            b                                                               
3            c                                                               
4            d                                                               

4 rows fetched.

SQL> commit;

Succeed.

SQL> 
SQL> select * from #ltt_t3;

F1           F2                                                              
------------ ----------------------------------------------------------------
3            ccc                                                             
10           t                                                               

2 rows fetched.

SQL> --merge into
SQL> merge into #ltt_t1 t1 using #ltt_t3 t3 on (t1.f1 = t3.f1) 
  2 when matched then update set t1.f2=t3.f2 
  3 when not matched then insert values (t3.f1, t3.f2);

2 rows affected.

SQL> 
SQL> select * from #ltt_t1 order by f1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               
2            b                                                               
3            ccc                                                             
4            d                                                               
10           t                                                               

5 rows fetched.

SQL> rollback;

Succeed.

SQL> select * from #ltt_t1 order by f1;

F1           F2                                                              
------------ ----------------------------------------------------------------
1            a                                                               
2            b                                                               
3            c                                                               
4            d                                                               

4 rows fetched.

SQL> 
SQL> -- test in gsql_test
SQL> -- select t1.f1, t1.f2, t2.f1, t2.f2 from #ltt_t1 t1 join #ltt_t2 t2 on t1.f1 = t2.f1;
SQL> -- select t1.*, t2.* from #ltt_t1 t1 left join #ltt_t2 t2 on t1.f1 = t2.f1;
SQL> -- select t1.*, t2.* from #ltt_t1 t1 right join #ltt_t2 t2 on t1.f1 = t2.f1;
SQL> -- select t1.*, t2.* from #ltt_t1 t1 left join #ltt_t2 t2 on t1.f2 = t2.f2;
SQL> -- select t1.*, t2.* from #ltt_t1 t1 right join #ltt_t2 t2 on t1.f2 = t2.f2;
SQL> -- select t1.*, t2.* from #ltt_t1 t1, #ltt_t2 t2;
SQL> -- select t1.*, t2.* from #ltt_t1 t1 full join #ltt_t2 t2 on t1.f1 = t2.f1;
SQL> 
SQL> 
SQL> drop table if exists #ltt_tmp;

Succeed.

SQL> create temporary table #ltt_tmp (f1 int);

Succeed.

SQL> insert into #ltt_tmp values (1),(2),(3);

3 rows affected.

SQL> 
SQL> drop table if exists ltt_test1;

Succeed.

SQL> create table ltt_test1 (f1 int);

Succeed.

SQL> insert into ltt_test1 (f1) values (1),(2),(3),(4);

4 rows affected.

SQL> 
SQL> select #ltt_tmp.f1 from #ltt_tmp right join ltt_test1 on #ltt_tmp.f1 = ltt_test1.f1 order by #ltt_tmp.f1;

F1          
------------
1           
2           
3           
            

4 rows fetched.

SQL> 
SQL> set serveroutput on

ON
SQL> create temporary table if not exists #tmp (f1 int);

Succeed.

SQL> 
SQL> declare
  2 l_f1 int;
  3 begin
  4 select * into l_f1 from #tmp;
  5 dbe_output.print_line(l_f1);
  6 end;
  7 /

CT-00932, [4:1] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[4:1] CT-00906, In PL/SQL, running SELECT INTO or EXECUTE IMMEDIATE INTO to grant values to variables had no data found.

SQL> 
SQL> begin
  2 insert into #tmp values(1);
  3 end;
  4 /

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 l_f1 int;
  3 begin
  4 select * into l_f1 from #tmp;
  5 dbe_output.print_line(l_f1);
  6 end;
  7 /

1

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 l_f1 int;
  3 begin
  4 select * into l_f1 from #tmp;
  5 dbe_output.print_line(l_f1);
  6 end;
  7 /

1

PL/SQL procedure successfully completed.

SQL> 
SQL> begin
  2 update #tmp set f1 = 2 where f1 = 1;
  3 end;
  4 /

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 l_f1 int;
  3 begin
  4 select * into l_f1 from #tmp;
  5 dbe_output.print_line(l_f1);
  6 end;
  7 /

2

PL/SQL procedure successfully completed.

SQL> 
SQL> begin
  2 delete from #tmp;
  3 insert into #tmp values(1);
  4 end;
  5 /

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 l_f1 int;
  3 begin
  4 select * into l_f1 from #tmp;
  5 dbe_output.print_line(l_f1);
  6 end;
  7 /

1

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 cursor c1 is select * from #tmp;
  3 begin
  4 for i in c1 loop
  5 dbe_output.print_line(i.f1);
  6 end loop;
  7 end;
  8 /

1

PL/SQL procedure successfully completed.

SQL> 
SQL> insert into #tmp values(1);

1 rows affected.

SQL> 
SQL> create or replace procedure xxx(a int)
  2 as
  3 cursor c1 is select * from #tmp;
  4 begin
  5 for i in c1 loop
  6 dbe_output.print_line(i.f1);
  7 end loop;
  8 end;
  9 /

Succeed.

SQL> 
SQL> call xxx(1);

1
1

PL/SQL procedure successfully completed.

SQL> call xxx(1);

1
1

PL/SQL procedure successfully completed.

SQL> 
SQL> create or replace procedure xxx(a int)
  2 is
  3 c1 sys_refcursor;
  4 begin
  5 open c1 for select * from #tmp;
  6 DBE_SQL.RETURN_CURSOR(c1);
  7 end;
  8 /

Succeed.

SQL> 
SQL> call xxx(1);

PL/SQL procedure successfully completed.

ResultSet #1

F1          
------------
1           
1           

2 rows fetched.


SQL> call xxx(1);

PL/SQL procedure successfully completed.

ResultSet #1

F1          
------------
1           
1           

2 rows fetched.


SQL> 
SQL> create or replace procedure xxx(a int)
  2 as
  3 begin
  4 for i in (select * from #tmp) loop
  5 dbe_output.print_line(i.f1);
  6 end loop;
  7 end;
  8 /

Succeed.

SQL> 
SQL> call xxx(1);

1
1

PL/SQL procedure successfully completed.

SQL> call xxx(1);

1
1

PL/SQL procedure successfully completed.

SQL> 
SQL> --DTS2018092003400 
SQL> drop table if exists gs_local_test;

Succeed.

SQL> create table gs_local_test(id  int,name varchar(100),ctime date);

Succeed.

SQL> insert into gs_local_test values (1,'test','2018-09-17 16:10:28');

1 rows affected.

SQL> create temporary table #abc as select * from gs_local_test;

Succeed.

SQL> create or replace procedure gs_local_p1 is 
  2 begin
  3 insert into #abc values(1,'test','2018-09-17 16:10:28');
  4 end;
  5 /

Succeed.

SQL> call gs_local_p1;

PL/SQL procedure successfully completed.

SQL> select * from gs_local_test;

ID           NAME                                                             CTIME                 
------------ ---------------------------------------------------------------- ----------------------
1            test                                                             2018-09-17 16:10:28   

1 rows fetched.

SQL> 
SQL> 
SQL> --USE_NAVATIVE_DATATYPE=FALSE, create table as select failed
SQL> alter system set USE_NATIVE_DATATYPE=FALSE;

Succeed.

SQL> drop table if exists #ltt_t1;

Succeed.

SQL> drop table if exists #ltt_t2;

Succeed.

SQL> create temporary table #ltt_t1 (f1 int);

Succeed.

SQL> insert into #ltt_t1 values (1);

1 rows affected.

SQL> commit;

Succeed.

SQL> create temporary table #ltt_t2 as select * from #ltt_t1;

Succeed.

SQL> select * from #ltt_t2;

F1          
------------
1           

1 rows fetched.

SQL> alter system set use_native_datatype=true;

Succeed.

SQL> set serveroutput off

OFF
SQL> 
SQL> drop table if exists #ltt;

Succeed.

SQL> create temporary table #ltt (f1 int not null auto_increment, f2 varchar(100) , primary key (f1));

Succeed.

SQL> 
SQL> drop table if exists #ltt;

Succeed.

SQL> create temporary table #ltt (f1 int) on commit preserve rows;

Succeed.

SQL> drop table if exists #ltt;

Succeed.

SQL> create temporary table #ltt (f1 int) on commit delete rows;

CT-00601, Sql syntax error: local temporary table don't support on commit delete rows
SQL> drop table if exists t4;

Succeed.

SQL> create temporary table #t4(id int auto_increment primary key, name varchar(32));

Succeed.

SQL> 
SQL> drop table if exists #ltt;

Succeed.

SQL> create temporary table #ltt (f1 int, f2 int, f3 int);

Succeed.

SQL> create index #ltt_idx1 on #ltt (f1);

Succeed.

SQL> create index #ltt_idx2 on #ltt (f1);

CT-00726, The column has been indexed by #LTT_IDX1.
SQL> create index #ltt_idx1 on #ltt (f1);

CT-00753, The object index #LTT_IDX1 already exists.
SQL> create index #ltt_idx2 on #ltt (f1, f2);

Succeed.

SQL> 
SQL> drop table if exists #ltt;

Succeed.

SQL> create temporary table #ltt (f1 int not null, f2 int)
  2  partition by range (f1)
  3  (
  4    partition p1 values less than (100),
  5    partition p2 values less than (maxvalue)
  6  );

CT-00130, Operation create partition is not supported on local temporary table
SQL> 
SQL> drop table if exists gtt;

Succeed.

SQL> create global temporary table gtt (f1 int not null, f2 int)
  2  partition by range (f1)
  3  (
  4    partition p1 values less than (100),
  5    partition p2 values less than (maxvalue)
  6  );

CT-00130, Operation create partition is not supported on global temporary table
SQL> 
SQL> 
SQL> 
SQL> alter system set local_temporary_table_enabled=false;

Succeed.

SQL> 
SQL> 


