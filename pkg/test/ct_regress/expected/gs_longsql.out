

SQL> alter system set _LOG_LEVEL=256;

Succeed.

SQL> alter system set LONGSQL_TIMEOUT=0;

Succeed.

SQL> DROP TABLE IF EXISTS T_LONGSQL;

Succeed.

SQL> CREATE TABLE T_LONGSQL(ID int);

Succeed.

SQL> INSERT INTO T_LONGSQL(ID) VALUES(1);

1 rows affected.

SQL> SELECT ID FROM T_LONGSQL;

ID          
------------
1           

1 rows fetched.

SQL> DELETE FROM T_LONGSQL WHERE ID = 1;

1 rows affected.

SQL> CREATE or replace procedure proc_longsql(start_no int,end_no int) as
  2 i INT;
  3 BEGIN
  4   if start_no <= end_no then
  5     FOR i IN start_no..end_no LOOP
  6       insert into T_LONGSQL(ID) select i from dual;
  7 commit;
  8     END LOOP;
  9   end if;
 10 END;
 11 /

Succeed.

SQL> call proc_longsql(2,3);

PL/SQL procedure successfully completed.

SQL> 
SQL> insert into T_LONGSQL(ID) select 52013140 from dual where 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 12=12;

1 rows affected.

SQL> 
SQL> alter system set _LOG_LEVEL=7;

Succeed.

SQL> alter system set LONGSQL_TIMEOUT=10;

Succeed.

SQL> select stage,sql_text from v$longsql where sql_text like '%T_LONGSQL%';

STAGE        SQL_TEXT                                                        
------------ ----------------------------------------------------------------
PREPARE      "INSERT INTO T_LONGSQL(ID) VALUES(1)"                           
EXECUTE      "INSERT INTO T_LONGSQL(ID) VALUES(1)"                           
PREPARE      "SELECT ID FROM T_LONGSQL"                                      
EXECUTE      "SELECT ID FROM T_LONGSQL"                                      
PREPARE      "DELETE FROM T_LONGSQL WHERE ID = 1"                            
EXECUTE      "DELETE FROM T_LONGSQL WHERE ID = 1"                            
EXECUTE      "insert into T_LONGSQL (ID )select :1  from dual"               
EXECUTE      "insert into T_LONGSQL (ID )select :1  from dual"               
PREPARE      "insert into T_LONGSQL(ID) select 52013140 from dual where 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 12=12"
EXECUTE      "insert into T_LONGSQL(ID) select 52013140 from dual where 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 5201314=5201314 and 12=12"

10 rows fetched.

SQL> DROP procedure proc_longsql;

Succeed.

SQL> DROP TABLE IF EXISTS T_LONGSQL2;

Succeed.

SQL> create table T_LONGSQL2 as select * from v$longsql;

Succeed.

SQL> DROP TABLE T_LONGSQL;

Succeed.

SQL> DROP TABLE T_LONGSQL2;

Succeed.

SQL> 

SQL> 
SQL> --check sql execute time when have more than one sql in one trigger
SQL> alter system set sql_stat = true;

Succeed.

SQL> DROP TABLE IF EXISTS T_STAT_TRIG_1;

Succeed.

SQL> DROP TABLE IF EXISTS T_STAT_TRIG_2;

Succeed.

SQL> DROP TABLE IF EXISTS T_STAT_TRIG_3;

Succeed.

SQL> CREATE TABLE T_STAT_TRIG_1 (F_INT1 INT);

Succeed.

SQL> CREATE TABLE T_STAT_TRIG_2 (F_INT1 INT);

Succeed.

SQL> CREATE TABLE T_STAT_TRIG_3 (F_INT1 INT);

Succeed.

SQL> 
SQL> CREATE OR REPLACE TRIGGER TRIG_STAT_TRIG_1 BEFORE INSERT   ON T_STAT_TRIG_1
  2 BEGIN
  3   INSERT INTO T_STAT_TRIG_2 (F_INT1) select sleep(3) from dual;
  4   INSERT INTO T_STAT_TRIG_3 (F_INT1) select sleep(2) from dual;
  5 END;
  6 /

Succeed.

SQL> 
SQL> INSERT INTO T_STAT_TRIG_1 (F_INT1) select sleep(1) from dual;

1 rows affected.

SQL> 
SQL> commit;

Succeed.

SQL> 
SQL> --insert T_STAT_TRIG_1 execute time will include  TRIG_STAT_TRIG_1 execute time
SQL> select 1 from dual where ((select elapsed_time from v$sqlarea  where sql_text like 'INSERT%INTO%T_STAT_TRIG_1%' order by elapsed_time desc    limit 1) > ((select elapsed_time from v$sqlarea  where sql_text like '%INTO%T_STAT_TRIG_2%' order by elapsed_time desc    limit 1) + (select elapsed_time from v$sqlarea  where sql_text like 'insert%INTO%T_STAT_TRIG_3%' order by elapsed_time desc    limit 1)));

1           
------------
1           

1 rows fetched.

SQL> 
SQL> drop table T_STAT_TRIG_1;

Succeed.

SQL> drop table T_STAT_TRIG_2;

Succeed.

SQL> drop table T_STAT_TRIG_3;
Succeed.

