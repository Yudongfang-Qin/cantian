

SQL> --- test  interval normal error
SQL> drop table if exists interval_t1;

Succeed.

SQL> create table interval_t1(f1 int, f2 int, f3 char(30))
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(null)
  4 (
  5  PARTITION interval_t1p1 values less than(10),
  6  PARTITION interval_t1p2 values less than(20),
  7  PARTITION interval_t1p3 values less than(30)
  8 );

CT-01110, [3:10]The operation set inerval to null was not allowed
SQL> --- test  interval normal create
SQL> create table interval_t1(f1 int, f2 int, f3 char(30))
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_t1p1 values less than(10),
  6  PARTITION interval_t1p2 values less than(20),
  7  PARTITION interval_t1p3 values less than(30)
  8 );

Succeed.

SQL> --- test  interval normal insert order
SQL> insert into interval_t1 values(1,5,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(2,15,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(3,25,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(4,35,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(5,45,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(6,55,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(7,65,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(8,75,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(9,85,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(10,95,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(11,105,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(12,115,'hzy');

1 rows affected.

SQL> commit;

Succeed.

SQL> --- test  interval normal select
SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           
4            35           hzy                           
5            45           hzy                           
6            55           hzy                           
7            65           hzy                           
8            75           hzy                           
9            85           hzy                           
10           95           hzy                           
11           105          hzy                           
12           115          hzy                           

12 rows fetched.

SQL> select * from interval_t1 where f2 < 30 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           

3 rows fetched.

SQL> select * from interval_t1 where f2 > 30 and f2 < 100 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
4            35           hzy                           
5            45           hzy                           
6            55           hzy                           
7            65           hzy                           
8            75           hzy                           
9            85           hzy                           
10           95           hzy                           

7 rows fetched.

SQL> --- test  interval normal update normal
SQL> update interval_t1 set f2 = 69 where f2 = 65;

1 rows affected.

SQL> update interval_t1 set f2 = 79 where f2 = 75;

1 rows affected.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           
4            35           hzy                           
5            45           hzy                           
6            55           hzy                           
7            69           hzy                           
8            79           hzy                           
9            85           hzy                           
10           95           hzy                           
11           105          hzy                           
12           115          hzy                           

12 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval normal update different partition
SQL> update interval_t1 set f2 = 69 where f2 = 55;

1 rows affected.

SQL> update interval_t1 set f2 = 79 where f2 = 105;

1 rows affected.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           
4            35           hzy                           
5            45           hzy                           
6            69           hzy                           
7            69           hzy                           
8            79           hzy                           
9            85           hzy                           
10           95           hzy                           
11           79           hzy                           
12           115          hzy                           

12 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval normal delete
SQL> delete from interval_t1 where f2 < 30 order by f1;

3 rows affected.

SQL> delete from interval_t1 where f2 < 90 and f2 > 30 order by f1;

7 rows affected.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
10           95           hzy                           
12           115          hzy                           

2 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval normal delete all
SQL> delete from interval_t1;

2 rows affected.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------

0 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval normal drop
SQL> drop table interval_t1;

Succeed.

SQL> 
SQL> --- test  interval normal insert no order
SQL> drop table if exists interval_t1;

Succeed.

SQL> create table interval_t1(f1 int, f2 int, f3 char(30))
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_t1p1 values less than(10),
  6  PARTITION interval_t1p2 values less than(20),
  7  PARTITION interval_t1p3 values less than(30)
  8 );

Succeed.

SQL> insert into interval_t1 values(1,5,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(2,15,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(3,25,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(4,35,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(5,115,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(6,55,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(7,65,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(8,75,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(9,85,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(10,95,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(11,105,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(12,45,'hzy');

1 rows affected.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
1073741824   2            40                                                               2            8            0            0C0001000100000028000000                                        
1073741825   2            50                                                               2            8            0            0C0001000100000032000000                                        
1073741826   2            60                                                               2            8            0            0C000100010000003C000000                                        
1073741827   2            70                                                               2            8            0            0C0001000100000046000000                                        
1073741828   2            80                                                               2            8            0            0C0001000100000050000000                                        
1073741829   2            90                                                               2            8            0            0C000100010000005A000000                                        
1073741830   3            100                                                              2            8            0            0C0001000100000064000000                                        
1073741831   3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741832   3            120                                                              2            8            0            0C0001000100000078000000                                        

12 rows fetched.

SQL> 
SQL> --- test  interval contain lob
SQL> drop table if exists interval_t2;

Succeed.

SQL> create table interval_t2(f1 int, f2 int, f3 clob)
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_t2p1 values less than(10),
  6  PARTITION interval_t2p2 values less than(20),
  7  PARTITION interval_t2p3 values less than(30)
  8 );

Succeed.

SQL> --- test  interval lob insert order
SQL> insert into interval_t2 values(1,5, 'hzy1');

1 rows affected.

SQL> insert into interval_t2 values(2,15,'hzy2');

1 rows affected.

SQL> insert into interval_t2 values(3,25,'hzy3');

1 rows affected.

SQL> insert into interval_t2 values(4,35,'hzy44');

1 rows affected.

SQL> insert into interval_t2 values(5,45,'hzy55');

1 rows affected.

SQL> insert into interval_t2 values(6,55,'hzy66');

1 rows affected.

SQL> insert into interval_t2 values(7,65,'hzy77');

1 rows affected.

SQL> insert into interval_t2 values(8,75,'hzy88');

1 rows affected.

SQL> insert into interval_t2 values(9,85,'hzy99');

1 rows affected.

SQL> insert into interval_t2 values(10,95,'hzy100');

1 rows affected.

SQL> insert into interval_t2 values(11,105,'hzy111');

1 rows affected.

SQL> insert into interval_t2 values(12,115,'hzy112');

1 rows affected.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_T2') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
1073741824   2            40                                                               2            8            0            0C0001000100000028000000                                        
1073741825   2            50                                                               2            8            0            0C0001000100000032000000                                        
1073741826   2            60                                                               2            8            0            0C000100010000003C000000                                        
1073741827   2            70                                                               2            8            0            0C0001000100000046000000                                        
1073741828   2            80                                                               2            8            0            0C0001000100000050000000                                        
1073741829   2            90                                                               2            8            0            0C000100010000005A000000                                        
1073741830   3            100                                                              2            8            0            0C0001000100000064000000                                        
1073741831   3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741832   3            120                                                              2            8            0            0C0001000100000078000000                                        

12 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_T2') ORDER BY PART#;

PART#       
------------
10          
20          
30          
1073741824  
1073741825  
1073741826  
1073741827  
1073741828  
1073741829  
1073741830  
1073741831  
1073741832  

12 rows fetched.

SQL> 
SQL> --- test  interval lob update normal
SQL> update interval_t2 set f2 = 69 where f2 = 65;

1 rows affected.

SQL> update interval_t2 set f2 = 79 where f2 = 75;

1 rows affected.

SQL> select * from interval_t2 order by f1 ;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
1            5            hzy1                                                            
2            15           hzy2                                                            
3            25           hzy3                                                            
4            35           hzy44                                                           
5            45           hzy55                                                           
6            55           hzy66                                                           
7            69           hzy77                                                           
8            79           hzy88                                                           
9            85           hzy99                                                           
10           95           hzy100                                                          
11           105          hzy111                                                          
12           115          hzy112                                                          

12 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval lob update different partition
SQL> update interval_t2 set f2 = 69 where f2 = 55;

1 rows affected.

SQL> update interval_t2 set f2 = 79 where f2 = 105;

1 rows affected.

SQL> select * from interval_t2 order by f1;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
1            5            hzy1                                                            
2            15           hzy2                                                            
3            25           hzy3                                                            
4            35           hzy44                                                           
5            45           hzy55                                                           
6            69           hzy66                                                           
7            69           hzy77                                                           
8            79           hzy88                                                           
9            85           hzy99                                                           
10           95           hzy100                                                          
11           79           hzy111                                                          
12           115          hzy112                                                          

12 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval lob delete
SQL> delete from interval_t2 where f2 < 30; 

3 rows affected.

SQL> delete from interval_t2 where f2 < 90 and f2 > 30;

7 rows affected.

SQL> select * from interval_t2 order by f1;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
10           95           hzy100                                                          
12           115          hzy112                                                          

2 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval lob delete all
SQL> delete from interval_t2;

2 rows affected.

SQL> select * from interval_t2 order by f1;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------

0 rows fetched.

SQL> commit;

Succeed.

SQL> drop table if exists interval_t2;

Succeed.

SQL> 
SQL> 
SQL> --- test  interval normal create index
SQL> drop table if exists interval_t1;

Succeed.

SQL> create table interval_t1(f1 int, f2 int, f3 char(30))
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_t1p1 values less than(10),
  6  PARTITION interval_t1p2 values less than(20),
  7  PARTITION interval_t1p3 values less than(30)
  8 );

Succeed.

SQL> 
SQL> --- test  interval normal create global index 
SQL> create index interval_t1_gidx1 on interval_t1(f1);

Succeed.

SQL> --- test  interval normal create local index 
SQL> create index interval_t1_lidx2 on interval_t1(f2) local;

Succeed.

SQL> insert into interval_t1 values(1,5,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(2,15,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(3,25,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(4,35,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(5,45,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(6,55,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(7,65,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(8,75,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(9,85,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(10,95,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(11,105,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(12,115,'hzy');

1 rows affected.

SQL> commit;

Succeed.

SQL> --- test  interval index select
SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           
4            35           hzy                           
5            45           hzy                           
6            55           hzy                           
7            65           hzy                           
8            75           hzy                           
9            85           hzy                           
10           95           hzy                           
11           105          hzy                           
12           115          hzy                           

12 rows fetched.

SQL> select * from interval_t1 where f2 < 30 order by f1 ;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           

3 rows fetched.

SQL> select * from interval_t1 where f2 > 30 and f2 < 100 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
4            35           hzy                           
5            45           hzy                           
6            55           hzy                           
7            65           hzy                           
8            75           hzy                           
9            85           hzy                           
10           95           hzy                           

7 rows fetched.

SQL> --- test  interval index update normal
SQL> update interval_t1 set f2 = 69 where f2 = 65;

1 rows affected.

SQL> update interval_t1 set f2 = 79 where f2 = 75;

1 rows affected.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           
4            35           hzy                           
5            45           hzy                           
6            55           hzy                           
7            69           hzy                           
8            79           hzy                           
9            85           hzy                           
10           95           hzy                           
11           105          hzy                           
12           115          hzy                           

12 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval index update different partition
SQL> update interval_t1 set f2 = 69 where f2 = 55;

1 rows affected.

SQL> update interval_t1 set f2 = 79 where f2 = 105;

1 rows affected.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           
4            35           hzy                           
5            45           hzy                           
6            69           hzy                           
7            69           hzy                           
8            79           hzy                           
9            85           hzy                           
10           95           hzy                           
11           79           hzy                           
12           115          hzy                           

12 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval index delete
SQL> delete from interval_t1 where f2 < 30;

3 rows affected.

SQL> delete from interval_t1 where f2 < 90 and f2 > 30;

7 rows affected.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
10           95           hzy                           
12           115          hzy                           

2 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval index delete all
SQL> delete from interval_t1;select * from interval_t1 order by f1;

2 rows affected.


F1           F2           F3                            
------------ ------------ ------------------------------

0 rows fetched.

SQL> commit;

Succeed.

SQL> --- test  interval index drop
SQL> drop table interval_t1;

Succeed.

SQL> 
SQL> --- test interval partition ddl add/drop partition
SQL> drop table if exists interval_t1;

Succeed.

SQL> create table interval_t1(f1 int, f2 int, f3 char(30))
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_t1p1 values less than(10),
  6  PARTITION interval_t1p2 values less than(20),
  7  PARTITION interval_t1p3 values less than(30),
  8  PARTITION interval_t1p4 values less than(50)
  9 );

Succeed.

SQL> 
SQL> insert into interval_t1 values(1,5,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(2,15,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(3,25,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(4,35,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(5,45,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(6,55,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(7,65,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(8,75,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(9,85,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(10,95,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(11,105,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(12,115,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(13,145,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(14,125,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(15,195,'hzy');

1 rows affected.

SQL> alter table interval_t1 add partition p4 values less than(200);

CT-01110, The operation add interval partition was not allowed
SQL> alter table interval_t1 drop partition interval_t1p2;

Succeed.

SQL> alter table interval_t1 drop partition interval_t1p3;

Succeed.

SQL> alter table interval_t1 drop partition interval_t1p4;

CT-00130, Operation drop transition partition is not supported on interval partitioned table
SQL> alter table interval_t1 drop partition interval_t1p1;

Succeed.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
40           2            50                                                               2            8            0            0C0001000100000032000000                                        
1073741824   2            60                                                               2            8            0            0C000100010000003C000000                                        
1073741825   2            70                                                               2            8            0            0C0001000100000046000000                                        
1073741826   2            80                                                               2            8            0            0C0001000100000050000000                                        
1073741827   2            90                                                               2            8            0            0C000100010000005A000000                                        
1073741828   3            100                                                              2            8            0            0C0001000100000064000000                                        
1073741829   3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741830   3            120                                                              2            8            0            0C0001000100000078000000                                        
1073741831   3            130                                                              2            8            0            0C0001000100000082000000                                        
1073741833   3            150                                                              2            8            0            0C0001000100000096000000                                        
1073741838   3            200                                                              2            8            0            0C00010001000000C8000000                                        

11 rows fetched.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
4            35           hzy                           
5            45           hzy                           
6            55           hzy                           
7            65           hzy                           
8            75           hzy                           
9            85           hzy                           
10           95           hzy                           
11           105          hzy                           
12           115          hzy                           
13           145          hzy                           
14           125          hzy                           
15           195          hzy                           

12 rows fetched.

SQL> drop table interval_t1;

Succeed.

SQL> 
SQL> --- test interval partition ddl add/drop partition
SQL> drop table if exists interval_t1;

Succeed.

SQL> create table interval_t1(f1 int, f2 int, f3 char(30))
  2 PARTITION BY RANGE(f2)
  3 interval(10)
  4 (
  5  PARTITION interval_t1p1 values less than(10),
  6  PARTITION interval_t1p2 values less than(20),
  7  PARTITION interval_t1p3 values less than(30),
  8  PARTITION interval_t1p4 values less than(50)
  9 );

Succeed.

SQL> 
SQL> insert into interval_t1 values(1,5,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(2,15,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(3,25,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(4,35,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(5,45,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(6,55,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(7,65,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(8,75,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(9,85,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(10,95,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(11,105,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(12,115,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(13,145,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(14,125,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(15,195,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(16,45,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(17,165,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(18,75,'hzy');

1 rows affected.

SQL> insert into interval_t1 values(20,135,'hzy');

1 rows affected.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
1            5            hzy                           
2            15           hzy                           
3            25           hzy                           
4            35           hzy                           
5            45           hzy                           
6            55           hzy                           
7            65           hzy                           
8            75           hzy                           
9            85           hzy                           
10           95           hzy                           
11           105          hzy                           
12           115          hzy                           
13           145          hzy                           
14           125          hzy                           
15           195          hzy                           
16           45           hzy                           
17           165          hzy                           
18           75           hzy                           
20           135          hzy                           

19 rows fetched.

SQL> alter table interval_t1 truncate partition interval_t1p2;

Succeed.

SQL> alter table interval_t1 truncate partition interval_t1p3;

Succeed.

SQL> alter table interval_t1 truncate partition interval_t1p4;

Succeed.

SQL> alter table interval_t1 truncate partition interval_t1p1;

Succeed.

SQL> select * from interval_t1 order by f1;

F1           F2           F3                            
------------ ------------ ------------------------------
6            55           hzy                           
7            65           hzy                           
8            75           hzy                           
9            85           hzy                           
10           95           hzy                           
11           105          hzy                           
12           115          hzy                           
13           145          hzy                           
14           125          hzy                           
15           195          hzy                           
17           165          hzy                           
18           75           hzy                           
20           135          hzy                           

13 rows fetched.

SQL> truncate table interval_t1;

Succeed.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
40           2            50                                                               2            8            0            0C0001000100000032000000                                        
1073741824   2            60                                                               2            8            0            0C000100010000003C000000                                        
1073741825   2            70                                                               2            8            0            0C0001000100000046000000                                        
1073741826   2            80                                                               2            8            0            0C0001000100000050000000                                        
1073741827   2            90                                                               2            8            0            0C000100010000005A000000                                        
1073741828   3            100                                                              2            8            0            0C0001000100000064000000                                        
1073741829   3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741830   3            120                                                              2            8            0            0C0001000100000078000000                                        
1073741831   3            130                                                              2            8            0            0C0001000100000082000000                                        
1073741832   3            140                                                              2            8            0            0C000100010000008C000000                                        
1073741833   3            150                                                              2            8            0            0C0001000100000096000000                                        
1073741835   3            170                                                              2            8            0            0C00010001000000AA000000                                        
1073741838   3            200                                                              2            8            0            0C00010001000000C8000000                                        

16 rows fetched.

SQL> drop table interval_t1;

Succeed.

SQL> 
SQL> --- test interval partition ddl flashback
SQL> CREATE USER hzy IDENTIFIED BY Hzy12345;

Succeed.

SQL> DROP TABLE IF EXISTS hzy.FB_INTERVAL_T1;

Succeed.

SQL> CREATE TABLE hzy.FB_INTERVAL_T1 (ID INT)
  2 PARTITION BY RANGE (ID)
  3 interval(10)
  4 (
  5 PARTITION P1 VALUES LESS THAN (10),
  6 PARTITION P2 VALUES LESS THAN (20)
  7 );

Succeed.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(1);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(11);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(35);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(45);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(67);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(100);

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> SELECT SLEEP(2);

SLEEP(2)
--------
        

1 rows fetched.

SQL> UPDATE hzy.FB_INTERVAL_T1 SET ID = 2 WHERE ID = 1;

1 rows affected.

SQL> UPDATE hzy.FB_INTERVAL_T1 SET ID = 68 WHERE ID = 67;

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> SELECT * FROM hzy.FB_INTERVAL_T1;

ID          
------------
2           
11          
35          
45          
68          
100         

6 rows fetched.

SQL> FLASHBACK TABLE hzy.FB_INTERVAL_T1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);

Succeed.

SQL> SELECT * FROM hzy.FB_INTERVAL_T1;

ID          
------------
1           
11          
35          
45          
67          
100         

6 rows fetched.

SQL> DROP TABLE hzy.FB_INTERVAL_T1;

Succeed.

SQL> 
SQL> --- test interval partition ddl flashback drop
SQL> CREATE USER hzy IDENTIFIED BY Hzy12345;

CT-00753, The object user HZY already exists.
SQL> DROP TABLE IF EXISTS hzy.FB_INTERVAL_T1;

Succeed.

SQL> CREATE TABLE hzy.FB_INTERVAL_T1 (ID INT)
  2 PARTITION BY RANGE (ID)
  3 interval(10)
  4 (
  5 PARTITION P1 VALUES LESS THAN (10),
  6 PARTITION P2 VALUES LESS THAN (20)
  7 );

Succeed.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(1);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(11);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(35);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(45);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(67);

1 rows affected.

SQL> INSERT INTO hzy.FB_INTERVAL_T1 VALUES(100);

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> SELECT SLEEP(2);

SLEEP(2)
--------
        

1 rows fetched.

SQL> DROP TABLE hzy.FB_INTERVAL_T1;

Succeed.

SQL> COMMIT;

Succeed.

SQL> SELECT * FROM hzy.FB_INTERVAL_T1;

CT-00843, [1:15]The table or view HZY.FB_INTERVAL_T1 does not exist.
SQL> FLASHBACK TABLE hzy.FB_INTERVAL_T1 TO BEFORE DROP;

Succeed.

SQL> SELECT * FROM hzy.FB_INTERVAL_T1;

ID          
------------
1           
11          
35          
45          
67          
100         

6 rows fetched.

SQL> DROP TABLE hzy.FB_INTERVAL_T1;

Succeed.

SQL> 
SQL> --- test PARTITION PRUNE TEST
SQL> DROP TABLE IF EXISTS hzy.PR_INTERVAL_T1;

Succeed.

SQL> CREATE TABLE hzy.PR_INTERVAL_T1 (ID1 INT, ID2 INT)
  2 PARTITION BY RANGE (ID1)
  3 INTERVAL(10)
  4 (
  5 PARTITION P1 VALUES LESS THAN (10),                 
  6 PARTITION P2 VALUES LESS THAN (20),                
  7 PARTITION P3 VALUES LESS THAN (30),                 
  8 PARTITION P4 VALUES LESS THAN (40),                 
  9 PARTITION P5 VALUES LESS THAN (50)                  
 10 );

Succeed.

SQL>
SQL>
SQL> insert into hzy.PR_INTERVAL_T1 values(70,89);

1 rows affected.

SQL> insert into hzy.PR_INTERVAL_T1 values(100,89);

1 rows affected.

SQL> DROP TABLE hzy.PR_INTERVAL_T1;

Succeed.

SQL> 
SQL> 
SQL> -- test interval convert to range
SQL> -- tesinterval_t1 no auto-extend interval partition
SQL> create table hzy.CON_INTERVAL_T1(f1 int, f2 int, f3 clob)
  2 PARTITION BY RANGE(f2)
  3 interval(10)
  4 (
  5  PARTITION interval_t1p1 values less than(10),
  6  PARTITION interval_t1p2 values less than(20),
  7  PARTITION interval_t1p3 values less than(30)
  8 );

Succeed.

SQL> 
SQL> create index hzy.CON_INTERVAL_T1_idx on hzy.CON_INTERVAL_T1(f1,f2) local;

Succeed.

SQL> create index hzy.CON_INTERVAL_T2_idx on hzy.CON_INTERVAL_T1(f1);

Succeed.

SQL> select PARTTYPE,PARTCNT#,PARTKEYS#,FLAGS,INTERVAL,hex(BINTERVAL) from SYS_PART_OBJECTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1');

PARTTYPE     PARTCNT#     PARTKEYS#    FLAGS        INTERVAL                                                         HEX(BINTERVAL)                                                  
------------ ------------ ------------ ------------ ---------------------------------------------------------------- ----------------------------------------------------------------
1            3            1            0            10                                                               0C000100010000000A000000                                        
1            3            1            0            10                                                               0C000100010000000A000000                                        

2 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          

3 rows fetched.

SQL> 
SQL> alter table hzy.CON_INTERVAL_T1 set interval(20);

Succeed.

SQL> alter table hzy.CON_INTERVAL_T1 set interval();

Succeed.

SQL> select PARTTYPE,PARTCNT#,PARTKEYS#,FLAGS,INTERVAL,hex(BINTERVAL) from SYS_PART_OBJECTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1');

PARTTYPE     PARTCNT#     PARTKEYS#    FLAGS        INTERVAL                                                         HEX(BINTERVAL)                                                  
------------ ------------ ------------ ------------ ---------------------------------------------------------------- ----------------------------------------------------------------
1            3            1            0                                                                                                                                             
1            3            1            0                                                                                                                                             

2 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          

3 rows fetched.

SQL> 
SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(1,1,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(2,11,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(3,24,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(4,35,'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(6,67,'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(7,100,'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(8,47,'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(9,50,'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> 
SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          

3 rows fetched.

SQL> 
SQL> drop table hzy.CON_INTERVAL_T1;

Succeed.

SQL> 
SQL> -- tesinterval_t2 auto-extend interval partition
SQL> create table hzy.CON_INTERVAL_T1(f1 int, f2 int, f3 clob)
  2 PARTITION BY RANGE(f2)
  3 interval(10)
  4 (
  5  PARTITION interval_t1p1 values less than(10),
  6  PARTITION interval_t1p2 values less than(20),
  7  PARTITION interval_t1p3 values less than(30)
  8 );

Succeed.

SQL> 
SQL> create index hzy.CON_INTERVAL_T1_idx on hzy.CON_INTERVAL_T1(f1,f2) local;

Succeed.

SQL> create index hzy.CON_INTERVAL_T2_idx on hzy.CON_INTERVAL_T1(f1);

Succeed.

SQL> select PARTTYPE,PARTCNT#,PARTKEYS#,FLAGS,INTERVAL,hex(BINTERVAL) from SYS_PART_OBJECTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1');

PARTTYPE     PARTCNT#     PARTKEYS#    FLAGS        INTERVAL                                                         HEX(BINTERVAL)                                                  
------------ ------------ ------------ ------------ ---------------------------------------------------------------- ----------------------------------------------------------------
1            3            1            0            10                                                               0C000100010000000A000000                                        
1            3            1            0            10                                                               0C000100010000000A000000                                        

2 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          

3 rows fetched.

SQL> 
SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(1,1,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(2,11,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(3,24,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(4,35,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(6,67,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(7,100,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(8,47,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(9,50,'hzy');

1 rows affected.

SQL> 
SQL> alter table hzy.CON_INTERVAL_T1 set interval();

Succeed.

SQL> select PARTTYPE,PARTCNT#,PARTKEYS#,FLAGS,INTERVAL,hex(BINTERVAL) from SYS_PART_OBJECTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1');

PARTTYPE     PARTCNT#     PARTKEYS#    FLAGS        INTERVAL                                                         HEX(BINTERVAL)                                                  
------------ ------------ ------------ ------------ ---------------------------------------------------------------- ----------------------------------------------------------------
1            8            1            0                                                                                                                                             
1            8            1            0                                                                                                                                             

2 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
40           2            40                                                               2            8            0            0C0001000100000028000000                                        
50           2            50                                                               2            8            0            0C0001000100000032000000                                        
60           2            60                                                               2            8            0            0C000100010000003C000000                                        
70           2            70                                                               2            8            0            0C0001000100000046000000                                        
80           3            110                                                              2            8            0            0C000100010000006E000000                                        

8 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
40           2            40                                                               2            8            0            0C0001000100000028000000                                        
50           2            50                                                               2            8            0            0C0001000100000032000000                                        
60           2            60                                                               2            8            0            0C000100010000003C000000                                        
70           2            70                                                               2            8            0            0C0001000100000046000000                                        
80           3            110                                                              2            8            0            0C000100010000006E000000                                        

8 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          
40          
50          
60          
70          
80          

8 rows fetched.

SQL> 
SQL> alter table hzy.CON_INTERVAL_T1 set interval(20);

Succeed.

SQL> select PARTTYPE,PARTCNT#,PARTKEYS#,FLAGS,INTERVAL,hex(BINTERVAL) from SYS_PART_OBJECTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1');

PARTTYPE     PARTCNT#     PARTKEYS#    FLAGS        INTERVAL                                                         HEX(BINTERVAL)                                                  
------------ ------------ ------------ ------------ ---------------------------------------------------------------- ----------------------------------------------------------------
1            8            1            0            20                                                               0C0001000100000014000000                                        
1            8            1            0            20                                                               0C0001000100000014000000                                        

2 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
40           2            40                                                               2            8            0            0C0001000100000028000000                                        
50           2            50                                                               2            8            0            0C0001000100000032000000                                        
60           2            60                                                               2            8            0            0C000100010000003C000000                                        
70           2            70                                                               2            8            0            0C0001000100000046000000                                        
80           3            110                                                              2            8            0            0C000100010000006E000000                                        

8 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
40           2            40                                                               2            8            0            0C0001000100000028000000                                        
50           2            50                                                               2            8            0            0C0001000100000032000000                                        
60           2            60                                                               2            8            0            0C000100010000003C000000                                        
70           2            70                                                               2            8            0            0C0001000100000046000000                                        
80           3            110                                                              2            8            0            0C000100010000006E000000                                        

8 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          
40          
50          
60          
70          
80          

8 rows fetched.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(10,112,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(11,130,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(12,140,'hzy');

1 rows affected.

SQL> INSERT INTO hzy.CON_INTERVAL_T1 VALUES(13,155,'hzy');

1 rows affected.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
40           2            40                                                               2            8            0            0C0001000100000028000000                                        
50           2            50                                                               2            8            0            0C0001000100000032000000                                        
60           2            60                                                               2            8            0            0C000100010000003C000000                                        
70           2            70                                                               2            8            0            0C0001000100000046000000                                        
80           3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741824   3            130                                                              2            8            0            0C0001000100000082000000                                        
1073741825   3            150                                                              2            8            0            0C0001000100000096000000                                        
1073741826   3            170                                                              2            8            0            0C00010001000000AA000000                                        

11 rows fetched.

SQL> select PART#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
40           2            40                                                               2            8            0            0C0001000100000028000000                                        
50           2            50                                                               2            8            0            0C0001000100000032000000                                        
60           2            60                                                               2            8            0            0C000100010000003C000000                                        
70           2            70                                                               2            8            0            0C0001000100000046000000                                        
80           3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741824   3            130                                                              2            8            0            0C0001000100000082000000                                        
1073741825   3            150                                                              2            8            0            0C0001000100000096000000                                        
1073741826   3            170                                                              2            8            0            0C00010001000000AA000000                                        

11 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'CON_INTERVAL_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          
40          
50          
60          
70          
80          
1073741824  
1073741825  
1073741826  

11 rows fetched.

SQL> drop table hzy.CON_INTERVAL_T1;

Succeed.

SQL> 
SQL> --- test  interval storage in spc
SQL> create tablespace INTER_SPC1 datafile 'interval_spc1' size 32M;

Succeed.

SQL> create tablespace INTER_SPC2 datafile 'interval_spc2' size 32M;

Succeed.

SQL> create tablespace INTER_SPC3 datafile 'interval_spc3' size 32M;

Succeed.

SQL> 
SQL> select TABLESPACE_NAME, BYTES, BLOCKS, STATUS, AUTOEXTENSIBLE, MAXBYTES, MAXBLOCKS, INCREMENT_BY, USER_BYTES, USER_BLOCKS, ONLINE_STATUS from dba_data_files where TABLESPACE_NAME = 'INTER_SPC1' order by file_id;

TABLESPACE_NAME                                                  BYTES                BLOCKS               STATUS AUTOEXTENSIBLE MAXBYTES             MAXBLOCKS            INCREMENT_BY         USER_BYTES           USER_BLOCKS          ONLINE_STATUS       
---------------------------------------------------------------- -------------------- -------------------- ------ -------------- -------------------- -------------------- -------------------- -------------------- -------------------- --------------------
INTER_SPC1                                                       33554432             4096                 VALID  NO             8796093022208        1073741824           0                    33472512             4086                 ONLINE              

1 rows fetched.

SQL> select TABLESPACE_NAME, BYTES, BLOCKS, STATUS, AUTOEXTENSIBLE, MAXBYTES, MAXBLOCKS, INCREMENT_BY, USER_BYTES, USER_BLOCKS, ONLINE_STATUS from dba_data_files where TABLESPACE_NAME = 'INTER_SPC2' order by file_id;

TABLESPACE_NAME                                                  BYTES                BLOCKS               STATUS AUTOEXTENSIBLE MAXBYTES             MAXBLOCKS            INCREMENT_BY         USER_BYTES           USER_BLOCKS          ONLINE_STATUS       
---------------------------------------------------------------- -------------------- -------------------- ------ -------------- -------------------- -------------------- -------------------- -------------------- -------------------- --------------------
INTER_SPC2                                                       33554432             4096                 VALID  NO             8796093022208        1073741824           0                    33472512             4086                 ONLINE              

1 rows fetched.

SQL> select TABLESPACE_NAME, BYTES, BLOCKS, STATUS, AUTOEXTENSIBLE, MAXBYTES, MAXBLOCKS, INCREMENT_BY, USER_BYTES, USER_BLOCKS, ONLINE_STATUS from dba_data_files  where TABLESPACE_NAME = 'INTER_SPC3' order by file_id;

TABLESPACE_NAME                                                  BYTES                BLOCKS               STATUS AUTOEXTENSIBLE MAXBYTES             MAXBLOCKS            INCREMENT_BY         USER_BYTES           USER_BLOCKS          ONLINE_STATUS       
---------------------------------------------------------------- -------------------- -------------------- ------ -------------- -------------------- -------------------- -------------------- -------------------- -------------------- --------------------
INTER_SPC3                                                       33554432             4096                 VALID  NO             8796093022208        1073741824           0                    33472512             4086                 ONLINE              

1 rows fetched.

SQL> 
SQL> DROP TABLE IF EXISTS interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 int, f3 CLOB)
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(10)
  4 STORE IN(tablespace INTER_SPC1,tablespace INTER_SPC2,tablespace INTER_SPC3)
  5 (
  6  PARTITION interval_spc_t1p1 values less than(10),
  7  PARTITION interval_spc_t1p2 values less than(20),
  8  PARTITION interval_spc_t1p3 values less than(30)
  9 );

Succeed.

SQL> 
SQL> select PART#, SPACE#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_SPC_T1') ORDER BY PART#;

PART#        SPACE#       HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           0            2            10                                                               2            8            0            0C000100010000000A000000                                        
20           0            2            20                                                               2            8            0            0C0001000100000014000000                                        
30           0            2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART#, SPACE#,HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_SPC_T1') ORDER BY PART#;

PART#        SPACE#       HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------

0 rows fetched.

SQL> select PART#, SPACE# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_SPC_T1') ORDER BY PART#;

PART#        SPACE#      
------------ ------------
10           0           
20           0           
30           0           

3 rows fetched.

SQL> 
SQL> --- test  interval normal insert order
SQL> insert into interval_spc_t1 values(1,5,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(2,15,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(3,25,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(4,35,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(5,45,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(6,55,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(7,65,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(8,75,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(9,85,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(10,95,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(11,105,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(12,115,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(13,125,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(14,135,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(15,145,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(16,155,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(17,165,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(18,175,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(19,185,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(20,195,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(21,205,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(22,215,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(23,225,'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(24,235,'hzy');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_SPC_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
1073741824   2            40                                                               2            8            0            0C0001000100000028000000                                        
1073741825   2            50                                                               2            8            0            0C0001000100000032000000                                        
1073741826   2            60                                                               2            8            0            0C000100010000003C000000                                        
1073741827   2            70                                                               2            8            0            0C0001000100000046000000                                        
1073741828   2            80                                                               2            8            0            0C0001000100000050000000                                        
1073741829   2            90                                                               2            8            0            0C000100010000005A000000                                        
1073741830   3            100                                                              2            8            0            0C0001000100000064000000                                        
1073741831   3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741832   3            120                                                              2            8            0            0C0001000100000078000000                                        
1073741833   3            130                                                              2            8            0            0C0001000100000082000000                                        
1073741834   3            140                                                              2            8            0            0C000100010000008C000000                                        
1073741835   3            150                                                              2            8            0            0C0001000100000096000000                                        
1073741836   3            160                                                              2            8            0            0C00010001000000A0000000                                        
1073741837   3            170                                                              2            8            0            0C00010001000000AA000000                                        
1073741838   3            180                                                              2            8            0            0C00010001000000B4000000                                        
1073741839   3            190                                                              2            8            0            0C00010001000000BE000000                                        
1073741840   3            200                                                              2            8            0            0C00010001000000C8000000                                        
1073741841   3            210                                                              2            8            0            0C00010001000000D2000000                                        
1073741842   3            220                                                              2            8            0            0C00010001000000DC000000                                        
1073741843   3            230                                                              2            8            0            0C00010001000000E6000000                                        
1073741844   3            240                                                              2            8            0            0C00010001000000F0000000                                        

24 rows fetched.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_SPC_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------

0 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_SPC_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          
1073741824  
1073741825  
1073741826  
1073741827  
1073741828  
1073741829  
1073741830  
1073741831  
1073741832  
1073741833  
1073741834  
1073741835  
1073741836  
1073741837  
1073741838  
1073741839  
1073741840  
1073741841  
1073741842  
1073741843  
1073741844  

24 rows fetched.

SQL> 
SQL> --- test  interval normal select
SQL> select * from interval_spc_t1 ORDER BY F1;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
1            5            hzy                                                             
2            15           hzy                                                             
3            25           hzy                                                             
4            35           hzy                                                             
5            45           hzy                                                             
6            55           hzy                                                             
7            65           hzy                                                             
8            75           hzy                                                             
9            85           hzy                                                             
10           95           hzy                                                             
11           105          hzy                                                             
12           115          hzy                                                             
13           125          hzy                                                             
14           135          hzy                                                             
15           145          hzy                                                             
16           155          hzy                                                             
17           165          hzy                                                             
18           175          hzy                                                             
19           185          hzy                                                             
20           195          hzy                                                             
21           205          hzy                                                             
22           215          hzy                                                             
23           225          hzy                                                             
24           235          hzy                                                             

24 rows fetched.

SQL> select * from interval_spc_t1 where f2 < 30 ORDER BY F1;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
1            5            hzy                                                             
2            15           hzy                                                             
3            25           hzy                                                             

3 rows fetched.

SQL> select * from interval_spc_t1 where f2 > 30 and f2 < 100 ORDER BY F1;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
4            35           hzy                                                             
5            45           hzy                                                             
6            55           hzy                                                             
7            65           hzy                                                             
8            75           hzy                                                             
9            85           hzy                                                             
10           95           hzy                                                             

7 rows fetched.

SQL> --- test  interval normal update normal
SQL> update interval_spc_t1 set f2 = 69 where f2 = 65;

1 rows affected.

SQL> update interval_spc_t1 set f2 = 79 where f2 = 75;

1 rows affected.

SQL> select * from interval_spc_t1 ORDER BY F1;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
1            5            hzy                                                             
2            15           hzy                                                             
3            25           hzy                                                             
4            35           hzy                                                             
5            45           hzy                                                             
6            55           hzy                                                             
7            69           hzy                                                             
8            79           hzy                                                             
9            85           hzy                                                             
10           95           hzy                                                             
11           105          hzy                                                             
12           115          hzy                                                             
13           125          hzy                                                             
14           135          hzy                                                             
15           145          hzy                                                             
16           155          hzy                                                             
17           165          hzy                                                             
18           175          hzy                                                             
19           185          hzy                                                             
20           195          hzy                                                             
21           205          hzy                                                             
22           215          hzy                                                             
23           225          hzy                                                             
24           235          hzy                                                             

24 rows fetched.

SQL> commit;

Succeed.

SQL> 
SQL> 
SQL> DROP TABLE IF EXISTS interval_max_t1;

Succeed.

SQL> create table interval_max_t1(f1 int, f2 int, f3 clob)
  2 PARTITION BY RANGE(f2)
  3 interval(10)
  4 (
  5  PARTITION interval_t11 values less than(10),
  6  PARTITION interval_t12 values less than(20),
  7  PARTITION interval_t13 values less than(30)
  8 );

Succeed.

SQL> 
SQL> create index int_idx_t1 on  interval_max_t1(f1) local;

Succeed.

SQL> create index int_idx_t2 on  interval_max_t1(f2);

Succeed.

SQL> insert into interval_max_t1 values(1,5,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(2,15,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(3,25,'hzy');

1 rows affected.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_MAX_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_MAX_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        

3 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_MAX_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          

3 rows fetched.

SQL> insert into interval_max_t1 values(4,10225,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(5,20165,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(6,55,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(7,65,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(8,75,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(9,85,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(10,295,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(11,105,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(12,115,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(13,125,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(14,40035,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(15,145,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(16,30055,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(17,165,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(18,175,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(19,185,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(20,195,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(21,205,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(22,215,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(23,225,'hzy');

1 rows affected.

SQL> insert into interval_max_t1 values(24,20045,'hzy');

1 rows affected.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_MAX_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
1073741826   2            60                                                               2            8            0            0C000100010000003C000000                                        
1073741827   2            70                                                               2            8            0            0C0001000100000046000000                                        
1073741828   2            80                                                               2            8            0            0C0001000100000050000000                                        
1073741829   2            90                                                               2            8            0            0C000100010000005A000000                                        
1073741831   3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741832   3            120                                                              2            8            0            0C0001000100000078000000                                        
1073741833   3            130                                                              2            8            0            0C0001000100000082000000                                        
1073741835   3            150                                                              2            8            0            0C0001000100000096000000                                        
1073741837   3            170                                                              2            8            0            0C00010001000000AA000000                                        
1073741838   3            180                                                              2            8            0            0C00010001000000B4000000                                        
1073741839   3            190                                                              2            8            0            0C00010001000000BE000000                                        
1073741840   3            200                                                              2            8            0            0C00010001000000C8000000                                        
1073741841   3            210                                                              2            8            0            0C00010001000000D2000000                                        
1073741842   3            220                                                              2            8            0            0C00010001000000DC000000                                        
1073741843   3            230                                                              2            8            0            0C00010001000000E6000000                                        
1073741850   3            300                                                              2            8            0            0C000100010000002C010000                                        
1073742843   5            10230                                                            2            8            0            0C00010001000000F6270000                                        
1073743825   5            20050                                                            2            8            0            0C00010001000000524E0000                                        
1073743837   5            20170                                                            2            8            0            0C00010001000000CA4E0000                                        
1073744826   5            30060                                                            2            8            0            0C000100010000006C750000                                        
1073745824   5            40040                                                            2            8            0            0C00010001000000689C0000                                        

24 rows fetched.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_INDEX_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_MAX_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           2            10                                                               2            8            0            0C000100010000000A000000                                        
20           2            20                                                               2            8            0            0C0001000100000014000000                                        
30           2            30                                                               2            8            0            0C000100010000001E000000                                        
1073741826   2            60                                                               2            8            0            0C000100010000003C000000                                        
1073741827   2            70                                                               2            8            0            0C0001000100000046000000                                        
1073741828   2            80                                                               2            8            0            0C0001000100000050000000                                        
1073741829   2            90                                                               2            8            0            0C000100010000005A000000                                        
1073741831   3            110                                                              2            8            0            0C000100010000006E000000                                        
1073741832   3            120                                                              2            8            0            0C0001000100000078000000                                        
1073741833   3            130                                                              2            8            0            0C0001000100000082000000                                        
1073741835   3            150                                                              2            8            0            0C0001000100000096000000                                        
1073741837   3            170                                                              2            8            0            0C00010001000000AA000000                                        
1073741838   3            180                                                              2            8            0            0C00010001000000B4000000                                        
1073741839   3            190                                                              2            8            0            0C00010001000000BE000000                                        
1073741840   3            200                                                              2            8            0            0C00010001000000C8000000                                        
1073741841   3            210                                                              2            8            0            0C00010001000000D2000000                                        
1073741842   3            220                                                              2            8            0            0C00010001000000DC000000                                        
1073741843   3            230                                                              2            8            0            0C00010001000000E6000000                                        
1073741850   3            300                                                              2            8            0            0C000100010000002C010000                                        
1073742843   5            10230                                                            2            8            0            0C00010001000000F6270000                                        
1073743825   5            20050                                                            2            8            0            0C00010001000000524E0000                                        
1073743837   5            20170                                                            2            8            0            0C00010001000000CA4E0000                                        
1073744826   5            30060                                                            2            8            0            0C000100010000006C750000                                        
1073745824   5            40040                                                            2            8            0            0C00010001000000689C0000                                        

24 rows fetched.

SQL> select PART# from SYS_LOB_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_MAX_T1') ORDER BY PART#;

PART#       
------------
10          
20          
30          
1073741826  
1073741827  
1073741828  
1073741829  
1073741831  
1073741832  
1073741833  
1073741835  
1073741837  
1073741838  
1073741839  
1073741840  
1073741841  
1073741842  
1073741843  
1073741850  
1073742843  
1073743825  
1073743837  
1073744826  
1073745824  

24 rows fetched.

SQL> select * from interval_max_t1 ORDER BY F1;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
1            5            hzy                                                             
2            15           hzy                                                             
3            25           hzy                                                             
4            10225        hzy                                                             
5            20165        hzy                                                             
6            55           hzy                                                             
7            65           hzy                                                             
8            75           hzy                                                             
9            85           hzy                                                             
10           295          hzy                                                             
11           105          hzy                                                             
12           115          hzy                                                             
13           125          hzy                                                             
14           40035        hzy                                                             
15           145          hzy                                                             
16           30055        hzy                                                             
17           165          hzy                                                             
18           175          hzy                                                             
19           185          hzy                                                             
20           195          hzy                                                             
21           205          hzy                                                             
22           215          hzy                                                             
23           225          hzy                                                             
24           20045        hzy                                                             

24 rows fetched.

SQL> select * from interval_max_t1 ORDER BY F2;

F1           F2           F3                                                              
------------ ------------ ----------------------------------------------------------------
1            5            hzy                                                             
2            15           hzy                                                             
3            25           hzy                                                             
6            55           hzy                                                             
7            65           hzy                                                             
8            75           hzy                                                             
9            85           hzy                                                             
11           105          hzy                                                             
12           115          hzy                                                             
13           125          hzy                                                             
15           145          hzy                                                             
17           165          hzy                                                             
18           175          hzy                                                             
19           185          hzy                                                             
20           195          hzy                                                             
21           205          hzy                                                             
22           215          hzy                                                             
23           225          hzy                                                             
10           295          hzy                                                             
4            10225        hzy                                                             
24           20045        hzy                                                             
5            20165        hzy                                                             
16           30055        hzy                                                             
14           40035        hzy                                                             

24 rows fetched.

SQL> commit;

Succeed.

SQL> drop table if exists MS_BIGTABLE_LOG;

Succeed.

SQL> --test date error
SQL> create table MS_BIGTABLE_LOG
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(2000)
  5 )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (10)
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-1', 'YYYY-MM-DD'))
 10 );

CT-01102, [7:11]Invalid (sub)partition interval key data type 
SQL> 
SQL> create table MS_BIGTABLE_LOG
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(2000)
  5 )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtodsinterval(1,'day'))
  8 (
  9   PARTITION P1 VALUES LESS THAN (10)
 10 );

CT-00606, Inconsistent datatypes, expected DATE - got BINARY_INTEGER
SQL> 
SQL> --test date normal
SQL> create table MS_BIGTABLE_LOG
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtodsinterval(1,'day'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-1', 'YYYY-MM-DD'))
 10 );

Succeed.

SQL> 
SQL> create index idx_mx1 on MS_BIGTABLE_LOG(record_date);

Succeed.

SQL> create index idx_mx2 on MS_BIGTABLE_LOG(col_1) local;

Succeed.

SQL> 
SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2013-1-1', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-1-2', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-1-3', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-1-4', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-1-5', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-1-6', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-1-7', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-2-1', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-3-1', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-4-1', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2014-5-1', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> insert into MS_BIGTABLE_LOG values(TO_DATE('2015-5-1', 'YYYY-MM-DD'),'hzy');

1 rows affected.

SQL> 
SQL> select * from MS_BIGTABLE_LOG order by record_date;

RECORD_DATE            COL_1                                                           
---------------------- ----------------------------------------------------------------
2013-01-01 00:00:00    hzy                                                             
2014-01-02 00:00:00    hzy                                                             
2014-01-03 00:00:00    hzy                                                             
2014-01-04 00:00:00    hzy                                                             
2014-01-05 00:00:00    hzy                                                             
2014-01-06 00:00:00    hzy                                                             
2014-01-07 00:00:00    hzy                                                             
2014-02-01 00:00:00    hzy                                                             
2014-03-01 00:00:00    hzy                                                             
2014-04-01 00:00:00    hzy                                                             
2014-05-01 00:00:00    hzy                                                             
2015-05-01 00:00:00    hzy                                                             

12 rows fetched.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> --test number error
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f9)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

CT-00601, Sql syntax error: invalid interval partition column data type
SQL> 
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f8)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

CT-00601, Sql syntax error: invalid interval partition column data type
SQL> 
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL('abc')
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

CT-00636, Invalid number -- unexpected character
SQL> 
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL(-10.5)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

CT-01102, [3:10]Invalid (sub)partition interval key data type 
SQL> 
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL('-10.5')
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

CT-01102, [3:10]Invalid (sub)partition interval key data type 
SQL> 
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL('10.5')
  4 (
  5  PARTITION interval_spc_t1p1 values less than(20),
  6  PARTITION interval_spc_t1p2 values less than(10)
  7 );

CT-00601, Sql syntax error: partition INTERVAL_SPC_T1P2 boundary invalid
SQL> 
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL('10.5')
  4 (
  5  PARTITION interval_spc_t1p1 values less than(20),
  6  PARTITION interval_spc_t1p2 values less than(MAXVALUE)
  7 );

CT-00601, [6:46]Sql syntax error: Maxvalue partition cannot be specified for interval partitioned
SQL> 
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1,f2)
  3 INTERVAL('10.5')
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10,20)
  6 );

CT-00601, Sql syntax error: only support one interval partition column
SQL> 
SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL(10,20)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10,20)
  6 );

CT-00601, [3:13]Sql syntax error: expected end but 20 found
SQL> 
SQL> --test number normal
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f7)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> insert into interval_spc_t1 values(1, 200000000, 5.5, 5.555, 5.5555, 5.5556, 5.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(2, 200000000, 5.5, 5.555, 5.5555, 5.5556, 15.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(3, 200000000, 5.5, 5.555, 5.5555, 5.5556, 25.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(4, 200000000, 5.5, 5.555, 5.5555, 5.5556, 35.96, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(5, 200000000, 5.5, 5.555, 5.5555, 5.5556, 45.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(6, 200000000, 5.5, 5.555, 5.5555, 5.5556, 55.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(7, 200000000, 5.5, 5.555, 5.5555, 5.5556, 105.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(8, 200000000, 5.5, 5.555, 5.5555, 5.5556, 85.576, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(9, 200000000, 5.5, 5.555, 5.5555, 5.5556, 75.776, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(10, 200000000, 5.5, 5.555, 5.5555, 5.5556, 135.176, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> 
SQL> select * from interval_spc_t1 order by f1;

F1           F2                   F3                                       F4                                       F5                   F6                   F7                   F8         F9        
------------ -------------------- ---------------------------------------- ---------------------------------------- -------------------- -------------------- -------------------- ---------- ----------
1            200000000            6                                        6                                        5.5555               5.5556               5.76                 hzy        hzy       

1 rows fetched.



SQL> 
SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f6)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> insert into interval_spc_t1 values(1, 200000000, 5.5, 5.555, 5.5555, 5.5556, 5.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(2, 200000000, 5.5, 5.555, 5.5555, 15.5556, 15.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(3, 200000000, 5.5, 5.555, 5.5555, 25.5556, 25.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(4, 200000000, 5.5, 5.555, 5.5555, 35.5556, 35.96, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(5, 200000000, 5.5, 5.555, 5.5555, 45.5556, 45.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(6, 200000000, 5.5, 5.555, 5.5555, 55.5556, 55.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(7, 200000000, 5.5, 5.555, 5.5555, 65.5556, 105.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(8, 200000000, 5.5, 5.555, 5.5555, 75.5556, 85.576, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(9, 200000000, 5.5, 5.555, 5.5555, 135.5556, 75.776, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(10, 200000000, 5.5, 5.555, 5.5555, 85.5556, 135.176, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> 
SQL> select * from interval_spc_t1 order by f1;

F1           F2                   F3                                       F4                                       F5                   F6                   F7                   F8         F9        
------------ -------------------- ---------------------------------------- ---------------------------------------- -------------------- -------------------- -------------------- ---------- ----------
1            200000000            6                                        6                                        5.5555               5.5556               5.76                 hzy        hzy       

1 rows fetched.




SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f5)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> insert into interval_spc_t1 values(1, 200000000, 5.5, 5.555, 15.5555, 5.5556, 5.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(2, 200000000, 5.5, 5.555, 25.5555, 5.5556, 15.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(3, 200000000, 5.5, 5.555, 45.5555, 5.5556, 25.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(4, 200000000, 5.5, 5.555, 75.5555, 5.5556, 35.96, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(5, 200000000, 5.5, 5.555, 85.5555, 5.5556, 45.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(6, 200000000, 5.5, 5.555, 115.5555, 5.5556, 55.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(7, 200000000, 5.5, 5.555, 65.5555, 5.5556, 105.76, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(8, 200000000, 5.5, 5.555, 95.5555, 5.5556, 85.576, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(9, 200000000, 5.5, 5.555, 45.5555, 5.5556, 75.776, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> insert into interval_spc_t1 values(10, 200000000, 5.5, 5.555, 55.5555, 5.5556, 135.176, 'hzy', 'hzy');

CT-01103, Invalid (sub)partition key, inserted partition key does not map to any partition
SQL> 
SQL> select * from interval_spc_t1 order by f1;

F1           F2                   F3                                       F4                                       F5                   F6                   F7                   F8         F9        
------------ -------------------- ---------------------------------------- ---------------------------------------- -------------------- -------------------- -------------------- ---------- ----------

0 rows fetched.


SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f4)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f3)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL(10.5)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f1)
  3 INTERVAL('10.5')
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 2), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f3)
  3 INTERVAL(0.5)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> create index int_idx1 on interval_spc_t1(f3);

Succeed.

SQL> insert into interval_spc_t1 values(1, 200000000, 5.5, 5.555, 5.5555, 5.5556, 5.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(2, 200000000, 15.5, 5.555, 5.5555, 5.5556, 15.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(3, 200000000, 16.35, 5.555, 5.5555, 5.5556, 25.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(4, 200000000, 16.4, 5.555, 5.5555, 5.5556, 35.96, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(5, 200000000, 12.5, 5.555, 5.5555, 5.5556, 45.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(6, 200000000, 12.05, 5.555, 5.5555, 5.5556, 55.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(7, 200000000, 10.0, 5.555, 5.5555, 5.5556, 105.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(8, 200000000, 10.5, 5.555, 5.5555, 5.5556, 85.576, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(9, 200000000, 11.5, 5.555, 5.5555, 5.5556, 75.776, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(10, 200000000,15.5, 5.555, 5.5555, 5.5556, 135.176, 'hzy', 'hzy');

1 rows affected.

SQL> 
SQL> select * from interval_spc_t1 order by f1;

F1           F2                   F3                                       F4                                       F5                   F6                   F7                   F8         F9        
------------ -------------------- ---------------------------------------- ---------------------------------------- -------------------- -------------------- -------------------- ---------- ----------
1            200000000            5.5                                      6                                        5.5555               5.5556               5.76                 hzy        hzy       
2            200000000            15.5                                     6                                        5.5555               5.5556               15.76                hzy        hzy       
3            200000000            16.35                                    6                                        5.5555               5.5556               25.76                hzy        hzy       
4            200000000            16.4                                     6                                        5.5555               5.5556               35.96                hzy        hzy       
5            200000000            12.5                                     6                                        5.5555               5.5556               45.76                hzy        hzy       
6            200000000            12.05                                    6                                        5.5555               5.5556               55.76                hzy        hzy       
7            200000000            10                                       6                                        5.5555               5.5556               105.76               hzy        hzy       
8            200000000            10.5                                     6                                        5.5555               5.5556               85.576               hzy        hzy       
9            200000000            11.5                                     6                                        5.5555               5.5556               75.776               hzy        hzy       
10           200000000            15.5                                     6                                        5.5555               5.5556               135.176              hzy        hzy       

10 rows fetched.





SQL> 
SQL> drop table if exists MS_BIGTABLE_LOG;

Succeed.

SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> drop table if exists hash_tbl_001;

Succeed.

SQL> create table hash_tbl_001(c_id int,c_d_id number(10,4)) partition by hash(c_id)
  2 (
  3 partition p1,
  4 partition p2,
  5 partition p3,
  6 partition p4
  7 );

Succeed.

SQL> insert into hash_tbl_001 values(1,1);

1 rows affected.

SQL> insert into hash_tbl_001 values(2,2);

1 rows affected.

SQL> set serveroutput on;

ON
SQL> declare
  2 v_sum int;
  3 v_max int;
  4 cursor hashcursor is select c_id,c_d_id from hash_tbl_001 partition(p3) order by 1,2 asc;
  5 begin
  6   open hashcursor;
  7   fetch hashcursor into v_sum,v_max;
  8   while hashcursor%found loop
  9   dbe_output.print_line('sum(c_id)'||'   '||'max(c_big)');
 10   dbe_output.print_line(v_sum||'      '||v_max);
 11   fetch hashcursor into v_sum,v_max;
 12   end loop;
 13   close hashcursor;
 14 end;
 15 /

sum(c_id)   max(c_big)
1      1
sum(c_id)   max(c_big)
2      2

PL/SQL procedure successfully completed.

SQL> drop table if exists hash_tbl_001;

Succeed.

SQL> 
SQL> create user hzy_dts identified by Cantian_234;

Succeed.

SQL> create tablespace  partinterval_tablespace1 datafile 'partinterval_acid_001' size 32M AUTOEXTEND on next 100M;

Succeed.

SQL> create tablespace  partinterval_tablespace2 datafile 'partinterval_acid_002' size 32M AUTOEXTEND on next 100M;

Succeed.

SQL> drop table if exists HZY_DTS.ACID_INTERVAL_DML_TBL_000;

Succeed.

SQL> CREATE TABLE HZY_DTS.ACID_INTERVAL_DML_TBL_000(C_ID INT,
  2 C_D_ID INT NOT NULL,
  3 C_W_ID INT NOT NULL,
  4 C_FIRST VARCHAR(64) NOT NULL,
  5 C_MIDDLE CHAR(2),
  6 C_LAST VARCHAR(64) NOT NULL,
  7 C_STREET_1 VARCHAR(20) NOT NULL,
  8 C_STREET_2 VARCHAR(20),
  9 C_CITY VARCHAR(20) NOT NULL,
 10 C_STATE CHAR(2) NOT NULL,
 11 C_ZIP CHAR(9) NOT NULL,
 12 C_PHONE CHAR(16) NOT NULL,
 13 C_SINCE TIMESTAMP,
 14 C_CREDIT CHAR(2) NOT NULL,
 15 C_CREDIT_LIM NUMERIC(12,2),
 16 C_DISCOUNT NUMERIC(4,4),
 17 C_BALANCE NUMERIC(12,2),
 18 C_YTD_PAYMENT REAL NOT NULL,
 19 C_PAYMENT_CNT NUMBER NOT NULL,
 20 C_DELIVERY_CNT BOOL NOT NULL,
 21 C_END DATE NOT NULL,
 22 C_VCHAR VARCHAR(1000),
 23 C_DATA CLOB,
 24 C_TEXT BLOB,
 25 C_CLOB CLOB,
 26 primary key (c_id,c_d_id,c_w_id));

Succeed.

SQL> insert into  HZY_DTS.ACID_INTERVAL_DML_TBL_000 select 0,0,0,'AA'||'is0cmvls','OE','AA'||'BAR0BARBAR','bkili'||'0'||'fcxcle'||'0','pmbwo'||'0'||'vhvpaj'||'0','dyf'||'0'||'rya'||'0','uq',4800||'0',940||'0'||205||'0','2017-12-31 10:51:47','GC',50000.0,0.4361328,-10.0,10.0,1,true,'2017-12-31 10:51:47','QVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSF'||

1 rows affected.

SQL> commit;

Succeed.

SQL> CREATE or replace procedure hzy_dts_dml_interval_proc_001(startall int,endall int) as
  2 i INT;
  3 BEGIN
  4  if startall <= endall then
  5   FOR i IN startall..endall LOOP
  6         insert into HZY_DTS.ACID_INTERVAL_DML_TBL_000 select c_id+i,c_d_id+i,c_w_id+i,'AA'||'iscmvls',c_middle,'AA'||'BAR'||i||'ddBARBAR',c_street_1,c_street_2,c_city,c_state,c_zip,c_phone,c_since+i,c_credit,c_credit_lim,c_discount,c_balance,c_ytd_payment,c_payment_cnt,c_delivery_cnt,c_end+i,c_vchar,c_data,c_text,c_clob from HZY_DTS.ACID_INTERVAL_DML_TBL_000 where c_id=0;commit;
  7   END LOOP;
  8  end if;
  9 END;
 10 /

Succeed.

SQL> call hzy_dts_dml_interval_proc_001(1,1000);

PL/SQL procedure successfully completed.

SQL> delete from HZY_DTS.ACID_INTERVAL_DML_TBL_000 where c_id=0;

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> drop table HZY_DTS.ACID_INTERVAL_DML_TBL_001 purge;

CT-00843, The table or view HZY_DTS.ACID_INTERVAL_DML_TBL_001 does not exist.
SQL> CREATE TABLE HZY_DTS.ACID_INTERVAL_DML_TBL_001(C_ID INT,C_D_ID INT NOT NULL,C_W_ID INT NOT NULL,C_FIRST VARCHAR(64) NOT NULL,C_MIDDLE CHAR(2),C_LAST VARCHAR(64) NOT NULL,C_STREET_1 VARCHAR(20) NOT NULL,C_STREET_2 VARCHAR(20),C_CITY VARCHAR(20) NOT NULL,C_STATE CHAR(2) NOT NULL,C_ZIP CHAR(9) NOT NULL,C_PHONE CHAR(16) NOT NULL,C_SINCE TIMESTAMP,C_CREDIT CHAR(2) NOT NULL,C_CREDIT_LIM NUMERIC(12,2),C_DISCOUNT NUMERIC(4,4),C_BALANCE NUMERIC(12,2),C_YTD_PAYMENT REAL NOT NULL,C_PAYMENT_CNT NUMBER NOT NULL,C_DELIVERY_CNT BOOL NOT NULL,C_END DATE NOT NULL,C_VCHAR VARCHAR(1000),C_DATA CLOB,C_TEXT BLOB,C_CLOB CLOB)PARTITION BY RANGE(C_ID)INTERVAL(100)(PARTITION PART_1 VALUES LESS THAN (201),PARTITION PART_2 VALUES LESS THAN (401),PARTITION PART_3 VALUES LESS THAN (601),PARTITION PART_4 VALUES LESS THAN (801),PARTITION PART_5 VALUES LESS THAN (1001),PARTITION PART_6 VALUES LESS THAN (1201),PARTITION PART_7 VALUES LESS THAN (1401),PARTITION PART_8 VALUES LESS THAN (1601),PARTITION PART_9 VALUES LESS THAN (1801));

Succeed.

SQL> 
SQL> CREATE INDEX HZY_DTS.ACID_INTERVAL_DML_IDX_001_1 ON HZY_DTS.ACID_INTERVAL_DML_TBL_001(C_ID) LOCAL;

Succeed.

SQL> CREATE INDEX HZY_DTS.ACID_INTERVAL_DML_IDX_001_0 ON HZY_DTS.ACID_INTERVAL_DML_TBL_001(C_FIRST) ;

Succeed.

SQL> insert into HZY_DTS.ACID_INTERVAL_DML_TBL_001 select * from HZY_DTS.ACID_INTERVAL_DML_TBL_000;

1000 rows affected.

SQL> delete from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where mod(c_id,2)=0;

500 rows affected.

SQL> update HZY_DTS.ACID_INTERVAL_DML_TBL_001 set c_first='aaaaaaaaaaaaaaa',c_vchar=upper(c_vchar),c_last=lower(c_last),c_data='qvldetanrbrburbmzqujshoqnggsmnteccipriirdhirwiynpfzcsykxxyscdsfqafhatdokmjogfgslucunvwb',c_text=lpad('1243245324554354325',50,'1232343'),c_clob='qvldetanrbrburbmzqujshoqnggsmnteccipriirdhirwiyn';

500 rows affected.

SQL> update HZY_DTS.ACID_INTERVAL_DML_TBL_001 set c_id=c_id+1,c_data='QVLDETANRBRBURBMZQUJSHOQNGGSMNTECCIPRIIRDHIRWIYNPFZCSYKXXYSCDSFQAFHATDOKMJOGFGSLUCUNVWBTBFSQZJECLBACPJQDHJCHVGBNRKJRGJRYCSGPPSOCNEVAUTZFEOSVIAXBVOBFFNJUQHLVNWUQHTGJQSBFACWJPBVPGTHPYXCPMNUTCJXRBXXBMRMWWXCEPWIIXVVLEYAJAUTCESLJHRSFSMSNMZJCXVCUXDWMYIJBWYWIIRSGOCWKTEDBBOKHYNZNCEAESUIFKGOAAFAGUGETFHBCYLKSRJUKVBUFQCVBFFAXNZSSYQUIDVWEFKTKNRCHYXFPHUNQKTWNIPNSRVQSWSYMOCNOEXBABWNPMNXSVSHDSJHAZCAUVQJGVQJFKJJGQRCEYJMBUMKAPMCBXEASHYBPGEKJKFEZTHNJBHFQIWBUTBXTKJKNDYYHJCHVGBNRKJRGJRYCSGPPSOCNEVAUTZFEOSVIAXBVOBF',c_text=lpad('124324543256546324554354325',500,'7687389015'),c_clob='QVLDETANRBRBURBMZQUJSHOQNGGSMNTECCIPRIIRDHIRWIYNPFZCSYKXXYSCDSFQAFHATDOKMJOGFGSLUCUNVWBTBFSQZJECLBACPJQDHJCHVGBNRKJRGJRYCSGPPSOCNEVAUTZFEOSVIAXBVOBFFNJUQHLVNWUQHTGJQSBFACWJPBVPGTHDAFFDAFDAFDAFDASFDBMRMWWXCEPWIIXVVLEYAJAUTCESLJHRSFSMSNMZJCXVCUXDWMYIJBWYWIIRSGOCWKTEDBBOKHYNZNCEAESUIFKGOAAFAGUGETFHBCYLKSRJUKVBUFQCVBFFAXNZSSYQUIDVWEFKTKNRCHYXFPHUNQKTWNIPNSRVQSWSYMOCNOEXBABWNPMNXSVSHDSJHAZCAUVQJGVQJFKJJGQRCEYJMBUMKAPMCBXEASHYBPGEKJKFEZTHNJBHFQIWBUTBXTKJKNDYYHJCHVGBNRKJRGJRYCSGPPSOCNEVAUTZFSDFEOSVIAX' where mod(c_id,2)=0;

0 rows affected.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------
aaaaaaaaaaaaaaa                                                  500                 

1 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_id  <5000 group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------
aaaaaaaaaaaaaaa                                                  500                 

1 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_end <'2018-08-01 10:51:47' group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------
aaaaaaaaaaaaaaa                                                  106                 

1 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_id  >5000 and c_first like 'AA%' and c_since >'2018-08-01 10:51:47' and c_end >'2018-08-01 10:51:47' group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_d_id  <5000 and (c_last like 'c%' or c_last like 'AA%')group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_first  like 'AA%' group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_first like 'AA%' and (c_last like 'c%' or c_last like 'AA%') and (c_vchar like 'c_varchar%' or c_vchar like 'QVLDETANRBR%')  group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> truncate table HZY_DTS.ACID_INTERVAL_DML_TBL_001;

Succeed.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_id  <5000 group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_end <'2018-08-01 10:51:47' group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_id  >5000 and c_first like 'AA%' and c_since >'2018-08-01 10:51:47' and c_end >'2018-08-01 10:51:47' group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_d_id  <5000 and (c_last like 'c%' or c_last like 'AA%')group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_first  like 'AA%' group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> select distinct c_first,count(*) from HZY_DTS.ACID_INTERVAL_DML_TBL_001 where c_first like 'AA%' and (c_last like 'c%' or c_last like 'AA%') and (c_vchar like 'c_varchar%' or c_vchar like 'QVLDETANRBR%')  group by c_first order by 1;

C_FIRST                                                          COUNT(*)            
---------------------------------------------------------------- --------------------

0 rows fetched.

SQL> drop table HZY_DTS.ACID_INTERVAL_DML_TBL_001;

Succeed.

SQL> 
SQL> drop table if exists HZY_DTS.ACID_INTERVAL_DML_TBL_001;

Succeed.

SQL> CREATE TABLE HZY_DTS.ACID_INTERVAL_DML_TBL_001(C_ID INT,C_D_ID INT NOT NULL,C_W_ID INT NOT NULL,C_FIRST VARCHAR(64) NOT NULL,C_MIDDLE CHAR(2),C_LAST VARCHAR(64) NOT NULL,C_STREET_1 VARCHAR(20) NOT NULL,C_STREET_2 VARCHAR(20),C_CITY VARCHAR(20) NOT NULL,C_STATE CHAR(2) NOT NULL,C_ZIP CHAR(9) NOT NULL,C_PHONE CHAR(16) NOT NULL,C_SINCE TIMESTAMP,C_CREDIT CHAR(2) NOT NULL,C_CREDIT_LIM NUMERIC(12,2),C_DISCOUNT NUMERIC(4,4),C_BALANCE NUMERIC(12,2),C_YTD_PAYMENT REAL NOT NULL,C_PAYMENT_CNT NUMBER NOT NULL,C_DELIVERY_CNT BOOL NOT NULL,C_END DATE NOT NULL,C_VCHAR VARCHAR(1000),C_DATA CLOB,C_TEXT BLOB,C_CLOB CLOB)PARTITION BY RANGE(C_ID)INTERVAL(100)(PARTITION PART_1 VALUES LESS THAN (201),PARTITION PART_2 VALUES LESS THAN (401),PARTITION PART_3 VALUES LESS THAN (601),PARTITION PART_4 VALUES LESS THAN (801),PARTITION PART_5 VALUES LESS THAN (1001),PARTITION PART_6 VALUES LESS THAN (1201),PARTITION PART_7 VALUES LESS THAN (1401),PARTITION PART_8 VALUES LESS THAN (1601),PARTITION PART_9 VALUES LESS THAN (1801));

Succeed.

SQL> insert into HZY_DTS.ACID_INTERVAL_DML_TBL_001 select * from HZY_DTS.ACID_INTERVAL_DML_TBL_000;

1000 rows affected.

SQL> commit;

Succeed.

SQL> truncate table HZY_DTS.ACID_INTERVAL_DML_TBL_001;

Succeed.

SQL> drop table HZY_DTS.ACID_INTERVAL_DML_TBL_001 purge;

Succeed.

SQL> 
SQL> ---dts2
SQL> drop table if exists HZY_DTS.ACID_INTERVAL_DML_TBL_000;

Succeed.

SQL> CREATE TABLE HZY_DTS.ACID_INTERVAL_DML_TBL_000(C_ID INT,
  2 C_D_ID INT NOT NULL,
  3 C_W_ID INT NOT NULL,
  4 C_FIRST VARCHAR(64) NOT NULL,
  5 C_MIDDLE CHAR(2),
  6 C_LAST VARCHAR(64) NOT NULL,
  7 C_STREET_1 VARCHAR(20) NOT NULL,
  8 C_STREET_2 VARCHAR(20),
  9 C_CITY VARCHAR(20) NOT NULL,
 10 C_STATE CHAR(2) NOT NULL,
 11 C_ZIP CHAR(9) NOT NULL,
 12 C_PHONE CHAR(16) NOT NULL,
 13 C_SINCE TIMESTAMP,
 14 C_CREDIT CHAR(2) NOT NULL,
 15 C_CREDIT_LIM NUMERIC(12,2),
 16 C_DISCOUNT NUMERIC(4,4),
 17 C_BALANCE NUMERIC(12,2),
 18 C_YTD_PAYMENT REAL NOT NULL,
 19 C_PAYMENT_CNT NUMBER NOT NULL,
 20 C_DELIVERY_CNT BOOL NOT NULL,
 21 C_END DATE NOT NULL,
 22 C_VCHAR VARCHAR(1000),
 23 C_DATA CLOB,
 24 C_TEXT BLOB,
 25 C_CLOB CLOB,
 26 primary key (c_id,c_d_id,c_w_id));

Succeed.

SQL> insert into  HZY_DTS.ACID_INTERVAL_DML_TBL_000 select 0,0,0,'AA'||'is0cmvls','OE','AA'||'BAR0BARBAR','bkili'||'0'||'fcxcle'||'0','pmbwo'||'0'||'vhvpaj'||'0','dyf'||'0'||'rya'||'0','uq',4800||'0',940||'0'||205||'0','2017-12-31 10:51:47','GC',50000.0,0.4361328,-10.0,10.0,1,true,'2017-12-31 10:51:47','QVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSFQVLDETANRBRBURBMZQUJSHOQNGGSMNTECC348493214893542NPFZCSYKXXYSCDSF'||

1 rows affected.

SQL> commit;

Succeed.

SQL> CREATE or replace procedure hzy_dts_dml_interval_proc_001(startall int,endall int) as
  2 i INT;
  3 BEGIN
  4  if startall <= endall then
  5   FOR i IN startall..endall LOOP
  6         insert into HZY_DTS.ACID_INTERVAL_DML_TBL_000 select c_id+i,c_d_id+i,c_w_id+i,'AA'||'iscmvls',c_middle,'AA'||'BAR'||i||'ddBARBAR',c_street_1,c_street_2,c_city,c_state,c_zip,c_phone,c_since+i,c_credit,c_credit_lim,c_discount,c_balance,c_ytd_payment,c_payment_cnt,c_delivery_cnt,c_end+i,c_vchar,c_data,c_text,c_clob from HZY_DTS.ACID_INTERVAL_DML_TBL_000 where c_id=0;commit;
  7   END LOOP;
  8  end if;
  9 END;
 10 /

Succeed.

SQL> call hzy_dts_dml_interval_proc_001(1,2000);

PL/SQL procedure successfully completed.

SQL> delete from HZY_DTS.ACID_INTERVAL_DML_TBL_000 where c_id=0;

1 rows affected.

SQL> commit;

Succeed.

SQL> drop table if exists HZY_DTS.ACID_INTERVAL_DML_TBL_001;

Succeed.

SQL> CREATE TABLE HZY_DTS.ACID_INTERVAL_DML_TBL_001(C_ID INT,C_D_ID INT NOT NULL,C_W_ID INT NOT NULL,C_FIRST VARCHAR(64) NOT NULL,C_MIDDLE CHAR(2),C_LAST VARCHAR(64) NOT NULL,C_STREET_1 VARCHAR(20) NOT NULL,C_STREET_2 VARCHAR(20),C_CITY VARCHAR(20) NOT NULL,C_STATE CHAR(2) NOT NULL,C_ZIP CHAR(9) NOT NULL,C_PHONE CHAR(16) NOT NULL,C_SINCE TIMESTAMP,C_CREDIT CHAR(2) NOT NULL,C_CREDIT_LIM NUMERIC(12,2),C_DISCOUNT NUMERIC(4,4),C_BALANCE NUMERIC(12,2),C_YTD_PAYMENT REAL NOT NULL,C_PAYMENT_CNT NUMBER NOT NULL,C_DELIVERY_CNT BOOL NOT NULL,C_END DATE NOT NULL,C_VCHAR VARCHAR(1000),C_DATA CLOB,C_TEXT BLOB,C_CLOB CLOB)PARTITION BY RANGE(C_ID)INTERVAL(100)(PARTITION PART_1 VALUES LESS THAN (201),PARTITION PART_2 VALUES LESS THAN (401),PARTITION PART_3 VALUES LESS THAN (601),PARTITION PART_4 VALUES LESS THAN (801),PARTITION PART_5 VALUES LESS THAN (1001),PARTITION PART_6 VALUES LESS THAN (1201),PARTITION PART_7 VALUES LESS THAN (1401),PARTITION PART_8 VALUES LESS THAN (1601),PARTITION PART_9 VALUES LESS THAN (1801));

Succeed.

SQL> insert into HZY_DTS.ACID_INTERVAL_DML_TBL_001 select * from hzy_dts.acid_interval_dml_tbl_000;

2000 rows affected.

SQL> alter table HZY_DTS.ACID_INTERVAL_DML_TBL_001  drop partition PART_8;

Succeed.

SQL> alter table HZY_DTS.ACID_INTERVAL_DML_TBL_001 set interval();

Succeed.

SQL> drop table HZY_DTS.ACID_INTERVAL_DML_TBL_001 purge;

Succeed.

SQL> drop table HZY_DTS.ACID_INTERVAL_DML_TBL_000 purge;

Succeed.

SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(1,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-29', 'YYYY-MM-DD'))
 10 );

CT-01110, The operation specify this interval with existing high bounds was not allowed
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(1,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-30', 'YYYY-MM-DD'))
 10 );

CT-01110, The operation specify this interval with existing high bounds was not allowed
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(1,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-31', 'YYYY-MM-DD'))
 10 );

CT-01110, The operation specify this interval with existing high bounds was not allowed
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(1,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
 10 );

Succeed.

SQL> 
SQL> insert into inter_ym_type values(TO_DATE('2014-2-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-3-8', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-3-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-4-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-6-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-7-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-8-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-11-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-12-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2015-8-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> 
SQL> select * from inter_ym_type order by record_date;

RECORD_DATE            COL_1                                                           
---------------------- ----------------------------------------------------------------
2014-02-09 00:00:00    day                                                             
2014-03-08 00:00:00    day                                                             
2014-03-09 00:00:00    day                                                             
2014-04-09 00:00:00    day                                                             
2014-06-09 00:00:00    day                                                             
2014-07-09 00:00:00    day                                                             
2014-08-09 00:00:00    day                                                             
2014-11-09 00:00:00    day                                                             
2014-12-09 00:00:00    day                                                             
2015-08-09 00:00:00    day                                                             

10 rows fetched.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTER_YM_TYPE') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           33           TO_DATE('2014-1-9', 'YYYY-MM-DD')                                2            8            0            100001000200000000C02E0F7D920100                                
1073741825   19           2014-03-09 00:00:00                                              2            8            0            100001000200000000E0D1EF1F970100                                
1073741826   19           2014-04-09 00:00:00                                              2            8            0            10000100020000000080E68C8F990100                                
1073741827   19           2014-05-09 00:00:00                                              2            8            0            100001000200000000C0230CEB9B0100                                
1073741829   19           2014-07-09 00:00:00                                              2            8            0            100001000200000000A07528B6A00100                                
1073741830   19           2014-08-09 00:00:00                                              2            8            0            100001000200000000408AC525A30100                                
1073741831   19           2014-09-09 00:00:00                                              2            8            0            100001000200000000E09E6295A50100                                
1073741834   19           2014-12-09 00:00:00                                              2            8            0            100001000200000000002EFEBBAC0100                                
1073741835   19           2015-01-09 00:00:00                                              2            8            0            100001000200000000A0429B2BAF0100                                
1073741843   19           2015-09-09 00:00:00                                              2            8            0            100001000200000000C0B2EE43C20100                                

10 rows fetched.

SQL>
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> 
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(12,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
 10 );

Succeed.

SQL> 
SQL> insert into inter_ym_type values(TO_DATE('2014-2-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-3-8', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-3-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-4-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-6-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-7-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-8-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-11-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-12-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2015-1-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2015-12-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2016-1-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2018-1-9', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> 
SQL> select * from inter_ym_type order by record_date;

RECORD_DATE            COL_1                                                           
---------------------- ----------------------------------------------------------------
2014-02-09 00:00:00    day                                                             
2014-03-08 00:00:00    day                                                             
2014-03-09 00:00:00    day                                                             
2014-04-09 00:00:00    day                                                             
2014-06-09 00:00:00    day                                                             
2014-07-09 00:00:00    day                                                             
2014-08-09 00:00:00    day                                                             
2014-11-09 00:00:00    day                                                             
2014-12-09 00:00:00    day                                                             
2015-01-09 00:00:00    day                                                             
2015-12-09 00:00:00    day                                                             
2016-01-09 00:00:00    day                                                             
2018-01-09 00:00:00    day                                                             

13 rows fetched.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTER_YM_TYPE') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           33           TO_DATE('2014-1-9', 'YYYY-MM-DD')                                2            8            0            100001000200000000C02E0F7D920100                                
1073741824   19           2015-01-09 00:00:00                                              2            8            0            100001000200000000A0429B2BAF0100                                
1073741825   19           2016-01-09 00:00:00                                              2            8            0            100001000200000000805627DACB0100                                
1073741826   19           2017-01-09 00:00:00                                              2            8            0            100001000200000000C041D19CE80100                                
1073741828   19           2019-01-09 00:00:00                                              2            8            0            1000010002000000008069E9F9210200                                

5 rows fetched.

SQL> drop table if exists inter_ym_type;

Succeed.

SQL> 
SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(0,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
 10 );

CT-01110, The operation interval is zero or less zero was not allowed
SQL> 
SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(0.2,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
 10 );

CT-01110, The operation interval is zero or less zero was not allowed
SQL> 
SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtodsinterval(0,'day'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
 10 );

CT-01110, The operation interval is zero or less zero was not allowed
SQL> 
SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f3)
  3 INTERVAL(0)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

CT-01110, The operation interval is zero or less zero was not allowed
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtodsinterval(30,'day'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-29', 'YYYY-MM-DD'))
 10 );

Succeed.

SQL> 
SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtodsinterval(30,'day'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-30', 'YYYY-MM-DD'))
 10 );

CT-01301, SYS.INTER_YM_TYPE already exists
SQL> 
SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtodsinterval(30,'day'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-31', 'YYYY-MM-DD'))
 10 );

CT-01301, SYS.INTER_YM_TYPE already exists
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> 
SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtodsinterval(-1,'day'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
 10 );

CT-01110, The operation interval is zero or less zero was not allowed
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> 
SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(-1,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
 10 );

CT-01110, The operation interval is zero or less zero was not allowed
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> 
SQL> --- test convert range to interval
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 (
  8    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
  9 );

Succeed.

SQL> alter table inter_ym_type set interval();

CT-00601, Sql syntax error: not support convert range to range partition
SQL> alter table inter_ym_type set interval(null);

CT-01110, [1:40]The operation set inerval to null was not allowed
SQL> alter table inter_ym_type set interval(numtoyminterval(0.1,'month'));

CT-01110, The operation interval is zero or less zero was not allowed
SQL> alter table inter_ym_type set interval(numtoyminterval(-1,'month'));

CT-01110, The operation interval is zero or less zero was not allowed
SQL> alter table inter_ym_type set interval(123);

CT-01102, [1:40]Invalid (sub)partition interval key data type 
SQL> alter table inter_ym_type set interval(numtodsinterval(0,'day'));

CT-01110, The operation interval is zero or less zero was not allowed
SQL> alter table inter_ym_type set interval(numtodsinterval(-1,'day'));

CT-01110, The operation interval is zero or less zero was not allowed
SQL> alter table inter_ym_type set interval(numtodsinterval(1,'day'));

Succeed.

SQL> insert into inter_ym_type values(TO_DATE('2014-1-10', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-1-11', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-1-12', 'YYYY-MM-DD'), 'day');

1 rows affected.

SQL> select * from inter_ym_type order by record_date;

RECORD_DATE            COL_1                                                           
---------------------- ----------------------------------------------------------------
2014-01-10 00:00:00    day                                                             
2014-01-11 00:00:00    day                                                             
2014-01-12 00:00:00    day                                                             

3 rows fetched.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTER_YM_TYPE') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           33           TO_DATE('2014-1-9', 'YYYY-MM-DD')                                2            8            0            100001000200000000C02E0F7D920100                                
1073741825   19           2014-01-11 00:00:00                                              2            8            0            10000100020000000080DD4AA5920100                                
1073741826   19           2014-01-12 00:00:00                                              2            8            0            100001000200000000E0B468B9920100                                
1073741827   19           2014-01-13 00:00:00                                              2            8            0            100001000200000000408C86CD920100                                

4 rows fetched.

SQL> --- test convert interval to interval
SQL> alter table inter_ym_type set interval(numtoyminterval(1,'month'));

Succeed.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTER_YM_TYPE') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           33           TO_DATE('2014-1-9', 'YYYY-MM-DD')                                2            8            0            100001000200000000C02E0F7D920100                                
20           19           2014-01-11 00:00:00                                              2            8            0            10000100020000000080DD4AA5920100                                
30           19           2014-01-12 00:00:00                                              2            8            0            100001000200000000E0B468B9920100                                
40           19           2014-01-13 00:00:00                                              2            8            0            100001000200000000408C86CD920100                                

4 rows fetched.

SQL> insert into inter_ym_type values(TO_DATE('2014-2-12', 'YYYY-MM-DD'), 'month');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-3-12', 'YYYY-MM-DD'), 'month');

1 rows affected.

SQL> insert into inter_ym_type values(TO_DATE('2014-4-12', 'YYYY-MM-DD'), 'month');

1 rows affected.

SQL> select * from inter_ym_type order by record_date;

RECORD_DATE            COL_1                                                           
---------------------- ----------------------------------------------------------------
2014-01-10 00:00:00    day                                                             
2014-01-11 00:00:00    day                                                             
2014-01-12 00:00:00    day                                                             
2014-02-12 00:00:00    month                                                           
2014-03-12 00:00:00    month                                                           
2014-04-12 00:00:00    month                                                           

6 rows fetched.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTER_YM_TYPE') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           33           TO_DATE('2014-1-9', 'YYYY-MM-DD')                                2            8            0            100001000200000000C02E0F7D920100                                
20           19           2014-01-11 00:00:00                                              2            8            0            10000100020000000080DD4AA5920100                                
30           19           2014-01-12 00:00:00                                              2            8            0            100001000200000000E0B468B9920100                                
40           19           2014-01-13 00:00:00                                              2            8            0            100001000200000000408C86CD920100                                
1073741824   19           2014-02-13 00:00:00                                              2            8            0            100001000200000000E0A0233D950100                                
1073741825   19           2014-03-13 00:00:00                                              2            8            0            100001000200000000602F6770970100                                
1073741826   19           2014-04-13 00:00:00                                              2            8            0            100001000200000000004404E0990100                                

7 rows fetched.

SQL> drop table if exists inter_ym_type;

Succeed.

SQL> 
SQL> --- test convert range to interval
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 2), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f3)
  3 (
  4  PARTITION interval_spc_t1p1 values less than(MAXVALUE)
  5 );

Succeed.

SQL> alter table interval_spc_t1 set interval();

CT-00601, Sql syntax error: not support convert range to range partition
SQL> alter table interval_spc_t1 set interval(NULL);

CT-01110, [1:42]The operation set inerval to null was not allowed
SQL> alter table interval_spc_t1 set interval(-1);

CT-01102, [1:42]Invalid (sub)partition interval key data type 
SQL> alter table interval_spc_t1 set interval(0.5);

CT-01110, The operation SET INTERVAL on this table was not allowed
SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 2), f4 DECIMAL(38, 0), f5 float, f6 double, f7 real, f8 char(10), f9 varchar(10))
  2 PARTITION BY RANGE(f3)
  3 (
  4  PARTITION interval_spc_t1p1 values less than(5)
  5 );

Succeed.

SQL> alter table interval_spc_t1 set interval();

CT-00601, Sql syntax error: not support convert range to range partition
SQL> alter table interval_spc_t1 set interval(NULL);

CT-01110, [1:42]The operation set inerval to null was not allowed
SQL> alter table interval_spc_t1 set interval(-1);

CT-01102, [1:42]Invalid (sub)partition interval key data type 
SQL> alter table interval_spc_t1 set interval(0.5);

Succeed.

SQL> 
SQL> insert into interval_spc_t1 values(1, 200000000, 5.5, 5.555, 5.5555, 5.5556, 5.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(2, 200000000, 15.5, 5.555, 5.5555, 5.5556, 15.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(3, 200000000, 16.35, 5.555, 5.5555, 5.5556, 25.76, 'hzy', 'hzy');

1 rows affected.

SQL> alter table interval_spc_t1 set interval();

Succeed.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_SPC_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           1            5                                                                2            8            0            0C0001000100000002000500                                
20           1            6                                                                2            8            0            0C0001000100000002000600                                
30           2            16                                                               2            8            0            0C0001000100000002001000                                
40           4            16.5                                                             2            8            0            10000100020000000400100088130000                                

4 rows fetched.

SQL> alter table interval_spc_t1 set interval(0.5);

Succeed.

SQL> insert into interval_spc_t1 values(4, 200000000, 16.4, 5.555, 5.5555, 5.5556, 35.96, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(5, 200000000, 12.5, 5.555, 5.5555, 5.5556, 45.76, 'hzy', 'hzy');

1 rows affected.

SQL> alter table interval_spc_t1 set interval(1);

Succeed.

SQL> insert into interval_spc_t1 values(6, 200000000, 17.05, 5.555, 5.5555, 5.5556, 55.76, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(8, 200000000, 18.5, 5.555, 5.5555, 5.5556, 85.576, 'hzy', 'hzy');

1 rows affected.

SQL> insert into interval_spc_t1 values(9, 200000000, 19.5, 5.555, 5.5555, 5.5556, 75.776, 'hzy', 'hzy');

1 rows affected.

SQL> select PART#, HIBOUNDLEN,HIBOUNDVAL,INITRANS,PCTFREE,FLAGS,hex(BHIBOUNDVAL) from SYS_TABLE_PARTS where TABLE# = (select id from SYS_TABLES where name = 'INTERVAL_SPC_T1') ORDER BY PART#;

PART#        HIBOUNDLEN   HIBOUNDVAL                                                       INITRANS     PCTFREE      FLAGS        HEX(BHIBOUNDVAL)                                                
------------ ------------ ---------------------------------------------------------------- ------------ ------------ ------------ ----------------------------------------------------------------
10           1            5                                                                2            8            0            0C0001000100000002000500                                
20           1            6                                                                2            8            0            0C0001000100000002000600                                
30           2            16                                                               2            8            0            0C0001000100000002001000                                
40           4            16.5                                                             2            8            0            10000100020000000400100088130000                                
1073741824   4            17.5                                                             2            8            0            10000100020000000400110088130000                                
1073741826   4            19.5                                                             2            8            0            10000100020000000400130088130000                                
1073741827   4            20.5                                                             2            8            0            10000100020000000400140088130000                                

7 rows fetched.

SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> 
SQL> drop table if exists "T_TESTNODEB";

Succeed.

SQL> drop user if exists cmedb;

Succeed.

SQL> create user cmedb identified by Huawei12#$;

Succeed.

SQL> grant connect,resource to cmedb;

Succeed.

SQL> create tablespace cmedb datafile 'cmedb.dat' size 100M;

Succeed.

SQL> 
SQL> CREATE TABLE "T_TESTNODEB"
  2 (
  3   "PLANID" BINARY_INTEGER NOT NULL,
  4   "NODEBID" BINARY_INTEGER NOT NULL,
  5   PRIMARY KEY("PLANID", "NODEBID")
  6 )
  7 PARTITION BY RANGE ("PLANID")
  8 INTERVAL(1)
  9 (
 10     PARTITION P_0 VALUES LESS THAN (1) TABLESPACE "CMEDB" INITRANS 2 PCTFREE 8
 11 )
 12 TABLESPACE "CMEDB"
 13 INITRANS 2
 14 MAXTRANS 255
 15 PCTFREE 8;

Succeed.

SQL> INSERT INTO "T_TESTNODEB" ("PLANID","NODEBID") values
  2   (1,1);

1 rows affected.

SQL> INSERT INTO "T_TESTNODEB" ("PLANID","NODEBID") values
  2   (2,1);

1 rows affected.

SQL> INSERT INTO "T_TESTNODEB" ("PLANID","NODEBID") values
  2   (4,1);

1 rows affected.

SQL> INSERT INTO "T_TESTNODEB" ("PLANID","NODEBID") values
  2   (5,1);

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> CREATE INDEX "IDX_T_TESTNODEB2" ON "T_TESTNODEB"("NODEBID")
  2 TABLESPACE "CMEDB"
  3 INITRANS 2
  4 PCTFREE 8;

Succeed.

SQL> 
SQL> exp users=cmedb PARALLEL=4 filetype=bin file="partition_cme4.dmp";
Parsing export options ... 
Verify options ...
  verify schema ...
Starting export ...
Preparing to export ...
-- EXPORT TYPE = SCHEMA
-- EXPORT OBJECTS = CMEDB
-- FILE TYPE = BIN
-- DUMP FILE = partition_cme4.dmp
-- LOG FILE = 
-- QUERY = ""
-- COMPRESS = N
-- CONSISTENT = N
-- CONTENT_MODE = ALL
-- SKIP_COMMENTS = N
-- FORCE = N
-- SKIP_ADD_DROP_TABLE = N
-- SKIP_TRIGGERS = N
-- QUOTE_NAMES = Y
-- TABLESPACE = N
-- COMMIT_BATCH = 1000
-- INSERT_BATCH = 1
-- FEEDBACK = 10000
-- PARALLEL = 4
-- TENANT= N
-- CREATE_USER = N
-- ROLE = N
-- GRANT = N
-- WITH_CR_MODE = N
-- WITH_FORMAT_CSF = Y
-- INDEX_PARTITIONS = N

Exporting schema CMEDB ...
Exporting sequence of schema CMEDB ...
Exporting profile of schema CMEDB ...
Exporting type of schema CMEDB ...
Exporting tables of schema CMEDB ...
Reading table objects of CMEDB

The order of exporting table is:
TABLE NAME                                                       LEVEL     
---------------------------------------------------------------- ----------

Exporting tables (scripts or data) of CMEDB
Exporting procedures/functions/triggers of schema CMEDB ...
Exporting views of schema CMEDB ...
Exporting synonyms of schema CMEDB ...
Exporting package of schema CMEDB ...
End of export schema CMEDB ...

Logical export succeeded.

SQL> drop table if exists "T_TESTNODEB";

Succeed.

SQL> drop user if exists cmedb;

Succeed.

SQL> drop tablespace cmedb including contents and datafiles;

Succeed.

SQL> drop table if exists test_interval_number;

Succeed.

SQL> CREATE TABLE test_interval_number(C_ID INT,C_D_ID bigint NOT NULL,C_W_ID tinyint unsigned NOT NULL)
  2 PARTITION BY RANGE(C_ID)INTERVAL(100)STORE IN(tablespace users,tablespace users)
  3 (PARTITION PART_1 VALUES LESS THAN (201),PARTITION PART_2 VALUES LESS THAN (401),PARTITION PART_3 VALUES LESS THAN (601),
  4 PARTITION PART_4 VALUES LESS THAN (801),PARTITION PART_5 VALUES LESS THAN (1001),PARTITION PART_6 VALUES LESS THAN (1201),
  5 PARTITION PART_7 VALUES LESS THAN (1401),PARTITION PART_8 VALUES LESS THAN (1601),PARTITION PART_9 VALUES LESS THAN (1801));

Succeed.

SQL> insert into test_interval_number values(1803,1903,1903);

1 rows affected.

SQL> insert into test_interval_number values(1903,1903,1903);

1 rows affected.

SQL> insert into test_interval_number values(2000,1903,1903);

1 rows affected.

SQL> 
SQL> select partcnt# from SYS_PART_OBJECTS where TABLE# = (select id from SYS_TABLES where name = upper('test_interval_number'));

PARTCNT#    
------------
11          

1 rows fetched.

SQL> drop table test_interval_number;

Succeed.

SQL> 
SQL> drop table if exists no_commit_acid_imme_tbl_025;

Succeed.

SQL> create table no_commit_acid_imme_tbl_025(c_id int,c_since timestamp,c_end date) partition by range(c_end) interval(numtoyminterval (1,'MONTH')) (partition p1 values less than (to_date('2015-01-29','yyyy-mm-dd')));

CT-01110, The operation specify this interval with existing high bounds was not allowed
SQL> insert into no_commit_acid_imme_tbl_025 values(1, TO_DATE('2014-4-12', 'YYYY-MM-DD'),TO_DATE('2014-5-12', 'YYYY-MM-DD'));

CT-00843, [1:13]The table or view SYS.NO_COMMIT_ACID_IMME_TBL_025 does not exist.
SQL> insert into no_commit_acid_imme_tbl_025 values(1, TO_DATE('2014-4-12', 'YYYY-MM-DD'),TO_DATE('2015-5-29', 'YYYY-MM-DD'));

CT-00843, [1:13]The table or view SYS.NO_COMMIT_ACID_IMME_TBL_025 does not exist.
SQL> alter table no_commit_acid_imme_tbl_025 set interval(numtodsinterval (2,'DAY'));

CT-00843, The table or view SYS.NO_COMMIT_ACID_IMME_TBL_025 does not exist.
SQL> 
SQL> drop table if exists no_commit_acid_imme_tbl_025;

Succeed.

SQL> create table no_commit_acid_imme_tbl_025(c_id int,c_since timestamp,c_end date) partition by range(c_end) interval(numtodsinterval (1,'DAY')) (partition p1 values less than (to_date('2015-01-28','yyyy-mm-dd')));

Succeed.

SQL> insert into no_commit_acid_imme_tbl_025 values(1, TO_DATE('2014-4-12', 'YYYY-MM-DD'),TO_DATE('2015-1-29', 'YYYY-MM-DD'));

1 rows affected.

SQL> insert into no_commit_acid_imme_tbl_025 values(1, TO_DATE('2014-4-12', 'YYYY-MM-DD'),TO_DATE('2015-1-30', 'YYYY-MM-DD'));

1 rows affected.

SQL> alter table no_commit_acid_imme_tbl_025 set interval(numtoyminterval (1,'MONTH'));

CT-01110, The operation specify this interval with existing high bounds was not allowed
SQL> 
SQL> drop table if exists inter_ym_type;

Succeed.

SQL> create table inter_ym_type
  2 (
  3   record_date DATE,
  4   col_1       VARCHAR2(200)
  5  )
  6 PARTITION BY RANGE (record_date)
  7 INTERVAL (numtoyminterval(1,'month'))
  8 (
  9    PARTITION P1 VALUES LESS THAN (TO_DATE('2014-1-9', 'YYYY-MM-DD'))
 10 );

Succeed.

SQL> 
SQL> insert into inter_ym_type values(TO_DATE('2014-2-9', 'YYYY-MM-DD'), 'month');

1 rows affected.

SQL> drop table inter_ym_type;

Succeed.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0))
  2 PARTITION BY RANGE(f3)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10)
  6 );

Succeed.

SQL> create index idx_interval_1 on interval_spc_t1(f3) local;

Succeed.

SQL> create index idx_interval_2 on interval_spc_t1(f1) local;

Succeed.

SQL> insert into interval_spc_t1 values(1,2,3,444);

1 rows affected.

SQL> insert into interval_spc_t1 values(1,2,33,444);

1 rows affected.

SQL> insert into interval_spc_t1 values(1,2,333,444);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> alter index idx_interval_1 on interval_spc_t1 rebuild;

Succeed.

SQL> 
SQL> alter index idx_interval_2 on interval_spc_t1 rebuild;

Succeed.

SQL> 
SQL> alter table interval_spc_t1 set interval(20);

Succeed.

SQL> alter table interval_spc_t1 drop partition interval_spc_t1p1;

Succeed.

SQL> drop index idx_interval_2 on interval_spc_t1;

Succeed.

SQL> drop table interval_spc_t1;

Succeed.

SQL> 
SQL> drop table if exists interval_spc_t1;

Succeed.

SQL> create table interval_spc_t1(f1 int, f2 bigint, f3 number(38, 0), f4 DECIMAL(38, 0))
  2 PARTITION BY RANGE(f3)
  3 INTERVAL(10)
  4 (
  5  PARTITION interval_spc_t1p1 values less than(10),
  6  PARTITION interval_spc_t1p2 values less than(20)
  7 );

Succeed.

SQL> create index idx_interval_1 on interval_spc_t1(f3) local;

Succeed.

SQL> create index idx_interval_2 on interval_spc_t1(f4) local;

Succeed.

SQL> insert into interval_spc_t1 values(1,2,32,444);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> alter table interval_spc_t1 set interval(12);

Succeed.

SQL> alter table interval_spc_t1 drop partition interval_spc_t1p2;

Succeed.

SQL> drop index idx_interval_2 on interval_spc_t1;

Succeed.

SQL> drop table interval_spc_t1;

Succeed.

SQL> 
SQL> drop table if exists test_pno;

Succeed.

SQL> create table test_pno(c1 int, c2 int) partition by range(c1) interval(1)
  2 (
  3  partition p1 values less than(10),
  4  partition p2 values less than(20), 
  5  partition p3 values less than(40)
  6  );

Succeed.

SQL>  insert into test_pno values(41, 41);

1 rows affected.

SQL>  select USER#, PART#, NAME, HIBOUNDLEN, HIBOUNDVAL from tablepart$ where table#=(select id from table$ where name = 'TEST_PNO') order by PART#;

USER#        PART#        NAME                                                             HIBOUNDLEN   HIBOUNDVAL                                                      
------------ ------------ ---------------------------------------------------------------- ------------ ----------------------------------------------------------------
0            10           P1                                                               2            10                                                              
0            20           P2                                                               2            20                                                              
0            30           P3                                                               2            40                                                              
0            1073741825   _SYS_P2                                                          2            42                                                              

4 rows fetched.

SQL>  alter table test_pno drop partition p1;

Succeed.

SQL>  insert into test_pno values(42,42);

1 rows affected.

SQL>  select USER#, PART#, NAME, HIBOUNDLEN, HIBOUNDVAL from tablepart$ where table#=(select id from table$ where name = 'TEST_PNO') order by PART#;

USER#        PART#        NAME                                                             HIBOUNDLEN   HIBOUNDVAL                                                      
------------ ------------ ---------------------------------------------------------------- ------------ ----------------------------------------------------------------
0            20           P2                                                               2            20                                                              
0            30           P3                                                               2            40                                                              
0            1073741825   _SYS_P2                                                          2            42                                                              
0            1073741826   _SYS_P3                                                          2            43                                                              

4 rows fetched.

SQL>  drop table test_pno;

Succeed.

SQL> 
SQL> --- test interval dictionary cache optimization
SQL> drop table if exists interval_table;

Succeed.

SQL> create table interval_table (id int, grade int, name varchar(8000), descp varchar(8000)) partition by range(id) interval(10)
  2 (
  3  partition p1 values less than(10),
  4  partition p2 values less than(20),
  5  partition p3 values less than(30)
  6 );

Succeed.

SQL> insert into interval_table values (10, 60, lpad('aaa', 20, 'bbb'), lpad('bbb', 20, 'aaa'));

1 rows affected.

SQL> insert into interval_table values (41943039, 60, lpad('aaa', 20, 'bbb'), lpad('bbb', 20, 'aaa'));

1 rows affected.

SQL> insert into interval_table values (419430, 60, lpad('aaa', 8000, 'bbb'), lpad('bbb', 8000, 'aaa'));

1 rows affected.

SQL> insert into interval_table values (4194, 60, lpad('aaa', 8000, 'bbb'), lpad('bbb', 8000, 'aaa'));

1 rows affected.

SQL> insert into interval_table values (419, 60, lpad('aaa', 8000, 'bbb'), lpad('bbb', 8000, 'aaa'));

1 rows affected.

SQL> select count(*) from interval_table;

COUNT(*)
--------------------
5

1 rows fetched.

SQL> drop table if exists interval_table;

Succeed.

SQL> 


