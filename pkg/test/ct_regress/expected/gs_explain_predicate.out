

SQL> drop table if exists explain_predicate_t1;

Succeed.

SQL> create table explain_predicate_t1
  2 (
  3     id int,
  4     int_c1 int,
  5     int_c2 int,
  6     int_c3 int,
  7     str_c1 varchar(50),
  8     f1 integer,
  9     f2 binary_uint32,
 10     f3 bigint,
 11     f4 binary_double,
 12     f5 double,
 13     f6 float,
 14     f7 real,
 15     f8 number(12,3),
 16     f9 decimal(20,5),
 17     f10 char(30),
 18     f11 nchar(30),
 19     f12 varchar(30),
 20     f13 varchar2(30),
 21     f14 nvarchar(30),
 22     f15 date,
 23     f16 datetime,
 24     f17 timestamp,
 25     f18 timestamp(3) with time zone,
 26     f19 timestamp(3) with local time zone,
 27     f20 boolean,
 28     f21 interval year(4) to month,
 29     f22 interval day(7) to second(6),
 30     f23 int[],
 31     f24 binary(20),
 32     f25 varbinary(20),
 33     f26 raw(100),
 34     f27 clob
 35 );

Succeed.

SQL> alter table explain_predicate_t1 add constraint "PK_EXPLAIN_PREDICATE_T1" primary key(id);

Succeed.

SQL> create index idx_explain_pred_t1_1 on explain_predicate_t1(int_c1);

Succeed.

SQL> create index idx_explain_pred_t1_2 on explain_predicate_t1(int_c2, int_c3);

Succeed.

SQL> create index idx_explain_pred_t1_3 on explain_predicate_t1(upper(str_c1));

Succeed.

SQL> 
SQL> drop table if exists explain_predicate_t2;

Succeed.

SQL> create table explain_predicate_t2
  2 (
  3     id int,
  4     int_c1 int,
  5     str_c1 varchar(50),
  6     f1 integer,
  7     f2 binary_uint32,
  8     f3 bigint,
  9     f4 binary_double,
 10     f5 double
 11 );

Succeed.

SQL> alter table explain_predicate_t2 add constraint "PK_EXPLAIN_PREDICATE_T2" primary key(id);

Succeed.

SQL> create index idx_explain_pred_t2_1 on explain_predicate_t2(int_c1);

Succeed.

SQL> 
SQL> drop table if exists explain_predicate_t3;

Succeed.

SQL> create table explain_predicate_t3
  2 (
  3     id int,
  4     int_c1 int,
  5     str_c1 varchar(50)
  6 )
  7 partition by range(int_c1)
  8 (
  9 partition p1 values less than (100),
 10 partition p2 values less than (200),
 11 partition p3 values less than (300)
 12 );

Succeed.

SQL> alter table explain_predicate_t3 add constraint "PK_EXPLAIN_PREDICATE_T3" primary key(id);

Succeed.

SQL> 
SQL> 
SQL> -- CT_TYPE_INTEGER
SQL> explain plan for select * from explain_predicate_t1 where f1 = 1;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = 1                                           

9 rows fetched.

SQL> -- CT_TYPE_UINT32
SQL> explain plan for select * from explain_predicate_t1 where f2 = cast(1 as binary_uint32);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F2 = 1                                           

9 rows fetched.

SQL> -- CT_TYPE_BIGINT
SQL> explain plan for select * from explain_predicate_t1 where f3 = cast(1 as bigint);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F3 = 1                                           

9 rows fetched.

SQL> -- CT_TYPE_NUMBER
SQL> explain plan for select * from explain_predicate_t1 where f4 = 4.5;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F4 = 4.5                                         

9 rows fetched.

SQL> -- CT_TYPE_REAL
SQL> explain plan for select * from explain_predicate_t1 where f7 = cast(4.5 as real);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F7 = 4.5                                         

9 rows fetched.

SQL> -- CT_TYPE_BOOLEAN
SQL> explain plan for select * from explain_predicate_t1 where f20 = cast('true' as boolean);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F20 = TRUE                                       

9 rows fetched.

SQL> -- CT_TYPE_TYPMODE
SQL> explain plan for select * from explain_predicate_t1 where f23 = cast('[1,2,3]' as int[]);

CT-00601, [1:59]Sql syntax error: unexpected array expression
SQL> -- CT_TYPE_CHAR
SQL> explain plan for select * from explain_predicate_t1 where f10 = 'a';

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F10 = 'a'                                        

9 rows fetched.

SQL> -- CT_TYPE_VARCHAR
SQL> explain plan for select * from explain_predicate_t1 where f12 = cast(123 as varchar(30));

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F12 = '123'                                      

9 rows fetched.

SQL> -- CT_TYPE_BINARY
SQL> explain plan for select * from explain_predicate_t1 where f24 = cast('123' as binary(20));

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F24 = '3132330000000000000000000000000000000000' 

9 rows fetched.

SQL> -- CT_TYPE_VARBINARY
SQL> explain plan for select * from explain_predicate_t1 where f25 = cast('123' as varbinary(20));

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F25 = '313233'                                   

9 rows fetched.

SQL> -- CT_TYPE_RAW
SQL> explain plan for select * from explain_predicate_t1 where f26 = cast('123' as raw(100));

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F26 = '0123'                                     

9 rows fetched.

SQL> -- CT_TYPE_DATE
SQL> explain plan for select * from explain_predicate_t1 where f15 = to_date('02-MAY-2020', 'DD-MON-YYYY');

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F15 = to_date('2020-05-02 00:00:00', 'YYYY-MM-DD HH24:MI:SS')

9 rows fetched.

SQL> -- CT_TYPE_TIMESTAMP
SQL> explain plan for select * from explain_predicate_t1 where f17 = to_timestamp('2020-05-01 00', 'YYYY-MM-DD HH24');

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F17 = to_timestamp('2020-05-01 00:00:00.000000', 'YYYY-MM-DD HH24:MI:SS')

9 rows fetched.

SQL> -- CT_TYPE_TIMESTAMP_TZ
SQL> explain plan for select * from explain_predicate_t1 where f18 = cast(to_timestamp('2020-05-01 00', 'YYYY-MM-DD HH24') as timestamp with time zone);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F18 = FROM_TZ(TIMESTAMP '2020-05-01 00:00:00.000000', '+08:00')

9 rows fetched.

SQL> -- CT_TYPE_TIMESTAMP_LTZ
SQL> explain plan for select * from explain_predicate_t1 where f19 = cast(to_timestamp('2020-05-01 00', 'YYYY-MM-DD HH24') as timestamp with local time zone);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F19 = to_timestamp('2020-04-30 16:00:00.000000', 'YYYY-MM-DD HH24:MI:SS')

9 rows fetched.

SQL> -- CT_TYPE_INTERVAL_YM
SQL> explain plan for select * from explain_predicate_t1 where f21 = cast('50-0' as interval year(4) to month);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F21 = '+50-00'                                   

9 rows fetched.

SQL> -- CT_TYPE_INTERVAL_DS
SQL> explain plan for select * from explain_predicate_t1 where f22 = cast('1231 12:3:4.1234' as interval day(7) to second(6));

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F22 = '+1231 12:03:04.123400'                    

9 rows fetched.

SQL> -- CT_TYPE_ITVL_UNIT
SQL> explain plan for select * from explain_predicate_t1 where f1 = extract(second from sysdate);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = EXTRACT(SECOND FROM SYSDATE)                

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 = extract(minute from sysdate);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = EXTRACT(MINUTE FROM SYSDATE)                

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 = extract(hour from sysdate);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = EXTRACT(HOUR FROM SYSDATE)                  

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 = extract(day from sysdate);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = EXTRACT(DAY FROM SYSDATE)                   

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 = extract(month from sysdate);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = EXTRACT(MONTH FROM SYSDATE)                 

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 = extract(year from sysdate);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = EXTRACT(YEAR FROM SYSDATE)                  

9 rows fetched.

SQL> 
SQL> -- comparators && or/and conditon
SQL> explain plan for select * from explain_predicate_t1 where f1 + 1 > 1 and f1 - 1 < 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 + 1 > 1 AND F1 - 1 < 10                       

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 * 2 >= 100 or f1 / 2 <= 20;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 * 2 >= 100 OR F1 / 2 <= 20                    

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 % 2 != 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 % 2 != 100                                    

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 ^ 2 = any(81,100);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 ^ 2 = ANY(81, 100)                            

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 | 2 = 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 | 2 = 10                                      

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where (f1 >> 2,f2) in ((20,30),(40,50));

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: (F1 >> 2,F2) IN(20, 30, 40, 50)                  

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 << 2 != any(64, 100) and -f1 not in (-5, -7) and f10 is null and f11 is not null and 
  2 f12 || 'test' like '%test' and f12 not like '%string';

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 << 2 != ANY(64, 100) AND F12 NOT LIKE '%string' AND F11 IS NOT NULL AND -F1 NOT IN(-5, 
               -7) AND F10 IS NULL AND F12 || 'test' LIKE '%test'

10 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f10 regexp '1$' or f10 not regexp '2$' or f3 between 10 and 20 or f4 not between 20.333 and 33.333 or 
  2 regexp_like(f11,'test_[[:digit:]]{3}1$') or not regexp_like(f13,'test_[[:digit:]]{3}1$');

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F10 REGEXP '1$' OR F10 NOT REGEXP '2$' OR F3 BETWEEN 10 AND 20 OR F4 NOT BETWEEN 20.333 AND 33.333 OR 
               REGEXP_LIKE(F11, 'test_[[:digit:]]{3}1$') OR NOT REGEXP_LIKE(F13, 'test_[[:digit:]]{3}1$')

10 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where str_c1 like '12_%' escape '_';

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: STR_C1 LIKE '12_%' ESCAPE '_'                    

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where str_c1 not like '12_%' escape '_';

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: STR_C1 NOT LIKE '12_%' ESCAPE '_'                

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 >= any(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 >= ANY(10, 20, 30)                            

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 > any(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 > ANY(10, 20, 30)                             

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 < any(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 < ANY(10, 20, 30)                             

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 <= any(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 <= ANY(10, 20, 30)                            

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 = all(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = ALL(10, 20, 30)                             

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 != all(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 NOT IN(10, 20, 30)                            

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 >= all(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 >= ALL(10, 20, 30)                            

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 > all(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 > ALL(10, 20, 30)                             

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 < all(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 < ALL(10, 20, 30)                             

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f1 <= all(10,20,30);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 <= ALL(10, 20, 30)                            

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f10 is json or f11 is not json;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F10 IS JSON OR F11 IS NOT JSON                   

9 rows fetched.

SQL> 
SQL> -- reserved words
SQL> explain plan for select * from explain_predicate_t1 where connect_by_iscycle = 1 start with id < 10 connect by nocycle int_c1 = 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
| Id  | Description                        | Owner | Name                    | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                   |       |                         |      |      |       |        |
| 1   |   FILTER                           |       |                         |      |      |       |        |
| 2   |     START WITH                     |       |                         |      |      |       |        |
| 3   |       TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 4   |         INDEX RANGE SCAN           | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 5   |     CONNECT BY                     |       |                         |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 7   |         INDEX RANGE SCAN           | SYS   | IDX_EXPLAIN_PRED_T1_1   |      |      |       |        |
-------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: CONNECT_BY_ISCYCLE = 1                           
   4 - access: ID < 10                                          
   7 - access: INT_C1 = 10                                      

17 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where connect_by_isleaf = 1 start with id < 10 connect by nocycle int_c1 = 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
| Id  | Description                        | Owner | Name                    | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                   |       |                         |      |      |       |        |
| 1   |   FILTER                           |       |                         |      |      |       |        |
| 2   |     START WITH                     |       |                         |      |      |       |        |
| 3   |       TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 4   |         INDEX RANGE SCAN           | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 5   |     CONNECT BY                     |       |                         |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 7   |         INDEX RANGE SCAN           | SYS   | IDX_EXPLAIN_PRED_T1_1   |      |      |       |        |
-------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: CONNECT_BY_ISLEAF = 1                            
   4 - access: ID < 10                                          
   7 - access: INT_C1 = 10                                      

17 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where level = 1 start with id < 10 connect by nocycle int_c1 = 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
| Id  | Description                        | Owner | Name                    | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                   |       |                         |      |      |       |        |
| 1   |   FILTER                           |       |                         |      |      |       |        |
| 2   |     START WITH                     |       |                         |      |      |       |        |
| 3   |       TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 4   |         INDEX RANGE SCAN           | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 5   |     CONNECT BY                     |       |                         |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 7   |         INDEX RANGE SCAN           | SYS   | IDX_EXPLAIN_PRED_T1_1   |      |      |       |        |
-------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: LEVEL = 1                                        
   4 - access: ID < 10                                          
   7 - access: INT_C1 = 10                                      

17 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where default < 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: DEFAULT < 10                                     

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where nullif(TRUE,FALSE);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: FALSE != NULLIF(TRUE, FALSE)                     

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where f10 = null;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F10 = NULL                                       

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where rownum < 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description            | Owner | Name                 | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT       |       |                      |      |      |       |        |
| 1   |   ROWNUM FILTER        |       |                      |      |      |       |        |
| 2   |     TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: ROWNUM < 10                                      

10 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where rowid < 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: ROWID < 10                                       

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where rowscn < 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: ROWSCN < 10                                      

9 rows fetched.

SQL> explain plan for select * from sys_dummy where sessiontimezone = dbtimezone;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------
| Id  | Description          | Owner | Name      | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |           |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | SYS_DUMMY |      |      |       |        |
---------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: SESSIONTIMEZONE = DBTIMEZONE                     

9 rows fetched.

SQL> explain plan for select * from sys_dummy where sysdate = current_date;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------
| Id  | Description          | Owner | Name      | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |           |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | SYS_DUMMY |      |      |       |        |
---------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: SYSDATE = CURRENT_DATE                           

9 rows fetched.

SQL> explain plan for select * from sys_dummy where systimestamp = current_timestamp;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------
| Id  | Description          | Owner | Name      | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |           |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | SYS_DUMMY |      |      |       |        |
---------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: SYSTIMESTAMP = CURRENT_TIMESTAMP                 

9 rows fetched.

SQL> explain plan for select * from sys_dummy where localtimestamp = utc_timestamp;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------
| Id  | Description          | Owner | Name      | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |           |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | SYS_DUMMY |      |      |       |        |
---------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: LOCALTIMESTAMP = UTC_TIMESTAMP                   

9 rows fetched.

SQL> explain plan for select * from sys_dummy where user = dummy;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------
| Id  | Description          | Owner | Name      | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |           |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | SYS_DUMMY |      |      |       |        |
---------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: USER = DUMMY                                     

9 rows fetched.

SQL> 
SQL> -- expression type
SQL> -- EXPR_NODE_COLUMN
SQL> explain plan for select * from explain_predicate_t1 where f23[1] = 5;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F23[1] = 5                                       

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where sys.t1.f1 = 5;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                         |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
-----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: SYS.T1.F1 = 5                                    

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where sys.explain_predicate_t1.f1 = 5;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: SYS.EXPLAIN_PREDICATE_T1.F1 = 5                  

9 rows fetched.

SQL> -- EXPR_NODE_GROUP
SQL> explain plan for select * from explain_predicate_t1 t1 where exists(select f1, max(f2) from explain_predicate_t2 where id < 20 group by f1 having f1 < 1000 order by f1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
| Id  | Description                            | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                       |       |                         |      |      |       |        |
| 1   |   HASH JOIN SEMI(L)                    |       |                         |      |      |       |        |
| 2   |     SUBSELECT                          |       |                         |      |      |       |        |
| 3   |       HAVING                           |       |                         |      |      |       |        |
| 4   |         HASH GROUP BY                  |       |                         |      |      |       |        |
| 5   |           TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 6   |             INDEX RANGE SCAN           | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
| 7   |     TABLE ACCESS FULL                  | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - access: NA = NA                                          
   3 - filter: F1 < 1000                                        
   6 - access: ID < 20                                          

17 rows fetched.

SQL> -- EXPR_NODE_PARAM
SQL> explain plan for select * from explain_predicate_t1 where f1 = ?;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F1 = ?                                           

9 rows fetched.

SQL> -- EXPR_NODE_STAR + EXPR_NODE_AGGR
SQL> explain plan for select * from explain_predicate_t1 where f1 = (select count(*) from explain_predicate_t2);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                   |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 3   |     AGGR                          |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 5   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: F1 = (SELECT COUNT(*) FROM EXPLAIN_PREDICATE_T2) 

13 rows fetched.

SQL> -- EXPR_NODE_CASE
SQL> explain plan for select * from explain_predicate_t1 where (case when id > 500 then 1 else 0 end) = 1;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: CASE  WHEN ID > 500 THEN 1 ELSE 0 END = 1        

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where (case id when 500 then 1 when 600 then 2 else 3 end) = 2;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: CASE ID WHEN 500 THEN 1 WHEN 600 THEN 2 ELSE 3 END = 2

9 rows fetched.

SQL> -- EXPR_NODE_FUNC
SQL> explain plan for select * from explain_predicate_t1 where lnnvl(int_c1 > 1500);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: FALSE != LNNVL(INT_C1 > 1500)                    

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where if(id > 5,true,false);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: FALSE != IF(ID > 5, TRUE, FALSE)                 

9 rows fetched.

SQL> explain plan for select f1, group_concat(f12, ?) from explain_predicate_t1 group by f1 having group_concat(f12 order by f1) like '%a';

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------
| Id  | Description              | Owner | Name                 | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT         |       |                      |      |      |       |        |
| 1   |   HAVING                 |       |                      |      |      |       |        |
| 2   |     MERGE SORT GROUP BY  |       |                      |      |      |       |        |
| 3   |       TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: GROUP_CONCAT(F12 ORDER BY F1 ASC NULLS LAST SEPARATOR ',') LIKE '%a'

11 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where trim(f12, 'A') like 'test%' and f13 ::numeric * f13 is not null;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: TRIM(F12, 'A') LIKE 'test%' AND CAST(F13 AS NUMBER) * F13 IS NOT NULL

9 rows fetched.

SQL> -- EXPR_NODE_USER_FUNC
SQL> drop package if exists sys.predicate_pack;

Succeed.

SQL> create or replace package sys.predicate_pack
  2 is 
  3   function predicate_func(v_id int) return int;
  4 end;
  5 /

Succeed.

SQL> 
SQL> create or replace package body sys.predicate_pack
  2 is
  3   function predicate_func(v_id int) return int
  4 is
  5   v_num int;
  6   begin
  7     v_num := v_id + 2;
  8     return v_num;
  9   end;
 10 end;
 11 /

Succeed.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 t1 where sys.predicate_pack.predicate_func(t1.id) = 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                         |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
-----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: SYS.PREDICATE_PACK.PREDICATE_FUNC(T1.ID) = 10    

9 rows fetched.

SQL> drop package sys.predicate_pack;

Succeed.

SQL> -- EXPR_NODE_SELECT
SQL> explain plan for select * from explain_predicate_t1 t1 where 
  2 exists(select f1, max(f2) from explain_predicate_t2 where id < 20 group by f1 having f1 < 1000 limit 10 offset 2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
| Id  | Description                            | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                       |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                        |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                  | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     QUERY LIMIT                        |       |                         |      |      |       |        |
| 4   |       HAVING                           |       |                         |      |      |       |        |
| 5   |         HASH GROUP BY                  |       |                         |      |      |       |        |
| 6   |           TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |             INDEX RANGE SCAN           | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM EXPLAIN_PREDICATE_T2 WHERE ID < 20 GROUP BY F1 HAVING F1 < 1000 LIMIT 
               10 OFFSET 2) OR INT_C1 < 100                     
   4 - filter: F1 < 1000                                        
   7 - access: ID < 20                                          

18 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 t1 where 
  2 exists(select f1, max(f2) from explain_predicate_t2 where id < 20 group by f1, null having f1 < 1000 limit 10 offset 2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
| Id  | Description                            | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                       |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                        |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                  | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     QUERY LIMIT                        |       |                         |      |      |       |        |
| 4   |       HAVING                           |       |                         |      |      |       |        |
| 5   |         HASH GROUP BY                  |       |                         |      |      |       |        |
| 6   |           TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |             INDEX RANGE SCAN           | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM EXPLAIN_PREDICATE_T2 WHERE ID < 20 GROUP BY F1 HAVING F1 < 1000 LIMIT 
               10 OFFSET 2) OR INT_C1 < 100                     
   4 - filter: F1 < 1000                                        
   7 - access: ID < 20                                          

18 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 t1 where 
  2 exists(select f1, f2 from sys.explain_predicate_t2 t2 where id < 20 order by f1, f2 desc limit 10 offset ?) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                    | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                      |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     QUERY LIMIT                      |       |                         |      |      |       |        |
| 4   |       QUERY SORT ORDER BY            |       |                         |      |      |       |        |
| 5   |         TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 6   |           INDEX RANGE SCAN           | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
---------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM SYS.EXPLAIN_PREDICATE_T2 T2 WHERE ID < 20 ORDER BY F1,F2 DESC LIMIT 
               10 OFFSET ?) OR INT_C1 < 100                     
   6 - access: ID < 20                                          

16 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 t1 where 
  2 exists(select * from explain_predicate_t3 partition(p1) where id < 20 order by f1 limit ? offset 1 + ?) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------
| Id  | Description                                      | Owner | Name                    | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                                 |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                                  |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                            | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     QUERY LIMIT                                  |       |                         |      |      |       |        |
| 4   |       QUERY SORT ORDER BY                        |       |                         |      |      |       |        |
| 5   |         TABLE ACCESS BY INDEX ROWID Filter:[0,1) | SYS   | EXPLAIN_PREDICATE_T3    |      |      |       |        |
| 6   |           INDEX RANGE SCAN                       | SYS   | PK_EXPLAIN_PREDICATE_T3 |      |      |       |        |
---------------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM EXPLAIN_PREDICATE_T3 PARTITION(P1) WHERE ID < 20 ORDER BY F1 LIMIT 
               ? OFFSET 1 + ?) OR INT_C1 < 100                  
   6 - access: ID < 20                                          

16 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 t1 where 
  2 exists(select f1, f3, max(f2) from explain_predicate_t2 where id < 20 group by grouping sets(f1,f3, NULL) having f1 < 1000 order by f1) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
| Id  | Description                            | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                       |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                        |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                  | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     QUERY SORT ORDER BY                |       |                         |      |      |       |        |
| 4   |       HAVING                           |       |                         |      |      |       |        |
| 5   |         HASH GROUP BY                  |       |                         |      |      |       |        |
| 6   |           TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |             INDEX RANGE SCAN           | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM EXPLAIN_PREDICATE_T2 WHERE ID < 20 GROUP BY GROUPING SETS((F1,DUMMY,
               DUMMY), (DUMMY,F3,DUMMY), (DUMMY,DUMMY)) HAVING F1 < 1000 ORDER BY F1) OR INT_C1 < 100
   4 - filter: F1 < 1000                                        
   7 - access: ID < 20                                          

18 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select f2 from explain_predicate_t2 t2 where t1.f3 = t2.f3);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------
| Id  | Description            | Owner | Name                    | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT       |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER        |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
-------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM EXPLAIN_PREDICATE_T2 T2 WHERE T2.F3 = T1.F3)
   3 - filter: T2.F3 = T1.F3                                    

12 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where (t1.f1, t1.f2) in (select count(*) as count, f2 from explain_predicate_t2 t2 where t1.f3 = t2.f3 group by f2);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------
| Id  | Description              | Owner | Name                    | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT         |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER          |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL    | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH GROUP BY        |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
---------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: (T1.F1,T1.F2) IN((SELECT COUNT(*) AS COUNT, F2 FROM EXPLAIN_PREDICATE_T2 T2 WHERE T2.F3 = T1.F3 GROUP BY 
               F2))                                             
   4 - filter: T2.F3 = T1.F3                                    

14 rows fetched.

SQL> 
SQL> -- select node type
SQL> explain plan for select * from explain_predicate_t1 t1 where exists(select id from explain_predicate_t1 union select id from explain_predicate_t2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                   |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH UNION                    |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 5   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS((SELECT 1 FROM EXPLAIN_PREDICATE_T1) UNION (SELECT 1 FROM EXPLAIN_PREDICATE_T2)) OR 
               INT_C1 < 100                                     

16 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where exists(select id from explain_predicate_t1 union all select id from explain_predicate_t2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                   |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     UNION ALL                     |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 5   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS((SELECT 1 FROM EXPLAIN_PREDICATE_T1) UNION ALL (SELECT 1 FROM EXPLAIN_PREDICATE_T2)) OR 
               INT_C1 < 100                                     

16 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where exists(select id from explain_predicate_t1 minus select id from explain_predicate_t2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                   |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH MINUS                    |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 5   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS((SELECT 1 FROM EXPLAIN_PREDICATE_T1) MINUS (SELECT 1 FROM EXPLAIN_PREDICATE_T2)) OR 
               INT_C1 < 100                                     

16 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where exists(select id from explain_predicate_t1 intersect select id from explain_predicate_t2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                   |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH INTERSECT                |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 5   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS((SELECT 1 FROM EXPLAIN_PREDICATE_T1) INTERSECT (SELECT 1 FROM EXPLAIN_PREDICATE_T2)) OR 
               INT_C1 < 100                                     

16 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where exists(select id from explain_predicate_t1 intersect all select id from explain_predicate_t2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                   |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH INTERSECT ALL            |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 5   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS((SELECT 1 FROM EXPLAIN_PREDICATE_T1) INTERSECT ALL (SELECT 1 FROM EXPLAIN_PREDICATE_T2)) OR 
               INT_C1 < 100                                     

16 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where exists(select id from explain_predicate_t1 except select id from explain_predicate_t2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                   |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH MINUS                    |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 5   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS((SELECT 1 FROM EXPLAIN_PREDICATE_T1) EXCEPT (SELECT 1 FROM EXPLAIN_PREDICATE_T2)) OR 
               INT_C1 < 100                                     

16 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where exists(select id from explain_predicate_t1 except all select id from explain_predicate_t2) or int_c1 < 100;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                   |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH EXCEPT ALL               |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 5   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 6   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 7   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS((SELECT 1 FROM EXPLAIN_PREDICATE_T1) EXCEPT ALL (SELECT 1 FROM EXPLAIN_PREDICATE_T2)) OR 
               INT_C1 < 100                                     

16 rows fetched.

SQL> -- subselect table + distinct
SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select f2 from (select distinct f1, f2, f3 from explain_predicate_t2 t2 where t1.f2 = t2.f2) t3 where t1.f3 = t3.f3);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
| Id  | Description                | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT           |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER            |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL      | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     SUBSELECT              |       | T3                      |      |      |       |        |
| 4   |       HASH DISTINCT        |       |                         |      |      |       |        |
| 5   |         TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
-----------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM (SELECT DISTINCT F1, F2, F3 FROM EXPLAIN_PREDICATE_T2 T2 WHERE T2.F3 = T1.F3 AND 
               T2.F2 = T1.F2) T3 WHERE T3.F3 = T1.F3)           
   3 - filter: T3.F3 = T1.F3                                    
   5 - filter: T2.F3 = T1.F3 AND T2.F2 = T1.F2                  

16 rows fetched.

SQL> -- from multiple tables
SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select t2.f2 from explain_predicate_t2 t2, explain_predicate_t3 t3 where t2.int_c1 = t3.int_c1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                    | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                      |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     NESTED LOOPS                     |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T3 |      |      |       |        |
| 5   |       TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 6   |         INDEX RANGE SCAN             | SYS   | IDX_EXPLAIN_PRED_T2_1   |      |      |       |        |
---------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM EXPLAIN_PREDICATE_T2 T2, EXPLAIN_PREDICATE_T3 T3)
   6 - access: T2.INT_C1 = T3.INT_C1                            

15 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select t2.f2 from explain_predicate_t2 t2 join explain_predicate_t3 t3 where t2.int_c1 = t3.int_c1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                    | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                      |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     NESTED LOOPS                     |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T3 |      |      |       |        |
| 5   |       TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 6   |         INDEX RANGE SCAN             | SYS   | IDX_EXPLAIN_PRED_T2_1   |      |      |       |        |
---------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM EXPLAIN_PREDICATE_T2 T2 INNER JOIN EXPLAIN_PREDICATE_T3 T3)
   6 - access: T2.INT_C1 = T3.INT_C1                            

15 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select t2.f2 from explain_predicate_t2 t2 left join explain_predicate_t3 t3 on t2.int_c1 = t3.int_c1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                    | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                      |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH JOIN OUTER(R)               |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS FULL              | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 5   |       TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T3 |      |      |       |        |
---------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM EXPLAIN_PREDICATE_T2 T2 LEFT JOIN EXPLAIN_PREDICATE_T3 T3)
   3 - access: T2.INT_C1 = T3.INT_C1                            

14 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select t2.f2 from explain_predicate_t2 t2 right join explain_predicate_t3 t3 on t2.int_c1 = t3.int_c1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                    | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                      |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     NESTED LOOPS OUTER               |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T3 |      |      |       |        |
| 5   |       TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 6   |         INDEX RANGE SCAN             | SYS   | IDX_EXPLAIN_PRED_T2_1   |      |      |       |        |
---------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM EXPLAIN_PREDICATE_T3 T3 LEFT JOIN EXPLAIN_PREDICATE_T2 T2)
   6 - access: T2.INT_C1 = T3.INT_C1                            

15 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select t2.f2 from explain_predicate_t2 t2 full join explain_predicate_t3 t3 on t2.int_c1 = t3.int_c1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                    | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                      |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     HASH JOIN FULL(L)                |       |                         |      |      |       |        |
| 4   |       TABLE ACCESS FULL              | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 5   |       TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T3 |      |      |       |        |
---------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM EXPLAIN_PREDICATE_T2 T2 FULL JOIN EXPLAIN_PREDICATE_T3 T3)
   3 - access: T2.INT_C1 = T3.INT_C1                            

14 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select t2.f2 from explain_predicate_t2 t2 left join explain_predicate_t3 t3 on t2.id = t3.id where t2.int_c1 < 100);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
| Id  | Description                      | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                 |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                  |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL            | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 4   |       INDEX RANGE SCAN           | SYS   | IDX_EXPLAIN_PRED_T2_1   |      |      |       |        |
-----------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM EXPLAIN_PREDICATE_T2 T2 WHERE T2.INT_C1 < 100)
   4 - access: T2.INT_C1 < 100                                  

13 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 t1 where t1.f1 = (select t2.f2 from explain_predicate_t2 t2 right join explain_predicate_t1 t3 on t2.id = t3.id
  2 inner join explain_predicate_t1 t4 on t1.id != t4.id left join explain_predicate_t1 t5 on t1.id < t5.id);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
| Id  | Description                            | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                       |       |                         |      |      |       |        |
| 1   |   KERNEL FILTER                        |       |                         |      |      |       |        |
| 2   |     TABLE ACCESS FULL                  | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 3   |     NESTED LOOPS OUTER                 |       |                         |      |      |       |        |
| 4   |       NESTED LOOPS                     |       |                         |      |      |       |        |
| 5   |         TABLE ACCESS BY INDEX ONLY     | SYS   | EXPLAIN_PREDICATE_T1 T4 |      |      |       |        |
| 6   |           INDEX FAST FULL SCAN         | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 7   |         NESTED LOOPS OUTER             |       |                         |      |      |       |        |
| 8   |           TABLE ACCESS BY INDEX ONLY   | SYS   | EXPLAIN_PREDICATE_T1 T3 |      |      |       |        |
| 9   |             INDEX FAST FULL SCAN       | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 10  |           TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 11  |             INDEX UNIQUE SCAN          | SYS   | PK_EXPLAIN_PREDICATE_T2 |      |      |       |        |
| 12  |       TABLE ACCESS BY INDEX ONLY       | SYS   | EXPLAIN_PREDICATE_T1 T5 |      |      |       |        |
| 13  |         INDEX RANGE SCAN               | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: T1.F1 = (SELECT F2 FROM EXPLAIN_PREDICATE_T1 T4 INNER JOIN EXPLAIN_PREDICATE_T1 T3 LEFT JOIN 
               EXPLAIN_PREDICATE_T2 T2 LEFT JOIN EXPLAIN_PREDICATE_T1 T5 ON T1.ID < T5.ID)
   4 - access: T1.ID != T4.ID                                   
   11 - access: T2.ID = T3.ID                                   
   13 - access: T1.ID < T5.ID                                   

25 rows fetched.

SQL> 
SQL> -- EXPR_NODE_PRIOR
SQL> explain plan for select * from explain_predicate_t1 connect by nocycle prior id <10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description            | Owner | Name                 | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT       |       |                      |      |      |       |        |
| 1   |   START WITH           |       |                      |      |      |       |        |
| 2   |     TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 3   |   CONNECT BY           |       |                      |      |      |       |        |
| 4   |     TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   3 - filter: PRIOR ID < 10                                    

12 rows fetched.

SQL> -- EXPR_NODE_OVER
SQL> explain plan for select * from explain_predicate_t1 where f1 in (select min(f2) over(partition by f3 order by f1 DESC NULLS LAST, f2 ASC NULLS FIRST) from explain_predicate_t1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------------
| Id  | Description                | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT           |       |                      |      |      |       |        |
| 1   |   HASH JOIN SEMI(L)        |       |                      |      |      |       |        |
| 2   |     SUBSELECT              |       |                      |      |      |       |        |
| 3   |       WINDOW SORT          |       |                      |      |      |       |        |
| 4   |         TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 5   |     TABLE ACCESS FULL      | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - access: min(F2) OVER(PARTITION BY F3 ORDER BY F1 DESC NULLS LAST, F2 ASC NULLS FIRST) = F1

13 rows fetched.

SQL> -- EXPR_NODE_ARRAY
SQL> explain plan for select * from explain_predicate_t1 where f23[1:4] is null;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F23[1:4] IS NULL                                 

9 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where array[1,2,3] is null;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: ARRAY[1,2,3] IS NULL                             

9 rows fetched.

SQL> 
SQL> -- EXPR_NODE_SEQUENCE
SQL> drop sequence if exists explain_predicate_seq;

Succeed.

SQL> create sequence explain_predicate_seq increment by 2 start with 1 maxvalue 200 nocycle nocache;

Succeed.

SQL> select explain_predicate_seq.nextval from dual;

NEXTVAL             
--------------------
1                   

1 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 where int_c1 = (select explain_predicate_seq.currval from dual);

CT-00690, [1:76]Sequences were not supported
SQL> explain plan for select * from explain_predicate_t1 where int_c1 = (select explain_predicate_seq.nextval from dual);

CT-00690, [1:76]Sequences were not supported
SQL> drop sequence explain_predicate_seq;

Succeed.

SQL> 
SQL> 
SQL> -- func_as_table
SQL> explain plan for select FILE_ID, INFO_TYPE, CORRUPT_NUM from table(dba_page_corruption('DATABASE')) where FILE_ID=0 and INFO_TYPE = 1;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------
| Id  | Description          | Owner | Name | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   |      |      |      |       |        |
----------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: INFO_TYPE = 1 AND FILE_ID = 0                    

9 rows fetched.

SQL> 
SQL> -- or condition is rownum on both sides
SQL> explain plan for select * from explain_predicate_t1 where rownum < 5 or rownum > 20;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description            | Owner | Name                 | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT       |       |                      |      |      |       |        |
| 1   |   ROWNUM FILTER        |       |                      |      |      |       |        |
| 2   |     TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: ROWNUM < 5 OR ROWNUM > 20                        

10 rows fetched.

SQL> 
SQL> -- function index
SQL> explain plan for select * from explain_predicate_t1 where upper(str_c1) = 'TEST';

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
| Id  | Description                    | Owner | Name                  | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT               |       |                       |      |      |       |        |
| 1   |   TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1  |      |      |       |        |
| 2   |     INDEX RANGE SCAN           | SYS   | IDX_EXPLAIN_PRED_T1_3 |      |      |       |        |
-------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - access: UPPER(STR_C1) = 'TEST'                           

10 rows fetched.

SQL> 
SQL> explain plan for
  2 merge into explain_predicate_t2 t2
  3 using (select * from explain_predicate_t1 where int_c1 < 20) t1
  4 on (t1.f1 = t2.f1 and t1.f2 = t2.f2 and t1.f3 = t2.f3 and t1.f4 = t2.f4 and t1.f5 = t2.f5 and t1.str_c1 = t2.str_c1)
  5 when matched then
  6 update set str_c1 = 'abc'
  7 when not matched then
  8 insert values(1, 2, 'test', 3, 4, 5, 6.1, 6.2);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
| Id  | Description                        | Owner | Name                    | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------
| 0   | MERGE STATEMENT(HASH JOIN)         |       |                         |      |      |       |        |
| 1   |   USING TABLE                      |       |                         |      |      |       |        |
| 2   |     SUBSELECT                      |       | T1                      |      |      |       |        |
| 3   |       TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 4   |         INDEX RANGE SCAN           | SYS   | IDX_EXPLAIN_PRED_T1_1   |      |      |       |        |
| 5   |   MERGE TABLE                      |       |                         |      |      |       |        |
| 6   |     TABLE ACCESS FULL              | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 7   |   ON CONDITION                     |       |                         |      |      |       |        |
| 8   |     INSERT STATEMENT               |       |                         |      |      |       |        |
| 9   |     UPDATE STATEMENT               |       |                         |      |      |       |        |
-------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   4 - access: INT_C1 < 20                                      
   7 - access: T2.F5 = T1.F5 AND T2.F3 = T1.F3 AND T2.STR_C1 = T1.STR_C1 AND T2.F2 = T1.F2 AND T2.F4 = T1.F4 AND 
               T2.F1 = T1.F1                                    

19 rows fetched.

SQL> 
SQL> explain plan for
  2 merge into explain_predicate_t2 t2
  3 using (select * from explain_predicate_t1 where int_c1 < 20) t1
  4 on (t1.f1 = t2.f1)
  5 when matched then
  6 update set str_c1 = 'abc' where t1.f2 = t2.f2
  7 when not matched then
  8 insert values(1, 2, 'test', 3, 4, 5, 6.1, 6.2) where t1.str_c1 is not null;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
| Id  | Description                        | Owner | Name                    | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------
| 0   | MERGE STATEMENT(HASH JOIN)         |       |                         |      |      |       |        |
| 1   |   USING TABLE                      |       |                         |      |      |       |        |
| 2   |     SUBSELECT                      |       | T1                      |      |      |       |        |
| 3   |       TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 4   |         INDEX RANGE SCAN           | SYS   | IDX_EXPLAIN_PRED_T1_1   |      |      |       |        |
| 5   |   MERGE TABLE                      |       |                         |      |      |       |        |
| 6   |     TABLE ACCESS FULL              | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 7   |   ON CONDITION                     |       |                         |      |      |       |        |
| 8   |     FILTER                         |       |                         |      |      |       |        |
| 9   |       INSERT STATEMENT             |       |                         |      |      |       |        |
| 10  |     FILTER                         |       |                         |      |      |       |        |
| 11  |       UPDATE STATEMENT             |       |                         |      |      |       |        |
-------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   4 - access: INT_C1 < 20                                      
   7 - access: T2.F1 = T1.F1                                    
   8 - filter: T1.STR_C1 IS NOT NULL                            
   10 - filter: T1.F2 = T2.F2                                   

22 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 where f1 in (select (select f2 from explain_predicate_t2 where rownum < 1) from explain_predicate_t1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   HASH JOIN SEMI(L)               |       |                         |      |      |       |        |
| 2   |     SUBSELECT                     |       |                         |      |      |       |        |
| 3   |       ROWNUM FILTER               |       |                         |      |      |       |        |
| 4   |         TABLE ACCESS FULL         | SYS   | EXPLAIN_PREDICATE_T2    |      |      |       |        |
| 5   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
| 6   |         INDEX FAST FULL SCAN      | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 7   |     TABLE ACCESS FULL             | SYS   | EXPLAIN_PREDICATE_T1    |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - access: (SELECT F2 FROM EXPLAIN_PREDICATE_T2) = F1       
   3 - filter: NULL IS NOT NULL                                 

16 rows fetched.

SQL> explain plan for select * from explain_predicate_t1 having 1 < 0;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description            | Owner | Name                 | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT       |       |                      |      |      |       |        |
| 1   |   HAVING               |       |                      |      |      |       |        |
| 2   |     TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: NULL IS NOT NULL                                 

10 rows fetched.

SQL> 
SQL> -- DTS2019122500420
SQL> drop procedure if exists explain_predicate_pro;

Succeed.

SQL> create or replace procedure explain_predicate_pro as
  2 begin
  3 execute immediate'explain select * from explain_predicate_t1 where id < 10';
  4 end;
  5 /

Succeed.

SQL> 
SQL> call explain_predicate_pro;

CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[3:1] PL/SQL(SYS.EXPLAIN_PREDICATE_PRO) terminated with execute errors
[3:1] CT-00101, Capability: explain sql plan in PL dynamic sql is not supported

SQL> drop procedure explain_predicate_pro;

Succeed.

SQL> 
SQL> explain plan for select sum(id), int_c1 from explain_predicate_t1 t1 
  2 where exists 
  3 (
  4     select * from explain_predicate_t2 t2, explain_predicate_t3 t3 where t2.int_c1 = t3.int_c1
  5     union all
  6     select * from explain_predicate_t2 t4, explain_predicate_t3 t5 where t4.id < 10
  7     union all
  8     select * from explain_predicate_t2 t6, explain_predicate_t3 t7 where t6.id < 10
  9     union all
 10     select * from explain_predicate_t2 t8, explain_predicate_t3 t9 where t8.id < 10
 11     union all
 12     select * from explain_predicate_t2 t10, explain_predicate_t3 t11 where t10.id < 10
 13     union all
 14     select * from explain_predicate_t2 t12, explain_predicate_t3 t13 where t12.id < 10
 15     union all
 16     select * from explain_predicate_t2 t14, explain_predicate_t3 t15 where t14.id < 10
 17     union all
 18     select * from explain_predicate_t2 t16, explain_predicate_t3 t17 where t16.id < 10
 19     union all
 20     select * from explain_predicate_t2 t18, explain_predicate_t3 t19 where t18.id < 10
 21     union all
 22     select * from explain_predicate_t2 t20, explain_predicate_t3 t21 where t20.id < 10
 23     union all
 24     select * from explain_predicate_t2 t22, explain_predicate_t3 t23 where t22.id < 10
 25     union all
 26     select * from explain_predicate_t2 t24, explain_predicate_t3 t25 where t24.id < 10
 27     union all
 28     select * from explain_predicate_t2 t26, explain_predicate_t3 t27 where t26.id < 10
 29     union all
 30     select * from explain_predicate_t2 t28, explain_predicate_t3 t29 where t28.id < 10
 31     union all
 32     select * from explain_predicate_t2 t30, explain_predicate_t3 t31 where t30.id < 10
 33     union all
 34     select * from explain_predicate_t2 t32, explain_predicate_t3 t33 where t32.id < 10
 35     union all
 36     select * from explain_predicate_t2 t34, explain_predicate_t3 t35 where t34.id < 10
 37     union all
 38     select * from explain_predicate_t2 t36, explain_predicate_t3 t37 where t36.id < 10
 39     union all
 40     select * from explain_predicate_t2 t38, explain_predicate_t3 t39 where t38.id < 10
 41     union all
 42     select * from explain_predicate_t2 t40, explain_predicate_t3 t41 where t40.id < 10
 43     union all
 44     select * from explain_predicate_t2 t42, explain_predicate_t3 t43 where t42.id < 10
 45     union all
 46     select * from explain_predicate_t2 t44, explain_predicate_t3 t45 where t44.id < 10
 47 ) group by int_c1 order by 1 limit 1;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
| Id  | Description                                  | Owner | Name                     | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                             |       |                          |      |      |       |        |
| 1   |   QUERY LIMIT                                |       |                          |      |      |       |        |
| 2   |     QUERY SORT ORDER BY ROWNUM               |       |                          |      |      |       |        |
| 3   |       INDEX GROUP BY                         |       |                          |      |      |       |        |
| 4   |         KERNEL FILTER                        |       |                          |      |      |       |        |
| 5   |           TABLE ACCESS BY INDEX ROWID        | SYS   | EXPLAIN_PREDICATE_T1 T1  |      |      |       |        |
| 6   |             INDEX FULL SCAN                  | SYS   | IDX_EXPLAIN_PRED_T1_1    |      |      |       |        |
| 7   |           UNION ALL                          |       |                          |      |      |       |        |
| 8   |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 9   |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T3  |      |      |       |        |
| 10  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T2  |      |      |       |        |
| 11  |                 INDEX RANGE SCAN             | SYS   | IDX_EXPLAIN_PRED_T2_1    |      |      |       |        |
| 12  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 13  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T4  |      |      |       |        |
| 14  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 15  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T5  |      |      |       |        |
| 16  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 17  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T6  |      |      |       |        |
| 18  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 19  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T7  |      |      |       |        |
| 20  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 21  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T8  |      |      |       |        |
| 22  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 23  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T9  |      |      |       |        |
| 24  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 25  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T10 |      |      |       |        |
| 26  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 27  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T11 |      |      |       |        |
| 28  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 29  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T12 |      |      |       |        |
| 30  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 31  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T13 |      |      |       |        |
| 32  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 33  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T14 |      |      |       |        |
| 34  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 35  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T15 |      |      |       |        |
| 36  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 37  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T16 |      |      |       |        |
| 38  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 39  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T17 |      |      |       |        |
| 40  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 41  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T18 |      |      |       |        |
| 42  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 43  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T19 |      |      |       |        |
| 44  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 45  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T20 |      |      |       |        |
| 46  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 47  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T21 |      |      |       |        |
| 48  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 49  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T22 |      |      |       |        |
| 50  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 51  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T23 |      |      |       |        |
| 52  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 53  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T24 |      |      |       |        |
| 54  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 55  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T25 |      |      |       |        |
| 56  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 57  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T26 |      |      |       |        |
| 58  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 59  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T27 |      |      |       |        |
| 60  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 61  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T28 |      |      |       |        |
| 62  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 63  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T29 |      |      |       |        |
| 64  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 65  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T30 |      |      |       |        |
| 66  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 67  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T31 |      |      |       |        |
| 68  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 69  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T32 |      |      |       |        |
| 70  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 71  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T33 |      |      |       |        |
| 72  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 73  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T34 |      |      |       |        |
| 74  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 75  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T35 |      |      |       |        |
| 76  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 77  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T36 |      |      |       |        |
| 78  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 79  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T37 |      |      |       |        |
| 80  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 81  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T38 |      |      |       |        |
| 82  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 83  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T39 |      |      |       |        |
| 84  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 85  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T40 |      |      |       |        |
| 86  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 87  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T41 |      |      |       |        |
| 88  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 89  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T42 |      |      |       |        |
| 90  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 91  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T43 |      |      |       |        |
| 92  |             NESTED LOOPS                     |       |                          |      |      |       |        |
| 93  |               TABLE ACCESS BY INDEX ROWID    | SYS   | EXPLAIN_PREDICATE_T2 T44 |      |      |       |        |
| 94  |                 INDEX RANGE SCAN             | SYS   | PK_EXPLAIN_PREDICATE_T2  |      |      |       |        |
| 95  |               TABLE ACCESS FULL Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 T45 |      |      |       |        |
------------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   5 - filter: EXISTS((SELECT 1 FROM EXPLAIN_PREDICATE_T2 T2, EXPLAIN_PREDICATE_T3 T3) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T4, EXPLAIN_PREDICATE_T3 T5 WHERE T4.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T6, EXPLAIN_PREDICATE_T3 T7 WHERE T6.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T8, EXPLAIN_PREDICATE_T3 T9 WHERE T8.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T10, EXPLAIN_PREDICATE_T3 T11 WHERE T10.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T12, EXPLAIN_PREDICATE_T3 T13 WHERE T12.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T14, EXPLAIN_PREDICATE_T3 T15 WHERE T14.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T16, EXPLAIN_PREDICATE_T3 T17 WHERE T16.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T18, EXPLAIN_PREDICATE_T3 T19 WHERE T18.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T20, EXPLAIN_PREDICATE_T3 T21 WHERE T20.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T22, EXPLAIN_PREDICATE_T3 T23 WHERE T22.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T24, EXPLAIN_PREDICATE_T3 T25 WHERE T24.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T26, EXPLAIN_PREDICATE_T3 T27 WHERE T26.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T28, EXPLAIN_PREDICATE_T3 T29 WHERE T28.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T30, EXPLAIN_PREDICATE_T3 T31 WHERE T30.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T32, EXPLAIN_PREDICATE_T3 T33 WHERE T32.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T34, EXPLAIN_PREDICATE_T3 T35 WHERE T34.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T36, EXPLAIN_PREDICATE_T3 T37 WHERE T36.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T38, EXPLAIN_PREDICATE_T3 T39 WHERE T38.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T40, EXPLAIN_PREDICATE_T3 T41 WHERE T40.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T42, EXPLAIN_PREDICATE_T3 T43 WHERE T42.ID < 10) UNION ALL (SELECT 1 FROM 
               EXPLAIN_PREDICATE_T2 T44, EXPLAIN_PREDICATE_T3 T45 WHERE T44.ID < 10))
   11 - access: T2.INT_C1 = T3.INT_C1                           
   14 - access: T4.ID < 10                                      
   18 - access: T6.ID < 10                                      
   22 - access: T8.ID < 10                                      
   26 - access: T10.ID < 10                                     
   30 - access: T12.ID < 10                                     
   34 - access: T14.ID < 10                                     
   38 - access: T16.ID < 10                                     
   42 - access: T18.ID < 10                                     
   46 - access: T20.ID < 10                                     
   50 - access: T22.ID < 10                                     
   54 - access: T24.ID < 10                                     
   58 - access: T26.ID < 10                                     
   62 - access: T28.ID < 10                                     
   66 - access: T30.ID < 10                                     
   70 - access: T32.ID < 10                                     
   74 - access: T34.ID < 10                                     
   78 - access: T36.ID < 10                                     
   82 - access: T38.ID < 10                                     
   86 - access: T40.ID < 10                                     
   90 - access: T42.ID < 10                                     
   94 - access: T44.ID < 10                                     

146 rows fetched.

SQL> 
SQL> -- overlong const string
SQL> explain plan for 
  2 select * from explain_predicate_t1 where f27>to_clob('111111111911111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  3 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  4 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  5 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  6 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  7 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  8 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
  9 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
 10 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
 11 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
 12 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
 13 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
 14 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
 15 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
 16 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
 17 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111');

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F27 > TO_CLOB('11111111191111111111111111111111111111111111111111111111111111111111111111111111111111111111111...')

9 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 where f24 = cast('123' as binary(513));

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: F24 = '31323300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...'

9 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 where cast('123' as binary(500)) = some(select f2 from explain_predicate_t2 limit 10);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------
| Id  | Description              | Owner | Name                 | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT         |       |                      |      |      |       |        |
| 1   |   KERNEL FILTER          |       |                      |      |      |       |        |
| 2   |     TABLE ACCESS FULL    | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 3   |     QUERY LIMIT          |       |                      |      |      |       |        |
| 4   |       TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T2 |      |      |       |        |
------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: '31323300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000...' IN((SELECT 
               F2 FROM EXPLAIN_PREDICATE_T2 LIMIT 10))          

13 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 
  2 where
  3     case when
  4         case when
  5             case when id > 100 then f1 else f2 end > 10
  6         then
  7             case when f1 > 20 then f2 else f3 end
  8         else
  9             case when f2 > 80 then f3 else f4 end
 10         end < 100
 11     then
 12         case when
 13             case when int_c1 < 888 then f4 else f5 end < 99.99
 14         then 
 15             case when f4 > 22.22 then f5 else f6 end
 16         else
 17             case when f5 < 66.66 then f6 else f7 end
 18         end
 19     else
 20         case when
 21             case when int_c2 between 99 and 199 then f8 else f9 end > 99.999
 22         then
 23             case when f8 = 66.66 then f11 else f12 end
 24         else
 25             case when f9 < 10 then f12 else f13 end
 26         end
 27     end is not null;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: CASE  WHEN CASE  WHEN CASE  WHEN ID > 100 THEN F1 ELSE F2 END > 10 THEN CASE  WHEN F1 > 20 THEN 
               F2 ELSE F3 END ELSE CASE  WHEN F2 > 80 THEN F3 ELSE F4 END END < 100 THEN CASE  WHEN CASE  WHEN INT_C1 < 888 THEN 
               F4 ELSE F5 END < 99.99 THEN CASE  WHEN F4 > 22.22 THEN F5 ELSE F6 END ELSE CASE  WHEN F5 < 66.66 THEN 
               F6 ELSE F7 END END ELSE CASE  WHEN CASE  WHEN INT_C2 BETWEEN 99 AND 199 THEN F8 ELSE F9 END > 99.999 THEN 
               CASE  WHEN F8 = 66.66 THEN F11 ELSE F12 END ELSE CASE  WHEN F9 < 10 THEN F12 ELSE F13 END END END IS NOT NULL

13 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_t1 
  2 where (case id 
  3        when 100 then 0 when 101 then 1 when 102 then 2 when 103 then 3 when 104 then 4 when 105 then 5 when 106 then 6 when 107 then 7 when 108 then 8 when 109 then 9
  4        when 110 then 10 when 111 then 11 when 112 then 12 when 113 then 13 when 114 then 14 when 115 then 15 when 116 then 16 when 117 then 17 when 118 then 18 when 118 then 18
  5        when 119 then 19 when 120 then 20 when 121 then 21 when 122 then 22 when 123 then 23 when 124 then 24 when 125 then 25 when 126 then 26 when 127 then 27 when 128 then 28
  6        when 129 then 29 when 130 then 30 when 131 then 31 when 132 then 32 when 133 then 33 when 134 then 34 when 135 then 35 when 136 then 36 when 137 then 37 when 138 then 38
  7        when 139 then 39 when 140 then 40 when 141 then 41 when 142 then 42 when 143 then 43 when 144 then 44 when 145 then 45 when 146 then 46 when 147 then 47 when 148 then 48
  8        when 149 then 49 when 150 then 50 when 151 then 51 when 152 then 52 when 153 then 53 when 154 then 54 when 155 then 55 when 156 then 56 when 157 then 57 when 158 then 58
  9        when 159 then 59 when 160 then 60 when 161 then 61 when 162 then 62 when 163 then 63 when 164 then 64 when 165 then 65 when 166 then 66 when 167 then 67 when 168 then 68
 10        when 169 then 69 when 170 then 70 when 171 then 71 when 172 then 72 when 173 then 73 when 174 then 74 when 175 then 75 when 176 then 76 when 177 then 77 when 178 then 78
 11        when 179 then 79 when 180 then 80 else 100 end) > 33;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
--------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                 | Rows | Cost | Bytes | Remark |
--------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                      |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 |      |      |       |        |
--------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: CASE ID WHEN 100 THEN 0 WHEN 101 THEN 1 WHEN 102 THEN 2 WHEN 103 THEN 3 WHEN 104 THEN 4 WHEN 
               105 THEN 5 WHEN 106 THEN 6 WHEN 107 THEN 7 WHEN 108 THEN 8 WHEN 109 THEN 9 WHEN 110 THEN 
               10 WHEN 111 THEN 11 WHEN 112 THEN 12 WHEN 113 THEN 13 WHEN 114 THEN 14 WHEN 115 THEN 15 WHEN 
               116 THEN 16 WHEN 117 THEN 17 WHEN 118 THEN 18 WHEN 118 THEN 18 WHEN 119 THEN 19 WHEN 120 THEN 
               20 WHEN 121 THEN 21 WHEN 122 THEN 22 WHEN 123 THEN 23 WHEN 124 THEN 24 WHEN 125 THEN 25 WHEN 
               126 THEN 26 WHEN 127 THEN 27 WHEN 128 THEN 28 WHEN 129 THEN 29 WHEN 130 THEN 30 WHEN 131 THEN 
               31 WHEN 132 THEN 32 WHEN 133 THEN 33 WHEN 134 THEN 34 WHEN 135 THEN 35 WHEN 136 THEN 36 WHEN 
               137 THEN 37 WHEN 138 THEN 38 WHEN 139 THEN 39 WHEN 140 THEN 40 WHEN 141 THEN 41 WHEN 142 THEN 
               42 WHEN 143 THEN 43 WHEN 144 THEN 44 WHEN 145 THEN 45 WHEN 146 THEN 46 WHEN 147 THEN 47 WHEN 
               148 THEN 48 WHEN 149 THEN 49 WHEN 150 THEN 50 WHEN 151 THEN 51 WHEN 152 THEN 52 WHEN 153 THEN 
               53 WHEN 154 THEN 54 WHEN 155 THEN 55 WHEN 156 THEN 56 WHEN 157 THEN 57 WHEN 158 THEN 58 WHEN 
               159 THEN 59 WHEN 160 THEN 60 WHEN 161 THEN 61 WHEN 162 THEN 62 WHEN 163 THEN 63 WHEN 164 THEN 
               64 WHEN 165 THEN 65 WHEN 166 THEN 66 WHEN 167 THEN 67 WHEN 168 THEN 68 WHEN 169 THEN 69 WHEN 
               170 THEN 70 WHEN 171 THEN 71 WHEN 172 THEN 72 WHEN 173 THEN 73 WHEN 174 THEN 74 WHEN 175 THEN 
               75 WHEN 176 THEN 76 WHEN 177 THEN 77 WHEN 178 THEN 78 WHEN 179 THEN 79 WHEN 180 THEN 80 ELSE 
               100 END > 33                                     

24 rows fetched.

SQL> 
SQL> -- exists func_as_table
SQL> explain
  2 select * from explain_predicate_t1 t 
  3 where exists (select STAT_ITEM from table(dba_analyze_table(t.f12, t.f13)) where STAT_ITEM = t.f12);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------
| Id  | Description            | Owner | Name                   | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT       |       |                        |      |      |       |        |
| 1   |   KERNEL FILTER        |       |                        |      |      |       |        |
| 2   |     TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_T1 T |      |      |       |        |
| 3   |     TABLE ACCESS FULL  | SYS   |                        |      |      |       |        |
------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM SYS.TABLE(DBA_ANALYZE_TABLE(T.F12,T.F13)) WHERE STAT_ITEM = T.F12)
   3 - filter: STAT_ITEM = T.F12                                

12 rows fetched.

SQL> 
SQL> -- with as table do not display details
SQL> explain
  2 with jennifer_1 as
  3 (select
  4     ref_1.int_c1 as c8
  5  from
  6     (explain_predicate_t3 as ref_0) right join 
  7     (explain_predicate_t2 pivot(
  8         min(case when 0.0 = any(select null as c1 from explain_predicate_t3 as ref_2
  9                                 where explain_predicate_t2.f5 > 0)
 10             then 1 else 2 end ) as aggr_0
 11         for (str_c1)
 12         in (('test') as pexpr_0)) as ref_1)
 13     on (ref_0.id = ref_1.id )
 14 )
 15 select
 16     null as c0,
 17     ref_3.id as c1
 18 from
 19     explain_predicate_t3 as ref_3
 20 where exists (
 21     select 
 22         ref_3.int_c1 as c2
 23     from jennifer_1 as ref_4
 24     group by ref_3.int_c1
 25 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
| Id  | Description                                       | Owner | Name                       | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                                  |       |                            |      |      |       |        |
| 1   |   HASH JOIN SEMI(L)                               |       |                            |      |      |       |        |
| 2   |     SUBSELECT                                     |       |                            |      |      |       |        |
| 3   |       SUBSELECT                                   |       | JENNIFER_1 REF_4           |      |      |       |        |
| 4   |         NESTED LOOPS OUTER                        |       |                            |      |      |       |        |
| 5   |           SUBSELECT                               |       | REF_1                      |      |      |       |        |
| 6   |             HASH GROUP PIVOT                      |       |                            |      |      |       |        |
| 7   |               TABLE ACCESS FULL                   | SYS   | EXPLAIN_PREDICATE_T2       |      |      |       |        |
| 8   |           TABLE ACCESS BY INDEX ONLY Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 REF_0 |      |      |       |        |
| 9   |             INDEX UNIQUE SCAN                     | SYS   | PK_EXPLAIN_PREDICATE_T3    |      |      |       |        |
| 10  |     TABLE ACCESS FULL Filter:[0,3)                | SYS   | EXPLAIN_PREDICATE_T3 REF_3 |      |      |       |        |
-------------------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - access: NA = NA                                          
   9 - access: REF_0.ID = REF_1.ID     

19 rows fetched.

SQL> 
SQL> explain
  2 select
  3     null as c0,
  4     ref_3.id as c1
  5 from
  6     explain_predicate_t3 as ref_3
  7 where exists (
  8     select 
  9         ref_3.int_c1 as c2
 10     from (select ref_1.int_c1 as c8
 11           from (explain_predicate_t3 as ref_0) right join 
 12                (explain_predicate_t2 pivot(
 13                     min(case when 0.0 = any(select null as c1 from explain_predicate_t3 as ref_2
 14                                             where explain_predicate_t2.f5 > 0)
 15                         then 1 else 2 end ) as aggr_0
 16                     for (str_c1)
 17                     in (('test') as pexpr_0)) as ref_1)
 18                 on (ref_0.id = ref_1.id )
 19         ) as ref_4
 20     group by ref_3.int_c1
 21 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
| Id  | Description                                     | Owner | Name                       | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                                |       |                            |      |      |       |        |
| 1   |   HASH JOIN SEMI(L)                             |       |                            |      |      |       |        |
| 2   |     SUBSELECT                                   |       |                            |      |      |       |        |
| 3   |       NESTED LOOPS OUTER                        |       |                            |      |      |       |        |
| 4   |         SUBSELECT                               |       | REF_1                      |      |      |       |        |
| 5   |           HASH GROUP PIVOT                      |       |                            |      |      |       |        |
| 6   |             TABLE ACCESS FULL                   | SYS   | EXPLAIN_PREDICATE_T2       |      |      |       |        |
| 7   |         TABLE ACCESS BY INDEX ONLY Filter:[0,3) | SYS   | EXPLAIN_PREDICATE_T3 REF_0 |      |      |       |        |
| 8   |           INDEX UNIQUE SCAN                     | SYS   | PK_EXPLAIN_PREDICATE_T3    |      |      |       |        |
| 9   |     TABLE ACCESS FULL Filter:[0,3)              | SYS   | EXPLAIN_PREDICATE_T3 REF_3 |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - access: NA = NA                                          
   8 - access: REF_0.ID = REF_1.ID                              

18 rows fetched.

SQL> 
SQL> -- miss rs_col name
SQL> explain select * from explain_predicate_t1 t1 
  2 where t1.id in (select t2.int_c2 from explain_predicate_t1 t2 inner join explain_predicate_t1 t3 where t2.id = t3.id or t2.int_c1 = t3.int_c1);

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
| Id  | Description                                  | Owner | Name                    | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                             |       |                         |      |      |       |        |
| 1   |   NESTED LOOPS                               |       |                         |      |      |       |        |
| 2   |     NESTED LOOPS                             |       |                         |      |      |       |        |
| 3   |       SUBSELECT                              |       |                         |      |      |       |        |
| 4   |         HASH DISTINCT                        |       |                         |      |      |       |        |
| 5   |           SUBSELECT                          |       |                         |      |      |       |        |
| 6   |             UNION ALL                        |       |                         |      |      |       |        |
| 7   |               NESTED LOOPS                   |       |                         |      |      |       |        |
| 8   |                 TABLE ACCESS FULL            | SYS   | EXPLAIN_PREDICATE_T1 T2 |      |      |       |        |
| 9   |                 TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1 T3 |      |      |       |        |
| 10  |                   INDEX UNIQUE SCAN          | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 11  |               NESTED LOOPS                   |       |                         |      |      |       |        |
| 12  |                 TABLE ACCESS FULL            | SYS   | EXPLAIN_PREDICATE_T1 T2 |      |      |       |        |
| 13  |                 TABLE ACCESS BY INDEX ROWID  | SYS   | EXPLAIN_PREDICATE_T1 T3 |      |      |       |        |
| 14  |                   INDEX RANGE SCAN           | SYS   | IDX_EXPLAIN_PRED_T1_1   |      |      |       |        |
| 15  |       TABLE ACCESS BY INDEX ONLY             | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 16  |         INDEX UNIQUE SCAN                    | SYS   | PK_EXPLAIN_PREDICATE_T1 |      |      |       |        |
| 17  |     TABLE ACCESS BY ROWID                    | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 18  |       ROWID SCAN                             |       |                         |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   10 - access: T2.ID = T3.ID                                   
   13 - filter: FALSE != LNNVL(T2.ID = T3.ID)                   
   14 - access: T2.INT_C1 = T3.INT_C1                           
   16 - access: T1.ID = INT_C2                                  

29 rows fetched.

SQL> 
SQL> select t1.f8 from explain_predicate_t1 t1, explain_predicate_t2 t2
  2 where t1.f1 = t2.f1 and t1.int_c2 in (select int_c2 from explain_predicate_t1 t3 where int_c3 = 100) and t2.f2 = 100 and t1.f1 = 101 and t1.f2 = 102;

F8                                      
----------------------------------------

0 rows fetched.

SQL> select plan_text from dv_sql_plan where sql_id = '4030947501';

PLAN_TEXT                                                       
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   HASH JOIN(L)                    |       |                         |      |      |       |        |
| 2   |     KERNEL FILTER                 |       |                         |      |      |       |        |
| 3   |       TABLE ACCESS FULL           | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1 T3 |      |      |       |        |
| 5   |         INDEX RANGE SCAN          | SYS   | IDX_EXPLAIN_PRED_T1_2   |      |      |       |        |
| 6   |     KERNEL FILTER                 |       |                         |      |      |       |        |
| 7   |       TABLE ACCESS FULL           | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 8   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1 T3 |      |      |       |        |
| 9   |         INDEX RANGE SCAN          | SYS   | IDX_EXPLAIN_PRED_T1_2   |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):
-----------------------------------------
   1 - access: T1.F1 = T2.F1
       filter: EXISTS(SELECT 1 FROM EXPLAIN_PREDICATE_T1 T3)
   3 - filter: T1.F1 = 101 AND T1.F2 = 102
   5 - access: INT_C3 = 100 AND T1.INT_C2 = T3.INT_C2
   7 - filter: T2.F2 = 100 AND T2.F1 = 101
   9 - access: INT_C3 = 100 AND T1.INT_C2 = T3.INT_C2

1 rows fetched.

SQL> explain select t1.f8 from explain_predicate_t1 t1, explain_predicate_t2 t2
  2 where t1.f1 = t2.f1 and t1.int_c2 in (select int_c2 from explain_predicate_t1 t3 where int_c3 = 100) and t2.f2 = 100 and t1.f1 = 101  and  t1.f2 = 102;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                    | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                         |      |      |       |        |
| 1   |   HASH JOIN(L)                    |       |                         |      |      |       |        |
| 2   |     KERNEL FILTER                 |       |                         |      |      |       |        |
| 3   |       TABLE ACCESS FULL           | SYS   | EXPLAIN_PREDICATE_T1 T1 |      |      |       |        |
| 4   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1 T3 |      |      |       |        |
| 5   |         INDEX RANGE SCAN          | SYS   | IDX_EXPLAIN_PRED_T1_2   |      |      |       |        |
| 6   |     KERNEL FILTER                 |       |                         |      |      |       |        |
| 7   |       TABLE ACCESS FULL           | SYS   | EXPLAIN_PREDICATE_T2 T2 |      |      |       |        |
| 8   |       TABLE ACCESS BY INDEX ONLY  | SYS   | EXPLAIN_PREDICATE_T1 T3 |      |      |       |        |
| 9   |         INDEX RANGE SCAN          | SYS   | IDX_EXPLAIN_PRED_T1_2   |      |      |       |        |
------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - access: T1.F1 = T2.F1                                    
       filter: EXISTS(SELECT 1 FROM EXPLAIN_PREDICATE_T1 T3)    
   3 - filter: T1.F1 = 101 AND T1.F2 = 102                      
   5 - access: INT_C3 = 100 AND T1.INT_C2 = T3.INT_C2           
   7 - filter: T2.F2 = 100 AND T2.F1 = 101                      
   9 - access: INT_C3 = 100 AND T1.INT_C2 = T3.INT_C2           

22 rows fetched.

SQL> 
SQL> drop table explain_predicate_t1;

Succeed.

SQL> drop table explain_predicate_t2;

Succeed.

SQL> drop table explain_predicate_t3;

Succeed.

SQL> 
SQL> -- DTS2020021110110
SQL> drop table if exists T_AUTOTRACE_1;

Succeed.

SQL> CREATE TABLE "T_AUTOTRACE_1"("ID" BINARY_INTEGER, "C_INT" BINARY_INTEGER NOT NULL, "C_VCHAR" VARCHAR(100 BYTE) NOT NULL);

Succeed.

SQL> CREATE INDEX "TRACE_IDX_1" ON "T_AUTOTRACE_1"("ID");

Succeed.

SQL> 
SQL> drop table if exists T_AUTOTRACE_2;

Succeed.

SQL> CREATE TABLE "T_AUTOTRACE_2"("ID" BINARY_INTEGER, "C_INT" BINARY_INTEGER NOT NULL, "C_VCHAR" VARCHAR(100 BYTE) NOT NULL);

Succeed.

SQL> CREATE INDEX "TRACE_IDX_2" ON "T_AUTOTRACE_2"("ID");

Succeed.

SQL> 
SQL> drop table if exists T_AUTOTRACE_3;

Succeed.

SQL> CREATE TABLE "T_AUTOTRACE_3"("ID" BINARY_INTEGER, "C_INT" BINARY_INTEGER, "C_VCHAR" VARCHAR(100 BYTE) NOT NULL);

Succeed.

SQL> 
SQL> explain plan for
  2 select rownum, t1.id, t2.c_int, t3.c_vchar from
  3     T_AUTOTRACE_1 t1 left join T_AUTOTRACE_2 t2 on t1.id = t2.id
  4         full join T_AUTOTRACE_3 t3 on t2.c_int < t3.c_int
  5         where exists(
  6             select * from T_AUTOTRACE_1 t11
  7                     where (select t11.id+1 from dual)< t1.c_int ) order by 1,2,3,4 limit 5;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
| Id  | Description                                | Owner | Name              | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                           |       |                   |      |      |       |        |
| 1   |   QUERY LIMIT                              |       |                   |      |      |       |        |
| 2   |     QUERY SORT ORDER BY ROWNUM             |       |                   |      |      |       |        |
| 3   |       ROWNUM COUNT                         |       |                   |      |      |       |        |
| 4   |         FILTER                             |       |                   |      |      |       |        |
| 5   |           NESTED LOOPS FULL                |       |                   |      |      |       |        |
| 6   |             NESTED LOOPS OUTER             |       |                   |      |      |       |        |
| 7   |               TABLE ACCESS FULL            | SYS   | T_AUTOTRACE_1 T1  |      |      |       |        |
| 8   |               TABLE ACCESS BY INDEX ROWID  | SYS   | T_AUTOTRACE_2 T2  |      |      |       |        |
| 9   |                 INDEX RANGE SCAN           | SYS   | TRACE_IDX_2       |      |      |       |        |
| 10  |             TABLE ACCESS FULL              | SYS   | T_AUTOTRACE_3 T3  |      |      |       |        |
| 11  |         KERNEL FILTER                      |       |                   |      |      |       |        |
| 12  |           TABLE ACCESS FULL                | SYS   | T_AUTOTRACE_1 T11 |      |      |       |        |
| 13  |           TABLE ACCESS FULL                | SYS   | SYS_DUMMY         |      |      |       |        |
---------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   4 - filter: EXISTS(SELECT 1 FROM T_AUTOTRACE_1 T11 WHERE (SELECT T11.ID + 1 FROM DUAL) < T1.C_INT)
   9 - access: T1.ID = T2.ID                                    
   10 - filter: T2.C_INT < T3.C_INT                             
   12 - filter: (SELECT T11.ID + 1 FROM DUAL) < T1.C_INT        

24 rows fetched.

SQL> 
SQL> -- test show_explain_predicate
SQL> -- DTS2020021407615
SQL> drop table if exists explain_plan;

Succeed.

SQL> create table explain_plan(id number(8) not null, int_f1 int, int_f2 int);

Succeed.

SQL> -- error
SQL> alter system set show_explain_predicate=false;

CT-00201, [1:40]The parameter name "SHOW_EXPLAIN_PREDICATE" was invalid
SQL> alter system set _show_explain_predicate=off;

CT-00601, [1:42]Sql syntax error: FALSE or TRUE expected
SQL> alter session set show_explain_predicat=false;

CT-00601, [1:40]Sql syntax error: missing or invalid parameter
SQL> alter session set _show_explain_predicate=off;

CT-00601, [1:43]Sql syntax error: FALSE or TRUE expected
SQL> 
SQL> alter system set _show_explain_predicate=false;

Succeed.

SQL> explain plan for select * from explain_plan where id < 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name         | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |              |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PLAN |      |      |       |        |
------------------------------------------------------------------------------------

6 rows fetched.

SQL> alter system set _show_explain_predicate=true;

Succeed.

SQL> explain plan for select * from explain_plan where id < 10;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name         | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |              |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PLAN |      |      |       |        |
------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: ID < 10                                          

9 rows fetched.

SQL> 
SQL> -- DTS2020032415881
SQL> alter system set _prefetch_rows = 6;

Succeed.

SQL> explain select * from explain_plan where id < ?;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name         | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |              |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PLAN |      |      |       |        |
------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: ID < ?                                           

9 rows fetched.

SQL> alter system set _prefetch_rows = 100;

Succeed.

SQL> drop table explain_plan;

Succeed.

SQL> 
SQL> -- DTS2020031810176
SQL> drop table if exists t_join_base_001;

Succeed.

SQL> drop table if exists t_join_base_002;

Succeed.

SQL> drop table if exists t_join_base_003;

Succeed.

SQL> drop table if exists t_join_base_004;

Succeed.

SQL> 
SQL> create table t_join_base_001(
  2 id int,
  3 c_int int,
  4 c_real real);

Succeed.

SQL> create table t_join_base_002 as select * from t_join_base_001;

Succeed.

SQL> create table t_join_base_003 as select * from t_join_base_001;

Succeed.

SQL> create table t_join_base_004 as select * from t_join_base_001;

Succeed.

SQL> 
SQL> create index idx_join_base_001_1 on t_join_base_001(c_int);

Succeed.

SQL> 
SQL> explain plan for select t1.c_int,t2.c_int from t_join_base_001 t1 join t_join_base_002 t2 on t1.id=t2.id join t_join_base_002 t3 on t1.id=t3.id 
  2 where exists ( select t3.c_int from t_join_base_003 t3 
  3 where t3.c_int<(select t1.c_int from t_join_base_004 where exists(select t2.c_int from t_join_base_004)) and t1.c_int=t2.c_int ) order by 1;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
| Id  | Description                            | Owner | Name                | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                       |       |                     |      |      |       |        |
| 1   |   QUERY SORT ORDER BY                  |       |                     |      |      |       |        |
| 2   |     HASH JOIN(L)                       |       |                     |      |      |       |        |
| 3   |       NESTED LOOPS                     |       |                     |      |      |       |        |
| 4   |         KERNEL FILTER                  |       |                     |      |      |       |        |
| 5   |           TABLE ACCESS FULL            | SYS   | T_JOIN_BASE_002 T2  |      |      |       |        |
| 6   |           KERNEL FILTER                |       |                     |      |      |       |        |
| 7   |             TABLE ACCESS FULL          | SYS   | T_JOIN_BASE_003 T3  |      |      |       |        |
| 8   |             HASH JOIN SEMI(L)          |       |                     |      |      |       |        |
| 9   |               SUBSELECT                |       |                     |      |      |       |        |
| 10  |                 TABLE ACCESS FULL      | SYS   | T_JOIN_BASE_004     |      |      |       |        |
| 11  |               TABLE ACCESS FULL        | SYS   | T_JOIN_BASE_004     |      |      |       |        |
| 12  |         KERNEL FILTER                  |       |                     |      |      |       |        |
| 13  |           TABLE ACCESS BY INDEX ROWID  | SYS   | T_JOIN_BASE_001 T1  |      |      |       |        |
| 14  |             INDEX RANGE SCAN           | SYS   | IDX_JOIN_BASE_001_1 |      |      |       |        |
| 15  |           KERNEL FILTER                |       |                     |      |      |       |        |
| 16  |             TABLE ACCESS FULL          | SYS   | T_JOIN_BASE_003 T3  |      |      |       |        |
| 17  |             HASH JOIN SEMI(L)          |       |                     |      |      |       |        |
| 18  |               SUBSELECT                |       |                     |      |      |       |        |
| 19  |                 TABLE ACCESS FULL      | SYS   | T_JOIN_BASE_004     |      |      |       |        |
| 20  |               TABLE ACCESS FULL        | SYS   | T_JOIN_BASE_004     |      |      |       |        |
| 21  |       KERNEL FILTER                    |       |                     |      |      |       |        |
| 22  |         TABLE ACCESS FULL              | SYS   | T_JOIN_BASE_002 T3  |      |      |       |        |
| 23  |         KERNEL FILTER                  |       |                     |      |      |       |        |
| 24  |           TABLE ACCESS FULL            | SYS   | T_JOIN_BASE_003 T3  |      |      |       |        |
| 25  |           HASH JOIN SEMI(L)            |       |                     |      |      |       |        |
| 26  |             SUBSELECT                  |       |                     |      |      |       |        |
| 27  |               TABLE ACCESS FULL        | SYS   | T_JOIN_BASE_004     |      |      |       |        |
| 28  |             TABLE ACCESS FULL          | SYS   | T_JOIN_BASE_004     |      |      |       |        |
-------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - access: T1.ID = T3.ID AND T2.ID = T3.ID                  
       filter: EXISTS(SELECT 1 FROM T_JOIN_BASE_003 T3 WHERE T1.C_INT = T2.C_INT AND T3.C_INT < (SELECT 
               T1.C_INT FROM T_JOIN_BASE_004 INNER JOIN (SELECT 1 FROM T_JOIN_BASE_004)))
   7 - filter: T1.C_INT = T2.C_INT AND T3.C_INT < (SELECT T1.C_INT FROM T_JOIN_BASE_004 INNER JOIN (SELECT 1 FROM 
               T_JOIN_BASE_004))                                
   8 - access: NA = NA                                          
   13 - filter: T1.ID = T2.ID                                   
   14 - access: T1.C_INT = T2.C_INT                             
   16 - filter: T1.C_INT = T2.C_INT AND T3.C_INT < (SELECT T1.C_INT FROM T_JOIN_BASE_004 INNER JOIN (SELECT 1 FROM 
               T_JOIN_BASE_004))                                
   17 - access: NA = NA                                         
   24 - filter: T1.C_INT = T2.C_INT AND T3.C_INT < (SELECT T1.C_INT FROM T_JOIN_BASE_004 INNER JOIN (SELECT 1 FROM 
               T_JOIN_BASE_004))                                
   25 - access: NA = NA                                         

49 rows fetched.

SQL> 
SQL> drop table t_join_base_001;

Succeed.

SQL> drop table t_join_base_002;

Succeed.

SQL> drop table t_join_base_003;

Succeed.

SQL> drop table t_join_base_004;

Succeed.

SQL> 
SQL> -- DTS2020052906GQ14P0F00
SQL> drop table if exists with_as_table_explain_t1;

Succeed.

SQL> create table with_as_table_explain_t1
  2 (
  3   org_id number not null,
  4   category_id number,
  5   delete_flag varchar(2 byte),
  6   org_year varchar(4 byte)
  7 );

Succeed.

SQL> alter table with_as_table_explain_t1 add constraint "PK_WITH_AS_TABLE_EXPLAIN_T1" primary key(org_id);

Succeed.

SQL> 
SQL> drop table if exists with_as_table_explain_t2;

Succeed.

SQL> create table with_as_table_explain_t2
  2 (
  3   category_org_id number not null,
  4   category_id number,
  5   org_id number
  6 );

Succeed.

SQL> alter table with_as_table_explain_t2 add constraint "PK_WITH_AS_TABLE_EXPLAIN_T2" primary key(category_org_id);

Succeed.

SQL> 
SQL> drop table if exists with_as_table_explain_t3;

Succeed.

SQL> create table with_as_table_explain_t3
  2 (
  3   org_user_id number not null,
  4   org_id number
  5 );

Succeed.

SQL> create index "WITH_AS_TABLE_EXPLAIN_T3_ORGID" on with_as_table_explain_t3(org_id);

Succeed.

SQL> alter table with_as_table_explain_t3 add constraint "PK_WITH_AS_TABLE_EXPLAIN_T3" primary key(org_user_id);

Succeed.

SQL> 
SQL> explain
  2 with table1 as(
  3   select org_id from with_as_table_explain_t1
  4   where org_year = '2020'
  5 ),
  6 table2 as(
  7   select
  8     decode((select count(*) from table1 where org_id=t1.org_id ),0,'N','Y') isWeightTeam
  9   from with_as_table_explain_t2 t2 
 10     left join with_as_table_explain_t1 t1 on t2.org_id=t1.org_id
 11     left join (select org_id from with_as_table_explain_t3) t3 on t3.org_id = t1.org_id
 12   where t1.delete_flag = 'N' and t2.category_id in (2801,2806)
 13 )
 14 select isWeightTeam from table2;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                           | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                                |      |      |       |        |
| 1   |   SUBSELECT                          |       | TABLE2                         |      |      |       |        |
| 2   |     HASH MATERIALIZE                 |       |                                |      |      |       |        |
| 3   |       SUBSELECT                      |       | TABLE1                         |      |      |       |        |
| 4   |         TABLE ACCESS FULL            | SYS   | WITH_AS_TABLE_EXPLAIN_T1       |      |      |       |        |
| 5   |     NESTED LOOPS OUTER               |       |                                |      |      |       |        |
| 6   |       NESTED LOOPS                   |       |                                |      |      |       |        |
| 7   |         TABLE ACCESS FULL            | SYS   | WITH_AS_TABLE_EXPLAIN_T2 T2    |      |      |       |        |
| 8   |         TABLE ACCESS BY INDEX ROWID  | SYS   | WITH_AS_TABLE_EXPLAIN_T1 T1    |      |      |       |        |
| 9   |           INDEX UNIQUE SCAN          | SYS   | PK_WITH_AS_TABLE_EXPLAIN_T1    |      |      |       |        |
| 10  |       SUBSELECT                      |       | T3                             |      |      |       |        |
| 11  |         TABLE ACCESS BY INDEX ONLY   | SYS   | WITH_AS_TABLE_EXPLAIN_T3       |      |      |       |        |
| 12  |           INDEX RANGE SCAN           | SYS   | WITH_AS_TABLE_EXPLAIN_T3_ORGID |      |      |       |        |
----------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - access: ORG_ID = T1.ORG_ID                               
   4 - filter: ORG_YEAR = '2020'                                
   7 - filter: T2.CATEGORY_ID IN(2801, 2806)                    
   8 - filter: T1.DELETE_FLAG = 'N'                             
   9 - access: T2.ORG_ID = T1.ORG_ID                            
   10 - filter: T3.ORG_ID = T1.ORG_ID                           
   12 - access: WITH_AS_TABLE_EXPLAIN_T3.ORG_ID = T1.ORG_ID     

26 rows fetched.

SQL> 
SQL> -- DTS202006080EUHXYP1300
SQL> explain
  2 with
  3     table1 as (select org_id from with_as_table_explain_t1 where delete_flag = 'Y'),
  4     table2 as (
  5         select /*+leading(t1) use_hash(t2,t1)*/
  6             t1.category_id,
  7             t1.org_id
  8         from 
  9             with_as_table_explain_t1 t1
 10             join table1 t2
 11             on t1.org_id = t2.org_id
 12     ),
 13     table3 as (
 14         select *
 15         from table2
 16         where 
 17             exists
 18             (
 19              SELECT 1
 20              FROM with_as_table_explain_t3 t3
 21              WHERE
 22                 table2.org_id = t3.org_id
 23             )
 24     ) 
 25 select /*+leading(t2) use_nl(t2, t3)*/
 26     t2.category_org_id,
 27     t2.org_id,
 28     (
 29      select 1 
 30      from table3
 31      where t2.category_id = table3.category_id
 32     ) col3
 33 from 
 34     with_as_table_explain_t2 t2
 35     left join with_as_table_explain_t3 t3
 36     on t2.org_id = t3.org_id;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
| Id  | Description                       | Owner | Name                           | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                  |       |                                |      |      |       |        |
| 1   |   SUBSELECT                       |       | TABLE3                         |      |      |       |        |
| 2   |     KERNEL FILTER                 |       |                                |      |      |       |        |
| 3   |       SUBSELECT                   |       | TABLE2                         |      |      |       |        |
| 4   |         HASH JOIN(L)              |       |                                |      |      |       |        |
| 5   |           TABLE ACCESS FULL       | SYS   | WITH_AS_TABLE_EXPLAIN_T1 T1    |      |      |       |        |
| 6   |           SUBSELECT               |       | TABLE1 T2                      |      |      |       |        |
| 7   |             TABLE ACCESS FULL     | SYS   | WITH_AS_TABLE_EXPLAIN_T1       |      |      |       |        |
| 8   |       TABLE ACCESS BY INDEX ONLY  | SYS   | WITH_AS_TABLE_EXPLAIN_T3 T3    |      |      |       |        |
| 9   |         INDEX RANGE SCAN          | SYS   | WITH_AS_TABLE_EXPLAIN_T3_ORGID |      |      |       |        |
| 10  |   NESTED LOOPS OUTER              |       |                                |      |      |       |        |
| 11  |     TABLE ACCESS FULL             | SYS   | WITH_AS_TABLE_EXPLAIN_T2 T2    |      |      |       |        |
| 12  |     TABLE ACCESS BY INDEX ONLY    | SYS   | WITH_AS_TABLE_EXPLAIN_T3 T3    |      |      |       |        |
| 13  |       INDEX RANGE SCAN            | SYS   | WITH_AS_TABLE_EXPLAIN_T3_ORGID |      |      |       |        |
-------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: TABLE3.CATEGORY_ID = T2.CATEGORY_ID              
   3 - filter: EXISTS(SELECT 1 FROM WITH_AS_TABLE_EXPLAIN_T3 T3)
   4 - access: T1.ORG_ID = T2.ORG_ID                            
   7 - filter: DELETE_FLAG = 'Y'                                
   9 - access: T3.ORG_ID = TABLE2.ORG_ID                        
   13 - access: T2.ORG_ID = T3.ORG_ID                           

26 rows fetched.

SQL> 
SQL> drop table with_as_table_explain_t1;

Succeed.

SQL> drop table with_as_table_explain_t2;

Succeed.

SQL> drop table with_as_table_explain_t3;

Succeed.

SQL> 
SQL> -- DTS20200710077WZAP0F00
SQL> drop table if exists explain_predicate_multiple_cols;

Succeed.

SQL> create table explain_predicate_multiple_cols
  2 (
  3     very_long_name_column_01 int,
  4     very_long_name_column_02 int,
  5     very_long_name_column_03 int,
  6     very_long_name_column_04 int,
  7     very_long_name_column_05 int,
  8     very_long_name_column_06 int,
  9     very_long_name_column_07 int,
 10     very_long_name_column_08 int,
 11     very_long_name_column_09 int,
 12     very_long_name_column_10 int,
 13     very_long_name_column_11 int,
 14     very_long_name_column_12 int,
 15     very_long_name_column_13 int,
 16     very_long_name_column_14 int,
 17     very_long_name_column_15 int,
 18     very_long_name_column_16 int,
 19     very_long_name_column_17 int,
 20     very_long_name_column_18 int,
 21     very_long_name_column_19 int,
 22     very_long_name_column_20 int,
 23     very_long_name_column_21 int,
 24     very_long_name_column_22 int,
 25     very_long_name_column_23 int,
 26     very_long_name_column_24 int,
 27     very_long_name_column_25 int,
 28     very_long_name_column_26 int,
 29     very_long_name_column_27 int,
 30     very_long_name_column_28 int,
 31     very_long_name_column_29 int,
 32     very_long_name_column_30 int,
 33     very_long_name_column_31 int,
 34     very_long_name_column_32 int,
 35     very_long_name_column_33 int,
 36     very_long_name_column_34 int,
 37     very_long_name_column_35 int,
 38     very_long_name_column_36 int,
 39     very_long_name_column_37 int,
 40     very_long_name_column_38 int,
 41     very_long_name_column_39 int,
 42     very_long_name_column_40 int,
 43     very_long_name_column_41 int,
 44     very_long_name_column_42 int,
 45     very_long_name_column_43 int,
 46     very_long_name_column_44 int,
 47     very_long_name_column_45 int,
 48     very_long_name_column_46 int,
 49     very_long_name_column_47 int,
 50     very_long_name_column_48 int,
 51     very_long_name_column_49 int,
 52     very_long_name_column_50 int
 53 );

Succeed.

SQL> 
SQL> explain select count(*) from explain_predicate_multiple_cols 
  2 where very_long_name_column_50 < 
  3 (select count(*) from explain_predicate_multiple_cols where very_long_name_column_49 < 40 and not exists 
  4   (select 1 from(
  5     (select distinct very_long_name_column_01, very_long_name_column_02, very_long_name_column_03, very_long_name_column_04, very_long_name_column_05,
  6                      very_long_name_column_06, very_long_name_column_07, very_long_name_column_08, very_long_name_column_09, very_long_name_column_10,
  7                      very_long_name_column_11, very_long_name_column_12, very_long_name_column_13, very_long_name_column_14, very_long_name_column_15,
  8                      very_long_name_column_16, very_long_name_column_17, very_long_name_column_18, very_long_name_column_19, very_long_name_column_20,
  9                      very_long_name_column_21, very_long_name_column_22, very_long_name_column_23, very_long_name_column_24, very_long_name_column_25,
 10                      very_long_name_column_26, very_long_name_column_27, very_long_name_column_28, very_long_name_column_29, very_long_name_column_30,
 11                      very_long_name_column_31, very_long_name_column_32, very_long_name_column_33, very_long_name_column_34, very_long_name_column_35,
 12                      very_long_name_column_36, very_long_name_column_37, very_long_name_column_38, very_long_name_column_39, very_long_name_column_40,
 13                      very_long_name_column_41, very_long_name_column_42, very_long_name_column_43, very_long_name_column_44, very_long_name_column_45 from explain_predicate_multiple_cols) union all
 14     (select distinct very_long_name_column_01, very_long_name_column_02, very_long_name_column_03, very_long_name_column_04, very_long_name_column_05,
 15                      very_long_name_column_06, very_long_name_column_07, very_long_name_column_08, very_long_name_column_09, very_long_name_column_10,
 16                      very_long_name_column_11, very_long_name_column_12, very_long_name_column_13, very_long_name_column_14, very_long_name_column_15,
 17                      very_long_name_column_16, very_long_name_column_17, very_long_name_column_18, very_long_name_column_19, very_long_name_column_20,
 18                      very_long_name_column_21, very_long_name_column_22, very_long_name_column_23, very_long_name_column_24, very_long_name_column_25,
 19                      very_long_name_column_26, very_long_name_column_27, very_long_name_column_28, very_long_name_column_29, very_long_name_column_30,
 20                      very_long_name_column_31, very_long_name_column_32, very_long_name_column_33, very_long_name_column_34, very_long_name_column_35,
 21                      very_long_name_column_36, very_long_name_column_37, very_long_name_column_38, very_long_name_column_39, very_long_name_column_40,
 22                      very_long_name_column_41, very_long_name_column_42, very_long_name_column_43, very_long_name_column_44, very_long_name_column_45 from explain_predicate_multiple_cols)
 23    )
 24   )
 25 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                            | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                                 |      |      |       |        |
| 1   |   AGGR                               |       |                                 |      |      |       |        |
| 2   |     KERNEL FILTER                    |       |                                 |      |      |       |        |
| 3   |       TABLE ACCESS FULL              | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS |      |      |       |        |
| 4   |       AGGR                           |       |                                 |      |      |       |        |
| 5   |         HASH JOIN ANTI(R)            |       |                                 |      |      |       |        |
| 6   |           TABLE ACCESS FULL          | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS |      |      |       |        |
| 7   |           SUBSELECT                  |       |                                 |      |      |       |        |
| 8   |             SUBSELECT                |       |                                 |      |      |       |        |
| 9   |               UNION ALL              |       |                                 |      |      |       |        |
| 10  |                 HASH DISTINCT        |       |                                 |      |      |       |        |
| 11  |                   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS |      |      |       |        |
| 12  |                 HASH DISTINCT        |       |                                 |      |      |       |        |
| 13  |                   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   3 - filter: VERY_LONG_NAME_COLUMN_50 < (SELECT COUNT(*) FROM EXPLAIN_PREDICATE_MULTIPLE_COLS INNER JOIN 
               (SELECT 1 FROM ((SELECT DISTINCT VERY_LONG_NAME_COLUMN_01, VERY_LONG_NAME_COLUMN_02, VERY_LONG_NAME_COLUMN_03, 
               VERY_LONG_NAME_COLUMN_04, VERY_LONG_NAME_COLUMN_05, VERY_LONG_NAME_COLUMN_06, VERY_LONG_NAME_COLUMN_07, 
               VERY_LONG_NAME_COLUMN_08, VERY_LONG_NAME_COLUMN_09, VERY_LONG_NAME_COLUMN_10, VERY_LONG_NAME_COLUMN_11, 
               VERY_LONG_NAME_COLUMN_12, VERY_LONG_NAME_COLUMN_13, VERY_LONG_NAME_COLUMN_14, VERY_LONG_NAME_COLUMN_15, 
               VERY_LONG_NAME_COLUMN_16, VERY_LONG_NAME_COLUMN_17, VERY_LONG_NAME_COLUMN_18, VERY_LONG_NAME_COLUMN_19, 
               VERY_LONG_NAME_COLUMN_20, VERY_LONG_NAME_COLUMN_21, VERY_LONG_NAME_COLUMN_22, VERY_LONG_NAME_COLUMN_23, 
               VERY_LONG_NAME_COLUMN_24, VERY_LONG_NAME_COLUMN_25, VERY_LONG_NAME_COLUMN_26, VERY_LONG_NAME_COLUMN_27, 
               VERY_LONG_NAME_COLUMN_28, VERY_LONG_NAME_COLUMN_29, VERY_LONG_NAME_COLUMN_30, VERY_LONG_NAME_COLUMN_31, 
               VERY_LONG_NAME_COLUMN_32, VERY_LONG_NAME_COLUMN_33, VERY_LONG_NAME_COLUMN_34, VERY_LONG_NAME_COLUMN_35, 
               VERY_LONG_NAME_COLUMN_36, VERY_LONG_NAME_COLUMN_37, VERY_LONG_NAME_COLUMN_38, VERY_LONG_NAME_COLUMN_39, 
               VERY_LONG_NAME_COLUMN_40, VERY_LONG_NAME_COLUMN_41, VERY_LONG_NAME_COLUMN_42, VERY_LONG_NAME_COLUMN_43, 
               VERY_LONG_NAME_COLUMN_44, VERY_LONG_NAME_COLUMN_45 FROM EXPLAIN_PREDICATE_MULTIPLE_COLS) UNION ALL 
               (SELECT DISTINCT VERY_LONG_NAME_COLUMN_01, VERY_LONG_NAME_COLUMN_02, VERY_LONG_NAME_COLUMN_03, 
               VERY_LONG_NAME_COLUMN_04, VERY_LONG_NAME_COLUMN_05, VERY_LONG_NAME_COLUMN_06, VERY_LONG_NAME_COLUMN_07, 
               VERY_LONG_NAME_COLUMN_08, VERY_LONG_NAME_COLUMN_09, VERY_LONG_NAME_COLUMN_10, VERY_LONG_NAME_COLUMN_11, 
               VERY_LONG_NAME_COLUMN_12, VERY_LONG_NAME_COLUMN_13, VERY_LONG_NAME_COLUMN_14, VERY_LONG_NAME_COLUMN_15, 
               VERY_LONG_NAME_COLUMN_16, VERY_LONG_NAME_COLUMN_17, VERY_LONG_NAME_COLUMN_18, VERY_LONG_NAME_COLUMN_19, 
               VERY_LONG_NAME_COLUMN_20, VERY_LONG_NAME_COLUMN_21, VERY_LONG_NAME_COLUMN_22, VERY_LONG_NAME_COLUMN_23, 
               VERY_LONG_NAME_COLUMN_24, VERY_LONG_NAME_COLUMN_25, VERY_LONG_NAME_COLUMN_26, VERY_LONG_NAME_COLUMN_27, 
               VERY_LONG_NAME_COLUMN_28, VERY_LONG_NAME_COLUMN_29, VERY_LONG_NAME_COLUMN_30, VERY_LONG_NAME_COLUMN_31, 
               VERY_LONG_NAME_COLUMN_32, VERY_LONG_NAME_COLUMN_33, VERY_LONG_NAME_COLUMN_34, VERY_LONG_NAME_COLUMN_35, 
               VERY_LONG_NAME_COLUMN_36, VERY_LONG_NAME_COLUMN_37, VERY_LONG_NAME_COLUMN_38, VERY_LONG_NAME_COLUMN_39, 
               VERY_LONG_NAME_COLUMN_40, VERY_LONG_NAME_COLUMN_41, VERY_LONG_NAME_COLUMN_42, VERY_LONG_NAME_COLUMN_43, 
               VERY_LONG_NAME_COLUMN_44, VERY_LONG_NAME_COLUMN_45 FROM EXPLAIN_PREDICATE_MULTIPLE_COLS))))
   5 - access: NA = NA                                          
   6 - filter: VERY_LONG_NAME_COLUMN_49 < 40                    

47 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_multiple_cols t1  
  2 where decode(very_long_name_column_01, 1, very_long_name_column_02, 2, very_long_name_column_03, 3, very_long_name_column_04, 4, 
  3              very_long_name_column_05, 5, very_long_name_column_06, 6, very_long_name_column_07, 7, very_long_name_column_08, 8,
  4              very_long_name_column_09, 9, very_long_name_column_10, 10, very_long_name_column_11, 11, very_long_name_column_12, 12,
  5              very_long_name_column_13, 13, very_long_name_column_14, 14, very_long_name_column_15, 15, very_long_name_column_16, 16,
  6              very_long_name_column_17, 17, very_long_name_column_18, 18, very_long_name_column_19, 19, very_long_name_column_20, 20,
  7              very_long_name_column_21, 21, very_long_name_column_22, 22, very_long_name_column_23, 23, very_long_name_column_24, 24, 
  8              very_long_name_column_25, 25, very_long_name_column_26, 26, very_long_name_column_27, 27, very_long_name_column_28, 28,
  9              very_long_name_column_29, 29, very_long_name_column_30, 30, very_long_name_column_31, 31, very_long_name_column_32, 32,
 10              very_long_name_column_33, 33, very_long_name_column_34, 34, very_long_name_column_35, 35, very_long_name_column_36, 36,
 11              very_long_name_column_37, 37, very_long_name_column_38, 38, very_long_name_column_39, 39, very_long_name_column_40, 40) is not null;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                               | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                                    |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T1 |      |      |       |        |
----------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: DECODE(VERY_LONG_NAME_COLUMN_01, 1, VERY_LONG_NAME_COLUMN_02, 2, VERY_LONG_NAME_COLUMN_03, 
               3, VERY_LONG_NAME_COLUMN_04, 4, VERY_LONG_NAME_COLUMN_05, 5, VERY_LONG_NAME_COLUMN_06, 6, 
               VERY_LONG_NAME_COLUMN_07, 7, VERY_LONG_NAME_COLUMN_08, 8, VERY_LONG_NAME_COLUMN_09, 9, VERY_LONG_NAME_COLUMN_10, 
               10, VERY_LONG_NAME_COLUMN_11, 11, VERY_LONG_NAME_COLUMN_12, 12, VERY_LONG_NAME_COLUMN_13, 
               13, VERY_LONG_NAME_COLUMN_14, 14, VERY_LONG_NAME_COLUMN_15, 15, VERY_LONG_NAME_COLUMN_16, 
               16, VERY_LONG_NAME_COLUMN_17, 17, VERY_LONG_NAME_COLUMN_18, 18, VERY_LONG_NAME_COLUMN_19, 
               19, VERY_LONG_NAME_COLUMN_20, 20, VERY_LONG_NAME_COLUMN_21, 21, VERY_LONG_NAME_COLUMN_22, 
               22, VERY_LONG_NAME_COLUMN_23, 23, VERY_LONG_NAME_COLUMN_24, 24, VERY_LONG_NAME_COLUMN_25, 
               25, VERY_LONG_NAME_COLUMN_26, 26, VERY_LONG_NAME_COLUMN_27, 27, VERY_LONG_NAME_COLUMN_28, 
               28, VERY_LONG_NAME_COLUMN_29, 29, VERY_LONG_NAME_COLUMN_30, 30, VERY_LONG_NAME_COLUMN_31, 
               31, VERY_LONG_NAME_COLUMN_32, 32, VERY_LONG_NAME_COLUMN_33, 33, VERY_LONG_NAME_COLUMN_34, 
               34, VERY_LONG_NAME_COLUMN_35, 35, VERY_LONG_NAME_COLUMN_36, 36, VERY_LONG_NAME_COLUMN_37, 
               37, VERY_LONG_NAME_COLUMN_38, 38, VERY_LONG_NAME_COLUMN_39, 39, VERY_LONG_NAME_COLUMN_40, 
               40) IS NOT NULL                                  

22 rows fetched.

SQL> 
SQL> explain plan for select * from explain_predicate_multiple_cols
  2 where very_long_name_column_01 + very_long_name_column_02 + very_long_name_column_03 + very_long_name_column_04 + very_long_name_column_05 + very_long_name_column_06 +
  3       very_long_name_column_07 + very_long_name_column_08 + very_long_name_column_09 + very_long_name_column_10 + very_long_name_column_11 + very_long_name_column_12 +
  4       very_long_name_column_13 + very_long_name_column_14 + very_long_name_column_15 + very_long_name_column_16 + very_long_name_column_17 + very_long_name_column_18 +
  5       very_long_name_column_19 + very_long_name_column_20 + very_long_name_column_21 + very_long_name_column_22 + very_long_name_column_23 + very_long_name_column_24 +
  6       very_long_name_column_25 + very_long_name_column_26 + very_long_name_column_27 + very_long_name_column_28 + very_long_name_column_29 + very_long_name_column_30 +
  7       very_long_name_column_31 + very_long_name_column_32 + very_long_name_column_33 + very_long_name_column_34 + very_long_name_column_35 + very_long_name_column_36 +
  8       very_long_name_column_37 + very_long_name_column_38 + very_long_name_column_39 + very_long_name_column_40 + very_long_name_column_41 + very_long_name_column_42 +
  9       very_long_name_column_43 + very_long_name_column_44 + very_long_name_column_45 + very_long_name_column_46 + very_long_name_column_47 + very_long_name_column_48;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
| Id  | Description          | Owner | Name                            | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT     |       |                                 |      |      |       |        |
| 1   |   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS |      |      |       |        |
-------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: FALSE != VERY_LONG_NAME_COLUMN_01 + VERY_LONG_NAME_COLUMN_02 + VERY_LONG_NAME_COLUMN_03 + 
               VERY_LONG_NAME_COLUMN_04 + VERY_LONG_NAME_COLUMN_05 + VERY_LONG_NAME_COLUMN_06 + VERY_LONG_NAME_COLUMN_07 + 
               VERY_LONG_NAME_COLUMN_08 + VERY_LONG_NAME_COLUMN_09 + VERY_LONG_NAME_COLUMN_10 + VERY_LONG_NAME_COLUMN_11 + 
               VERY_LONG_NAME_COLUMN_12 + VERY_LONG_NAME_COLUMN_13 + VERY_LONG_NAME_COLUMN_14 + VERY_LONG_NAME_COLUMN_15 + 
               VERY_LONG_NAME_COLUMN_16 + VERY_LONG_NAME_COLUMN_17 + VERY_LONG_NAME_COLUMN_18 + VERY_LONG_NAME_COLUMN_19 + 
               VERY_LONG_NAME_COLUMN_20 + VERY_LONG_NAME_COLUMN_21 + VERY_LONG_NAME_COLUMN_22 + VERY_LONG_NAME_COLUMN_23 + 
               VERY_LONG_NAME_COLUMN_24 + VERY_LONG_NAME_COLUMN_25 + VERY_LONG_NAME_COLUMN_26 + VERY_LONG_NAME_COLUMN_27 + 
               VERY_LONG_NAME_COLUMN_28 + VERY_LONG_NAME_COLUMN_29 + VERY_LONG_NAME_COLUMN_30 + VERY_LONG_NAME_COLUMN_31 + 
               VERY_LONG_NAME_COLUMN_32 + VERY_LONG_NAME_COLUMN_33 + VERY_LONG_NAME_COLUMN_34 + VERY_LONG_NAME_COLUMN_35 + 
               VERY_LONG_NAME_COLUMN_36 + VERY_LONG_NAME_COLUMN_37 + VERY_LONG_NAME_COLUMN_38 + VERY_LONG_NAME_COLUMN_39 + 
               VERY_LONG_NAME_COLUMN_40 + VERY_LONG_NAME_COLUMN_41 + VERY_LONG_NAME_COLUMN_42 + VERY_LONG_NAME_COLUMN_43 + 
               VERY_LONG_NAME_COLUMN_44 + VERY_LONG_NAME_COLUMN_45 + VERY_LONG_NAME_COLUMN_46 + VERY_LONG_NAME_COLUMN_47 + 
               VERY_LONG_NAME_COLUMN_48                         

21 rows fetched.

SQL>
SQL> explain select * from explain_predicate_multiple_cols t
  2 where exists(
  3             select very_long_name_column_01  from explain_predicate_multiple_cols
  4             GROUP BY
  5               very_long_name_column_01,
  6           CAST('43599 2:58:26' AS INTERVAL DAY TO SECOND),
  7           CAST('972356 11:5:7' AS INTERVAL DAY(7) TO SECOND),
  8           CAST('9197-10' AS INTERVAL YEAR(4) TO MONTH),
  9           CAST('691341 9:20:27' AS INTERVAL DAY(7) TO SECOND),
 10           CUBE(
 11             t.very_long_name_column_01,
 12             t.very_long_name_column_02,
 13             t.very_long_name_column_03) limit 1) ;

EXPLAIN PLAN OUTPUT
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
| Id  | Description                  | Owner | Name                              | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT             |       |                                   |      |      |       |        |
| 1   |   KERNEL FILTER              |       |                                   |      |      |       |        |
| 2   |     TABLE ACCESS FULL        | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T |      |      |       |        |
| 3   |     QUERY LIMIT              |       |                                   |      |      |       |        |
| 4   |       GENERATE CUBE          |       |                                   |      |      |       |        |
| 5   |         HASH GROUP BY        |       |                                   |      |      |       |        |
| 6   |           TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS   |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM EXPLAIN_PREDICATE_MULTIPLE_COLS GROUP BY GROUPING SETS((VERY_LONG_NAME_COLUMN_01,
               '+43599 02:58:26.000000','+972356 11:05:07.000000','+9197-10','+691341 09:20:27.000000',
               T.VERY_LONG_NAME_COLUMN_01,T.VERY_LONG_NAME_COLUMN_02,T.VERY_LONG_NAME_COLUMN_03), (VERY_LONG_NAME_COLUMN_01,
               '+43599 02:58:26.000000','+972356 11:05:07.000000','+9197-10','+691341 09:20:27.000000',
               T.VERY_LONG_NAME_COLUMN_01,T.VERY_LONG_NAME_COLUMN_02,DUMMY), (VERY_LONG_NAME_COLUMN_01,
               '+43599 02:58:26.000000','+972356 11:05:07.000000','+9197-10','+691341 09:20:27.000000',
               T.VERY_LONG_NAME_COLUMN_01,DUMMY,T.VERY_LONG_NAME_COLUMN_03), (VERY_LONG_NAME_COLUMN_01,
               '+43599 02:58:26.000000','+972356 11:05:07.000000','+9197-10','+691341 09:20:27.000000',
               DUMMY,T.VERY_LONG_NAME_COLUMN_02,T.VERY_LONG_NAME_COLUMN_03), (VERY_LONG_NAME_COLUMN_01,
               '+43599 02:58:26.000000','+972356 11:05:07.000000','+9197-10','+691341 09:20:27.000000',
               T.VERY_LONG_NAME_COLUMN_01,DUMMY,DUMMY), (VERY_LONG_NAME_COLUMN_01,'+43599 02:58:26.000000',
               '+972356 11:05:07.000000','+9197-10','+691341 09:20:27.000000',DUMMY,T.VERY_LONG_NAME_COLUMN_02,
               DUMMY), (VERY_LONG_NAME_COLUMN_01,'+43599 02:58:26.000000','+972356 11:05:07.000000','+9197-10',
               '+691341 09:20:27.000000',DUMMY,DUMMY,T.VERY_LONG_NAME_COLUMN_03), (VERY_LONG_NAME_COLUMN_01,
               '+43599 02:58:26.000000','+972356 11:05:07.000000','+9197-10','+691341 09:20:27.000000',
               DUMMY,DUMMY,DUMMY)) LIMIT 1)                     

29 rows fetched.

SQL>
SQL> explain select * from explain_predicate_multiple_cols t
  2 where exists(
  3             select very_long_name_column_01  from explain_predicate_multiple_cols
  4             order by
  5             t.very_long_name_column_01,
  6             '11111111111111111111111111111111111111111111111111111111111111111111111111',
  7             '222222222222222222222222222222222222222222222222222222222222222222222222222',
  8             '333333333333333333333333333333333333333333333333333333333333333333333333333',
  9             'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq',
 10             'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
 11             'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww',
 12             'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
 13             '11111111111111111111111111111111111111111111111111111111111111111111111111',
 14             '222222222222222222222222222222222222222222222222222222222222222222222222222',
 15             '333333333333333333333333333333333333333333333333333333333333333333333333333',
 16             'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq',
 17             'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
 18             'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww' limit 1) ;

EXPLAIN PLAN OUTPUT
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
| Id  | Description                      | Owner | Name                              | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                 |       |                                   |      |      |       |        |
| 1   |   KERNEL FILTER                  |       |                                   |      |      |       |        |
| 2   |     TABLE ACCESS FULL            | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T |      |      |       |        |
| 3   |     QUERY LIMIT                  |       |                                   |      |      |       |        |
| 4   |       QUERY SORT ORDER BY ROWNUM |       |                                   |      |      |       |        |
| 5   |         TABLE ACCESS FULL        | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS   |      |      |       |        |
---------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM EXPLAIN_PREDICATE_MULTIPLE_COLS ORDER BY T.VERY_LONG_NAME_COLUMN_01,
               '11111111111111111111111111111111111111111111111111111111111111111111111111','222222222222222222222222222222222222222222222222222222222222222222222222222',
               '333333333333333333333333333333333333333333333333333333333333333333333333333','qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq',
               'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa','wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww',
               'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx','11111111111111111111111111111111111111111111111111111111111111111111111111',
               '222222222222222222222222222222222222222222222222222222222222222222222222222','333333333333333333333333333333333333333333333333333333333333333333333333333',
               'qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq','aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
               'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww' LIMIT 1)

20 rows fetched.

SQL>
SQL> explain select * from explain_predicate_multiple_cols t
  2 where exists(
  3             select *  from (select t1.very_long_name_column_01, t2.very_long_name_column_02
  4             from explain_predicate_multiple_cols t1
  5             left join explain_predicate_multiple_cols t2 on t1.very_long_name_column_04 = t2.very_long_name_column_04
  6             inner join explain_predicate_multiple_cols t3 on t3.very_long_name_column_04 = t2.very_long_name_column_04
  7             left join explain_predicate_multiple_cols t4 on t3.very_long_name_column_04 = t4.very_long_name_column_01
  8             left join explain_predicate_multiple_cols t5 on t5.very_long_name_column_02 = t4.very_long_name_column_03
  9             left join explain_predicate_multiple_cols t6 on t6.very_long_name_column_04 = t3.very_long_name_column_01
 10             full join explain_predicate_multiple_cols t7 on t6.very_long_name_column_04 = t7.very_long_name_column_05
 11             right join explain_predicate_multiple_cols t8 on t8.very_long_name_column_07 = t8.very_long_name_column_01
 12             left join explain_predicate_multiple_cols t9 on t9.very_long_name_column_04 = t4.very_long_name_column_01
 13             left join explain_predicate_multiple_cols t10 on t10.very_long_name_column_02 = t4.very_long_name_column_03
 14             left join explain_predicate_multiple_cols t11 on t11.very_long_name_column_04 = t3.very_long_name_column_01
 15             full join explain_predicate_multiple_cols t12 on t12.very_long_name_column_04 = t7.very_long_name_column_05
 16             right join explain_predicate_multiple_cols t13 on t13.very_long_name_column_07 = t8.very_long_name_column_01
 17             )order by t.very_long_name_column_01 limit 1) ;

EXPLAIN PLAN OUTPUT
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
| Id  | Description                                          | Owner | Name                                | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                                     |       |                                     |      |      |       |        |
| 1   |   KERNEL FILTER                                      |       |                                     |      |      |       |        |
| 2   |     TABLE ACCESS FULL                                | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T   |      |      |       |        |
| 3   |     QUERY LIMIT                                      |       |                                     |      |      |       |        |
| 4   |       QUERY SORT ORDER BY ROWNUM                     |       |                                     |      |      |       |        |
| 5   |         SUBSELECT                                    |       |                                     |      |      |       |        |
| 6   |           NESTED LOOPS OUTER                         |       |                                     |      |      |       |        |
| 7   |             TABLE ACCESS FULL                        | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T13 |      |      |       |        |
| 8   |             NESTED LOOPS FULL                        |       |                                     |      |      |       |        |
| 9   |               NESTED LOOPS OUTER                     |       |                                     |      |      |       |        |
| 10  |                 NESTED LOOPS OUTER                   |       |                                     |      |      |       |        |
| 11  |                   NESTED LOOPS OUTER                 |       |                                     |      |      |       |        |
| 12  |                     NESTED LOOPS OUTER               |       |                                     |      |      |       |        |
| 13  |                       TABLE ACCESS FULL              | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T8  |      |      |       |        |
| 14  |                       NESTED LOOPS FULL              |       |                                     |      |      |       |        |
| 15  |                         NESTED LOOPS OUTER           |       |                                     |      |      |       |        |
| 16  |                           NESTED LOOPS OUTER         |       |                                     |      |      |       |        |
| 17  |                             NESTED LOOPS OUTER       |       |                                     |      |      |       |        |
| 18  |                               NESTED LOOPS           |       |                                     |      |      |       |        |
| 19  |                                 NESTED LOOPS         |       |                                     |      |      |       |        |
| 20  |                                   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T1  |      |      |       |        |
| 21  |                                   TABLE ACCESS FULL  | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T2  |      |      |       |        |
| 22  |                                 TABLE ACCESS FULL    | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T3  |      |      |       |        |
| 23  |                               TABLE ACCESS FULL      | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T4  |      |      |       |        |
| 24  |                             TABLE ACCESS FULL        | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T5  |      |      |       |        |
| 25  |                           TABLE ACCESS FULL          | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T6  |      |      |       |        |
| 26  |                         TABLE ACCESS FULL            | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T7  |      |      |       |        |
| 27  |                     TABLE ACCESS FULL                | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T9  |      |      |       |        |
| 28  |                   TABLE ACCESS FULL                  | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T10 |      |      |       |        |
| 29  |                 TABLE ACCESS FULL                    | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T11 |      |      |       |        |
| 30  |               TABLE ACCESS FULL                      | SYS   | EXPLAIN_PREDICATE_MULTIPLE_COLS T12 |      |      |       |        |
-------------------------------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM (SELECT VERY_LONG_NAME_COLUMN_01, VERY_LONG_NAME_COLUMN_02 FROM EXPLAIN_PREDICATE_MULTIPLE_COLS T13 LEFT JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T8 LEFT JOIN EXPLAIN_PREDICATE_MULTIPLE_COLS T1 INNER JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T2 INNER JOIN EXPLAIN_PREDICATE_MULTIPLE_COLS T3 LEFT JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T4 ON T3.VERY_LONG_NAME_COLUMN_04 = T4.VERY_LONG_NAME_COLUMN_01 LEFT JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T5 ON T5.VERY_LONG_NAME_COLUMN_02 = T4.VERY_LONG_NAME_COLUMN_03 LEFT JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T6 ON T6.VERY_LONG_NAME_COLUMN_04 = T3.VERY_LONG_NAME_COLUMN_01 FULL JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T7 ON T6.VERY_LONG_NAME_COLUMN_04 = T7.VERY_LONG_NAME_COLUMN_05 LEFT JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T9 ON T9.VERY_LONG_NAME_COLUMN_04 = T4.VERY_LONG_NAME_COLUMN_01 LEFT JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T10 ON T10.VERY_LONG_NAME_COLUMN_02 = T4.VERY_LONG_NAME_COLUMN_03 LEFT JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T11 ON T11.VERY_LONG_NAME_COLUMN_04 = T3.VERY_LONG_NAME_COLUMN_01 FULL JOIN 
               EXPLAIN_PREDICATE_MULTIPLE_COLS T12 ON T12.VERY_LONG_NAME_COLUMN_04 = T7.VERY_LONG_NAME_COLUMN_05) ORDER BY 
               T.VERY_LONG_NAME_COLUMN_01 LIMIT 1)              
   6 - access: T13.VERY_LONG_NAME_COLUMN_07 = T8.VERY_LONG_NAME_COLUMN_01
   12 - access: T8.VERY_LONG_NAME_COLUMN_07 = T8.VERY_LONG_NAME_COLUMN_01
   21 - filter: T1.VERY_LONG_NAME_COLUMN_04 = T2.VERY_LONG_NAME_COLUMN_04
   22 - filter: T3.VERY_LONG_NAME_COLUMN_04 = T2.VERY_LONG_NAME_COLUMN_04 AND T1.VERY_LONG_NAME_COLUMN_04 = T2.VERY_LONG_NAME_COLUMN_04
   23 - filter: T3.VERY_LONG_NAME_COLUMN_04 = T4.VERY_LONG_NAME_COLUMN_01
   24 - filter: T5.VERY_LONG_NAME_COLUMN_02 = T4.VERY_LONG_NAME_COLUMN_03
   25 - filter: T6.VERY_LONG_NAME_COLUMN_04 = T3.VERY_LONG_NAME_COLUMN_01
   26 - filter: T6.VERY_LONG_NAME_COLUMN_04 = T7.VERY_LONG_NAME_COLUMN_05
   27 - filter: T9.VERY_LONG_NAME_COLUMN_04 = T4.VERY_LONG_NAME_COLUMN_01
   28 - filter: T10.VERY_LONG_NAME_COLUMN_02 = T4.VERY_LONG_NAME_COLUMN_03
   29 - filter: T11.VERY_LONG_NAME_COLUMN_04 = T3.VERY_LONG_NAME_COLUMN_01
   30 - filter: T12.VERY_LONG_NAME_COLUMN_04 = T7.VERY_LONG_NAME_COLUMN_05

61 rows fetched.

SQL> drop table explain_predicate_multiple_cols;

Succeed.

SQL> 
SQL> -- DTS202009030F6CK0P0K00
SQL> explain plan for
  2 SELECT GROUP_ID FROM SYS.GSYS_PENDING_DIST_TRANS as ref_1 WHERE ref_1.NEED_CLEAN IS NOT NULL;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
| Id  | Description            | Owner | Name                          | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT       |       |                               |      |      |       |        |
| 1   |   VIEW                 | SYS   | GSYS_PENDING_DIST_TRANS REF_1 |      |      |       |        |
| 2   |     TABLE ACCESS FULL  | SYS   |                               |      |      |       |        |
-------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: NEED_CLEAN IS NOT NULL                           

10 rows fetched.

SQL> 
SQL> explain SELECT 
  2     CASE WHEN EXISTS (
  3          SELECT
  4 			ref_0.DIST_INFO AS C0
  5 		 FROM(
  6 		    SELECT
  7 	           ref_6.GROUP_ID AS C0
  8 			FROM
  9 	           SYS.GSYS_PENDING_DIST_TRANS AS ref_6 
 10 	        WHERE (ref_0.DIST_INFO IS NOT NULL)  ) AS subq_2)
 11 	THEN 1 ELSE null END AS C1,
 12 	MIN(null) over () AS C2 
 13 FROM  SYS.MY_TAB_DISTRIBUTE AS ref_0;
EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
| Id  | Description                            | Owner | Name                          | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                       |       |                               |      |      |       |        |
| 1   |   VIEW                                 | SYS   | GSYS_PENDING_DIST_TRANS REF_6 |      |      |       |        |
| 2   |     TABLE ACCESS FULL                  | SYS   |                               |      |      |       |        |
| 3   |   WINDOW SORT                          |       |                               |      |      |       |        |
| 4   |     VIEW                               | SYS   | MY_TAB_DISTRIBUTE REF_0       |      |      |       |        |
| 5   |       NESTED LOOPS                     |       |                               |      |      |       |        |
| 6   |         NESTED LOOPS                   |       |                               |      |      |       |        |
| 7   |           TABLE ACCESS FULL            | SYS   | DV_ME U                       |      |      |       |        |
| 8   |           TABLE ACCESS BY INDEX ROWID  | SYS   | SYS_TABLES T                  |      |      |       |        |
| 9   |             INDEX RANGE SCAN           | SYS   | IX_TABLE$001                  |      |      |       |        |
| 10  |         TABLE ACCESS BY INDEX ONLY     | SYS   | SYS_DISTRIBUTE_STRATEGIES S   |      |      |       |        |
| 11  |           INDEX UNIQUE SCAN            | SYS   | IX_DISTRIBUTE_STRATEGY$001    |      |      |       |        |
-----------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   1 - filter: REF_0.GET_DISTRIBUTE_STR(S.USER#, S.TABLE#) IS NOT NULL
   8 - filter: T.RECYCLED = 0                                   
   9 - access: T.USER# = U.USER_ID                              
   10 - filter: S.USER# = U.USER_ID                             
   11 - access: T.ID = S.TABLE# AND T.USER# = S.USER#           

23 rows fetched.

SQL> 
SQL> -- DTS202011270GOUF5P1300
SQL> -- deparse pivot/unpivot table
SQL> drop table if exists deparse_pivot_t1;

Succeed.

SQL> drop table if exists deparse_pivot_t2;

Succeed.

SQL> drop table if exists deparse_pivot_t3;

Succeed.

SQL> drop table if exists deparse_pivot_t4;

Succeed.

SQL> create table deparse_pivot_t1(id number(8), c_int number(10), c_num number(10));

Succeed.

SQL> create table deparse_pivot_t2(id number(8), c_int number(10), c_num number(10));

Succeed.

SQL> create table deparse_pivot_t3 (empno int, ename varchar(20), job varchar(20), mgr int, sal int, deptno int);

Succeed.

SQL> create table deparse_pivot_t4 (f1 int, f2 varchar(20), f3 int, f4 int);

Succeed.

SQL> 
SQL> -- pivot
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1
  4 where c_int = all(
  5     select c_int
  6     from deparse_pivot_t2 pivot(
  7     MIN(c_int) as aggr_0
  8     for (id) in ((0) as pexpr_0, (1) as pexpr_1)) ref_1
  9 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description                | Owner | Name             | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT           |       |                  |      |      |       |        |
| 1   |   KERNEL FILTER            |       |                  |      |      |       |        |
| 2   |     TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T1 |      |      |       |        |
| 3   |     SUBSELECT              |       | REF_1            |      |      |       |        |
| 4   |       HASH GROUP PIVOT     |       |                  |      |      |       |        |
| 5   |         TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT C_INT FROM DEPARSE_PIVOT_T2 PIVOT(MIN(C_INT) FOR (ID) IN((0),(1))) REF_1))

13 rows fetched.

SQL> 
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1
  4 where c_int = all(
  5     select c_int
  6     from deparse_pivot_t2 pivot(
  7     min(c_num) as aggr_0
  8     for (id) in ((0) as pexpr_0, (1) as pexpr_1)) ref_1
  9     where ref_1.pexpr_0_aggr_0 > ref_1.pexpr_1_aggr_0
 10 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description                | Owner | Name             | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT           |       |                  |      |      |       |        |
| 1   |   KERNEL FILTER            |       |                  |      |      |       |        |
| 2   |     TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T1 |      |      |       |        |
| 3   |     SUBSELECT              |       | REF_1            |      |      |       |        |
| 4   |       HASH GROUP PIVOT     |       |                  |      |      |       |        |
| 5   |         TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT C_INT FROM DEPARSE_PIVOT_T2 PIVOT(MIN(C_NUM) FOR (ID) IN((0),(1))) REF_1 WHERE REF_1.PEXPR_0_AGGR_0 > REF_1.PEXPR_1_AGGR_0))
   3 - filter: REF_1.PEXPR_0_AGGR_0 > REF_1.PEXPR_1_AGGR_0      

14 rows fetched.

SQL> 
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1
  4 where c_int = all(
  5     select c_int
  6     from deparse_pivot_t2 pivot(
  7     min(c_num) as aggr_0
  8     for (id) in ((0) as pexpr_0, (1) as pexpr_1)) ref_1
  9     left join
 10     deparse_pivot_t4 ref_2
 11     on ref_1.pexpr_1_aggr_0 > ref_2.f1
 12 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------
| Id  | Description                  | Owner | Name                   | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT             |       |                        |      |      |       |        |
| 1   |   KERNEL FILTER              |       |                        |      |      |       |        |
| 2   |     TABLE ACCESS FULL        | SYS   | DEPARSE_PIVOT_T1       |      |      |       |        |
| 3   |     NESTED LOOPS OUTER       |       |                        |      |      |       |        |
| 4   |       SUBSELECT              |       | REF_1                  |      |      |       |        |
| 5   |         HASH GROUP PIVOT     |       |                        |      |      |       |        |
| 6   |           TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2       |      |      |       |        |
| 7   |       TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T4 REF_2 |      |      |       |        |
------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT C_INT FROM DEPARSE_PIVOT_T2 PIVOT(MIN(C_NUM) FOR (ID) IN((0),(1))) REF_1 LEFT JOIN 
               DEPARSE_PIVOT_T4 REF_2 ON REF_1.PEXPR_1_AGGR_0 > REF_2.F1))
   7 - filter: REF_1.PEXPR_1_AGGR_0 > REF_2.F1                  

17 rows fetched.

SQL> 
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1
  4 where c_int = all(
  5     select c_int
  6     from deparse_pivot_t2 pivot(
  7     MIN(c_int) as aggr_0,
  8     MAX(c_num),
  9     AVG(c_num) as aggr_1
 10     for (id, id, id) in ((0, 0, 0) as pexpr_0, (1, 1, 1), (2, 2, 2) as pexpr_1)) ref_1
 11 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description                | Owner | Name             | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT           |       |                  |      |      |       |        |
| 1   |   KERNEL FILTER            |       |                  |      |      |       |        |
| 2   |     TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T1 |      |      |       |        |
| 3   |     SUBSELECT              |       | REF_1            |      |      |       |        |
| 4   |       HASH GROUP PIVOT     |       |                  |      |      |       |        |
| 5   |         TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT C_INT FROM DEPARSE_PIVOT_T2 PIVOT(MIN(C_INT),MAX(C_NUM),AVG(C_NUM) FOR (
               ID,ID,ID) IN((0,0,0),(1,1,1),(2,2,2))) REF_1))   

14 rows fetched.

SQL> 
SQL> -- unpivot
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1
  4 where c_int = all(
  5     select c_int
  6     from deparse_pivot_t2 unpivot(
  7     c1 for c2 in (c_int,c_num)) ref_1
  8 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description                | Owner | Name             | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT           |       |                  |      |      |       |        |
| 1   |   KERNEL FILTER            |       |                  |      |      |       |        |
| 2   |     TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T1 |      |      |       |        |
| 3   |     SUBSELECT              |       | REF_1            |      |      |       |        |
| 4   |       UNPIVOT              |       |                  |      |      |       |        |
| 5   |         TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT C_INT FROM DEPARSE_PIVOT_T2 UNPIVOT EXCLUDE NULLS((C1) FOR (C2) IN((C_INT),
               (C_NUM))) REF_1))                                

14 rows fetched.

SQL> 
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1
  4 where c_int = all(
  5     select id
  6     from deparse_pivot_t2 unpivot include nulls(
  7     (c1,c2) for (c3,c4) in ((c_int,c_num), (c_num, c_int))) ref_1
  8 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------
| Id  | Description                | Owner | Name             | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT           |       |                  |      |      |       |        |
| 1   |   KERNEL FILTER            |       |                  |      |      |       |        |
| 2   |     TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T1 |      |      |       |        |
| 3   |     SUBSELECT              |       | REF_1            |      |      |       |        |
| 4   |       UNPIVOT              |       |                  |      |      |       |        |
| 5   |         TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2 |      |      |       |        |
----------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT ID FROM DEPARSE_PIVOT_T2 UNPIVOT INCLUDE NULLS((C1,C2) FOR (C3,C4) IN(
               (C_INT,C_NUM),(C_NUM,C_INT))) REF_1))            

14 rows fetched.

SQL> 
SQL> -- pivot join
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1 t1
  4 where c_int = all(
  5     select mgr 
  6     from 
  7         deparse_pivot_t3 pivot(max(sal) for deptno in (10,20)) t1 join 
  8         deparse_pivot_t2 pivot(count(*) for id in (1,2,3)) t2 
  9         on t1.mgr != t2.c_int pivot (max(empno) for job in('CLERK','ANALYST')) where mgr < 10 order by mgr
 10 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
| Id  | Description                        | Owner | Name                | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                   |       |                     |      |      |       |        |
| 1   |   KERNEL FILTER                    |       |                     |      |      |       |        |
| 2   |     TABLE ACCESS FULL              | SYS   | DEPARSE_PIVOT_T1 T1 |      |      |       |        |
| 3   |     QUERY SORT ORDER BY            |       |                     |      |      |       |        |
| 4   |       SUBSELECT                    |       |                     |      |      |       |        |
| 5   |         HASH GROUP PIVOT           |       |                     |      |      |       |        |
| 6   |           NESTED LOOPS             |       |                     |      |      |       |        |
| 7   |             SUBSELECT              |       | T1                  |      |      |       |        |
| 8   |               HASH GROUP PIVOT     |       |                     |      |      |       |        |
| 9   |                 TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T3    |      |      |       |        |
| 10  |             SUBSELECT              |       | T2                  |      |      |       |        |
| 11  |               HASH GROUP PIVOT     |       |                     |      |      |       |        |
| 12  |                 TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2    |      |      |       |        |
---------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT MGR FROM DEPARSE_PIVOT_T3 PIVOT(MAX(SAL) FOR (DEPTNO) IN((10),(20))) T1 INNER JOIN 
               DEPARSE_PIVOT_T2 PIVOT(COUNT(*) FOR (ID) IN((1),(2),(3))) T2 PIVOT(MAX(EMPNO) FOR (JOB) IN(
               ('CLERK'),('ANALYST'))) WHERE MGR < 10 ORDER BY MGR))
   4 - filter: MGR < 10                                         
   10 - filter: T1.MGR != T2.C_INT                              

24 rows fetched.

SQL> 
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1 t1
  4 where c_int = all(
  5     select mgr 
  6     from 
  7         deparse_pivot_t3 pivot(max(sal) for deptno in (10,20)) t1 left join 
  8         deparse_pivot_t2 pivot(count(*) for id in (1,2,3)) t2 
  9         on t1.mgr != t2.c_int pivot (max(empno) for job in('CLERK','ANALYST')) where mgr < 10 order by mgr
 10 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
| Id  | Description                        | Owner | Name                | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                   |       |                     |      |      |       |        |
| 1   |   KERNEL FILTER                    |       |                     |      |      |       |        |
| 2   |     TABLE ACCESS FULL              | SYS   | DEPARSE_PIVOT_T1 T1 |      |      |       |        |
| 3   |     QUERY SORT ORDER BY            |       |                     |      |      |       |        |
| 4   |       SUBSELECT                    |       |                     |      |      |       |        |
| 5   |         HASH GROUP PIVOT           |       |                     |      |      |       |        |
| 6   |           NESTED LOOPS OUTER       |       |                     |      |      |       |        |
| 7   |             SUBSELECT              |       | T1                  |      |      |       |        |
| 8   |               HASH GROUP PIVOT     |       |                     |      |      |       |        |
| 9   |                 TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T3    |      |      |       |        |
| 10  |             SUBSELECT              |       | T2                  |      |      |       |        |
| 11  |               HASH GROUP PIVOT     |       |                     |      |      |       |        |
| 12  |                 TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2    |      |      |       |        |
---------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT MGR FROM DEPARSE_PIVOT_T3 PIVOT(MAX(SAL) FOR (DEPTNO) IN((10),(20))) T1 LEFT JOIN 
               DEPARSE_PIVOT_T2 PIVOT(COUNT(*) FOR (ID) IN((1),(2),(3))) T2 ON T1.MGR != T2.C_INT PIVOT(
               MAX(EMPNO) FOR (JOB) IN(('CLERK'),('ANALYST'))) WHERE MGR < 10 ORDER BY MGR))
   4 - filter: MGR < 10                                         
   10 - filter: T1.MGR != T2.C_INT                              

24 rows fetched.

SQL> 
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1 t1
  4 where c_int = all(
  5     select mgr 
  6     from 
  7         deparse_pivot_t3 pivot(max(sal) for deptno in (10,20)) t1 left join 
  8         deparse_pivot_t2 pivot(count(*) for id in (1,2,3)) t2 
  9         on t1.mgr != t2.c_int inner join 
 10         deparse_pivot_t4 pivot(count(*) for f2 in ('TEST1','TEST2')) t3
 11         on t1.mgr != t3.f3
 12         pivot (max(empno) for job in('CLERK','ANALYST')) where mgr < 10 order by mgr
 13 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
| Id  | Description                          | Owner | Name                | Rows | Cost | Bytes | Remark |
-----------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                     |       |                     |      |      |       |        |
| 1   |   KERNEL FILTER                      |       |                     |      |      |       |        |
| 2   |     TABLE ACCESS FULL                | SYS   | DEPARSE_PIVOT_T1 T1 |      |      |       |        |
| 3   |     QUERY SORT ORDER BY              |       |                     |      |      |       |        |
| 4   |       SUBSELECT                      |       |                     |      |      |       |        |
| 5   |         HASH GROUP PIVOT             |       |                     |      |      |       |        |
| 6   |           NESTED LOOPS               |       |                     |      |      |       |        |
| 7   |             SUBSELECT                |       | T3                  |      |      |       |        |
| 8   |               HASH GROUP PIVOT       |       |                     |      |      |       |        |
| 9   |                 TABLE ACCESS FULL    | SYS   | DEPARSE_PIVOT_T4    |      |      |       |        |
| 10  |             NESTED LOOPS OUTER       |       |                     |      |      |       |        |
| 11  |               SUBSELECT              |       | T1                  |      |      |       |        |
| 12  |                 HASH GROUP PIVOT     |       |                     |      |      |       |        |
| 13  |                   TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T3    |      |      |       |        |
| 14  |               SUBSELECT              |       | T2                  |      |      |       |        |
| 15  |                 HASH GROUP PIVOT     |       |                     |      |      |       |        |
| 16  |                   TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2    |      |      |       |        |
-----------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT MGR FROM DEPARSE_PIVOT_T4 PIVOT(COUNT(*) FOR (F2) IN(('TEST1'),('TEST2'))) T3 INNER JOIN 
               DEPARSE_PIVOT_T3 PIVOT(MAX(SAL) FOR (DEPTNO) IN((10),(20))) T1 LEFT JOIN DEPARSE_PIVOT_T2 PIVOT(
               COUNT(*) FOR (ID) IN((1),(2),(3))) T2 ON T1.MGR != T2.C_INT PIVOT(MAX(EMPNO) FOR (JOB) IN(
               ('CLERK'),('ANALYST'))) WHERE MGR < 10 ORDER BY MGR))
   4 - filter: MGR < 10                                         
   6 - access: T1.MGR != T3.F3                                  
   14 - filter: T1.MGR != T2.C_INT                              

30 rows fetched.

SQL> 
SQL> -- unpivot join
SQL> explain plan for
  2 select id
  3 from deparse_pivot_t1 t1
  4 where c_int = all(
  5     select mgr 
  6     from 
  7         deparse_pivot_t3 pivot(max(sal) for deptno in (10,20)) t1 join 
  8         deparse_pivot_t2 pivot(count(*) for id in (1,2,3)) t2 
  9         on t1.mgr != t2.c_int unpivot exclude nulls(aaa for bbb in(ename,job)) where mgr < 10 order by mgr
 10 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
| Id  | Description                        | Owner | Name                | Rows | Cost | Bytes | Remark |
---------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT                   |       |                     |      |      |       |        |
| 1   |   KERNEL FILTER                    |       |                     |      |      |       |        |
| 2   |     TABLE ACCESS FULL              | SYS   | DEPARSE_PIVOT_T1 T1 |      |      |       |        |
| 3   |     QUERY SORT ORDER BY            |       |                     |      |      |       |        |
| 4   |       SUBSELECT                    |       |                     |      |      |       |        |
| 5   |         UNPIVOT                    |       |                     |      |      |       |        |
| 6   |           NESTED LOOPS             |       |                     |      |      |       |        |
| 7   |             SUBSELECT              |       | T1                  |      |      |       |        |
| 8   |               HASH GROUP PIVOT     |       |                     |      |      |       |        |
| 9   |                 TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T3    |      |      |       |        |
| 10  |             SUBSELECT              |       | T2                  |      |      |       |        |
| 11  |               HASH GROUP PIVOT     |       |                     |      |      |       |        |
| 12  |                 TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2    |      |      |       |        |
---------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: C_INT = ALL((SELECT MGR FROM DEPARSE_PIVOT_T3 PIVOT(MAX(SAL) FOR (DEPTNO) IN((10),(20))) T1 INNER JOIN 
               DEPARSE_PIVOT_T2 PIVOT(COUNT(*) FOR (ID) IN((1),(2),(3))) T2 UNPIVOT EXCLUDE NULLS((AAA) FOR (BBB) IN(
               (ENAME),(JOB))) WHERE MGR < 10 ORDER BY MGR))    
   4 - filter: MGR < 10                                         
   10 - filter: T1.MGR != T2.C_INT                              

24 rows fetched.

SQL> 
SQL> -- forbidden transform <>any to exists when there is a pivot/unpivot
SQL> explain
  2 select ref_0.id as c0
  3 from deparse_pivot_t1 as ref_0
  4 where exists (
  5     select ref_0.id as c4
  6     from
  7       deparse_pivot_t2 pivot(
  8         max(case when ref_0.c_int != some(select null as c1 from deparse_pivot_t3 as ref_2) then ref_0.c_num else ref_0.c_num end) as aggr_2
  9         for (id, c_int) in ((4, 6) as pexpr_0)) as ref_3
 10 );

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------------
| Id  | Description                | Owner | Name                   | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT           |       |                        |      |      |       |        |
| 1   |   KERNEL FILTER            |       |                        |      |      |       |        |
| 2   |     TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T1 REF_0 |      |      |       |        |
| 3   |     SUBSELECT              |       | REF_3                  |      |      |       |        |
| 4   |       HASH GROUP PIVOT     |       |                        |      |      |       |        |
| 5   |         TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T2       |      |      |       |        |
----------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM DEPARSE_PIVOT_T2 PIVOT(MAX(CASE  WHEN REF_0.C_INT != ANY((SELECT NULL AS C1 FROM 
               DEPARSE_PIVOT_T3 REF_2)) THEN REF_0.C_NUM ELSE REF_0.C_NUM END) FOR (ID,C_INT) IN((4,6))) REF_3)

14 rows fetched.

SQL> 
SQL> -- forbidden predicate push down when there is a pivot/unpivot
SQL> explain 
  2 select   
  3     ref_0.id as c0,   
  4     case when  
  5         ref_0.id  <> any(
  6         select null as c1 
  7         from (deparse_pivot_t1 ref_1) cross join 
  8              (deparse_pivot_t3 unpivot include nulls (
  9                 (newcol_0, newcol_1, newcol_2) 
 10                 for (forcol_0, forcol_1) 
 11                 in ((mgr, ename, job) as ('unpivot_value_0', 'unpivot_value_1'))) as ref_2)
 12         where ref_1.id between ref_2.empno and ref_0.id 
 13         limit 84 offset 2)    
 14     then ref_0.c_int 
 15     else ref_0.c_int 
 16     end as c1,   
 17     min(cast('147722 6:36:19' as interval day to second(6))) over (partition by ref_0.id order by ref_0.id desc) as c2
 18 from deparse_pivot_t2 as ref_0 
 19 group by ref_0.c_int, ref_0.id;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
------------------------------------------------------------------------------------------------------
| Id  | Description                  | Owner | Name                   | Rows | Cost | Bytes | Remark |
------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT             |       |                        |      |      |       |        |
| 1   |   QUERY LIMIT                |       |                        |      |      |       |        |
| 2   |     NESTED LOOPS             |       |                        |      |      |       |        |
| 3   |       SUBSELECT              |       | REF_2                  |      |      |       |        |
| 4   |         UNPIVOT              |       |                        |      |      |       |        |
| 5   |           TABLE ACCESS FULL  | SYS   | DEPARSE_PIVOT_T3       |      |      |       |        |
| 6   |       TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T1 REF_1 |      |      |       |        |
| 7   |   WINDOW SORT                |       |                        |      |      |       |        |
| 8   |     HASH GROUP BY            |       |                        |      |      |       |        |
| 9   |       TABLE ACCESS FULL      | SYS   | DEPARSE_PIVOT_T2 REF_0 |      |      |       |        |
------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   6 - filter: REF_1.ID BETWEEN REF_2.EMPNO AND REF_0.ID        

17 rows fetched.

SQL> 
SQL> drop table deparse_pivot_t1;

Succeed.

SQL> drop table deparse_pivot_t2;

Succeed.

SQL> drop table deparse_pivot_t3;

Succeed.

SQL> drop table deparse_pivot_t4;

Succeed.

SQL> --DTS202102070JWXR4P1D00
SQL> --origen_ref needs to be cloned while predicate push down and pull up
SQL> DROP TABLE IF EXISTS "T_BPM_HIST_EVENT_PRIM_DATA";

Succeed.

SQL> CREATE TABLE "T_BPM_HIST_EVENT_PRIM_DATA"
  2 (
  3   "DATASETID" VARCHAR(100 BYTE),
  4   "NAME" VARCHAR(256 BYTE),
  5   "VALUE" VARCHAR(2000 BYTE),
  6   "EICREATETIME" DATE,
  7   "DATATYPE" VARCHAR(256 BYTE),
  8   "L2_PARTITION_KEY" VARCHAR(100 BYTE),
  9   "TENANT_ID" NUMBER(20) NOT NULL
 10 );

Succeed.

SQL> explain 
  2 SELECT 
  3     STDDEV_POP(CAST(NULL AS NUMBER)) OVER () AS C3,
  4     CASE WHEN '0' != ALL (
  5         SELECT '0' AS C1
  6         FROM  T_BPM_HIST_EVENT_PRIM_DATA  AS REF_2
  7         WHERE REF_1.TENANT_ID <> ANY (
  8                 SELECT REF_2.TENANT_ID AS C1  
  9                 FROM T_BPM_HIST_EVENT_PRIM_DATA AS REF_3  
 10                 WHERE REF_1.NAME LIKE '%'
 11             )
 12         )
 13 	THEN NULL ELSE NULL END AS C16
 14 FROM ( T_BPM_HIST_EVENT_PRIM_DATA AS REF_0) RIGHT OUTER JOIN 
 15      ( T_BPM_HIST_EVENT_PRIM_DATA AS REF_1) ON (NOT NULL = NULL)
 16 WHERE (REGEXP_LIKE(REF_0.NAME, '.*'))
 17 GROUP BY 
 18     REF_1.NAME,
 19     REF_1.TENANT_ID;

EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
| Id  | Description                  | Owner | Name                             | Rows | Cost | Bytes | Remark |
----------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT             |       |                                  |      |      |       |        |
| 1   |   KERNEL FILTER              |       |                                  |      |      |       |        |
| 2   |     TABLE ACCESS FULL        | SYS   | T_BPM_HIST_EVENT_PRIM_DATA REF_2 |      |      |       |        |
| 3   |     TABLE ACCESS FULL        | SYS   | T_BPM_HIST_EVENT_PRIM_DATA REF_3 |      |      |       |        |
| 4   |   WINDOW SORT                |       |                                  |      |      |       |        |
| 5   |     HASH GROUP BY            |       |                                  |      |      |       |        |
| 6   |       FILTER                 |       |                                  |      |      |       |        |
| 7   |         NESTED LOOPS OUTER   |       |                                  |      |      |       |        |
| 8   |           TABLE ACCESS FULL  | SYS   | T_BPM_HIST_EVENT_PRIM_DATA REF_1 |      |      |       |        |
| 9   |           TABLE ACCESS FULL  | SYS   | T_BPM_HIST_EVENT_PRIM_DATA REF_0 |      |      |       |        |
----------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: EXISTS(SELECT 1 FROM T_BPM_HIST_EVENT_PRIM_DATA REF_3 WHERE REF_1.NAME LIKE '%' AND REF_2.TENANT_ID != REF_1.TENANT_ID) AND 
               REF_2.TENANT_ID != REF_1.TENANT_ID
   3 - filter: REF_1.NAME LIKE '%' AND REF_2.TENANT_ID != REF_1.TENANT_ID
   6 - filter: REGEXP_LIKE(REF_0.NAME, '.*')                    

20 rows fetched.

SQL> 
SQL> EXPLAIN
  2 SELECT SUBQ_4.C1 AS C0
  3     ,SUBQ_4.C0 AS C1
  4     ,COVAR_SAMP(CAST(SUBQ_4.C0 AS BINARY_INTEGER), CAST(SUBQ_4.C0 AS BINARY_INTEGER)) AS C7
  5     ,CASE WHEN
  6     'mkF(iCDF7X9xt)F<@!J&R K}MW96Nv>YOwLt%z|e6rzp/*3uj9' < 
  7     SOME(
  8         SELECT DISTINCT REF_21.NAME AS C1
  9         FROM (select /* +rule */ NAME,TENANT_ID FROM T_BPM_HIST_EVENT_PRIM_DATA 
 10         union all select /* +rule */ NAME,TENANT_ID FROM T_BPM_HIST_EVENT_PRIM_DATA ) REF_21
 11         WHERE REF_21.TENANT_ID = SUBQ_4.C0)
 12     THEN
 13      1
 14     ELSE
 15      2
 16     END AS C11
 17     ,MAX(CAST(SUBQ_4.C1 AS TIMESTAMP WITH LOCAL TIME ZONE)) OVER (
 18         PARTITION BY SUBQ_4.C0 ORDER BY SUBQ_4.C1
 19         ) AS C17
 20 FROM (
 21     SELECT NULL AS C0
 22         ,MIN(REF_20.EICREATETIME) AS C1
 23     FROM T_BPM_HIST_EVENT_PRIM_DATA REF_20
 24     ) SUBQ_4
 25 GROUP BY SUBQ_4.C1
 26     ,SUBQ_4.C0 LIMIT 1;
EXPLAIN PLAN OUTPUT                                             
----------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
| Id  | Description                    | Owner | Name                              | Rows | Cost | Bytes | Remark |
-------------------------------------------------------------------------------------------------------------------
| 0   | SELECT STATEMENT               |       |                                   |      |      |       |        |
| 1   |   HASH DISTINCT                |       |                                   |      |      |       |        |
| 2   |     SUBSELECT                  |       | REF_21                            |      |      |       |        |
| 3   |       UNION ALL                |       |                                   |      |      |       |        |
| 4   |         TABLE ACCESS FULL      | SYS   | T_BPM_HIST_EVENT_PRIM_DATA        |      |      |       |        |
| 5   |         TABLE ACCESS FULL      | SYS   | T_BPM_HIST_EVENT_PRIM_DATA        |      |      |       |        |
| 6   |   QUERY LIMIT                  |       |                                   |      |      |       |        |
| 7   |     WINDOW SORT                |       |                                   |      |      |       |        |
| 8   |       HASH GROUP BY            |       |                                   |      |      |       |        |
| 9   |         SUBSELECT              |       | SUBQ_4                            |      |      |       |        |
| 10  |           AGGR                 |       |                                   |      |      |       |        |
| 11  |             TABLE ACCESS FULL  | SYS   | T_BPM_HIST_EVENT_PRIM_DATA REF_20 |      |      |       |        |
-------------------------------------------------------------------------------------------------------------------
Predicate Information (identified by id):                       
-----------------------------------------                       
   2 - filter: REF_21.TENANT_ID = SUBQ_4.C0                     
   4 - filter: T_BPM_HIST_EVENT_PRIM_DATA.TENANT_ID = SUBQ_4.C0 
   5 - filter: T_BPM_HIST_EVENT_PRIM_DATA.TENANT_ID = SUBQ_4.C0 

21 rows fetched.




