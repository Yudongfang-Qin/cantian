

SQL> DROP TABLE IF EXISTS test;

Succeed.

SQL> create table test
  2 (
  3 f1 int not null,
  4 f2 int,
  5 f3 varchar(100)
  6 );

Succeed.

SQL> alter table test add primary key (f1);

Succeed.

SQL> create index test_index_001 on test (f1, f2,f3);

Succeed.

SQL> create unique index test_index_002 on test (f2);

Succeed.

SQL> 
SQL> --nonunique index info
SQL> select null as table_cat,
  2  i.owner as table_schem, 
  3  i.table_name, 
  4  case i.IS_PRIMARY || i.is_unique when 'NN' then 0 else 1 end as NON_UNIQUE,
  5  null as index_qualifier, 
  6  --i.index_name as index_name, 
  7   1 as type, 
  8  c.column_position as ordinal_position, 
  9  c.column_name, 
 10  null as asc_or_desc, 
 11  0 as cardinality, 
 12  i.pages as pages, 
 13  null as filter_condition 
 14  from all_indexes i, sys.dba_ind_columns c 
 15  where i.table_name = 'TEST' 
 16  and i.owner = 'SYS' 
 17  --and (i.IS_PRIMARY = 'Y' or i.IS_UNIQUE = 'Y')    
 18  and i.index_name = c.index_name 
 19  and i.owner = c.table_owner 
 20  and i.table_name = c.table_name 
 21  and i.owner = c.index_owner
 22  order by non_unique, type, i.index_name, ordinal_position ;

TABLE_CAT TABLE_SCHEM                                                      TABLE_NAME                                                       NON_UNIQUE   INDEX_QUALIFIER TYPE         ORDINAL_POSITION COLUMN_NAME                                                      ASC_OR_DESC CARDINALITY  PAGES                FILTER_CONDITION
--------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------- ------------ ---------------- ---------------------------------------------------------------- ----------- ------------ -------------------- ----------------
          SYS                                                              TEST                                                             0                            1            1                F1                                                                           0            0                                    
          SYS                                                              TEST                                                             0                            1            2                F2                                                                           0            0                                    
          SYS                                                              TEST                                                             0                            1            3                F3                                                                           0            0                                    
          SYS                                                              TEST                                                             1                            1            1                F2                                                                           0            0                                    
          SYS                                                              TEST                                                             1                            1            1                F1                                                                           0            0                                    

5 rows fetched.

SQL> 
SQL> 
SQL> --unique index info
SQL> select null as table_cat,
  2  i.owner as table_schem, 
  3  i.table_name, 
  4  case i.IS_PRIMARY || i.is_unique when 'NN' then 0 else 1 end as NON_UNIQUE,
  5  null as index_qualifier, 
  6  --i.index_name as index_name, 
  7   1 as type, 
  8  c.column_position as ordinal_position, 
  9  c.column_name, 
 10  null as asc_or_desc, 
 11  0 as cardinality, 
 12  i.pages as pages, 
 13  null as filter_condition 
 14  from all_indexes i, sys.dba_ind_columns c 
 15  where i.table_name = 'TEST' 
 16  and i.owner = 'SYS' 
 17  and (i.IS_PRIMARY = 'Y' or i.IS_UNIQUE = 'Y')    
 18  and i.index_name = c.index_name 
 19  and i.owner = c.table_owner 
 20  and i.table_name = c.table_name 
 21  and i.owner = c.index_owner
 22  order by non_unique, type, i.index_name, ordinal_position ;

TABLE_CAT TABLE_SCHEM                                                      TABLE_NAME                                                       NON_UNIQUE   INDEX_QUALIFIER TYPE         ORDINAL_POSITION COLUMN_NAME                                                      ASC_OR_DESC CARDINALITY  PAGES                FILTER_CONDITION
--------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------- ------------ ---------------- ---------------------------------------------------------------- ----------- ------------ -------------------- ----------------
          SYS                                                              TEST                                                             1                            1            1                F2                                                                           0            0                                    
          SYS                                                              TEST                                                             1                            1            1                F1                                                                           0            0                                    

2 rows fetched.

SQL> 
SQL>  DROP TABLE IF EXISTS test;
Succeed.




