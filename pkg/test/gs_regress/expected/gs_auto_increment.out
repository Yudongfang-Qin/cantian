

SQL> create table autoinctab(i int primary key,j int);

Succeed.

SQL> alter table autoinctab modify i bigint;

Succeed.

SQL> drop table autoinctab;

Succeed.

SQL> create table autoinctab(i int primary key,j int);

Succeed.

SQL> insert into autoinctab values (10,20);

1 rows affected.

SQL> alter table autoinctab modify i bigint;

Succeed.
SQL> drop table autoinctab;

Succeed.

SQL> create table autoinctab(i bigint primary key,j int);

Succeed.

SQL> alter table autoinctab modify i int;

Succeed.

SQL> drop table autoinctab;

Succeed.

SQL> create table autoinctab(i bigint primary key,j int);

Succeed.

SQL> insert into autoinctab values (10,20);

1 rows affected.

SQL> alter table autoinctab modify i int;

CT-00805, Column I is not empty in table AUTOINCTAB
SQL> drop table autoinctab;

Succeed.

SQL> 
SQL> create table autoinctab(i int ,j int);

Succeed.

SQL> alter table autoinctab modify i auto_increment;

Succeed.

SQL> drop table autoinctab;

Succeed.

SQL> create table autoinctab(i int primary key,j int);

Succeed.

SQL> alter table autoinctab modify i auto_increment;

Succeed.

SQL> alter table autoinctab modify j auto_increment;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> drop table autoinctab;

Succeed.

SQL> 
SQL> create table autoinctab(i int primary key,j int);

Succeed.

SQL> alter table autoinctab modify i auto_increment;

Succeed.

SQL> alter table autoinctab modify i char;

CT-00607, Invalid datatype for column
SQL> drop table autoinctab;

Succeed.

SQL> create table autoinctab(i int primary key,j int);

Succeed.

SQL> alter table autoinctab modify i auto_increment;

Succeed.

SQL> alter table autoinctab modify i int;

Succeed.

SQL> drop table autoinctab;

Succeed.

SQL> create table autoinctab(i int primary key,j int);

Succeed.

SQL> alter table autoinctab modify i auto_increment;

Succeed.

SQL> alter table autoinctab modify i bigint;

Succeed.

SQL> drop table autoinctab;

Succeed.

SQL> create table autoinctab(i bigint primary key,j int);

Succeed.

SQL> alter table autoinctab modify i auto_increment;

Succeed.

SQL> alter table autoinctab modify i bigint;

Succeed.

SQL> drop table autoinctab;

Succeed.

SQL> create table autoinctab(i bigint primary key,j int);

Succeed.

SQL> alter table autoinctab modify i auto_increment;

Succeed.

SQL> alter table autoinctab modify i int;

Succeed.

SQL> drop table autoinctab;

Succeed.

SQL> CREATE TABLE SERIAL_FAILD_1 (F1 bool, F2 int, F3 serial, F4 serial);

CT-01300, There can be only one auto column and it must be defined as a key
SQL> CREATE TABLE SERIAL_FAILD_2 (F1 bool, F2 int, F3 varchar(100) AUTO_INCREMENT);

CT-00601, [1:63]Sql syntax error: auto increment column F3 only support int type
SQL> CREATE TABLE SERIAL_FAILD_2 (F1 bool, F2 int, F3 int AUTO_INCREMENT);

CT-01300, There can be only one auto column and it must be defined as a key
SQL> CREATE TABLE SERIAL_FAILD_3 (F1 bool, F2 int, F3 bigint AUTO_INCREMENT);

CT-01300, There can be only one auto column and it must be defined as a key
SQL> CREATE TABLE SERIAL_FAILD_4 (F1 bool, F2 int, F3 bigint AUTO_INCREMENT primary key AUTO_INCREMENT);

CT-00601, [1:98]Sql syntax error: duplicate or conflicting auto increment specifications
SQL> CREATE TABLE SERIAL_FAILD_5 (F1 bool, F2 int, F3 bigint AUTO_INCREMENT primary key, F4 bigint AUTO_INCREMENT unique);

CT-01300, There can be only one auto column and it must be defined as a key
SQL> CREATE TABLE SERIAL_FAILD_6 (F1 bool, F2 int, F3 bigint AUTO_INCREMENT primary key) AUTO_INCREMENT=-1;

CT-00601, [1:100]Sql syntax error: size must be a positive long integer
SQL> CREATE TABLE SERIAL_FAILD_7 (F1 bool, F2 int, F3 int AUTO_INCREMENT primary key) AUTO_INCREMENT=100000000000000;

CT-00659, INTEGER out of range
SQL> CREATE TABLE SERIAL_FAILD_8 (F1 bool, F2 int, F3 int AUTO_INCREMENT, CONSTRAINT PK_F2_F3 primary key(F2, F3)) AUTO_INCREMENT=100;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> CREATE TABLE SERIAL_FAILD_9 (F1 bool, F2 int, F3 int AUTO_INCREMENT, CONSTRAINT UK_F2_F3 unique(F2, F3)) AUTO_INCREMENT=100;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> DROP TABLE IF EXISTS SERIAL_SUCESS_0;

Succeed.

SQL> CREATE TABLE SERIAL_SUCESS_0 (F1 int, F2 bigint AUTO_INCREMENT, CONSTRAINT PK_F2 PRIMARY KEY (F2));

Succeed.

SQL> INSERT INTO SERIAL_SUCESS_0 VALUES(1, NULL);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_0 VALUES(2, 0);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_0 (F1) VALUES(3);

1 rows affected.

SQL> SELECT * FROM SERIAL_SUCESS_0 ORDER BY F2;

F1           F2                  
------------ --------------------
1            1                   
2            2                   
3            3                   

3 rows fetched.

SQL> INSERT INTO SERIAL_SUCESS_0 VALUES(3, 3);

CT-00729, Unique constraint violated, index PK_F2, duplicate key 3
SQL> INSERT INTO SERIAL_SUCESS_0 VALUES(-1, -1);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_0 VALUES(4, 4);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_0 VALUES(5, NULL);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_0 VALUES(101, 101);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_0 (F1) VALUES(102);

1 rows affected.

SQL> SELECT * FROM SERIAL_SUCESS_0 ORDER BY F2;

F1           F2                  
------------ --------------------
-1           -1                  
1            1                   
2            2                   
3            3                   
4            4                   
5            5                   
101          101                 
102          102                 

8 rows fetched.

SQL> UPDATE SERIAL_SUCESS_0 SET F2 = 201 WHERE F1 = 102;

1 rows affected.

SQL> UPDATE SERIAL_SUCESS_0 SET F2 = NULL WHERE F1 = 102;

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_0 VALUES(202, NULL);

1 rows affected.

SQL> UPDATE SERIAL_SUCESS_0 SET F2 = 0 WHERE F1 = 202;

CT-00729, Unique constraint violated
SQL> SELECT * FROM SERIAL_SUCESS_0 ORDER BY F2;

F1           F2                  
------------ --------------------
-1           -1                  
102          0                   
1            1                   
2            2                   
3            3                   
4            4                   
5            5                   
101          101                 
202          202                 

9 rows fetched.

SQL> DROP TABLE SERIAL_SUCESS_0;

Succeed.

SQL> 
SQL> DROP TABLE IF EXISTS SERIAL_SUCESS_1;

Succeed.

SQL> CREATE TABLE SERIAL_SUCESS_1 (F1 int, F2 INT AUTO_INCREMENT CONSTRAINT UK_F2 unique) AUTO_INCREMENT 1000 tablespace users;

Succeed.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1000, NULL);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1001, 0);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 (F1) VALUES(1002);

1 rows affected.

SQL> SELECT * FROM SERIAL_SUCESS_1 ORDER BY F2;

F1           F2          
------------ ------------
1000         1000        
1001         1001        
1002         1002        

3 rows fetched.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1002, 1002);

CT-00729, Unique constraint violated, index UK_F2, duplicate key 1002
SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(-1, -1);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1003, 1003);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1004, NULL);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1100, 1100);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 (F1) VALUES(1101);

1 rows affected.

SQL> SELECT * FROM SERIAL_SUCESS_1 ORDER BY F2;

F1           F2          
------------ ------------
-1           -1          
1000         1000        
1001         1001        
1002         1002        
1003         1003        
1004         1004        
1100         1100        
1101         1101        

8 rows fetched.

SQL> UPDATE SERIAL_SUCESS_1 SET F2 = 1150 WHERE F1 = 1101;

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1151, NULL);

1 rows affected.

SQL> SELECT * FROM SERIAL_SUCESS_1 ORDER BY F2;

F1           F2          
------------ ------------
-1           -1          
1000         1000        
1001         1001        
1002         1002        
1003         1003        
1004         1004        
1100         1100        
1101         1150        
1151         1151        

9 rows fetched.

SQL> UPDATE SERIAL_SUCESS_1 SET F2 = 2200 WHERE F1 = 1151;

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(2201, NULL);

1 rows affected.

SQL> SELECT * FROM SERIAL_SUCESS_1 ORDER BY F2;

F1           F2          
------------ ------------
-1           -1          
1000         1000        
1001         1001        
1002         1002        
1003         1003        
1004         1004        
1100         1100        
1101         1150        
1151         2200        
2201         2201        

10 rows fetched.

SQL> DROP TABLE SERIAL_SUCESS_1;

Succeed.

SQL> FLASHBACK TABLE SERIAL_SUCESS_1 TO BEFORE DROP; 

Succeed.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(2202, NULL);

1 rows affected.

SQL> SELECT * FROM SERIAL_SUCESS_1 ORDER BY F2;

F1           F2          
------------ ------------
-1           -1          
1000         1000        
1001         1001        
1002         1002        
1003         1003        
1004         1004        
1100         1100        
1101         1150        
1151         2200        
2201         2201        
2202         2202        

11 rows fetched.

SQL> DROP TABLE SERIAL_SUCESS_1 PURGE;

Succeed.

SQL> CREATE TABLE SERIAL_SUCESS_1 (F1 int, F2 bigint AUTO_INCREMENT unique) AUTO_INCREMENT 1000;

Succeed.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1000, NULL);

1 rows affected.

SQL> ALTER TABLE SERIAL_SUCESS_1 AUTO_INCREMENT = 1001;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'SERIAL_SUCESS_1';

SERIAL_START        
--------------------
1000                

1 rows fetched.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1001, NULL);

1 rows affected.

SQL> ALTER TABLE SERIAL_SUCESS_1 AUTO_INCREMENT = 1003;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'SERIAL_SUCESS_1';

SERIAL_START        
--------------------
1003                

1 rows fetched.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1003, NULL);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1004, NULL);

1 rows affected.

SQL> ALTER TABLE SERIAL_SUCESS_1 AUTO_INCREMENT = 1100;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'SERIAL_SUCESS_1';

SERIAL_START        
--------------------
1100                

1 rows fetched.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1100, NULL);

1 rows affected.

SQL> INSERT INTO SERIAL_SUCESS_1 VALUES(1200, NULL);

1 rows affected.

SQL> SELECT * FROM SERIAL_SUCESS_1 ORDER BY F2;

F1           F2                  
------------ --------------------
1000         1000                
1001         1001                
1003         1003                
1004         1004                
1100         1100                
1200         1101                

6 rows fetched.

SQL> DROP TABLE SERIAL_SUCESS_1;

Succeed.

SQL> 
SQL> --DTS2018070200585
SQL> DROP TABLE IF EXISTS SERIAL_DTS2018070200585;

Succeed.

SQL> CREATE TABLE SERIAL_DTS2018070200585 (
  2  ID BIGINT NOT NULL AUTO_INCREMENT,
  3  ATTR_ID BIGINT UNIQUE NOT NULL,
  4  NAME VARCHAR(60) NOT NULL,
  5  VALUE_LIST VARCHAR(1000),
  6  I18N_LIST VARCHAR(2000),
  7  PRIMARY KEY (ID)
  8 )AUTO_INCREMENT=9223372036854775808;

CT-00601, [8:17]Sql syntax error: size must be a positive long integer
SQL> 
SQL> CREATE TABLE SERIAL_DTS2018070200585 (
  2  ID BIGINT NOT NULL AUTO_INCREMENT,
  3  ATTR_ID BIGINT UNIQUE NOT NULL,
  4  NAME VARCHAR(60) NOT NULL,
  5  VALUE_LIST VARCHAR(1000),
  6  I18N_LIST VARCHAR(2000),
  7  constraint PK_ID primary key (ID)
  8 )AUTO_INCREMENT=1000;

Succeed.

SQL> ALTER TABLE SERIAL_DTS2018070200585 AUTO_INCREMENT = 9223372036854775808;

CT-00601, [1:54]Sql syntax error: size must be a positive long integer
SQL> select SERIAL_START from SYS_TABLES where name = 'SERIAL_DTS2018070200585';

SERIAL_START        
--------------------
1000                

1 rows fetched.

SQL> ALTER TABLE SERIAL_DTS2018070200585 AUTO_INCREMENT = 9223372036854775807;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'SERIAL_DTS2018070200585';

SERIAL_START        
--------------------
9223372036854775807 

1 rows fetched.

SQL> insert into SERIAL_DTS2018070200585 values(9223372036854775807,99,'aa','bb',100);

1 rows affected.

SQL> insert into SERIAL_DTS2018070200585 values(9223372036854775808,100,'aa','bb',100);

CT-00659, BIGINT out of range
SQL> insert into SERIAL_DTS2018070200585 values(0,100,'aa','bb',100);

CT-00729, Unique constraint violated, index PK_ID, duplicate key 9223372036854775807
SQL> insert into SERIAL_DTS2018070200585 values(NULL,100,'aa','bb',100);

CT-00729, Unique constraint violated, index PK_ID, duplicate key 9223372036854775807
SQL> SELECT * FROM SERIAL_DTS2018070200585;

ID                   ATTR_ID              NAME                                                         VALUE_LIST                                                       I18N_LIST                                                       
-------------------- -------------------- ------------------------------------------------------------ ---------------------------------------------------------------- ----------------------------------------------------------------
9223372036854775807  99                   aa                                                           bb                                                               100                                                             

1 rows fetched.

SQL> DROP TABLE SERIAL_DTS2018070200585;

Succeed.

SQL> 
SQL> --DTS2018070309023
SQL>  CREATE TABLE IF NOT EXISTS META_ENUM 
  2 (
  3  ID BIGINT NOT NULL AUTO_INCREMENT,
  4  ATTR_ID BIGINT UNIQUE NOT NULL,
  5  NAME VARCHAR(60) NOT NULL,
  6    VALUE_LIST VARCHAR(1000),
  7    I18N_LIST VARCHAR(2000),
  8    PRIMARY KEY (ID)
  9 )AUTO_INCREMENT=10 AUTO_INCREMENT=20 AUTO_INCREMENT=30;

CT-00601, [9:20]Sql syntax error: duplicate or conflicting auto_increment specifications
SQL> 
SQL> --DTS2018070402012
SQL> DROP TABLE IF EXISTS META_ENUM;

Succeed.

SQL> CREATE TABLE IF NOT EXISTS META_ENUM 
  2 (
  3  ID int NOT NULL AUTO_INCREMENT,
  4  NAME VARCHAR(60) NOT NULL,
  5  PRIMARY KEY (ID,NAME)
  6 )AUTO_INCREMENT=1000;

Succeed.

SQL> 
SQL> insert into META_ENUM(ID,NAME) values(10,1);

1 rows affected.

SQL> insert into META_ENUM(NAME) values(2);

1 rows affected.

SQL> insert into META_ENUM(NAME) values(3);

1 rows affected.

SQL> insert into META_ENUM(ID,NAME) values(4,4);

1 rows affected.

SQL> insert into META_ENUM(NAME) values(5);

1 rows affected.

SQL> select * from META_ENUM order by name;

ID           NAME                                                        
------------ ------------------------------------------------------------
10           1                                                           
1000         2                                                           
1001         3                                                           
4            4                                                           
1002         5                                                           

5 rows fetched.

SQL> DROP TABLE META_ENUM;

Succeed.

SQL> 
SQL> 
SQL> --DTS2018071002169
SQL> DROP TABLE IF EXISTS META_ENUM;

Succeed.

SQL> CREATE TABLE IF NOT EXISTS META_ENUM 
  2 (
  3  ID BIGINT NOT NULL AUTO_INCREMENT,
  4  ATTR_ID BIGINT NOT NULL,
  5  NAME VARCHAR(60) NOT NULL,
  6  VALUE_LIST VARCHAR(1000),
  7  I18N_LIST VARCHAR(2000),
  8  CONSTRAINT PK_ID PRIMARY KEY (ID)
  9 )AUTO_INCREMENT=10;

Succeed.

SQL> ALTER TABLE META_ENUM AUTO_INCREMENT = 2 abc;

CT-00601, [1:45]Sql syntax error: expected end but abc found
SQL> ALTER TABLE META_ENUM AUTO_INCREMENT = 2;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'META_ENUM';

SERIAL_START        
--------------------
2                   

1 rows fetched.

SQL> insert into META_ENUM(ATTR_ID,NAME) values(5,'luo');

1 rows affected.

SQL> insert into META_ENUM(ATTR_ID,NAME) values(6,'li');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> select ID,ATTR_ID,NAME from META_ENUM order by ID;

ID                   ATTR_ID              NAME                                                        
-------------------- -------------------- ------------------------------------------------------------
2                    5                    luo                                                         
3                    6                    li                                                          

2 rows fetched.

SQL> ALTER TABLE META_ENUM AUTO_INCREMENT = 50;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'META_ENUM';

SERIAL_START        
--------------------
50                  

1 rows fetched.

SQL> insert into META_ENUM (ATTR_ID,NAME) values(50, 'luo');

1 rows affected.

SQL> insert into META_ENUM (ATTR_ID,NAME) values(51, 'luo');

1 rows affected.

SQL> select ID,ATTR_ID,NAME from META_ENUM order by ID;

ID                   ATTR_ID              NAME                                                        
-------------------- -------------------- ------------------------------------------------------------
2                    5                    luo                                                         
3                    6                    li                                                          
50                   50                   luo                                                         
51                   51                   luo                                                         

4 rows fetched.

SQL> ALTER TABLE META_ENUM AUTO_INCREMENT = 150;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'META_ENUM';

SERIAL_START        
--------------------
150                 

1 rows fetched.

SQL> insert into META_ENUM (ATTR_ID,NAME) values(150, 'luo');

1 rows affected.

SQL> insert into META_ENUM (ATTR_ID,NAME) values(151, 'luo');

1 rows affected.

SQL> select ID,ATTR_ID,NAME from META_ENUM order by ID;

ID                   ATTR_ID              NAME                                                        
-------------------- -------------------- ------------------------------------------------------------
2                    5                    luo                                                         
3                    6                    li                                                          
50                   50                   luo                                                         
51                   51                   luo                                                         
150                  150                  luo                                                         
151                  151                  luo                                                         

6 rows fetched.

SQL> ALTER TABLE META_ENUM AUTO_INCREMENT = 2;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'META_ENUM';

SERIAL_START        
--------------------
150                 

1 rows fetched.

SQL> ALTER TABLE META_ENUM AUTO_INCREMENT = 9223372036854775807;

Succeed.

SQL> select SERIAL_START from SYS_TABLES where name = 'META_ENUM';

SERIAL_START        
--------------------
9223372036854775807 

1 rows fetched.

SQL> insert into META_ENUM(ATTR_ID,NAME) values(7,'luo');

1 rows affected.

SQL> insert into META_ENUM(ATTR_ID,NAME) values(8,'luo');

CT-00729, Unique constraint violated, index PK_ID, duplicate key 9223372036854775807
SQL> select ID,ATTR_ID,NAME from META_ENUM order by ID;

ID                   ATTR_ID              NAME                                                        
-------------------- -------------------- ------------------------------------------------------------
2                    5                    luo                                                         
3                    6                    li                                                          
50                   50                   luo                                                         
51                   51                   luo                                                         
150                  150                  luo                                                         
151                  151                  luo                                                         
9223372036854775807  7                    luo                                                         

7 rows fetched.

SQL> 
SQL> UPDATE META_ENUM SET ID = 9223372036854775807 WHERE ATTR_ID = 6;

CT-00729, Unique constraint violated
SQL> UPDATE META_ENUM SET ID = 9223372036854775806 WHERE ATTR_ID = 6;

1 rows affected.

SQL> select ID,ATTR_ID,NAME from META_ENUM order by ID;

ID                   ATTR_ID              NAME                                                        
-------------------- -------------------- ------------------------------------------------------------
2                    5                    luo                                                         
50                   50                   luo                                                         
51                   51                   luo                                                         
150                  150                  luo                                                         
151                  151                  luo                                                         
9223372036854775806  6                    li                                                          
9223372036854775807  7                    luo                                                         

7 rows fetched.

SQL> DROP TABLE META_ENUM;

Succeed.

SQL> 
SQL> drop table IF EXISTS abc;

Succeed.

SQL> drop table IF EXISTS abc2;

Succeed.

SQL> create table abc(fd_int int, fd_bigint bigint auto_increment primary key, fd_varchar varchar(100));

Succeed.

SQL> alter table abc add fd_bigint2 bigint auto_increment;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> alter table abc add fd_bigint2 bigint auto_increment primary key;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> insert into abc values(1,null,'1');

1 rows affected.

SQL> insert into abc values(4,4,'4');

1 rows affected.

SQL> update abc set fd_bigint = default where fd_bigint = 4;

1 rows affected.

SQL> select * from abc order by fd_int;

FD_INT       FD_BIGINT            FD_VARCHAR                                                      
------------ -------------------- ----------------------------------------------------------------
1            1                    1                                                               
4            0                    4                                                               

2 rows fetched.

SQL> create table abc2(fd_int int, fd_bigint bigint auto_increment primary key, fd_varchar varchar(100));

Succeed.

SQL> insert into abc2 values(1,1,'1');

1 rows affected.

SQL> insert into abc2 values(2,2,'2');

1 rows affected.

SQL> insert into abc2 values(3,3,'3');

1 rows affected.

SQL> select * from abc2 order by fd_int;

FD_INT       FD_BIGINT            FD_VARCHAR                                                      
------------ -------------------- ----------------------------------------------------------------
1            1                    1                                                               
2            2                    2                                                               
3            3                    3                                                               

3 rows fetched.

SQL> merge into abc using abc2 on (abc2.fd_int = abc.fd_int) when matched then update set abc.fd_bigint = (default - 1) when not matched then insert (fd_int, fd_bigint, fd_varchar) values(abc2.fd_int,default,abc2.fd_varchar);

3 rows affected.

SQL> select * from abc order by fd_int;

FD_INT       FD_BIGINT            FD_VARCHAR                                                      
------------ -------------------- ----------------------------------------------------------------
1            -1                   1                                                               
2            5                    2                                                               
3            6                    3                                                               
4            0                    4                                                               

4 rows fetched.

SQL> drop table abc;

Succeed.

SQL> drop table abc2;

Succeed.

SQL> 
SQL> 
SQL> DROP TABLE IF EXISTS abc;

Succeed.

SQL> create table abc(fd_int int, fd_varchar varchar(100));

Succeed.

SQL> ALTER table abc ADD fd_bigint bigint auto_increment;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> ALTER table abc ADD (fd_bigint bigint auto_increment primary key, fd_bigint2 bigint auto_increment unique);

CT-01300, There can be only one auto column and it must be defined as a key
SQL> ALTER table abc ADD fd_bigint bigint auto_increment constraint pk_fd_bigint primary key;

Succeed.

SQL> INSERT INTO ABC VALUES (1,NULL,'1');

1 rows affected.

SQL> INSERT INTO ABC VALUES (2,NULL,'2');

1 rows affected.

SQL> INSERT INTO ABC VALUES (100,100,'100');

1 rows affected.

SQL> SELECT * FROM ABC ORDER BY fd_bigint;

FD_INT       FD_VARCHAR                                                       FD_BIGINT           
------------ ---------------------------------------------------------------- --------------------
1                                                                             1                   
2                                                                             2                   
100          100                                                              100                 

3 rows fetched.

SQL> delete from ABC;

3 rows affected.

SQL> ALTER table abc ADD fd_bigint2 bigint auto_increment primary key;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> ALTER table abc  MODIFY fd_int auto_increment;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> ALTER table abc  MODIFY fd_int auto_increment UNIQUE;

CT-01300, There can be only one auto column and it must be defined as a key
SQL> DROP TABLE ABC;

Succeed.

SQL> 
SQL> DROP TABLE IF EXISTS test_part_t1;

Succeed.

SQL> create table test_part_t1(f1 int auto_increment unique, f2 real, f3 number, f4 char(30), f5 varchar(30), f6 date, f7 timestamp)
  2 PARTITION BY RANGE(f1)
  3 (
  4  PARTITION p1 values less than(10),
  5  PARTITION p2 values less than(20),
  6  PARTITION p3 values less than(30),
  7  PARTITION p4 values less than(MAXVALUE)
  8 );

Succeed.

SQL> 
SQL> insert into test_part_t1 values(0, 1, 28, 'abcd', 'abcd', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> select serial_lastval('SYS','TEST_PART_T1');

SERIAL_LASTVAL('SYS','TEST_PART_T1')
------------------------------------
101                                 

1 rows fetched.

SQL> insert into test_part_t1 values(10, 10, 29, '16', '29', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 11, 39, '26', '39', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(20, 20, 49, '36', '49', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 21, 59, '46', '59', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(30, 30, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 31, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> 
SQL> SELECT F1,F2  FROM test_part_t1 ORDER BY F1;

F1           F2                  
------------ --------------------
1            1                   
10           10                  
11           11                  
20           20                  
21           21                  
30           30                  
31           31                  

7 rows fetched.

SQL> UPDATE test_part_t1 SET F1= 40 WHERE F2 = 31;

1 rows affected.

SQL> insert into test_part_t1 values(0, 41, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> UPDATE test_part_t1 SET F1= 35 WHERE F2 = 31;

1 rows affected.

SQL> insert into test_part_t1 values(0, 42, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> SELECT F1,F2  FROM test_part_t1 ORDER BY F1;

F1           F2                  
------------ --------------------
1            1                   
10           10                  
11           11                  
20           20                  
21           21                  
30           30                  
35           31                  
41           41                  
42           42                  

9 rows fetched.

SQL> SELECT F1,F2  FROM test_part_t1 PARTITION (p1) ORDER BY F1;

F1           F2                  
------------ --------------------
1            1                   

1 rows fetched.

SQL> SELECT F1,F2  FROM test_part_t1 PARTITION (p2) ORDER BY F1;

F1           F2                  
------------ --------------------
10           10                  
11           11                  

2 rows fetched.

SQL> SELECT F1,F2  FROM test_part_t1 PARTITION (p3) ORDER BY F1;

F1           F2                  
------------ --------------------
20           20                  
21           21                  

2 rows fetched.

SQL> SELECT F1,F2  FROM test_part_t1 PARTITION (p4) ORDER BY F1;

F1           F2                  
------------ --------------------
30           30                  
35           31                  
41           41                  
42           42                  

4 rows fetched.

SQL> 
SQL> TRUNCATE TABLE test_part_t1;

Succeed.

SQL> select serial_lastval('SYS','TEST_PART_T1');

SERIAL_LASTVAL('SYS','TEST_PART_T1')
------------------------------------
0                                   

1 rows fetched.

SQL> insert into test_part_t1 values(10, 10, 29, '16', '29', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 11, 39, '26', '39', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(20, 20, 49, '36', '49', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 21, 59, '46', '59', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(30, 30, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 31, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> 
SQL> SELECT F1,F2  FROM test_part_t1 ORDER BY F1;

F1           F2                  
------------ --------------------
10           10                  
11           11                  
20           20                  
21           21                  
30           30                  
31           31                  

6 rows fetched.

SQL> drop table test_part_t1 purge;

Succeed.

SQL> 
SQL> DROP USER TEST CASCADE;

CT-00781, The user TEST does not exist.
SQL> CREATE USER TEST IDENTIFIED BY TEST_1234;

Succeed.

SQL> GRANT DBA TO TEST;

Succeed.

SQL> CONNECT TEST/TEST_1234@127.0.0.1:1611

connected.

SQL> DROP TABLE IF EXISTS test_part_t1;

Succeed.

SQL> create table test_part_t1(f1 int auto_increment unique, f2 real, f3 number, f4 char(30), f5 varchar(30), f6 date, f7 timestamp)
  2 PARTITION BY RANGE(f1)
  3 (
  4  PARTITION p1 values less than(10),
  5  PARTITION p2 values less than(20),
  6  PARTITION p3 values less than(30),
  7  PARTITION p4 values less than(MAXVALUE)
  8 );

Succeed.

SQL> 
SQL> insert into test_part_t1 values(0, 1, 28, 'abcd', 'abcd', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> select serial_lastval('TEST','TEST_PART_T1');

SERIAL_LASTVAL('TEST','TEST_PART_T1')
-------------------------------------
101                                  

1 rows fetched.

SQL> insert into test_part_t1 values(10, 10, 29, '16', '29', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 11, 39, '26', '39', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(20, 20, 49, '36', '49', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 21, 59, '46', '59', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(30, 30, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 31, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> 
SQL> SELECT F1,F2  FROM test_part_t1 ORDER BY F1;

F1           F2                  
------------ --------------------
1            1                   
10           10                  
11           11                  
20           20                  
21           21                  
30           30                  
31           31                  

7 rows fetched.

SQL> 
SQL> UPDATE test_part_t1 SET F1= 40  WHERE F2 = 31;

1 rows affected.

SQL> insert into test_part_t1 values(0, 41, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> UPDATE test_part_t1 SET F1= 35 WHERE F2 = 31;

1 rows affected.

SQL> insert into test_part_t1 values(0, 42, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> SELECT F1,F2  FROM test_part_t1 ORDER BY F1;

F1           F2                  
------------ --------------------
1            1                   
10           10                  
11           11                  
20           20                  
21           21                  
30           30                  
35           31                  
41           41                  
42           42                  

9 rows fetched.

SQL> SELECT F1,F2  FROM test_part_t1 PARTITION (p1) ORDER BY F1;

F1           F2                  
------------ --------------------
1            1                   

1 rows fetched.

SQL> SELECT F1,F2  FROM test_part_t1 PARTITION (p2) ORDER BY F1;

F1           F2                  
------------ --------------------
10           10                  
11           11                  

2 rows fetched.

SQL> SELECT F1,F2  FROM test_part_t1 PARTITION (p3) ORDER BY F1;

F1           F2                  
------------ --------------------
20           20                  
21           21                  

2 rows fetched.

SQL> SELECT F1,F2  FROM test_part_t1 PARTITION (p4) ORDER BY F1;

F1           F2                  
------------ --------------------
30           30                  
35           31                  
41           41                  
42           42                  

4 rows fetched.

SQL> TRUNCATE TABLE test_part_t1;

Succeed.

SQL> select serial_lastval('TEST','TEST_PART_T1');

SERIAL_LASTVAL('TEST','TEST_PART_T1')
-------------------------------------
0                                    

1 rows fetched.

SQL> insert into test_part_t1 values(10, 10, 29, '16', '29', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 11, 39, '26', '39', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(20, 20, 49, '36', '49', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 21, 59, '46', '59', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(30, 30, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> insert into test_part_t1 values(0, 31, 69, '56', '69', to_date('2018/01/24', 'YYYY/MM/DD'), to_timestamp('2018-01-24 16:00:00.00', 'YYYY-MM-DD HH24:MI:SS.FF3'));

1 rows affected.

SQL> 
SQL> SELECT F1,F2  FROM test_part_t1 ORDER BY F1;

F1           F2                  
------------ --------------------
10           10                  
11           11                  
20           20                  
21           21                  
30           30                  
31           31                  

6 rows fetched.

SQL> drop table test_part_t1 purge;

Succeed.

SQL> CONNECT sys/Huawei@123@127.0.0.1:1611

connected.

SQL> DROP USER TEST CASCADE;

Succeed.

SQL> 
SQL> --DTS2019021910945
SQL> drop table  if exists test_auto_increment;

Succeed.

SQL> create table test_auto_increment (a int);

Succeed.

SQL> alter table test_auto_increment add autosep int auto_increment unique;

Succeed.

SQL> alter table test_auto_increment drop autosep;

Succeed.

SQL> alter table test_auto_increment add autosep int auto_increment unique;

Succeed.

SQL> alter table test_auto_increment drop autosep;

Succeed.

SQL> alter table test_auto_increment add autosep int auto_increment primary key;

Succeed.

SQL> insert into test_auto_increment values(1,null);

1 rows affected.

SQL> insert into test_auto_increment values(2,null);

1 rows affected.

SQL> insert into test_auto_increment values(100,null);

1 rows affected.

SQL> insert into test_auto_increment values(101,null);

1 rows affected.

SQL> select * from test_auto_increment order by a;

A            AUTOSEP     
------------ ------------
1            1           
2            2           
100          3           
101          4           

4 rows fetched.

SQL> drop table  test_auto_increment;

Succeed.

SQL> 
SQL> --DTS2021090621090
SQL> drop table if exists test_increment_convert;

Succeed.

SQL> create table test_increment_convert(id bigint auto_increment PRIMARY KEY, value bigint);

Succeed.

SQL> create unique index idx_test_value on test_increment_convert(value);

Succeed.

SQL> insert into test_increment_convert(id,value) values (null,1);

1 rows affected.

SQL> insert into test_increment_convert(id,value) values (null,1);

CT-00729, Unique constraint violated, index IDX_TEST_VALUE, duplicate key 1
SQL> insert into test_increment_convert(id,value) values (null,2);

1 rows affected.

SQL> update test_increment_convert set id='2' where id=3;

1 rows affected.

SQL> insert into test_increment_convert(id,value) values (null,3);

1 rows affected.

SQL> select * from test_increment_convert order by id;

ID                   VALUE               
-------------------- --------------------
1                    1                   
2                    2                   
4                    3                   

3 rows fetched.

SQL> drop table test_increment_convert;

Succeed.

SQL> 
SQL> DROP TABLE if exists test_increment_uint32;

Succeed.

SQL> CREATE TABLE test_increment_uint32 (f1 UINT AUTO_INCREMENT PRIMARY KEY, f2 VARCHAR(10));

Succeed.

SQL> INSERT INTO test_increment_uint32 VALUES (null, 'abc');

1 rows affected.

SQL> INSERT INTO test_increment_uint32 VALUES (4294967295, 'BROWN');

1 rows affected.

SQL> INSERT INTO test_increment_uint32 VALUES (NULL, 'ALICE');

CT-00659, UNSIGNED INTEGER out of range
SQL> select * from test_increment_uint32 order by f1;

F1           F2        
------------ ----------
1            abc       
4294967295   BROWN     

2 rows fetched.

SQL> drop table test_increment_uint32;

Succeed.

SQL> 
SQL> DROP TABLE if exists test_increment_int;

Succeed.

SQL> CREATE TABLE test_increment_int (f1 int AUTO_INCREMENT PRIMARY KEY, f2 VARCHAR(10));

Succeed.

SQL> INSERT INTO test_increment_int VALUES (null, 'abc');

1 rows affected.

SQL> INSERT INTO test_increment_int VALUES (2147483647, 'BROWN');

1 rows affected.

SQL> INSERT INTO test_increment_int VALUES (NULL, 'ALICE');

CT-00659, INTEGER out of range
SQL> select * from test_increment_int order by f1;

F1           F2        
------------ ----------
1            abc       
2147483647   BROWN     

2 rows fetched.

SQL> drop table test_increment_int;

Succeed.

SQL> 
SQL> DROP TABLE if exists test_increment_update_uint32;

Succeed.

SQL> CREATE TABLE test_increment_update_uint32 (f1 UINT AUTO_INCREMENT PRIMARY KEY, f2 VARCHAR(10));

Succeed.

SQL> INSERT INTO test_increment_update_uint32 VALUES (null, 'abc');

1 rows affected.

SQL> INSERT INTO test_increment_update_uint32 VALUES (null, 'BROWN');

1 rows affected.

SQL> update test_increment_update_uint32 set f1=4294967295 where f2='BROWN';

1 rows affected.

SQL> INSERT INTO test_increment_update_uint32 VALUES (NULL, 'ALICE');

CT-00659, UNSIGNED INTEGER out of range
SQL> select * from test_increment_update_uint32 order by f1;

F1           F2        
------------ ----------
1            abc       
4294967295   BROWN     

2 rows fetched.

SQL> drop table test_increment_update_uint32;
Succeed.




