

SQL> drop table analyze_int;

CT-00843, The table or view SYS.ANALYZE_INT does not exist.
SQL> 
SQL> create table analyze_int(a int);

Succeed.

SQL> -- 21
SQL> insert into analyze_int values(10);

1 rows affected.

SQL> insert into analyze_int values(11);

1 rows affected.

SQL> insert into analyze_int values(12);

1 rows affected.

SQL> insert into analyze_int values(13);

1 rows affected.

SQL> insert into analyze_int values(14);

1 rows affected.

SQL> insert into analyze_int values(15);

1 rows affected.

SQL> insert into analyze_int values(16);

1 rows affected.

SQL> insert into analyze_int values(17);

1 rows affected.

SQL> insert into analyze_int values(18);

1 rows affected.

SQL> insert into analyze_int values(19);

1 rows affected.

SQL> insert into analyze_int values(20);

1 rows affected.

SQL> insert into analyze_int values(21);

1 rows affected.

SQL> insert into analyze_int values(20);

1 rows affected.

SQL> insert into analyze_int values(21);

1 rows affected.

SQL> insert into analyze_int values(22);

1 rows affected.

SQL> insert into analyze_int values(23);

1 rows affected.

SQL> insert into analyze_int values(24);

1 rows affected.

SQL> insert into analyze_int values(25);

1 rows affected.

SQL> insert into analyze_int values(26);

1 rows affected.

SQL> insert into analyze_int values(27);

1 rows affected.

SQL> insert into analyze_int values(28);

1 rows affected.

SQL> insert into analyze_int values(29);

1 rows affected.

SQL> insert into analyze_int values(30);

1 rows affected.

SQL> -- 11
SQL> insert into analyze_int values(20);

1 rows affected.

SQL> insert into analyze_int values(21);

1 rows affected.

SQL> insert into analyze_int values(20);

1 rows affected.

SQL> insert into analyze_int values(21);

1 rows affected.

SQL> insert into analyze_int values(22);

1 rows affected.

SQL> insert into analyze_int values(23);

1 rows affected.

SQL> insert into analyze_int values(24);

1 rows affected.

SQL> insert into analyze_int values(25);

1 rows affected.

SQL> insert into analyze_int values(26);

1 rows affected.

SQL> insert into analyze_int values(27);

1 rows affected.

SQL> insert into analyze_int values(28);

1 rows affected.

SQL> insert into analyze_int values(29);

1 rows affected.

SQL> insert into analyze_int values(30);

1 rows affected.

SQL> -- 11
SQL> insert into analyze_int values(20);

1 rows affected.

SQL> insert into analyze_int values(21);

1 rows affected.

SQL> insert into analyze_int values(20);

1 rows affected.

SQL> insert into analyze_int values(21);

1 rows affected.

SQL> insert into analyze_int values(22);

1 rows affected.

SQL> insert into analyze_int values(23);

1 rows affected.

SQL> insert into analyze_int values(24);

1 rows affected.

SQL> insert into analyze_int values(25);

1 rows affected.

SQL> insert into analyze_int values(26);

1 rows affected.

SQL> insert into analyze_int values(27);

1 rows affected.

SQL> insert into analyze_int values(28);

1 rows affected.

SQL> insert into analyze_int values(29);

1 rows affected.

SQL> insert into analyze_int values(30);

1 rows affected.

SQL> analyze table analyze_int compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_INT') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
10                                                               1           
11                                                               2           
12                                                               3           
13                                                               4           
14                                                               5           
15                                                               6           
16                                                               7           
17                                                               8           
18                                                               9           
19                                                               10          
20                                                               16          
21                                                               22          
22                                                               25          
23                                                               28          
24                                                               31          
25                                                               34          
26                                                               37          
27                                                               40          
28                                                               43          
29                                                               46          
30                                                               49          

21 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY  from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_INT');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
21           49           0            10                                                               30                                                               21           0.0476190476190476  

1 rows fetched.

SQL> drop table analyze_int;

Succeed.

SQL> 
SQL> drop table analyze_bigint;

CT-00843, The table or view SYS.ANALYZE_BIGINT does not exist.
SQL> create table analyze_bigint(a bigint);

Succeed.

SQL> -- 31
SQL> insert into analyze_bigint values(213545678100);

1 rows affected.

SQL> insert into analyze_bigint values(213545678101);

1 rows affected.

SQL> insert into analyze_bigint values(213545678102);

1 rows affected.

SQL> insert into analyze_bigint values(213545678103);

1 rows affected.

SQL> insert into analyze_bigint values(213545678104);

1 rows affected.

SQL> insert into analyze_bigint values(213545678105);

1 rows affected.

SQL> insert into analyze_bigint values(213545678106);

1 rows affected.

SQL> insert into analyze_bigint values(213545678107);

1 rows affected.

SQL> insert into analyze_bigint values(213545678108);

1 rows affected.

SQL> insert into analyze_bigint values(213545678109);

1 rows affected.

SQL> insert into analyze_bigint values(213545678110);

1 rows affected.

SQL> insert into analyze_bigint values(213545678111);

1 rows affected.

SQL> insert into analyze_bigint values(213545678112);

1 rows affected.

SQL> insert into analyze_bigint values(213545678113);

1 rows affected.

SQL> insert into analyze_bigint values(213545678114);

1 rows affected.

SQL> insert into analyze_bigint values(213545678115);

1 rows affected.

SQL> insert into analyze_bigint values(213545678116);

1 rows affected.

SQL> insert into analyze_bigint values(213545678117);

1 rows affected.

SQL> insert into analyze_bigint values(213545678118);

1 rows affected.

SQL> insert into analyze_bigint values(213545678119);

1 rows affected.

SQL> insert into analyze_bigint values(213545678120);

1 rows affected.

SQL> insert into analyze_bigint values(213545678121);

1 rows affected.

SQL> insert into analyze_bigint values(213545678122);

1 rows affected.

SQL> insert into analyze_bigint values(213545678123);

1 rows affected.

SQL> insert into analyze_bigint values(213545678124);

1 rows affected.

SQL> insert into analyze_bigint values(213545678125);

1 rows affected.

SQL> insert into analyze_bigint values(213545678126);

1 rows affected.

SQL> insert into analyze_bigint values(213545678127);

1 rows affected.

SQL> insert into analyze_bigint values(213545678128);

1 rows affected.

SQL> insert into analyze_bigint values(213545678129);

1 rows affected.

SQL> insert into analyze_bigint values(213545678130);

1 rows affected.

SQL> -- 21
SQL> insert into analyze_bigint values(213545678100);

1 rows affected.

SQL> insert into analyze_bigint values(213545678101);

1 rows affected.

SQL> insert into analyze_bigint values(213545678102);

1 rows affected.

SQL> insert into analyze_bigint values(213545678103);

1 rows affected.

SQL> insert into analyze_bigint values(213545678104);

1 rows affected.

SQL> insert into analyze_bigint values(213545678105);

1 rows affected.

SQL> insert into analyze_bigint values(213545678106);

1 rows affected.

SQL> insert into analyze_bigint values(213545678107);

1 rows affected.

SQL> insert into analyze_bigint values(213545678108);

1 rows affected.

SQL> insert into analyze_bigint values(213545678109);

1 rows affected.

SQL> insert into analyze_bigint values(213545678110);

1 rows affected.

SQL> insert into analyze_bigint values(213545678111);

1 rows affected.

SQL> insert into analyze_bigint values(213545678112);

1 rows affected.

SQL> insert into analyze_bigint values(213545678113);

1 rows affected.

SQL> insert into analyze_bigint values(213545678114);

1 rows affected.

SQL> insert into analyze_bigint values(213545678115);

1 rows affected.

SQL> insert into analyze_bigint values(213545678116);

1 rows affected.

SQL> insert into analyze_bigint values(213545678117);

1 rows affected.

SQL> insert into analyze_bigint values(213545678118);

1 rows affected.

SQL> insert into analyze_bigint values(213545678119);

1 rows affected.

SQL> insert into analyze_bigint values(213545678120);

1 rows affected.

SQL> -- 21
SQL> insert into analyze_bigint values(213545678110);

1 rows affected.

SQL> insert into analyze_bigint values(213545678111);

1 rows affected.

SQL> insert into analyze_bigint values(213545678112);

1 rows affected.

SQL> insert into analyze_bigint values(213545678113);

1 rows affected.

SQL> insert into analyze_bigint values(213545678114);

1 rows affected.

SQL> insert into analyze_bigint values(213545678115);

1 rows affected.

SQL> insert into analyze_bigint values(213545678116);

1 rows affected.

SQL> insert into analyze_bigint values(213545678117);

1 rows affected.

SQL> insert into analyze_bigint values(213545678118);

1 rows affected.

SQL> insert into analyze_bigint values(213545678119);

1 rows affected.

SQL> insert into analyze_bigint values(213545678120);

1 rows affected.

SQL> insert into analyze_bigint values(213545678121);

1 rows affected.

SQL> insert into analyze_bigint values(213545678122);

1 rows affected.

SQL> insert into analyze_bigint values(213545678123);

1 rows affected.

SQL> insert into analyze_bigint values(213545678124);

1 rows affected.

SQL> insert into analyze_bigint values(213545678125);

1 rows affected.

SQL> insert into analyze_bigint values(213545678126);

1 rows affected.

SQL> insert into analyze_bigint values(213545678127);

1 rows affected.

SQL> insert into analyze_bigint values(213545678128);

1 rows affected.

SQL> insert into analyze_bigint values(213545678129);

1 rows affected.

SQL> insert into analyze_bigint values(213545678130);

1 rows affected.

SQL> analyze table analyze_bigint compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_BIGINT') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
213545678100                                                     2           
213545678101                                                     4           
213545678102                                                     6           
213545678103                                                     8           
213545678104                                                     10          
213545678105                                                     12          
213545678106                                                     14          
213545678107                                                     16          
213545678108                                                     18          
213545678109                                                     20          
213545678110                                                     23          
213545678111                                                     26          
213545678112                                                     29          
213545678113                                                     32          
213545678114                                                     35          
213545678115                                                     38          
213545678116                                                     41          
213545678117                                                     44          
213545678118                                                     47          
213545678119                                                     50          
213545678120                                                     53          
213545678121                                                     55          
213545678122                                                     57          
213545678123                                                     59          
213545678124                                                     61          
213545678125                                                     63          
213545678126                                                     65          
213545678127                                                     67          
213545678128                                                     69          
213545678129                                                     71          
213545678130                                                     73          

31 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY  from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_BIGINT');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
31           73           0            213545678100                                                     213545678130                                                     31           0.032258064516129   

1 rows fetched.

SQL> drop table analyze_bigint;

Succeed.

SQL> 
SQL> drop table analyze_number;

CT-00843, The table or view SYS.ANALYZE_NUMBER does not exist.
SQL> create table analyze_number(a number);

Succeed.

SQL> -- 15
SQL> insert into analyze_number values(12312.121);

1 rows affected.

SQL> insert into analyze_number values(12312.122);

1 rows affected.

SQL> insert into analyze_number values(12312.122);

1 rows affected.

SQL> insert into analyze_number values(12312.123);

1 rows affected.

SQL> insert into analyze_number values(12312.123);

1 rows affected.

SQL> insert into analyze_number values(12312.123);

1 rows affected.

SQL> insert into analyze_number values(12312.124);

1 rows affected.

SQL> insert into analyze_number values(12312.124);

1 rows affected.

SQL> insert into analyze_number values(12312.124);

1 rows affected.

SQL> insert into analyze_number values(12312.124);

1 rows affected.

SQL> insert into analyze_number values(12312.125);

1 rows affected.

SQL> insert into analyze_number values(12312.125);

1 rows affected.

SQL> insert into analyze_number values(12312.125);

1 rows affected.

SQL> insert into analyze_number values(12312.125);

1 rows affected.

SQL> insert into analyze_number values(12312.125);

1 rows affected.

SQL> analyze table analyze_number compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_NUMBER') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
12312.121                                                        1           
12312.122                                                        3           
12312.123                                                        6           
12312.124                                                        10          
12312.125                                                        15          

5 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY  from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_NUMBER');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
5            15           0            12312.121                                                        12312.125                                                        5            0.2                 

1 rows fetched.

SQL> drop table analyze_number;

Succeed.

SQL> 
SQL> 
SQL> drop table analyze_date;

CT-00843, The table or view SYS.ANALYZE_DATE does not exist.
SQL> create table analyze_date(a date);

Succeed.

SQL> -- 15
SQL> insert into analyze_date values('1992-02-09');

1 rows affected.

SQL> insert into analyze_date values('1993-02-09');

1 rows affected.

SQL> insert into analyze_date values('1993-02-09');

1 rows affected.

SQL> insert into analyze_date values('1994-02-09');

1 rows affected.

SQL> insert into analyze_date values('1994-02-09');

1 rows affected.

SQL> insert into analyze_date values('1994-02-09');

1 rows affected.

SQL> insert into analyze_date values('1995-02-09');

1 rows affected.

SQL> insert into analyze_date values('1995-02-09');

1 rows affected.

SQL> insert into analyze_date values('1995-02-09');

1 rows affected.

SQL> insert into analyze_date values('1995-02-09');

1 rows affected.

SQL> insert into analyze_date values('1995-02-19');

1 rows affected.

SQL> insert into analyze_date values('1995-02-19');

1 rows affected.

SQL> insert into analyze_date values('1995-02-19');

1 rows affected.

SQL> insert into analyze_date values('1995-02-19');

1 rows affected.

SQL> insert into analyze_date values('1995-02-19');

1 rows affected.

SQL> analyze table analyze_date compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_DATE') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
1992-02-09 00:00:00                                              1           
1993-02-09 00:00:00                                              3           
1994-02-09 00:00:00                                              6           
1995-02-09 00:00:00                                              10          
1995-02-19 00:00:00                                              15          

5 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY   from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_DATE');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
5            15           0            1992-02-09 00:00:00                                              1995-02-19 00:00:00                                              5            0.2                 

1 rows fetched.

SQL> drop table analyze_date;

Succeed.

SQL> 
SQL> 
SQL> drop table analyze_timestamp;

CT-00843, The table or view SYS.ANALYZE_TIMESTAMP does not exist.
SQL> create table analyze_timestamp(a timestamp);

Succeed.

SQL> -- 15
SQL> insert into analyze_timestamp values('1992-02-09 15:12:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:22:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:22:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:32:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:32:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:32:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:42:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:42:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:42:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:42:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:52:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:52:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:52:36');

1 rows affected.

SQL> insert into analyze_timestamp values('1992-02-09 15:52:36');

1 rows affected.

SQL> insert into analyze_timestamp values('2009-02-09 15:52:36');

1 rows affected.

SQL> insert into analyze_timestamp values('2009-02-09 15:52:36');

1 rows affected.

SQL> analyze table analyze_timestamp compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_TIMESTAMP') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
1992-02-09 15:12:36                                              1           
1992-02-09 15:22:36                                              3           
1992-02-09 15:32:36                                              6           
1992-02-09 15:42:36                                              10          
1992-02-09 15:52:36                                              14          
2009-02-09 15:52:36                                              16          

6 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY  from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_TIMESTAMP');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
6            16           0            1992-02-09 15:12:36                                              2009-02-09 15:52:36                                              6            0.166666666666667   

1 rows fetched.

SQL> drop table analyze_timestamp;

Succeed.

SQL> 
SQL> 
SQL> 
SQL> drop table analyze_real;

CT-00843, The table or view SYS.ANALYZE_REAL does not exist.
SQL> create table analyze_real(a real);

Succeed.

SQL> insert into analyze_real values(11272.264);

1 rows affected.

SQL> insert into analyze_real values(11372.264);

1 rows affected.

SQL> insert into analyze_real values(11372.264);

1 rows affected.

SQL> insert into analyze_real values(11472.264);

1 rows affected.

SQL> insert into analyze_real values(11472.264);

1 rows affected.

SQL> insert into analyze_real values(11472.264);

1 rows affected.

SQL> insert into analyze_real values(11572.264);

1 rows affected.

SQL> insert into analyze_real values(11572.264);

1 rows affected.

SQL> insert into analyze_real values(11572.264);

1 rows affected.

SQL> insert into analyze_real values(21372.264);

1 rows affected.

SQL> insert into analyze_real values(21272.264);

1 rows affected.

SQL> insert into analyze_real values(21372.264);

1 rows affected.

SQL> insert into analyze_real values(21372.964);

1 rows affected.

SQL> insert into analyze_real values(21272.964);

1 rows affected.

SQL> insert into analyze_real values(21372.964);

1 rows affected.

SQL> analyze table analyze_real compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_REAL') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
11272.264                                                        1           
11372.264                                                        3           
11472.264                                                        6           
11572.264                                                        9           
21272.264                                                        10          
21272.964                                                        11          
21372.264                                                        13          
21372.964                                                        15          

8 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_REAL');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
8            15           0            11272.264                                                        21372.964                                                        8            0.125               

1 rows fetched.

SQL> drop table analyze_real;

Succeed.

SQL> 
SQL> drop table analyze_char;

CT-00843, The table or view SYS.ANALYZE_CHAR does not exist.
SQL> create table analyze_char(a char(10));

Succeed.

SQL> insert into analyze_char values('aaaaaaaaaa');

1 rows affected.

SQL> insert into analyze_char values('bbbbbaaaaa');

1 rows affected.

SQL> insert into analyze_char values('bbbbbaaaaa');

1 rows affected.

SQL> insert into analyze_char values('cccccaaaaa');

1 rows affected.

SQL> insert into analyze_char values('cccccaaaaa');

1 rows affected.

SQL> insert into analyze_char values('cccccaaaaa');

1 rows affected.

SQL> insert into analyze_char values('dddddaaaaa');

1 rows affected.

SQL> insert into analyze_char values('ddddaaaaa');

1 rows affected.

SQL> insert into analyze_char values('ddddaaaaa');

1 rows affected.

SQL> analyze table analyze_char compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_CHAR') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
aaaaaaaaaa                                                       1           
bbbbbaaaaa                                                       3           
cccccaaaaa                                                       6           
ddddaaaaa                                                        8           
dddddaaaaa                                                       9           

5 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_CHAR');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
5            9            0            aaaaaaaaaa                                                       dddddaaaaa                                                       5            0.2                 

1 rows fetched.

SQL> drop table analyze_char;

Succeed.

SQL> 
SQL> 
SQL> drop table analyze_lob;

CT-00843, The table or view SYS.ANALYZE_LOB does not exist.
SQL> create table analyze_lob(a clob);

Succeed.

SQL> insert into analyze_lob values('aaaaaaaaaa');

1 rows affected.

SQL> insert into analyze_lob values('bbbbbaaaaa');

1 rows affected.

SQL> insert into analyze_lob values('bbbbbaaaaa');

1 rows affected.

SQL> insert into analyze_lob values('ccccaaaaaa');

1 rows affected.

SQL> insert into analyze_lob values('ccccbaaaaa');

1 rows affected.

SQL> insert into analyze_lob values('ccdeebaaaaa');

1 rows affected.

SQL> insert into analyze_lob values('eeeeeeaaaaa');

1 rows affected.

SQL> insert into analyze_lob values('ddddddaaaaa');

1 rows affected.

SQL> analyze table analyze_lob compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_LOB') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_LOB');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------

0 rows fetched.

SQL> drop table analyze_lob;

Succeed.

SQL> 
SQL> drop table analyze_null;

CT-00843, The table or view SYS.ANALYZE_NULL does not exist.
SQL> create table analyze_null(a varchar(10));

Succeed.

SQL> insert into analyze_null values ('');

1 rows affected.

SQL> insert into analyze_null values ('');

1 rows affected.

SQL> -- 6
SQL> insert into analyze_null values(null);

1 rows affected.

SQL> insert into analyze_null values(null);

1 rows affected.

SQL> insert into analyze_null values(null);

1 rows affected.

SQL> insert into analyze_null values(null);

1 rows affected.

SQL> insert into analyze_null values(null);

1 rows affected.

SQL> insert into analyze_null values(null);

1 rows affected.

SQL> analyze table analyze_null compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_NULL') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_NULL');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
0            8            8                                                                                                                                              0            0                   

1 rows fetched.

SQL> drop table analyze_null;

Succeed.

SQL> 
SQL> drop table analyze_index;

CT-00843, The table or view SYS.ANALYZE_INDEX does not exist.
SQL> create table analyze_index (a char(10));

Succeed.

SQL> create index ix_analy001 on analyze_index(a);

Succeed.

SQL> insert into analyze_index values('aaaabbb');

1 rows affected.

SQL> insert into analyze_index values('bbcccc');

1 rows affected.

SQL> insert into analyze_index values('aaaabbb');

1 rows affected.

SQL> insert into analyze_index values('bbcccc');

1 rows affected.

SQL> insert into analyze_index values('bbb');

1 rows affected.

SQL> insert into analyze_index values('ccc');

1 rows affected.

SQL> insert into analyze_index values('ddd');

1 rows affected.

SQL> insert into analyze_index values('eee');

1 rows affected.

SQL> insert into analyze_index values('fff');

1 rows affected.

SQL> insert into analyze_index values('ggg');

1 rows affected.

SQL> insert into analyze_index values('hhh');

1 rows affected.

SQL> insert into analyze_index values('jjj');

1 rows affected.

SQL> insert into analyze_index values('iii');

1 rows affected.

SQL> insert into analyze_index values('ooo');

1 rows affected.

SQL> insert into analyze_index values('ppp');

1 rows affected.

SQL> insert into analyze_index values('qqqq');

1 rows affected.

SQL> insert into analyze_index values('vvvvv');

1 rows affected.

SQL> insert into analyze_index values('xxxx');

1 rows affected.

SQL> analyze table analyze_index compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_INDEX') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
aaaabbb                                                          2           
bbb                                                              3           
bbcccc                                                           5           
ccc                                                              6           
ddd                                                              7           
eee                                                              8           
fff                                                              9           
ggg                                                              10          
hhh                                                              11          
iii                                                              12          
jjj                                                              13          
ooo                                                              14          
ppp                                                              15          
qqqq                                                             16          
vvvvv                                                            17          
xxxx                                                             18          

16 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_INDEX');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
16           18           0            aaaabbb                                                          xxxx                                                             16           0.0625              

1 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'ANALYZE_INDEX');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
1            1            16            0.0625                  0.5                    

1 rows fetched.

SQL> drop table analyze_index;

Succeed.

SQL> 
SQL> drop table analyze_delete;

CT-00843, The table or view SYS.ANALYZE_DELETE does not exist.
SQL> create table analyze_delete (a char(10));

Succeed.

SQL> create index ix_analy002 on analyze_delete(a);

Succeed.

SQL> insert into analyze_delete values('aaaabbb');

1 rows affected.

SQL> insert into analyze_delete values('bbcccc');

1 rows affected.

SQL> insert into analyze_delete values('aaaabbb');

1 rows affected.

SQL> insert into analyze_delete values('bbcccc');

1 rows affected.

SQL> insert into analyze_delete values('bbb');

1 rows affected.

SQL> insert into analyze_delete values('ccc');

1 rows affected.

SQL> insert into analyze_delete values('ddd');

1 rows affected.

SQL> insert into analyze_delete values('eee');

1 rows affected.

SQL> insert into analyze_delete values('fff');

1 rows affected.

SQL> insert into analyze_delete values('ggg');

1 rows affected.

SQL> insert into analyze_delete values('hhh');

1 rows affected.

SQL> analyze table analyze_delete compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_DELETE') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
aaaabbb                                                          2           
bbb                                                              3           
bbcccc                                                           5           
ccc                                                              6           
ddd                                                              7           
eee                                                              8           
fff                                                              9           
ggg                                                              10          
hhh                                                              11          

9 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_DELETE');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
9            11           0            aaaabbb                                                          hhh                                                              9            0.111111111111111   

1 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'ANALYZE_DELETE');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
1            1            9             0.111111111111111       0.888888888888889      

1 rows fetched.

SQL> delete from analyze_delete;

11 rows affected.

SQL> analyze table analyze_delete compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_DELETE') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_DELETE');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
0            0            0                                                                                                                                              0            0                   

1 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'ANALYZE_DELETE');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
1            1            0             1                       8                      

1 rows fetched.

SQL> drop table analyze_delete;

Succeed.

SQL> 
SQL> drop table analyze_all;

CT-00843, The table or view SYS.ANALYZE_ALL does not exist.
SQL> create table analyze_all(a int, b bigint, c number, d date, e timestamp, f real, g char(10), h clob, i varchar(10));

Succeed.

SQL> create index ix_analy003 on analyze_all(a);

Succeed.

SQL> create index ix_analy004 on analyze_all(a, g);

Succeed.

SQL> create index ix_analy005 on analyze_all(a, b);

Succeed.

SQL> insert into analyze_all values(1,213545678100, 12312.122, '1990-11-30', '1992-02-09 15:12:36', 11272.264, 'aaaaaaaaaa','aaaaaaaaaaa','aaaaa');

1 rows affected.

SQL> insert into analyze_all values(2,213545678120, 22312.122, '1992-11-30', '1992-02-09 20:12:36', 21272.264, 'bbbbaaaaaa','aaaaaaaaaaa','aaaaaaa');

1 rows affected.

SQL> insert into analyze_all values(2,213545678120, 22312.122, '1992-11-30', '1992-02-09 20:12:36', 21272.264, 'ccccaaaaaa','aaaaaaaaaaa','aaaaaaaa');

1 rows affected.

SQL> insert into analyze_all values(3,213545678130, 32312.122, '1993-11-09', '1990-11-30 15:12:36', 31272.264, 'dddaaaaaaa','aaaaaaaaaaa','aaaaaaaaaa');

1 rows affected.

SQL> insert into analyze_all values(3,213545678130, 32312.122, '1993-11-09', '1990-11-30 15:12:36', 31272.264, 'dddddaaaaa','aaaaaaaaaaa','bbbbb');

1 rows affected.

SQL> insert into analyze_all values(3,213545678130, 32312.122, '1993-02-09', '1990-11-30 20:12:36', 31272.264, 'dddddaaaaa','aaaaaaaaaaa','bbb');

1 rows affected.

SQL> insert into analyze_all values(4,213545678140, 42312.122, '1994-11-30', '1993-02-09 15:12:38', 41272.264, 'fffffaaaaa','aaaaaaaaaaa','bbbbb');

1 rows affected.

SQL> insert into analyze_all values(4,213545678140, 42312.122, '1994-11-30', '1993-02-09 15:12:38', 41272.264, 'fffffaaaaa','aaaaaaaaaaa','bbbbb');

1 rows affected.

SQL> insert into analyze_all values(4,213545678140, 12312.222, '1994-02-09', '1993-02-09 15:12:39', 41272.264, 'fffffaaaaa','aaaaaaaaaaa','ccccc');

1 rows affected.

SQL> insert into analyze_all values(4,213545678140, 12312.222, '1994-02-09', '1993-02-09 15:12:39', 41272.264, 'ffffaaaaaa','aaaaaaaaaaa','ccccc');

1 rows affected.

SQL> insert into analyze_all values(5,213545678150, 52312.122, '1995-02-09', '1995-02-09 15:12:40', 41272.264, 'ffffaaaaaa','aaaaaaaaaaa','ccccc');

1 rows affected.

SQL> insert into analyze_all values(5,213545678150, 52312.122, '1995-02-09', '1995-02-09 15:12:40', 61272.264, 'fgggaaaaaa','aaaaaaaaaaa','ccccc');

1 rows affected.

SQL> insert into analyze_all values(5,213545678150, 12312.722, '1995-02-09', '1995-02-09 15:12:40', 61272.264, 'fgggaaaaaa','aaaaaaaaaaa','ccccc');

1 rows affected.

SQL> insert into analyze_all values(5,213545678150, 12312.722, '1995-02-09', '1995-02-09 15:12:40', 61272.264, 'cccccaaaaa','aaaaaaaaaaa','bbb');

1 rows affected.

SQL> insert into analyze_all values(5,213545678150, 12312.722, '1995-02-09', '1995-02-09 15:12:40', 61272.264, 'cccccaaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into analyze_all values(null,null,null,null,null,null,null,null,null);

1 rows affected.

SQL> insert into analyze_all values(null,null,null,null,null,null,null,null,null);

1 rows affected.

SQL> insert into analyze_all values(null,null,null,null,null,null,null,null,null);

1 rows affected.

SQL> analyze table analyze_all compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 0 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
1                                                                1           
2                                                                3           
3                                                                6           
4                                                                10          
5                                                                15          

5 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 1 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
213545678100                                                     1           
213545678120                                                     3           
213545678130                                                     6           
213545678140                                                     10          
213545678150                                                     15          

5 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 2 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
12312.122                                                        1           
12312.222                                                        3           
12312.722                                                        6           
22312.122                                                        8           
32312.122                                                        11          
42312.122                                                        13          
52312.122                                                        15          

7 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 3 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
1990-11-30 00:00:00                                              1           
1992-11-30 00:00:00                                              3           
1993-02-09 00:00:00                                              4           
1993-11-09 00:00:00                                              6           
1994-02-09 00:00:00                                              8           
1994-11-30 00:00:00                                              10          
1995-02-09 00:00:00                                              15          

7 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 4 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
1990-11-30 15:12:36                                              2           
1990-11-30 20:12:36                                              3           
1992-02-09 15:12:36                                              4           
1992-02-09 20:12:36                                              6           
1993-02-09 15:12:38                                              8           
1993-02-09 15:12:39                                              10          
1995-02-09 15:12:40                                              15          

7 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 5 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
11272.264                                                        1           
21272.264                                                        3           
31272.264                                                        6           
41272.264                                                        11          
61272.264                                                        15          

5 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 6 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
aaaaaaaaaa                                                       1           
bbbbaaaaaa                                                       2           
ccccaaaaaa                                                       3           
cccccaaaaa                                                       5           
dddaaaaaaa                                                       6           
dddddaaaaa                                                       8           
ffffaaaaaa                                                       10          
fffffaaaaa                                                       13          
fgggaaaaaa                                                       15          

9 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 7 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 8 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
aaaaa                                                            1           
aaaaaa                                                           2           
aaaaaaa                                                          3           
aaaaaaaa                                                         4           
aaaaaaaaaa                                                       5           
bbb                                                              7           
bbbbb                                                            10          
ccccc                                                            15          

8 rows fetched.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') AND COL# = 9 order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------

0 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') order BY COL#;

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
5            18           3            1                                                                5                                                                5            0.2                 
5            18           3            213545678100                                                     213545678150                                                     5            0.2                 
7            18           3            12312.122                                                        52312.122                                                        7            0.142857142857143   
7            18           3            1990-11-30 00:00:00                                              1995-02-09 00:00:00                                              7            0.142857142857143   
7            18           3            1990-11-30 15:12:36                                              1995-02-09 15:12:40                                              7            0.142857142857143   
5            18           3            11272.264                                                        61272.264                                                        5            0.2                 
9            18           3            aaaaaaaaaa                                                       fgggaaaaaa                                                       9            0.111111111111111   
8            18           3            aaaaa                                                            ccccc                                                            8            0.125               

8 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'ANALYZE_ALL') ORDER BY ID;

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
1            1            6             0.166666666666667       1.33333333333333       
1            1            11            0.0909090909090909      0.727272727272727      
1            1            6             0.166666666666667       1.33333333333333       

3 rows fetched.

SQL> drop table analyze_all;

Succeed.

SQL> 
SQL> drop table if exists any_partition_add_table0;

Succeed.

SQL> create table any_partition_add_table0(id1 int, id2 int, id3 clob)
  2 partition by range(id1, id2)
  3 (
  4 partition p1 values less than(5, 50),
  5 partition p2 values less than(10, 100),
  6 partition p3 values less than(20, 200)
  7 );

Succeed.

SQL> 
SQL> insert into any_partition_add_table0 values(6, 200, 'asdfasfadsfasdfadsfadsf');

1 rows affected.

SQL> analyze table any_partition_add_table0 compute statistics;

Succeed.

SQL> drop table if exists any_partition_add_table0;

Succeed.

SQL> 
SQL> ----------------
SQL> set serveroutput on

ON
SQL> drop table if exists gs_analyze_test;

Succeed.

SQL> drop table if exists gs_analyze_test1;

Succeed.

SQL> create table gs_analyze_test(a int);

Succeed.

SQL> create table gs_analyze_test1(a int);

Succeed.

SQL> alter system set sql_stat = true;

Succeed.

SQL> insert into gs_analyze_test values(1),(2),(3);

3 rows affected.

SQL> commit;

Succeed.

SQL> declare
  2 prev int;
  3 next int;
  4 tmp int;
  5 begin
  6 select count(1) into tmp from gs_analyze_test;
  7 execute immediate 'select processed_rows from v$sqlarea where sql_text = ''select count(1) from gs_analyze_test''' into prev;
  8 select count(1) into tmp from gs_analyze_test;
  9 execute immediate 'select processed_rows from v$sqlarea where sql_text = ''select count(1) from gs_analyze_test''' into next;
 10 dbe_output.print_line('select processed_rows:' || (next-prev));
 11 end;
 12 /

select processed_rows:1

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 prev int;
  3 next int;
  4 begin
  5 insert into gs_analyze_test1 select * from gs_analyze_test;
  6 execute immediate 'select processed_rows from v$sqlarea where sql_text like ''insert into gs_analyze_test1%select%''' into prev;
  7 insert into gs_analyze_test1 select * from gs_analyze_test;
  8 execute immediate 'select processed_rows from v$sqlarea where sql_text like ''insert into gs_analyze_test1%select%''' into next;
  9 dbe_output.print_line('insert processed_rows:' || (next-prev));
 10 end;
 11 /

insert processed_rows:3

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 prev int;
  3 next int;
  4 begin
  5 update gs_analyze_test set a = 200;
  6 execute immediate 'select processed_rows from v$sqlarea where sql_text like ''update%gs_analyze_test%set%a%=%200%''' into prev;
  7 update gs_analyze_test set a = 200;
  8 execute immediate 'select processed_rows from v$sqlarea where sql_text like ''update%gs_analyze_test%set%a%=%200%''' into next;
  9 dbe_output.print_line('update processed_rows:' || (next-prev));
 10 end;
 11 /

update processed_rows:3

PL/SQL procedure successfully completed.

SQL> 
SQL> declare
  2 prev int;
  3 next int;
  4 begin
  5 delete from gs_analyze_test;
  6 execute immediate 'select processed_rows from v$sqlarea where sql_text like ''delete%from%gs_analyze_test%''' into prev;
  7 insert into gs_analyze_test values(1),(2),(3);
  8 delete from gs_analyze_test;
  9 execute immediate 'select processed_rows from v$sqlarea where sql_text like ''delete%from%gs_analyze_test%''' into next;
 10 dbe_output.print_line('delete processed_rows:' || (next-prev));
 11 end;
 12 /

delete processed_rows:3

PL/SQL procedure successfully completed.

SQL> 
SQL> ----------------
SQL> drop table if exists gs_analyze_test;

Succeed.

SQL> create table gs_analyze_test(a int);

Succeed.

SQL> select * from table(dba_analyze_table('SYS','GS_ANALYZE_TEST'));

STAT_ITEM                                                        VALUE               
---------------------------------------------------------------- --------------------
total pages                                                      0                   
total extents                                                    0                   
total rows                                                       0                   
linked rows                                                      0                   
mirgated rows                                                    0                   
average row size                                                 0                   

6 rows fetched.

SQL> select * from table(dba_analyze_table('SYS','GS_ANALYZE_TEST', 2));

CT-00615, [1:21]Invalid argument number for DBA_ANALYZE_TABLE, min=2, max=2
SQL> drop table if exists gs_analyze_test;

Succeed.

SQL> select * from table(dba_analyze_table('SYS','GS_ANALYZE_TEST'));

CT-00843, The table or view SYS.GS_ANALYZE_TEST does not exist.
SQL> set serveroutput off

OFF
SQL> 
SQL> analyze table SYS_TABLES compute statistics;

Succeed.

SQL> 
SQL> drop table analyze_char;

CT-00843, The table or view SYS.ANALYZE_CHAR does not exist.
SQL> create table analyze_char(a varchar(1000));

Succeed.

SQL> insert into analyze_char values(LPAD('a',300,'a'));

1 rows affected.

SQL> insert into analyze_char values(LPAD('bx',1000,'bx'));

1 rows affected.

SQL> insert into analyze_char values(LPAD('ac',300,'ac'));

1 rows affected.

SQL> insert into analyze_char values(LPAD('ac',300,'ac'));

1 rows affected.

SQL> insert into analyze_char values(LPAD('bx',1000,'bx'));

1 rows affected.

SQL> analyze table analyze_char compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'ANALYZE_CHAR') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 1           
acacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacac 3           
bxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbx 5           

3 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'ANALYZE_CHAR');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
3            5            0            aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa bxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbxbx 3            0.333333333333333   

1 rows fetched.

SQL> drop table analyze_char;

Succeed.

SQL> 
SQL> drop table if exists hzy_high_hist;

Succeed.

SQL> drop table if exists high_hist;

Succeed.

SQL> create table high_hist(a int);

Succeed.

SQL> insert into high_hist values(0);

1 rows affected.

SQL> create table hzy_high_hist(a int);

Succeed.

SQL> CREATE or replace procedure storage_proc_000(startnum int,endall int) is
  2 i INT :=1;
  3 j varchar(10);
  4 BEGIN
  5   FOR i IN startnum..endall LOOP
  6     insert into hzy_high_hist select a+i from high_hist;
  7   END LOOP;
  8 END;
  9 /

Succeed.

SQL> call storage_proc_000(1,1000);

PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> analyze table hzy_high_hist compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'HZY_HIGH_HIST') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
3                                                                1           
7                                                                2           
11                                                               3           
15                                                               4           
19                                                               5           
23                                                               6           
27                                                               7           
31                                                               8           
35                                                               9           
39                                                               10          
43                                                               11          
47                                                               12          
51                                                               13          
55                                                               14          
59                                                               15          
62                                                               16          
66                                                               17          
70                                                               18          
74                                                               19          
78                                                               20          
82                                                               21          
86                                                               22          
90                                                               23          
94                                                               24          
98                                                               25          
102                                                              26          
106                                                              27          
110                                                              28          
114                                                              29          
118                                                              30          
122                                                              31          
125                                                              32          
129                                                              33          
133                                                              34          
137                                                              35          
141                                                              36          
145                                                              37          
149                                                              38          
153                                                              39          
157                                                              40          
161                                                              41          
165                                                              42          
169                                                              43          
173                                                              44          
177                                                              45          
181                                                              46          
185                                                              47          
188                                                              48          
192                                                              49          
196                                                              50          
200                                                              51          
204                                                              52          
208                                                              53          
212                                                              54          
216                                                              55          
220                                                              56          
224                                                              57          
228                                                              58          
232                                                              59          
236                                                              60          
240                                                              61          
244                                                              62          
248                                                              63          
251                                                              64          
255                                                              65          
259                                                              66          
263                                                              67          
267                                                              68          
271                                                              69          
275                                                              70          
279                                                              71          
283                                                              72          
287                                                              73          
291                                                              74          
295                                                              75          
299                                                              76          
303                                                              77          
307                                                              78          
311                                                              79          
314                                                              80          
318                                                              81          
322                                                              82          
326                                                              83          
330                                                              84          
334                                                              85          
338                                                              86          
342                                                              87          
346                                                              88          
350                                                              89          
354                                                              90          
358                                                              91          
362                                                              92          
366                                                              93          
370                                                              94          
374                                                              95          
377                                                              96          
381                                                              97          
385                                                              98          
389                                                              99          
393                                                              100         
397                                                              101         
401                                                              102         
405                                                              103         
409                                                              104         
413                                                              105         
417                                                              106         
421                                                              107         
425                                                              108         
429                                                              109         
433                                                              110         
437                                                              111         
440                                                              112         
444                                                              113         
448                                                              114         
452                                                              115         
456                                                              116         
460                                                              117         
464                                                              118         
468                                                              119         
472                                                              120         
476                                                              121         
480                                                              122         
484                                                              123         
488                                                              124         
492                                                              125         
496                                                              126         
500                                                              127         
503                                                              128         
507                                                              129         
511                                                              130         
515                                                              131         
519                                                              132         
523                                                              133         
527                                                              134         
531                                                              135         
535                                                              136         
539                                                              137         
543                                                              138         
547                                                              139         
551                                                              140         
555                                                              141         
559                                                              142         
562                                                              143         
566                                                              144         
570                                                              145         
574                                                              146         
578                                                              147         
582                                                              148         
586                                                              149         
590                                                              150         
594                                                              151         
598                                                              152         
602                                                              153         
606                                                              154         
610                                                              155         
614                                                              156         
618                                                              157         
622                                                              158         
625                                                              159         
629                                                              160         
633                                                              161         
637                                                              162         
641                                                              163         
645                                                              164         
649                                                              165         
653                                                              166         
657                                                              167         
661                                                              168         
665                                                              169         
669                                                              170         
673                                                              171         
677                                                              172         
681                                                              173         
685                                                              174         
688                                                              175         
692                                                              176         
696                                                              177         
700                                                              178         
704                                                              179         
708                                                              180         
712                                                              181         
716                                                              182         
720                                                              183         
724                                                              184         
728                                                              185         
732                                                              186         
736                                                              187         
740                                                              188         
744                                                              189         
748                                                              190         
751                                                              191         
755                                                              192         
759                                                              193         
763                                                              194         
767                                                              195         
771                                                              196         
775                                                              197         
779                                                              198         
783                                                              199         
787                                                              200         
791                                                              201         
795                                                              202         
799                                                              203         
803                                                              204         
807                                                              205         
811                                                              206         
814                                                              207         
818                                                              208         
822                                                              209         
826                                                              210         
830                                                              211         
834                                                              212         
838                                                              213         
842                                                              214         
846                                                              215         
850                                                              216         
854                                                              217         
858                                                              218         
862                                                              219         
866                                                              220         
870                                                              221         
874                                                              222         
877                                                              223         
881                                                              224         
885                                                              225         
889                                                              226         
893                                                              227         
897                                                              228         
901                                                              229         
905                                                              230         
909                                                              231         
913                                                              232         
917                                                              233         
921                                                              234         
925                                                              235         
929                                                              236         
933                                                              237         
937                                                              238         
940                                                              239         
944                                                              240         
948                                                              241         
952                                                              242         
956                                                              243         
960                                                              244         
964                                                              245         
968                                                              246         
972                                                              247         
976                                                              248         
980                                                              249         
984                                                              250         
988                                                              251         
992                                                              252         
996                                                              253         
1000                                                             254         

254 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'HZY_HIGH_HIST');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
254          1000         0            1                                                                1000                                                             1000         0.001               

1 rows fetched.

SQL> drop table if exists hzy_high_hist;

Succeed.

SQL> drop table if exists high_hist;

Succeed.

SQL> 
SQL> drop table if exists t1;

Succeed.

SQL> create table t1 (a int,b char(10));

Succeed.

SQL> insert into t1 values (1,4);

1 rows affected.

SQL> call DBE_STATS.FLUSH_DB_STATS_INFO();

PL/SQL procedure successfully completed.

SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from  dba_tab_modifications where table_name='T1';

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
SYS                                                              T1                                                                                                                                                                                                 1            0            0            0            

1 rows fetched.

SQL> 
SQL> 
SQL> drop table if exists heap_tab_002;

Succeed.

SQL> create table heap_tab_002(
  2 field1 integer,
  3 field2 bigint,
  4 field3 real,
  5 field4 decimal(10,2),
  6 field5 number(6)
  7 );

Succeed.

SQL> 
SQL> declare
  2 i int:=0;
  3 begin
  4 loop
  5 i:=i+1;
  6 INSERT INTO heap_tab_002(field1,field2,field3,field4,field5) VALUES(102,100000,123.321,123.123654,123456);
  7 exit when i= 100;
  8 commit;
  9 end loop;
 10 dbe_output.print_line('111');
 11 end;
 12 /

PL/SQL procedure successfully completed.

SQL> 
SQL> analyze table heap_tab_002 compute statistics;

Succeed.

SQL> truncate table heap_tab_002;

Succeed.

SQL> select num_rows,blocks,avg_row_len from SYS_TABLES where name = 'HEAP_TAB_002';

NUM_ROWS     BLOCKS       AVG_ROW_LEN         
------------ ------------ --------------------
100          1            44                  

1 rows fetched.

SQL> 
SQL> DROP TABLE IF EXISTS BIN_TEST; 

Succeed.

SQL> CREATE TABLE BIN_TEST(A varchar(100));

Succeed.

SQL> insert into BIN_TEST values('da');

1 rows affected.

SQL> alter table BIN_TEST add add_binary binary(100) default lpad('111',100,'222');

Succeed.

SQL> alter table BIN_TEST add add_binary1 binary(40) default lpad('111',30,'222');

Succeed.

SQL> analyze table BIN_TEST compute statistics;

Succeed.

SQL> 
SQL> drop table if exists hzy_high_hist;

Succeed.

SQL> drop table if exists high_hist;

Succeed.

SQL> create table high_hist(a int);

Succeed.

SQL> insert into high_hist values(0);

1 rows affected.

SQL> create table hzy_high_hist(a int);

Succeed.

SQL> CREATE or replace procedure storage_proc_000(startnum int,endall int) is
  2 i INT :=1;
  3 j varchar(10);
  4 BEGIN
  5   FOR i IN startnum..endall LOOP
  6     insert into hzy_high_hist select a+i from high_hist;
  7   END LOOP;
  8 END;
  9 /

Succeed.

SQL> call storage_proc_000(1,24001);

PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> update hzy_high_hist set a = 5  where a between 5 and 9995;

9991 rows affected.

SQL> analyze table hzy_high_hist compute statistics;

Succeed.

SQL> select BUCKET,ENDPOINT  from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'HZY_HIGH_HIST') order by endpoint;

BUCKET                                                           ENDPOINT    
---------------------------------------------------------------- ------------
5                                                                1           
5                                                                2           
5                                                                3           
5                                                                4           
5                                                                5           
5                                                                6           
5                                                                7           
5                                                                8           
5                                                                9           
5                                                                10          
5                                                                11          
5                                                                12          
5                                                                13          
5                                                                14          
5                                                                15          
5                                                                16          
5                                                                17          
5                                                                18          
5                                                                19          
5                                                                20          
5                                                                21          
5                                                                22          
5                                                                23          
5                                                                24          
5                                                                25          
5                                                                26          
5                                                                27          
5                                                                28          
5                                                                29          
5                                                                30          
5                                                                31          
5                                                                32          
5                                                                33          
5                                                                34          
5                                                                35          
5                                                                36          
5                                                                37          
5                                                                38          
5                                                                39          
5                                                                40          
5                                                                41          
5                                                                42          
5                                                                43          
5                                                                44          
5                                                                45          
5                                                                46          
5                                                                47          
5                                                                48          
5                                                                49          
5                                                                50          
5                                                                51          
5                                                                52          
5                                                                53          
5                                                                54          
5                                                                55          
5                                                                56          
5                                                                57          
5                                                                58          
5                                                                59          
5                                                                60          
5                                                                61          
5                                                                62          
5                                                                63          
5                                                                64          
5                                                                65          
5                                                                66          
5                                                                67          
5                                                                68          
5                                                                69          
5                                                                70          
5                                                                71          
5                                                                72          
5                                                                73          
5                                                                74          
5                                                                75          
5                                                                76          
5                                                                77          
5                                                                78          
5                                                                79          
5                                                                80          
5                                                                81          
5                                                                82          
5                                                                83          
5                                                                84          
5                                                                85          
5                                                                86          
5                                                                87          
5                                                                88          
5                                                                89          
5                                                                90          
5                                                                91          
5                                                                92          
5                                                                93          
5                                                                94          
5                                                                95          
5                                                                96          
5                                                                97          
5                                                                98          
5                                                                99          
5                                                                100         
5                                                                101         
5                                                                102         
5                                                                103         
5                                                                104         
5                                                                105         
10016                                                            106         
10110                                                            107         
10205                                                            108         
10299                                                            109         
10394                                                            110         
10488                                                            111         
10583                                                            112         
10677                                                            113         
10772                                                            114         
10866                                                            115         
10961                                                            116         
11055                                                            117         
11150                                                            118         
11244                                                            119         
11339                                                            120         
11433                                                            121         
11528                                                            122         
11622                                                            123         
11717                                                            124         
11811                                                            125         
11906                                                            126         
12000                                                            127         
12094                                                            128         
12189                                                            129         
12283                                                            130         
12378                                                            131         
12472                                                            132         
12567                                                            133         
12661                                                            134         
12756                                                            135         
12850                                                            136         
12945                                                            137         
13039                                                            138         
13134                                                            139         
13228                                                            140         
13323                                                            141         
13417                                                            142         
13512                                                            143         
13606                                                            144         
13701                                                            145         
13795                                                            146         
13890                                                            147         
13984                                                            148         
14079                                                            149         
14173                                                            150         
14268                                                            151         
14362                                                            152         
14457                                                            153         
14551                                                            154         
14646                                                            155         
14740                                                            156         
14835                                                            157         
14929                                                            158         
15024                                                            159         
15118                                                            160         
15213                                                            161         
15307                                                            162         
15402                                                            163         
15496                                                            164         
15591                                                            165         
15685                                                            166         
15780                                                            167         
15874                                                            168         
15969                                                            169         
16063                                                            170         
16158                                                            171         
16252                                                            172         
16347                                                            173         
16441                                                            174         
16536                                                            175         
16630                                                            176         
16725                                                            177         
16819                                                            178         
16914                                                            179         
17008                                                            180         
17103                                                            181         
17197                                                            182         
17292                                                            183         
17386                                                            184         
17481                                                            185         
17575                                                            186         
17670                                                            187         
17764                                                            188         
17859                                                            189         
17953                                                            190         
18047                                                            191         
18142                                                            192         
18236                                                            193         
18331                                                            194         
18425                                                            195         
18520                                                            196         
18614                                                            197         
18709                                                            198         
18803                                                            199         
18898                                                            200         
18992                                                            201         
19087                                                            202         
19181                                                            203         
19276                                                            204         
19370                                                            205         
19465                                                            206         
19559                                                            207         
19654                                                            208         
19748                                                            209         
19843                                                            210         
19937                                                            211         
20032                                                            212         
20126                                                            213         
20221                                                            214         
20315                                                            215         
20410                                                            216         
20504                                                            217         
20599                                                            218         
20693                                                            219         
20788                                                            220         
20882                                                            221         
20977                                                            222         
21071                                                            223         
21166                                                            224         
21260                                                            225         
21355                                                            226         
21449                                                            227         
21544                                                            228         
21638                                                            229         
21733                                                            230         
21827                                                            231         
21922                                                            232         
22016                                                            233         
22111                                                            234         
22205                                                            235         
22300                                                            236         
22394                                                            237         
22489                                                            238         
22583                                                            239         
22678                                                            240         
22772                                                            241         
22867                                                            242         
22961                                                            243         
23056                                                            244         
23150                                                            245         
23245                                                            246         
23339                                                            247         
23434                                                            248         
23528                                                            249         
23623                                                            250         
23717                                                            251         
23812                                                            252         
23906                                                            253         
24001                                                            254         

254 rows fetched.

SQL> select BUCKET_NUM,ROW_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM,DENSITY from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'HZY_HIGH_HIST');

BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     DENSITY             
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
254          24001        0            1                                                                24001                                                            14011        7.13724930411819e-05

1 rows fetched.

SQL> 
SQL> drop table if exists hzy_test;

Succeed.

SQL> CREATE TABLE HZY_TEST(A INT,B INT);

Succeed.

SQL> create index ix_hzy on hzy_test(a);

Succeed.

SQL> analyze table hzy_test compute statistics;

Succeed.

SQL> select NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE from SYS_TABLES where name = 'HZY_TEST';

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
0            0            0            0                    0           

1 rows fetched.

SQL> select NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM from SYS_COLUMNS where TABLE# = (select id from SYS_TABLES where name = 'HZY_TEST') and user# = 0;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
0                                                                                                                                              FREQUENCY                                                       
0                                                                                                                                              FREQUENCY                                                       

2 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_TEST') 
  2 AND USER# = (select USER# from SYS_TABLES where name = 'HZY_TEST');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
0            0            0             0                       0                      

1 rows fetched.

SQL> INSERT INTO hzy_test values(1,2);

1 rows affected.

SQL> INSERT INTO hzy_test values(2,2);

1 rows affected.

SQL> INSERT INTO hzy_test values(3,3);

1 rows affected.

SQL> INSERT INTO hzy_test values(4,4);

1 rows affected.

SQL> INSERT INTO hzy_test values(5,25);

1 rows affected.

SQL> INSERT INTO hzy_test values(6,21);

1 rows affected.

SQL> INSERT INTO hzy_test values(7,25);

1 rows affected.

SQL> INSERT INTO hzy_test values(8,21);

1 rows affected.

SQL> INSERT INTO hzy_test values(9,25);

1 rows affected.

SQL> INSERT INTO hzy_test values(10,21);

1 rows affected.

SQL> INSERT INTO hzy_test values(11,25);

1 rows affected.

SQL> INSERT INTO hzy_test values(12,21);

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> analyze table hzy_test compute statistics;

Succeed.

SQL> select NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE from SYS_TABLES where name = 'HZY_TEST';

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
12           1            0            16                   12          

1 rows fetched.

SQL> select NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM from SYS_COLUMNS where TABLE# = (select id from SYS_TABLES where name = 'HZY_TEST') and user# = 0;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
12           1                                                                12                                                               FREQUENCY                                                       
5            2                                                                25                                                               FREQUENCY                                                       

2 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_TEST')
  2 AND USER# = (select USER# from SYS_TABLES where name = 'HZY_TEST');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
1            1            12            0.0833333333333333      0.666666666666667      

1 rows fetched.

SQL> 
SQL> drop table if exists hzy_temp1;

Succeed.

SQL> create global temporary table hzy_temp1(id int, description varchar(400)) ON COMMIT preserve ROWS; 

Succeed.

SQL> create index ix_hzy1 on hzy_temp1(id);

Succeed.

SQL> analyze table hzy_temp1 compute statistics;

Succeed.

SQL> select NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE from SYS_TABLES where name = 'HZY_TEMP1';

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
0            1            1            0                    0           

1 rows fetched.

SQL> select NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM from SYS_COLUMNS where TABLE# = (select id from SYS_TABLES where name = 'HZY_TEMP1') and user# = 0;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
0                                                                                                                                              FREQUENCY                                                       
0                                                                                                                                              FREQUENCY                                                       

2 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_TEMP1') 
  2 AND USER# = (select USER# from SYS_TABLES where name = 'HZY_TEMP1');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
0            0            0             0                       0                      

1 rows fetched.

SQL> INSERT INTO hzy_temp1 values(1,'aa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(2,'aaaaa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(3,'aa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(3,'aba');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(4,'caa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(5,'aa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(5,'aa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(6,'aadaa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(7,'sdqwaa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(8,'adsaa');

1 rows affected.

SQL> commit;

Succeed.

SQL> analyze table hzy_temp1 compute statistics;

Succeed.

SQL> select NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE from SYS_TABLES where name = 'HZY_TEMP1';

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
10           1            0            18                   10          

1 rows fetched.

SQL> select NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM from SYS_COLUMNS where TABLE# = (select id from SYS_TABLES where name = 'HZY_TEMP1') and user# = 0;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
8            1                                                                8                                                                FREQUENCY                                                       
7            aa                                                               sdqwaa                                                           FREQUENCY                                                       

2 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_TEMP1') 
  2 AND USER# = (select USER# from SYS_TABLES where name = 'HZY_TEMP1');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
1            1            8             0.125                   0.125                  

1 rows fetched.

SQL> 
SQL> drop table if exists hzy_temp1;

Succeed.

SQL> create global temporary table hzy_temp1(id int, description varchar(400)); 

Succeed.

SQL> create global temporary table hzy_temp1(id int, description varchar(400)) ON COMMIT preserve ROWS; 

CT-01301, SYS.HZY_TEMP1 already exists
SQL> create index ix_hzy1 on hzy_temp1(id);

Succeed.

SQL> analyze table hzy_temp1 compute statistics;

Succeed.

SQL> select NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE from SYS_TABLES where name = 'HZY_TEMP1';

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
                                                                        

1 rows fetched.

SQL> select NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM from SYS_COLUMNS where TABLE# = (select id from SYS_TABLES where name = 'HZY_TEMP1') and user# = 0;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
                                                                                                                                                                                                               
                                                                                                                                                                                                               

2 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_TEMP1') 
  2 AND USER# = (select USER# from SYS_TABLES where name = 'HZY_TEMP1');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
                                                                                       

1 rows fetched.

SQL> INSERT INTO hzy_temp1 values(1,'aa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(2,'aaaaa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(3,'aa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(3,'aba');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(4,'caa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(5,'aa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(5,'aa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(6,'aadaa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(7,'sdqwaa');

1 rows affected.

SQL> INSERT INTO hzy_temp1 values(8,'adsaa');

1 rows affected.

SQL> commit;

Succeed.

SQL> analyze table hzy_test compute statistics;

Succeed.

SQL> select NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE from SYS_TABLES where name = 'HZY_TEMP1';

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
                                                                        

1 rows fetched.

SQL> select NUM_DISTINCT,LOW_VALUE,HIGH_VALUE,HISTOGRAM from SYS_COLUMNS where TABLE# = (select id from SYS_TABLES where name = 'HZY_TEMP1') and user# = 0;

NUM_DISTINCT LOW_VALUE                                                        HIGH_VALUE                                                       HISTOGRAM                                                       
------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
                                                                                                                                                                                                               
                                                                                                                                                                                                               

2 rows fetched.

SQL> select BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_TEMP1') 
  2 AND USER# = (select USER# from SYS_TABLES where name = 'HZY_TEMP1');

BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY
------------ ------------ ------------- ----------------------- -----------------------
                                                                                       

1 rows fetched.

SQL> 
SQL> create user hzy_lob identified by Cantian_234;

Succeed.

SQL> create table hzy_lob.test(a int primary key);

Succeed.

SQL> analyze table hzy_lob.test compute statistics;

Succeed.

SQL> INSERT INTO hzy_lob.test values(1);

1 rows affected.

SQL> INSERT INTO hzy_lob.test values(2);

1 rows affected.

SQL> INSERT INTO hzy_lob.test values(3);

1 rows affected.

SQL> INSERT INTO hzy_lob.test values(4);

1 rows affected.

SQL> analyze table hzy_lob.test compute statistics;

Succeed.

SQL> drop user hzy_lob cascade;

Succeed.

SQL> 
SQL> create user hzy_lob identified by Cantian_234;

Succeed.

SQL> create table hzy_lob.t1 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t2 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t3 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t4 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t5 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t6 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t7 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t8 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t9 as select * from sys.SYS_TABLES;

Succeed.

SQL> create table hzy_lob.t10 as select * from sys.SYS_TABLES;

Succeed.

SQL> 
SQL> create index hzy_lob.ix_test1 on hzy_lob.t1(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test2 on hzy_lob.t2(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test3 on hzy_lob.t3(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test4 on hzy_lob.t4(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test5 on hzy_lob.t5(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test6 on hzy_lob.t6(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test7 on hzy_lob.t7(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test8 on hzy_lob.t8(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test9 on hzy_lob.t9(upper(name));

Succeed.

SQL> create index hzy_lob.ix_test10 on hzy_lob.t10(upper(name));

Succeed.

SQL> 
SQL> exec DBE_STATS.COLLECT_SCHEMA_STATS('HZY_LOB'); 

PL/SQL procedure successfully completed.

SQL> drop user hzy_lob cascade;

Succeed.

SQL> 
SQL> DROP TABLE IF EXISTS wide1;

Succeed.

SQL> create table wide1( 
  2 f_int0 integer, 
  3 f_int1 integer, 
  4 f_int2 integer, 
  5 f_int3 integer, 
  6 f_int4 integer, f_int5 integer, f_int6 integer, f_int7 integer, f_int8 integer, f_int9 integer, f_int10 integer, f_int11 integer, f_int12 integer, f_int13 integer, f_int14 integer, f_int15 integer, f_int16 integer, f_int17 integer, f_int18 integer, f_int19 integer, f_int20 integer, f_int21 integer, f_int22 integer, f_int23 integer, f_int24 integer, f_int25 integer, f_int26 integer, f_int27 integer, f_int28 integer, f_int29 integer, f_int30 integer, f_int31 integer, f_int32 integer, f_int33 integer, f_int34 integer, f_int35 integer, f_int36 integer, f_int37 integer, f_int38 integer, f_int39 integer, f_int40 integer, f_int41 integer, f_int42 integer, f_int43 integer, f_int44 integer, f_int45 integer, f_int46 integer, f_int47 integer, f_int48 integer, f_int49 integer, f_int50 integer, f_int51 integer, f_int52 integer, f_int53 integer, f_int54 integer, f_int55 integer, f_int56 integer, f_int57 integer, f_int58 integer, f_int59 integer, f_int60 integer, f_int61 integer, f_int62 integer, f_int63 integer, f_int64 integer, f_int65 integer, f_int66 integer);

Succeed.

SQL> 
SQL> analyze table wide1 compute statistics;

Succeed.

SQL> insert into wide1( f_int0, f_int1, f_int2, f_int3, f_int4, f_int5, f_int6, f_int7, f_int8, f_int9, f_int10, f_int11, f_int12, f_int13, f_int14, f_int15, f_int16, f_int17, f_int18, f_int19, f_int20, f_int21, f_int22, f_int23, f_int24, f_int25, f_int26, f_int27, f_int28, f_int29, f_int30, f_int31, f_int32, f_int33, f_int34, f_int35, f_int36, f_int37, f_int38, f_int39, f_int40, f_int41, f_int42, f_int43, f_int44, f_int45, f_int46, f_int47, f_int48, f_int49, f_int50, f_int51, f_int52, f_int53, f_int54, f_int55, f_int56, f_int57, f_int58, f_int59, f_int60, f_int61, f_int62, f_int63, f_int64, f_int65, f_int66) values(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66);

1 rows affected.

SQL> analyze table wide1 compute statistics;

Succeed.

SQL> 
SQL> drop table if exists t3;

Succeed.

SQL> create table t3(C1 TIMESTAMP WITH TIME ZONE);

Succeed.

SQL> insert into t3 values(to_timestamp('2019-01-04 16:33:47.123456','YYYY-MM-DD HH24:MI:SS.FFFFFF'));

1 rows affected.

SQL> insert into t3 values(to_timestamp('2019-01-04 16:33:46.123456','YYYY-MM-DD HH24:MI:SS.FFFFFF'));

1 rows affected.

SQL> insert into t3 values(to_timestamp('2019-01-04 16:33:37.123456','YYYY-MM-DD HH24:MI:SS.FFFFFF'));

1 rows affected.

SQL> insert into t3 values(to_timestamp('2019-01-04 16:13:47.123456','YYYY-MM-DD HH24:MI:SS.FFFFFF'));

1 rows affected.

SQL> insert into t3 values(to_timestamp('2019-01-04 16:53:47.123456','YYYY-MM-DD HH24:MI:SS.FFFFFF'));

1 rows affected.

SQL> analyze table t3 COMPUTE STATISTICS;

Succeed.

SQL> 
SQL> drop table if exists test_statistics_2;

Succeed.

SQL> create table test_statistics_2 (id int, name varchar(2300));

Succeed.

SQL> create index idx_statistics_2 on test_statistics_2(id);

Succeed.

SQL> insert into test_statistics_2 values(0, LPAD('a',2300,'a'));

1 rows affected.

SQL> insert into test_statistics_2 select id + 1, name from test_statistics_2;

1 rows affected.

SQL> insert into test_statistics_2 select id, name from test_statistics_2;

2 rows affected.

SQL> insert into test_statistics_2 select id + 2, name from test_statistics_2;

4 rows affected.

SQL> insert into test_statistics_2 select id, name from test_statistics_2;

8 rows affected.

SQL> insert into test_statistics_2 select id + 4, name from test_statistics_2;

16 rows affected.

SQL> insert into test_statistics_2 select id, name from test_statistics_2;

32 rows affected.

SQL> insert into test_statistics_2 select id + 8, name from test_statistics_2;

64 rows affected.

SQL> insert into test_statistics_2 select id, name from test_statistics_2;

128 rows affected.

SQL> insert into test_statistics_2 select id + 16, name from test_statistics_2;

256 rows affected.

SQL> insert into test_statistics_2 select id, name from test_statistics_2;

512 rows affected.

SQL> 
SQL> exec dbe_stats.collect_table_stats('SYS','test_statistics_2', null, 80);

PL/SQL procedure successfully completed.

SQL> drop table if exists test_statistics_2;

Succeed.

SQL> 
SQL> create tablespace hzy_stats_spc1 datafile 'hzy_stats_file1' size 32M;

Succeed.

SQL> drop table if exists t1;

Succeed.

SQL> create table t1(id int, name varchar(8000)) tablespace hzy_stats_spc1;

Succeed.

SQL> insert into t1 values(1,'31232');

1 rows affected.

SQL> insert into t1 values(2,'312w32');

1 rows affected.

SQL> insert into t1 values(3,'31w232');

1 rows affected.

SQL> insert into t1 values(4,'312w32');

1 rows affected.

SQL> insert into t1 values(5,'3q1232');

1 rows affected.

SQL> insert into t1 values(6,'3q1232');

1 rows affected.

SQL> exec dbe_stats.collect_table_stats('SYS','t1', null, 1);

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.collect_table_stats('SYS','t1', null, 80);

PL/SQL procedure successfully completed.

SQL> analyze table t1 compute statistics;

Succeed.

SQL> drop tablespace  hzy_stats_spc1  including contents and datafiles;

Succeed.

SQL> 
SQL> drop table if exists stats_reindex;

Succeed.

SQL> create table stats_reindex(id integer, part_key integer, val int) partition by range(part_key)
  2 (
  3     partition reindex_p1 values less than(10),
  4     partition reindex_p2 values less than(20),
  5     partition reindex_p3 values less than(30),
  6     partition reindex_p4 values less than(maxvalue)
  7 );

Succeed.

SQL> create index ix_stats_reindex1 on stats_reindex(id);

Succeed.

SQL> create index ix_stats_reindex2 on stats_reindex(part_key) local;

Succeed.

SQL> declare
  2     i integer;
  3 begin
  4     for i in 1..50 loop
  5         execute immediate 'insert into stats_reindex values('||i||','||i||',100000)';
  6     end loop;
  7     commit;
  8 end;
  9 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select index_name, tablespace_name, ini_trans, pct_free, blevel, distinct_keys from user_indexes where index_name='IX_STATS_REINDEX1';

INDEX_NAME                                                       TABLESPACE_NAME                                                  INI_TRANS    PCT_FREE     BLEVEL       DISTINCT_KEYS
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
IX_STATS_REINDEX1                                                SYSTEM                                                           2            8                                      

1 rows fetched.

SQL> select index_name, partition_name, ini_trans, pct_free, blevel, distinct_keys from user_ind_partitions where index_name='IX_STATS_REINDEX2' order by partition_name;

INDEX_NAME                                                       PARTITION_NAME                                                   INI_TRANS    PCT_FREE     BLEVEL       DISTINCT_KEYS
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
IX_STATS_REINDEX2                                                REINDEX_P1                                                       2            8                                      
IX_STATS_REINDEX2                                                REINDEX_P2                                                       2            8                                      
IX_STATS_REINDEX2                                                REINDEX_P3                                                       2            8                                      
IX_STATS_REINDEX2                                                REINDEX_P4                                                       2            8                                      

4 rows fetched.

SQL> analyze table stats_reindex compute statistics;

Succeed.

SQL> select index_name, tablespace_name, ini_trans, pct_free, blevel, distinct_keys from user_indexes where index_name='IX_STATS_REINDEX1';

INDEX_NAME                                                       TABLESPACE_NAME                                                  INI_TRANS    PCT_FREE     BLEVEL       DISTINCT_KEYS
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
IX_STATS_REINDEX1                                                SYSTEM                                                           2            8            1            50           

1 rows fetched.

SQL> select index_name, partition_name, ini_trans, pct_free, blevel, distinct_keys from user_ind_partitions where index_name='IX_STATS_REINDEX2' order by partition_name;

INDEX_NAME                                                       PARTITION_NAME                                                   INI_TRANS    PCT_FREE     BLEVEL       DISTINCT_KEYS
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
IX_STATS_REINDEX2                                                REINDEX_P1                                                       2            8            1            9            
IX_STATS_REINDEX2                                                REINDEX_P2                                                       2            8            1            10           
IX_STATS_REINDEX2                                                REINDEX_P3                                                       2            8            1            10           
IX_STATS_REINDEX2                                                REINDEX_P4                                                       2            8            1            21           

4 rows fetched.

SQL> alter index ix_stats_reindex1 on stats_reindex rebuild online tablespace users pctfree 20;

Succeed.

SQL> alter index ix_stats_reindex2 on stats_reindex rebuild;

Succeed.

SQL> select index_name, tablespace_name, ini_trans, pct_free, blevel, distinct_keys from user_indexes where index_name='IX_STATS_REINDEX1';

INDEX_NAME                                                       TABLESPACE_NAME                                                  INI_TRANS    PCT_FREE     BLEVEL       DISTINCT_KEYS
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
IX_STATS_REINDEX1                                                USERS                                                            2            20           1            50           

1 rows fetched.

SQL> select index_name, partition_name, ini_trans, pct_free, blevel, distinct_keys from user_ind_partitions where index_name='IX_STATS_REINDEX2' order by partition_name;

INDEX_NAME                                                       PARTITION_NAME                                                   INI_TRANS    PCT_FREE     BLEVEL       DISTINCT_KEYS
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
IX_STATS_REINDEX2                                                REINDEX_P1                                                       2            8            1            9            
IX_STATS_REINDEX2                                                REINDEX_P2                                                       2            8            1            10           
IX_STATS_REINDEX2                                                REINDEX_P3                                                       2            8            1            10           
IX_STATS_REINDEX2                                                REINDEX_P4                                                       2            8            1            21           

4 rows fetched.

SQL> alter index ix_stats_reindex2 on stats_reindex rebuild partition reindex_p3 online;

Succeed.

SQL> select index_name, partition_name, ini_trans, pct_free, blevel, distinct_keys from user_ind_partitions where index_name='IX_STATS_REINDEX2' order by partition_name;

INDEX_NAME                                                       PARTITION_NAME                                                   INI_TRANS    PCT_FREE     BLEVEL       DISTINCT_KEYS
---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
IX_STATS_REINDEX2                                                REINDEX_P1                                                       2            8            1            9            
IX_STATS_REINDEX2                                                REINDEX_P2                                                       2            8            1            10           
IX_STATS_REINDEX2                                                REINDEX_P3                                                       2            8            1            10           
IX_STATS_REINDEX2                                                REINDEX_P4                                                       2            8            1            21           

4 rows fetched.

SQL> drop table stats_reindex purge;

Succeed.

SQL> 
SQL> --create sys table for test
SQL> drop table if exists liu_tab;

Succeed.

SQL> create table if not exists liu_tab(a int , c varchar(50));

Succeed.

SQL> insert into liu_tab values(1,'liu');

1 rows affected.

SQL> --create normal user
SQL> drop user if exists analyze_table_0424 cascade;

Succeed.

SQL> create user analyze_table_0424 identified by Lh00420062;

Succeed.

SQL> grant CREATE SESSION, analyze any, create table to analyze_table_0424;

Succeed.

SQL> conn analyze_table_0424/Lh00420062@127.0.0.1:1611

connected.

SQL> analyze table sys.liu_tab compute statistics;

CT-01001, Permissions were insufficient
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> grant dba to analyze_table_0424;

Succeed.

SQL> conn analyze_table_0424/Lh00420062@127.0.0.1:1611

connected.

SQL> analyze table sys.liu_tab compute statistics;

Succeed.

SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> revoke dba from analyze_table_0424;

Succeed.

SQL> conn analyze_table_0424/Lh00420062@127.0.0.1:1611

connected.

SQL> analyze table sys.liu_tab compute statistics;

CT-01001, Permissions were insufficient
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> drop table if exists liu_tab;

Succeed.

SQL> drop user if exists analyze_table_0424 cascade;

Succeed.

SQL> 
SQL> drop table if exists test_statistics_2;

Succeed.

SQL> create table test_statistics_2 (id int, name varchar(20));

Succeed.

SQL> insert into test_statistics_2 values(0, 'it is a long string');

1 rows affected.

SQL> insert into test_statistics_2 select id + 1, name from test_statistics_2;

1 rows affected.

SQL> insert into test_statistics_2 select id + 2, name from test_statistics_2;

2 rows affected.

SQL> insert into test_statistics_2 select id + 4, name from test_statistics_2;

4 rows affected.

SQL> insert into test_statistics_2 select id + 8, name from test_statistics_2;

8 rows affected.

SQL> insert into test_statistics_2 select id + 16, name from test_statistics_2;

16 rows affected.

SQL> insert into test_statistics_2 select id + 32, name from test_statistics_2;

32 rows affected.

SQL> insert into test_statistics_2 select id + 64, name from test_statistics_2;

64 rows affected.

SQL> insert into test_statistics_2 select id + 120, name from test_statistics_2;

128 rows affected.

SQL> insert into test_statistics_2 select * from test_statistics_2;

256 rows affected.

SQL> insert into test_statistics_2 select * from test_statistics_2;

512 rows affected.

SQL> insert into test_statistics_2 select * from test_statistics_2;

1024 rows affected.

SQL> insert into test_statistics_2 select * from test_statistics_2;

2048 rows affected.

SQL> insert into test_statistics_2 select * from test_statistics_2;

4096 rows affected.

SQL> insert into test_statistics_2 select * from test_statistics_2;

8192 rows affected.

SQL> insert into test_statistics_2 select * from test_statistics_2;

16384 rows affected.

SQL> insert into test_statistics_2 select * from test_statistics_2;

32768 rows affected.

SQL> commit;

Succeed.

SQL> analyze table test_statistics_2 compute statistics;

Succeed.

SQL> select count(distinct id) from test_statistics_2;

COUNT(DISTINCT ID)  
--------------------
248                 

1 rows fetched.

SQL> select NUM_DISTINCT, NUM_NULLS, HISTOGRAM from dba_tab_columns where TABLE_NAME = 'TEST_STATISTICS_2' order by NUM_DISTINCT asc;

NUM_DISTINCT NUM_NULLS    HISTOGRAM                                                       
------------ ------------ ----------------------------------------------------------------
1            0            FREQUENCY                                                       
248          0            FREQUENCY                                                       

2 rows fetched.

SQL> select count(*) from SYS_HISTGRAM,SYS_TABLES where SYS_TABLES.id=SYS_HISTGRAM.table# and SYS_TABLES.name='TEST_STATISTICS_2' and SYS_HISTGRAM.col# = 0;

COUNT(*)            
--------------------
248                 

1 rows fetched.

SQL> exec dbe_stats.collect_table_stats('SYS', 'TEST_STATISTICS_2', part_name=>NULL,sample_ratio => 10,method_opt=>'for all columns');

PL/SQL procedure successfully completed.

SQL> select NUM_DISTINCT, NUM_NULLS, HISTOGRAM from dba_tab_columns where TABLE_NAME = 'TEST_STATISTICS_2' order by NUM_DISTINCT asc;

NUM_DISTINCT NUM_NULLS    HISTOGRAM                                                       
------------ ------------ ----------------------------------------------------------------
1            0            FREQUENCY                                                       
248          0            FREQUENCY                                                       

2 rows fetched.

SQL> select count(*) from SYS_HISTGRAM,SYS_TABLES where SYS_TABLES.id=SYS_HISTGRAM.table# and SYS_TABLES.name='TEST_STATISTICS_2' and SYS_HISTGRAM.col# = 0;

COUNT(*)            
--------------------
248                 

1 rows fetched.

SQL> 
SQL> create table hzy_part_vm_test(id1 int, id2 int,c varchar(8000))
  2 partition by range(id1, id2)
  3 (
  4 partition p1 values less than(5, 50),
  5 partition p2 values less than(10, 100),
  6 partition p3 values less than(20, 200)
  7 );

Succeed.

SQL> 
SQL> 
SQL> declare
  2     i integer;
  3 begin
  4     for i in 1..50 loop
  5         execute immediate 'insert into hzy_part_vm_test values(3, 200, lpad(''a'',8000,''a''))';
  6 		execute immediate 'insert into hzy_part_vm_test values(6, 200, lpad(''a'',8000,''a''))';
  7 		execute immediate 'insert into hzy_part_vm_test values(12, 200, lpad(''a'',8000,''a''))';
  8 		commit;
  9     end loop;
 10 end;
 11 /

PL/SQL procedure successfully completed.

SQL> 
SQL> analyze table hzy_part_vm_test compute statistics;

Succeed.

SQL> 
SQL> drop table if exists FVT_STAT_PATATITON_LIST_TABLE_001;

Succeed.

SQL> create table FVT_STAT_PATATITON_LIST_TABLE_001 
  2 (
  3 	ID1 INT ,
  4 	ID2 NUMBER,
  5 	ID3 BINARY_INTEGER,
  6 	ID4 DOUBLE,
  7 	ID5 FLOAT,
  8 	ID6 REAL,
  9 	NAME1 VARCHAR2(100),
 10 	NAME2 VARCHAR(100),
 11 	NAME3 NCHAR(100),
 12 	NAME4 NCHAR(50),
 13 	TIME1 DATE ,
 14 	TIME2 DATETIME,
 15 	TIME3 TIMESTAMP,
 16 	BR1 BOOLEAN,
 17 	BR2 BOOLEAN,
 18 	BR3 BOOLEAN,
 19 	C_CLOB CLOB	
 20 )
 21 partition by list(id1)
 22 (
 23 partition t1 values (1,2,3,4,5,6,7,8,9,10),
 24 partition t2 values (11,12,13,14,15,16,17,18,19,20),
 25 partition t3 values (21,22,23,24,25,26,27,28,29,30),
 26 partition t4 values (31,32,33,34,35,36,37,38,39,40),
 27 partition t5 values (41,42,43,44,45,46,47,48,49,50)
 28 );

Succeed.

SQL> 
SQL> insert into FVT_STAT_PATATITON_LIST_TABLE_001  values(1,null,null,null,null,null,'','','','','','','',0,1,0,'');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (2,-2658.1,-266,-26.581,-2.6581,-0.26581,'DX5S0XPON6','BDNMINTOHY','bdnmintohy                                                                                          ','bDnminTOhY                                        ','0001-01-01 00:00:00','0001-02-02 00:00:00','0001-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'bDnminTOhY');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (3,9969.2,997,99.692,9.9692,0.99692,'S8ZKDKMDD8','GEPAPOUZTU','gepapouztu                                                                                          ','GepaPOUzTu                                        ','0002-01-01 00:00:00','0002-02-02 00:00:00','0002-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'GepaPOUzTu');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (4,9969.2,997,99.692,9.9692,0.99692,'S8ZKDKMDD8','GEPAPOUZTU','gepapouztu                                                                                          ','GepaPOUzTu                                        ','0003-01-01 00:00:00','0003-02-02 00:00:00','0003-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'GepaPOUzTu');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (5,9969.2,997,99.692,9.9692,0.99692,'S8ZKDKMDD8','GEPAPOUZTU','gepapouztu                                                                                          ','GepaPOUzTu                                        ','0004-01-01 00:00:00','0004-02-02 00:00:00','0004-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'GepaPOUzTu');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (6,9969.2,997,99.692,9.9692,0.99692,'S8ZKDKMDD8','GEPAPOUZTU','gepapouztu                                                                                          ','GepaPOUzTu                                        ','0005-01-01 00:00:00','0005-02-02 00:00:00','0005-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'GepaPOUzTu');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (7,3016.84,302,30.1684,3.01684,0.301684,'896RHFW4A6','KLORNRCEUS','klornrceus                                                                                          ','KLoRnRCeUs                                        ','0006-01-01 00:00:00','0006-02-02 00:00:00','0006-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'KLoRnRCeUs');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (8,3016.84,302,30.1684,3.01684,0.301684,'896RHFW4A6','KLORNRCEUS','klornrceus                                                                                          ','KLoRnRCeUs                                        ','0007-01-01 00:00:00','0007-02-02 00:00:00','0007-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'KLoRnRCeUs');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (9,3016.84,302,30.1684,3.01684,0.301684,'896RHFW4A6','KLORNRCEUS','klornrceus                                                                                          ','KLoRnRCeUs                                        ','0008-01-01 00:00:00','0008-02-02 00:00:00','0008-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'KLoRnRCeUs');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (10,3016.84,302,30.1684,3.01684,0.301684,'896RHFW4A6','KLORNRCEUS','klornrceus                                                                                          ','KLoRnRCeUs                                        ','0009-01-01 00:00:00','0009-02-02 00:00:00','0009-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'KLoRnRCeUs');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (1,3669.84,367,36.6984,3.66984,0.366984,'62MJOC80RF','EQCLACMAHH','eqclacmahh                                                                                          ','EQclaCmahh                                        ','0049-01-01 00:00:00','0049-02-02 00:00:00','0049-03-03 00:00:00.000000',TRUE,FALSE,FALSE,'EQclaCmahh');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (2,3669.84,367,36.6984,3.66984,0.366984,'62MJOC80RF','EQCLACMAHH','eqclacmahh                                                                                          ','EQclaCmahh                                        ','0050-01-01 00:00:00','0050-02-02 00:00:00','0050-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'EQclaCmahh');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (3,3669.84,367,36.6984,3.66984,0.366984,'62MJOC80RF','EQCLACMAHH','eqclacmahh                                                                                          ','EQclaCmahh                                        ','0051-01-01 00:00:00','0051-02-02 00:00:00','0051-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'EQclaCmahh');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (4,2931.44,293,29.3144,2.93144,0.293144,'MQ8YBLTNFQ','EGEQRDHRBY','egeqrdhrby                                                                                          ','EgeQRDHRBY                                        ','0052-01-01 00:00:00','0052-02-02 00:00:00','0052-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'EgeQRDHRBY');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (5,2931.44,293,29.3144,2.93144,0.293144,'MQ8YBLTNFQ','EGEQRDHRBY','egeqrdhrby                                                                                          ','EgeQRDHRBY                                        ','0053-01-01 00:00:00','0053-02-02 00:00:00','0053-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'EgeQRDHRBY');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (6,2931.44,293,29.3144,2.93144,0.293144,'MQ8YBLTNFQ','EGEQRDHRBY','egeqrdhrby                                                                                          ','EgeQRDHRBY                                        ','0054-01-01 00:00:00','0054-02-02 00:00:00','0054-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'EgeQRDHRBY');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (7,2931.44,293,29.3144,2.93144,0.293144,'MQ8YBLTNFQ','EGEQRDHRBY','egeqrdhrby                                                                                          ','EgeQRDHRBY                                        ','0055-01-01 00:00:00','0055-02-02 00:00:00','0055-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'EgeQRDHRBY');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (8,2931.44,293,29.3144,2.93144,0.293144,'MQ8YBLTNFQ','EGEQRDHRBY','egeqrdhrby                                                                                          ','EgeQRDHRBY                                        ','0056-01-01 00:00:00','0056-02-02 00:00:00','0056-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'EgeQRDHRBY');

1 rows affected.

SQL> INSERT INTO "FVT_STAT_PATATITON_LIST_TABLE_001" ("ID1","ID2","ID3","ID4","ID5","ID6","NAME1","NAME2","NAME3","NAME4","TIME1","TIME2","TIME3","BR1","BR2","BR3","C_CLOB") values
  2   (9,2931.44,293,29.3144,2.93144,0.293144,'MQ8YBLTNFQ','EGEQRDHRBY','egeqrdhrby                                                                                          ','EgeQRDHRBY                                        ','0057-01-01 00:00:00','0057-02-02 00:00:00','0057-03-03 00:00:00.000000',TRUE,FALSE,TRUE,'EgeQRDHRBY');

1 rows affected.

SQL> commit; 

Succeed.

SQL> 
SQL> drop table if exists FVT_MERGER_TABLE_01;

Succeed.

SQL> create table FVT_MERGER_TABLE_01(ID1 INT ,ID2 INT,name1 varchar2(100));

Succeed.

SQL> insert into FVT_MERGER_TABLE_01 values(1,2,'');

1 rows affected.

SQL> insert into FVT_MERGER_TABLE_01 values(11,12,'xx');

1 rows affected.

SQL> insert into FVT_MERGER_TABLE_01 values(21,22,'xxx');

1 rows affected.

SQL> insert into FVT_MERGER_TABLE_01 values(50,62,'xxxx');

1 rows affected.

SQL> declare 
  2 begin
  3 for i in 1 .. 10 
  4 loop
  5 execute immediate 'delete from FVT_STAT_PATATITON_LIST_TABLE_001 where id1='||i||'';
  6 execute immediate 'update  FVT_STAT_PATATITON_LIST_TABLE_001 set id2=10 where id1=11 ';
  7 insert into FVT_STAT_PATATITON_LIST_TABLE_001 values(1,null,null,null,null,null,'xx','','','','','','',0,1,0,'');
  8 merge into FVT_STAT_PATATITON_LIST_TABLE_001 t1  using (select id1,id2,name1 from FVT_MERGER_TABLE_01 ) t2 on (t1.id1=t2.id2) when matched then update set t1.id2=t2.id2 
  9 when not  matched then insert (id1,id2,name1) values(t2.id1,t2.id2,t2.name1);
 10 end loop;
 11 end ;
 12 /

PL/SQL procedure successfully completed.

SQL> 
SQL> analyze table FVT_STAT_PATATITON_LIST_TABLE_001 compute statistics;

Succeed.

SQL> select t5.col#,t5.BUCKET_NUM,t5.ROW_NUM,t5.NULL_NUM,t5.MINVALUE,t5.MAXVALUE,t5.dist_num,t5.spare1 from SYS.SYS_TABLES t1,SYS.SYS_HISTGRAM_ABSTR t5 where t1.name='FVT_STAT_PATATITON_LIST_TABLE_001' and t5.TAB#=t1.id and t1.USER#=t5.USER#  and  t5.USER#=(select id from sys.sys_users where name='SYS') 
  2 and t5.spare1 = 10 order by  1,2,3,4,5,6,7,8 ;

COL#         BUCKET_NUM   ROW_NUM      NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM     SPARE1              
------------ ------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ --------------------
0            1            19           0            1                                                                1                                                                1            10                  
1            1            19           10           2                                                                2                                                                1            10                  
2            0            19           19                                                                                                                                             0            10                  
3            0            19           19                                                                                                                                             0            10                  
4            0            19           19                                                                                                                                             0            10                  
5            0            19           19                                                                                                                                             0            10                  
6            1            19           9            xx                                                               xx                                                               1            10                  
7            0            19           19                                                                                                                                             0            10                  
8            0            19           19                                                                                                                                             0            10                  
9            0            19           19                                                                                                                                             0            10                  
10           0            19           19                                                                                                                                             0            10                  
11           0            19           19                                                                                                                                             0            10                  
12           0            19           19                                                                                                                                             0            10                  
13           1            19           9            FALSE                                                            FALSE                                                            1            10                  
14           1            19           9            TRUE                                                             TRUE                                                             1            10                  
15           1            19           9            FALSE                                                            FALSE                                                            1            10                  

16 rows fetched.

SQL> select t6.col#,t6.bucket,t6.endpoint,t6.part# from SYS.SYS_TABLES t1  ,SYS.SYS_HISTGRAM t6 where t1.name='FVT_STAT_PATATITON_LIST_TABLE_001' and t1.id=t6.TABLE# and  t1.USER#=t6.USER#  and  t6.USER#=(select id from sys.sys_users where name='SYS') and t6.part# = 10 order by 1,2,3,4;

COL#         BUCKET                                                           ENDPOINT     PART#       
------------ ---------------------------------------------------------------- ------------ ------------
0            1                                                                19           10          
1            2                                                                9            10          
6            xx                                                               10           10          
13           FALSE                                                            10           10          
14           TRUE                                                             10           10          
15           FALSE                                                            10           10          

6 rows fetched.

SQL> 
SQL> 
SQL> drop user if exists stats_dny cascade;

Succeed.

SQL> create user stats_dny identified by Cantian_234;

Succeed.

SQL> grant dba to stats_dny;

Succeed.

SQL> 
SQL> drop table if exists stats_dny.dyn_t1;

Succeed.

SQL> drop table if exists stats_dny.dyn_t2;

Succeed.

SQL> drop table if exists stats_dny.dyn_t3;

Succeed.

SQL> create table stats_dny.cbo_ef_data_1w_s (id int,int_f0 int, int_f1 int);

Succeed.

SQL> insert into stats_dny.cbo_ef_data_1w_s values(1,22,12);

1 rows affected.

SQL> insert into stats_dny.cbo_ef_data_1w_s values(2,22,23);

1 rows affected.

SQL> insert into stats_dny.cbo_ef_data_1w_s values(3,22,14);

1 rows affected.

SQL> insert into stats_dny.cbo_ef_data_1w_s values(34,22,14);

1 rows affected.

SQL> insert into stats_dny.cbo_ef_data_1w_s values(1,22,15);

1 rows affected.

SQL> insert into stats_dny.cbo_ef_data_1w_s values(1,22,16);

1 rows affected.

SQL> create table stats_dny.dyn_t1 as select * from stats_dny.cbo_ef_data_1w_s order by id;

Succeed.

SQL> create table stats_dny.dyn_t2 as select * from stats_dny.cbo_ef_data_1w_s order by id;

Succeed.

SQL> create table stats_dny.dyn_t3 as select * from stats_dny.cbo_ef_data_1w_s order by id;

Succeed.

SQL> commit;

Succeed.

SQL> create index stats_dny.dyn_t1_intf0_idx on stats_dny.dyn_t1 (int_f0);

Succeed.

SQL> create index stats_dny.dyn_t1_intf1_idx on stats_dny.dyn_t1 (int_f1);

Succeed.

SQL> create index stats_dny.dyn_t1_mult2_idx on stats_dny.dyn_t1 (int_f0,int_f1);

Succeed.

SQL> 
SQL> create index stats_dny.dyn_t2_intf0_idx on stats_dny.dyn_t2 (int_f0);

Succeed.

SQL> create index stats_dny.dyn_t2_intf1_idx on stats_dny.dyn_t2 (int_f1);

Succeed.

SQL> create index stats_dny.dyn_t2_mult2_idx on stats_dny.dyn_t2 (int_f0,int_f1);

Succeed.

SQL> 
SQL> create index stats_dny.dyn_t3_intf0_idx on stats_dny.dyn_t3 (int_f0);

Succeed.

SQL> create index stats_dny.dyn_t3_intf1_idx on stats_dny.dyn_t3 (int_f1);

Succeed.

SQL> create index stats_dny.dyn_t3_mult2_idx on stats_dny.dyn_t3 (int_f0,int_f1);

Succeed.

SQL> select t1.* from stats_dny.dyn_t1 t1, stats_dny.dyn_t2 t2, stats_dny.dyn_t3 t3 where t1.int_f0=t2.int_f0 and t1.int_f1=t3.int_f1 and t1.int_f0 = 1 and t3.int_f0 = 0;

ID           INT_F0       INT_F1      
------------ ------------ ------------

0 rows fetched.

SQL> 
SQL> conn stats_dny/Cantian_234@127.0.0.1:1611

connected.

SQL> analyze table stats_dny.dyn_t1 compute statistics;

Succeed.

SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> grant select on SYS.SYS_HISTGRAM to stats_dny;

Succeed.

SQL> grant select on SYS.SYS_TABLES to stats_dny;

Succeed.

SQL> grant select on SYS.SYS_USERS to stats_dny;

Succeed.

SQL> conn stats_dny/Cantian_234@127.0.0.1:1611

connected.

SQL> select A.COL# ,a.bucket,a.endpoint from SYS.SYS_HISTGRAM a,SYS.SYS_TABLES b, SYS.SYS_USERS c where a.table#=b.id and b.name='DYN_T1' and c.name = 'STATS_DNY' order by 1,2,3;

COL#         BUCKET                                                           ENDPOINT    
------------ ---------------------------------------------------------------- ------------
0            1                                                                3           
0            2                                                                4           
0            3                                                                5           
0            34                                                               6           
1            22                                                               6           
2            12                                                               1           
2            14                                                               3           
2            15                                                               4           
2            16                                                               5           
2            23                                                               6           

10 rows fetched.

SQL> drop table if exists stats_dny.dyn_t1;

Succeed.

SQL> drop table if exists stats_dny.dyn_t2;

Succeed.

SQL> drop table if exists stats_dny.dyn_t3;

Succeed.

SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> drop table if exists test_part_t1;

Succeed.

SQL> create table test_part_t1(f1 int)
  2 PARTITION BY RANGE(f1)
  3 (
  4  PARTITION p1 values less than(10),
  5  PARTITION p2 values less than(20),
  6  PARTITION p3 values less than(30)
  7 );

Succeed.

SQL> 
SQL> insert into test_part_t1 values(1);

1 rows affected.

SQL> insert into test_part_t1 values(2);

1 rows affected.

SQL> insert into test_part_t1 values(3);

1 rows affected.

SQL> insert into test_part_t1 values(11);

1 rows affected.

SQL> insert into test_part_t1 values(12);

1 rows affected.

SQL> insert into test_part_t1 values(13);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> exec dbe_stats.collect_table_stats('SYS', 'TEST_PART_T1');

PL/SQL procedure successfully completed.

SQL> select NAME,ROWCNT,BLKCNT,EMPCNT,AVGRLN,SAMPLESIZE from sys.SYS_TABLE_PARTS  where table# = (select id from SYS_TABLES where name = 'TEST_PART_T1') order by part#;

NAME                                                             ROWCNT       BLKCNT       EMPCNT       AVGRLN       SAMPLESIZE  
---------------------------------------------------------------- ------------ ------------ ------------ ------------ ------------
P1                                                               3            1            0            16           3           
P2                                                               3            1            0            16           3           
P3                                                               0            0            0            0            0           

3 rows fetched.

SQL> 
SQL> exec dbe_stats.collect_table_stats('SYS', 'TEST_PART_T1', 'P3');

PL/SQL procedure successfully completed.

SQL> select NAME,ROWCNT,BLKCNT,EMPCNT,AVGRLN,SAMPLESIZE from sys.SYS_TABLE_PARTS  where table# = (select id from SYS_TABLES where name = 'TEST_PART_T1') order by part#;

NAME                                                             ROWCNT       BLKCNT       EMPCNT       AVGRLN       SAMPLESIZE  
---------------------------------------------------------------- ------------ ------------ ------------ ------------ ------------
P1                                                               3            1            0            16           3           
P2                                                               3            1            0            16           3           
P3                                                               0            0            0            0            0           

3 rows fetched.

SQL> drop table if exists test_part_t1;

Succeed.

SQL> 
SQL> drop table if exists test_part_t1;

Succeed.

SQL> create table test_part_t1(f1 int)
  2 PARTITION BY RANGE(f1)
  3 (
  4  PARTITION p1 values less than(10),
  5  PARTITION p2 values less than(20),
  6  PARTITION p3 values less than(30)
  7 );

Succeed.

SQL> 
SQL> ANALYZE TABLE test_part_t1 COMPUTE STATISTICS;

Succeed.

SQL> select NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_ROW_LEN,SAMPLESIZE from SYS_TABLES where name = 'TEST_PART_T1' and user# = 0;

NUM_ROWS     BLOCKS       EMPTY_BLOCKS AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ -------------------- ------------
0            0            0            0                    0           

1 rows fetched.

SQL> insert into test_part_t1 values(8);

1 rows affected.

SQL> commit;

Succeed.

SQL> ANALYZE TABLE test_part_t1 COMPUTE STATISTICS;

Succeed.

SQL> select NAME,ROWCNT,BLKCNT,EMPCNT,AVGRLN,SAMPLESIZE from sys.SYS_TABLE_PARTS  where table# = (select id from SYS_TABLES where name = 'TEST_PART_T1') order by part#;

NAME                                                             ROWCNT       BLKCNT       EMPCNT       AVGRLN       SAMPLESIZE  
---------------------------------------------------------------- ------------ ------------ ------------ ------------ ------------
P1                                                               1            1            0            16           1           
P2                                                               0            0            0            0            0           
P3                                                               0            0            0            0            0           

3 rows fetched.

SQL> drop table if exists test_part_t1;

Succeed.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE IF EXISTS "PARTITION_TEST_TABLE" CASCADE CONSTRAINTS;

Succeed.

SQL> CREATE TABLE "PARTITION_TEST_TABLE"
  2 (
  3   "ID" BINARY_INTEGER NOT NULL,
  4   "VALUE" BINARY_INTEGER,
  5   "NAME" varchar(10),
  6   "NAME1"  varchar(10)
  7 )
  8 PARTITION BY RANGE ("ID")
  9 INTERVAL(1)
 10 (
 11     PARTITION P1 VALUES LESS THAN (1)
 12 );

Succeed.

SQL> 
SQL> insert into PARTITION_TEST_TABLE values (1, 12, 'hzy','null');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (2, 13, 'hzy1', 'hzy1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (3, 12, 'hzy','hzy1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (4, 134, 'h4zy1', 'hzy1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (5, 17, 'hzy', 'hzy1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (6, 16, 'h5zy1', 'hzay1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (7, 15, 'hz4y', 'hzy1a');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (8, 14, 'hz3y1', 'hzyw1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (9, 13, 'hzys', 'hzy1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (10, 12, 'hzsy1','hzy1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (11, 11, 'hz2y', 'hzy1a');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (12, 1, 'hzy21', 'hzy1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (10, 12, 'hz2y1', 'hzay1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (11, 11, 'hz2y', 'hzqy1');

1 rows affected.

SQL> insert into PARTITION_TEST_TABLE values (12, 1, 'hzy11', 'hz3ey1');

1 rows affected.

SQL> commit;

Succeed.

SQL> insert into PARTITION_TEST_TABLE select * from PARTITION_TEST_TABLE;

15 rows affected.

SQL> commit;

Succeed.

SQL> create index hzy1 on PARTITION_TEST_TABLE(id) local;

Succeed.

SQL> create index hzy2 on PARTITION_TEST_TABLE(value) local;

Succeed.

SQL> create index hzy3 on PARTITION_TEST_TABLE(name);

Succeed.

SQL> create index hzy4 on PARTITION_TEST_TABLE(name1) local;

Succeed.

SQL> drop index hzy1 on PARTITION_TEST_TABLE;

Succeed.

SQL> analyze table PARTITION_TEST_TABLE compute statistics;

Succeed.

SQL> select * from PARTITION_TEST_TABLE where value = 15;

ID           VALUE        NAME       NAME1     
------------ ------------ ---------- ----------
7            15           hz4y       hzy1a     
7            15           hz4y       hzy1a     

2 rows fetched.

SQL> 
SQL> drop table if exists test_statistics_2;

Succeed.

SQL> create table test_statistics_2 (id int, name varchar(2500));

Succeed.

SQL> create index idx_statistics_2 on test_statistics_2(id);

Succeed.

SQL> 
SQL> insert into test_statistics_2 values(0,LPAD('g',2300,'g'));

1 rows affected.

SQL> insert into test_statistics_2 select id + 1, name from test_statistics_2;

1 rows affected.

SQL> insert into test_statistics_2 select id + 2, name from test_statistics_2;

2 rows affected.

SQL> insert into test_statistics_2 select id + 4, name from test_statistics_2;

4 rows affected.

SQL> insert into test_statistics_2 select id + 8, name from test_statistics_2;

8 rows affected.

SQL> insert into test_statistics_2 select id + 8, name from test_statistics_2;

16 rows affected.

SQL> insert into test_statistics_2 select id + 8, name from test_statistics_2;

32 rows affected.

SQL> insert into test_statistics_2 select id + 8, name from test_statistics_2;

64 rows affected.

SQL> 
SQL> exec dbe_stats.collect_table_stats('SYS','test_statistics_2', null, 90);

PL/SQL procedure successfully completed.

SQL> 
SQL> drop table if exists hzy_high_hist;

Succeed.

SQL> drop table if exists high_hist;

Succeed.

SQL> create table high_hist(a int);

Succeed.

SQL> insert into high_hist values(0);

1 rows affected.

SQL> create table hzy_high_hist(a int)
  2 partition by range(A)
  3 (
  4    partition PART_H1 values less than (100),
  5    partition PART_H2 values less than (200),
  6    partition PART_H3 values less than (301)
  7 );

Succeed.

SQL> 
SQL> CREATE or replace procedure storage_proc_000(startnum int,endall int) is
  2 i INT :=1;
  3 j varchar(10);
  4 BEGIN
  5   FOR i IN startnum..endall LOOP
  6     insert into hzy_high_hist select a+i from high_hist;
  7   END LOOP;
  8 END;
  9 /

Succeed.

SQL> call storage_proc_000(1,300);

PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> call DBE_STATS.FLUSH_DB_STATS_INFO();

PL/SQL procedure successfully completed.

SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from  dba_tab_modifications where table_name='HZY_HIGH_HIST' order by INSERTS;

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
SYS                                                              HZY_HIGH_HIST                                                    PART_H1                                                                                                                           99           0            0            0            
SYS                                                              HZY_HIGH_HIST                                                    PART_H2                                                                                                                           100          0            0            0            
SYS                                                              HZY_HIGH_HIST                                                    PART_H3                                                                                                                           101          0            0            0            
SYS                                                              HZY_HIGH_HIST                                                                                                                                                                                      300          0            0            0            

4 rows fetched.

SQL> exec dbe_stats.collect_table_stats('SYS', 'HZY_HIGH_HIST', 'PART_H3');

PL/SQL procedure successfully completed.

SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from  dba_tab_modifications where table_name='HZY_HIGH_HIST' order by INSERTS;

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
SYS                                                              HZY_HIGH_HIST                                                    PART_H1                                                                                                                           99           0            0            0            
SYS                                                              HZY_HIGH_HIST                                                    PART_H2                                                                                                                           100          0            0            0            
SYS                                                              HZY_HIGH_HIST                                                                                                                                                                                      300          0            0            0            

3 rows fetched.

SQL> drop table if exists hzy_high_hist;

Succeed.

SQL> drop table if exists high_hist;

Succeed.

SQL> 
SQL> drop table if exists hzy_high_hist;

Succeed.

SQL> drop table if exists high_hist;

Succeed.

SQL> create table high_hist(a int, name varchar(2500));

Succeed.

SQL> insert into high_hist values(0,LPAD('g',2300,'g'));

1 rows affected.

SQL> create table hzy_high_hist(a int, name varchar(2500))
  2 partition by range(A)
  3 (
  4    partition PART_H1 values less than (100),
  5    partition PART_H2 values less than (200),
  6    partition PART_H3 values less than (301)
  7 );

Succeed.

SQL> 
SQL> CREATE or replace procedure storage_proc_000(startnum int,endall int) is
  2 i INT :=1;
  3 j varchar(10);
  4 BEGIN
  5   FOR i IN startnum..endall LOOP
  6     insert into hzy_high_hist select a+i,name from high_hist;
  7   END LOOP;
  8 END;
  9 /

Succeed.

SQL> call storage_proc_000(1,200);

PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> exec dbe_stats.collect_table_stats('SYS','hzy_high_hist', null, 10);

PL/SQL procedure successfully completed.

SQL> exec dbe_stats.collect_table_stats('SYS','hzy_high_hist', 'PART_H1', 90);

PL/SQL procedure successfully completed.

SQL> 
SQL> drop table if exists fvt_gather_table_01;

Succeed.

SQL> create table fvt_gather_table_01
  2 (c_int int,c_num number(10,1),c_name varchar(80),c_clob clob,c_bllo boolean)
  3 partition by range(c_int) 
  4 (partition p1 values less than (1),
  5 partition p2 values less than (11),
  6 partition p3 values less than (1001),
  7 partition p4 values less than (11011)
  8 );

Succeed.

SQL> 
SQL> begin
  2 for i in 0..11001
  3 loop
  4     insert into fvt_gather_table_01 values(i,i,'abs'||i,'clo'||i,'true') ;
  5 end loop;
  6 end;
  7 /

PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> exec dbe_stats.collect_table_stats(
  2 schema =>'SYS',
  3 name =>'FVT_GATHER_TABLE_01',
  4 part_name =>'P4',
  5 sample_ratio =>100,
  6 method_opt =>'for all indexed columns');

PL/SQL procedure successfully completed.

SQL> --sys_tables
SQL> select cols,indexes,partitioned,num_rows,avg_row_len,samplesize from sys.sys_tables 
  2 where name=upper('fvt_gather_table_01') and user#=( select id from sys.SYS_USERS where name='SYS' );

COLS         INDEXES      PARTITIONED  NUM_ROWS     AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ ------------ -------------------- ------------
5            0            1            11002        55                   11002       

1 rows fetched.

SQL> 
SQL> exec dbe_stats.collect_table_stats(
  2 schema =>'SYS',
  3 name =>'FVT_GATHER_TABLE_01',
  4 part_name =>'P3',
  5 sample_ratio =>100,
  6 method_opt =>'for all indexed columns');

PL/SQL procedure successfully completed.

SQL> select count(*) from  fvt_gather_table_01 partition(p3);

COUNT(*)            
--------------------
990                 

1 rows fetched.

SQL> --sys_tables
SQL> select cols,indexes,partitioned,num_rows,avg_row_len,samplesize from sys.sys_tables 
  2 where name=upper('fvt_gather_table_01') and user#=( select id from sys.SYS_USERS where name='SYS' );

COLS         INDEXES      PARTITIONED  NUM_ROWS     AVG_ROW_LEN          SAMPLESIZE  
------------ ------------ ------------ ------------ -------------------- ------------
5            0            1            11002        55                   11002       

1 rows fetched.

SQL> 
SQL> 
SQL> drop table if exists FVT_LIST_INDEX32_TABLE_001;

Succeed.

SQL> create table FVT_LIST_INDEX32_TABLE_001
  2 (
  3     ID INT ,
  4     NAME1 VARCHAR(100),
  5     TIME1 DATETIME,
  6     BR1 BOOLEAN,
  7     C_CLOB CLOB,
  8     b_blob blob
  9 )
 10 partition by list(id)
 11 (
 12 partition t1 values (1,2,3,4,5,6,7,8,9,10),
 13 partition t2 values (11,12,13,14,15,16,17,18,19,20),
 14 partition t3 values (21,22,23,24,25,26,27,28,29,30),
 15 partition t4 values (31,32,33,34,35,36,37,38,39,40),
 16 partition t5 values (41,42,43,44,45,46,47,48,49,50)
 17 );

Succeed.

SQL> insert into FVT_LIST_INDEX32_TABLE_001 values(9,'_1_1xx&','2019-6-30',true,'x1x#','1345');

1 rows affected.

SQL> insert into FVT_LIST_INDEX32_TABLE_001 values(11,'_1_1xx&_2','2019-7-31',false,'x1x#_111','134501a');

1 rows affected.

SQL> insert into FVT_LIST_INDEX32_TABLE_001 values(11,'_1_1xx&_2','2019-7-31',false,'x1x#_111','134501a');

1 rows affected.

SQL> insert into FVT_LIST_INDEX32_TABLE_001 values(20,'_1_1xx&_3','2019-8-30','1','x1x#_111','134501a1');

1 rows affected.

SQL> insert into FVT_LIST_INDEX32_TABLE_001 values(21,'_1_1xx&_3','2019-9-30','0','x1x#_112','134501a2');

1 rows affected.

SQL> insert into FVT_LIST_INDEX32_TABLE_001 values(31,'_1_1xx&_3','2019-10-31','0','x1x#_112','134501a2');

1 rows affected.

SQL> insert into FVT_LIST_INDEX32_TABLE_001 values(40,'_1_1xx&_3','2019-10-31','0','x1x#_112','134501a2');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> drop index if exists FVT_LIST_INDEX1_001 ON FVT_LIST_INDEX32_TABLE_001;

Succeed.

SQL> create index  FVT_LIST_INDEX1_001 ON FVT_LIST_INDEX32_TABLE_001(id) local;

Succeed.

SQL> analyze table FVT_LIST_INDEX32_TABLE_001 compute statistics ;

Succeed.

SQL> exec dbe_stats.collect_table_stats('SYS', 'FVT_LIST_INDEX32_TABLE_001', part_name=>NULL,sample_ratio => 10,method_opt=>'for all indexed columns');

PL/SQL procedure successfully completed.

SQL> --select COL# ,ROW_NUM from SYS_HISTGRAM_ABSTR where  TAB# = (select id from sys_tables where name = 'FVT_LIST_INDEX32_TABLE_001') and col# = 2 order by SPARE1;
SQL> 
SQL> DROP USER IF EXISTS HZY_PSTATS1 CASCADE;

Succeed.

SQL> CREATE USER HZY_PSTATS1 IDENTIFIED BY CANTIAN_234;

Succeed.

SQL> 
SQL> DROP TABLE IF EXISTS HZY_PSTATS1.HZY_HIGH_GOLIDX;

Succeed.

SQL> DROP TABLE IF EXISTS HZY_PSTATS1.HZY_GOLIDX;

Succeed.

SQL> CREATE TABLE HZY_PSTATS1.HZY_GOLIDX(A INT);

Succeed.

SQL> INSERT INTO HZY_PSTATS1.HZY_GOLIDX VALUES(0);

1 rows affected.

SQL> CREATE TABLE HZY_PSTATS1.HZY_HIGH_GOLIDX(A INT)
  2 PARTITION BY RANGE(A)
  3 (
  4    PARTITION P_NDV1 VALUES LESS THAN (101),
  5    PARTITION P_NDV2 VALUES LESS THAN (201),
  6    PARTITION P_NDV3 VALUES LESS THAN (301)
  7 );

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE STORAGE_PROC_000(STARTNUM INT,ENDALL INT) IS
  2 I INT :=1;
  3 J VARCHAR(10);
  4 BEGIN
  5   FOR I IN STARTNUM..ENDALL LOOP
  6     INSERT INTO HZY_PSTATS1.HZY_HIGH_GOLIDX SELECT A FROM HZY_PSTATS1.HZY_GOLIDX;
  7   END LOOP;
  8 END;
  9 /

Succeed.

SQL> 
SQL> CALL STORAGE_PROC_000(1,100);

PL/SQL procedure successfully completed.

SQL> CALL STORAGE_PROC_000(101,200);

PL/SQL procedure successfully completed.

SQL> CALL STORAGE_PROC_000(201,300);

PL/SQL procedure successfully completed.

SQL> COMMIT;

Succeed.

SQL> 
SQL> CREATE INDEX HZY_PSTATS1.HZY_HIGH_GOLIDX_1 ON HZY_PSTATS1.HZY_HIGH_GOLIDX(A) LOCAL;

Succeed.

SQL> EXEC dbe_stats.collect_table_stats('HZY_PSTATS1', 'HZY_HIGH_GOLIDX', 'P_NDV1');

PL/SQL procedure successfully completed.

SQL> 
SQL> SELECT NAME,BLEVEL,LEVEL_BLOCKS,DISTINCT_KEYS,AVG_LEAF_BLOCKS_PER_KEY,AVG_DATA_BLOCKS_PER_KEY,EMPTY_LEAF_BLOCKS,CLUFAC,COMB_COLS_2_NDV,COMB_COLS_3_NDV,COMB_COLS_4_NDV FROM SYS_INDEXES WHERE TABLE# = (SELECT ID FROM SYS_TABLES WHERE NAME = 'HZY_HIGH_GOLIDX') AND USER# = (SELECT ID FROM SYS_USERS WHERE NAME = 'HZY_PSTATS1');

NAME                                                             BLEVEL       LEVEL_BLOCKS DISTINCT_KEYS AVG_LEAF_BLOCKS_PER_KEY AVG_DATA_BLOCKS_PER_KEY EMPTY_LEAF_BLOCKS CLUFAC       COMB_COLS_2_NDV COMB_COLS_3_NDV COMB_COLS_4_NDV
---------------------------------------------------------------- ------------ ------------ ------------- ----------------------- ----------------------- ----------------- ------------ --------------- --------------- ---------------
HZY_HIGH_GOLIDX_1                                                0            0            0             0                       0                       0                 0            0               0               0              

1 rows fetched.

SQL> DROP USER IF EXISTS HZY_PSTATS1 CASCADE;

Succeed.

SQL> 
SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> drop user if exists liuhang_analyze cascade;

Succeed.

SQL> create user liuhang_analyze identified by Cantian_234;

Succeed.

SQL> grant all privileges to liuhang_analyze;

Succeed.

SQL> grant select on sys.sys_columns to liuhang_analyze;

Succeed.

SQL> grant select on sys.sys_tables to liuhang_analyze;

Succeed.

SQL> grant select on sys.sys_users to liuhang_analyze;

Succeed.

SQL> conn liuhang_analyze/Cantian_234@127.0.0.1:1611

connected.

SQL> create table employee_test(
  2        emp_id number(18),
  3        lead_id number(18),
  4        emp_name varchar2(200)
  5 );

Succeed.

SQL> insert into employee_test values('1',0,'king');

1 rows affected.

SQL> insert into employee_test values('2',1,'arise');

1 rows affected.

SQL> insert into employee_test values('3',1,'jack');

1 rows affected.

SQL> commit;

Succeed.

SQL> --expected error
SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => 'employee_test', method_opt=>'for columns');

CT-00932, [1:2] PL/SQL(LIUHANG_ANALYZE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:109] CT-00601, Sql syntax error: unexpected word '' found

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => 'employee_test', method_opt=>'for columns xxx');

CT-00932, [1:2] PL/SQL(LIUHANG_ANALYZE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:110] CT-00920, Undefined symbol XXX

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => 'employee_test', method_opt=>'for columns to_char(emp_id)');

CT-00932, [1:2] PL/SQL(LIUHANG_ANALYZE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:110] CT-00920, Undefined symbol TO_CHAR

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => 'employee_test', method_opt=>'for columns emp_id;lead_id');

CT-00932, [1:2] PL/SQL(LIUHANG_ANALYZE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:116] CT-00920, Undefined symbol ;

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => 'employee_test', method_opt=>'for columns emp_id,emp_id');

CT-00932, [1:2] PL/SQL(LIUHANG_ANALYZE.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:117] CT-00604, Duplicate COLUMN name EMP_ID

SQL> 
SQL> --expected right
SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'EMPLOYEE_TEST' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
0                   

1 rows fetched.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => 'employee_test', method_opt=>'for columns lead_id');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'EMPLOYEE_TEST' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
1                   

1 rows fetched.

SQL> call DBE_STATS.DELETE_TABLE_STATS(schema => 'liuhang_analyze', name => 'employee_test');

PL/SQL procedure successfully completed.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => 'employee_test', method_opt=>'for columns emp_id, lead_id');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'EMPLOYEE_TEST' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
2                   

1 rows fetched.

SQL> call DBE_STATS.DELETE_TABLE_STATS(schema => 'liuhang_analyze', name => 'employee_test');

PL/SQL procedure successfully completed.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => 'employee_test', method_opt=>'for columns emp_id, lead_id, emp_name');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'EMPLOYEE_TEST' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
3                   

1 rows fetched.

SQL> --test case sensitive
SQL> create table "employee_test_case"(
  2        `emp_id` number(18),
  3        "lead_id" number(18),
  4        `emp_name` varchar2(200)
  5 );

Succeed.

SQL> insert into `employee_test_case` values('1',0,'king');

1 rows affected.

SQL> insert into `employee_test_case` values('2',1,'arise');

1 rows affected.

SQL> insert into `employee_test_case` values('3',1,'jack');

1 rows affected.

SQL> commit;

Succeed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'employee_test_case' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
0                   

1 rows fetched.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => '`employee_test_case`', method_opt=>'for columns '||'`lead_id`');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'employee_test_case' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
1                   

1 rows fetched.

SQL> call DBE_STATS.DELETE_TABLE_STATS(schema => 'liuhang_analyze', name => '`employee_test_case`');

PL/SQL procedure successfully completed.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => '`employee_test_case`', method_opt=>'for columns '||'`emp_id`'||','||'`lead_id`');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'employee_test_case' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
2                   

1 rows fetched.

SQL> call DBE_STATS.DELETE_TABLE_STATS(schema => 'liuhang_analyze', name => '`employee_test_case`');

PL/SQL procedure successfully completed.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => '`employee_test_case`', method_opt=>'for columns '||'`emp_id`'||','||'`lead_id`'||','||'`emp_name`');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'employee_test_case' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
3                   

1 rows fetched.

SQL> call DBE_STATS.DELETE_TABLE_STATS(schema => 'liuhang_analyze', name => '`employee_test_case`');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'employee_test_case' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
0                   

1 rows fetched.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => '`employee_test_case`', method_opt=>'for columns `lead_id`');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'employee_test_case' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
1                   

1 rows fetched.

SQL> call DBE_STATS.DELETE_TABLE_STATS(schema => 'liuhang_analyze', name => '`employee_test_case`');

PL/SQL procedure successfully completed.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => '`employee_test_case`', method_opt=>'for columns `emp_id`,`lead_id`');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'employee_test_case' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
2                   

1 rows fetched.

SQL> call DBE_STATS.DELETE_TABLE_STATS(schema => 'liuhang_analyze', name => '`employee_test_case`');

PL/SQL procedure successfully completed.

SQL> call dbe_stats.collect_table_stats(schema => 'liuhang_analyze', name => '`employee_test_case`', method_opt=>'for columns `emp_id`,`lead_id`, "emp_name"');

PL/SQL procedure successfully completed.

SQL> select count(*) from sys.sys_columns c, sys.sys_tables t, sys.sys_users u where 
  2 c.user# = t.user# and c.table# = t.id and t.name = 'employee_test_case' and t.user# = u.id and u.name = 'LIUHANG_ANALYZE'
  3 and c.HISTOGRAM is not null;

COUNT(*)            
--------------------
3                   

1 rows fetched.

SQL> conn sys/Huawei@123@127.0.0.1:1611

connected.

SQL> drop user if exists liuhang_analyze cascade;

Succeed.

SQL> drop table if exists mod_1;

Succeed.

SQL> create table mod_1 (
  2 c_id int, c_integer integer,
  3 c_real real,c_float float, c_cdouble binary_double,
  4 c_decimal decimal(38), c_number number(38),c_number1 number,c_number2 number(20,10),c_numeric numeric(38),
  5 c_char char(50) default null, c_varchar varchar(20), c_varchar2 varchar2(4000),
  6 c_clob clob,
  7 c_raw raw(20),c_blob blob,
  8 c_date date,c_timestamp timestamp
  9 );

Succeed.

SQL> 
SQL> insert into mod_1(c_id) values(4);

1 rows affected.

SQL> call DBE_STATS.FLUSH_DB_STATS_INFO;

PL/SQL procedure successfully completed.

SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from dba_tab_modifications where table_name='MOD_1';

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
SYS                                                              MOD_1                                                                                                                                                                                              1            0            0            0            

1 rows fetched.

SQL> insert into mod_1(c_date) values('2018-08-26');

1 rows affected.

SQL> call DBE_STATS.FLUSH_DB_STATS_INFO();

PL/SQL procedure successfully completed.

SQL> 
SQL> --@testpoint:insert 2
SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from dba_tab_modifications where table_name='MOD_1';

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
SYS                                                              MOD_1                                                                                                                                                                                              2            0            0            0            

1 rows fetched.

SQL> insert into mod_1(c_id) values(9);

1 rows affected.

SQL> exec DBE_STATS.FLUSH_DB_STATS_INFO;

PL/SQL procedure successfully completed.

SQL> 
SQL> --@testpoint:insert 3
SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from dba_tab_modifications where table_name='MOD_1';

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
SYS                                                              MOD_1                                                                                                                                                                                              3            0            0            0            

1 rows fetched.

SQL> update  mod_1 set c_date='2018-10-09' where c_id is null;

1 rows affected.

SQL> call DBE_STATS.FLUSH_DB_STATS_INFO;

PL/SQL procedure successfully completed.

SQL> 
SQL> --@testpoint:updates 1
SQL> select TABLE_OWNER,TABLE_NAME,PARTITION_NAME,SUBPARTITION_NAME,INSERTS,UPDATES,DELETES,DROP_SEGMENTS from dba_tab_modifications where table_name='MOD_1';

TABLE_OWNER                                                      TABLE_NAME                                                       PARTITION_NAME                                                   SUBPARTITION_NAME                                                INSERTS      UPDATES      DELETES      DROP_SEGMENTS
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ ------------ ------------ -------------
SYS                                                              MOD_1                                                                                                                                                                                              3            1            0            0            

1 rows fetched.

SQL> drop table if exists mod_1;

Succeed.

SQL> 
SQL> ---test empty leaves stats
SQL> drop table if exists hzy_emp_tab;

Succeed.

SQL> CREATE TABLE hzy_emp_tab(id int, b int) crmode row;

Succeed.

SQL> create index idx_hzy_emp_tab on hzy_emp_tab(b);

Succeed.

SQL> drop table if exists hzy_emp_tab_part;

Succeed.

SQL> create table hzy_emp_tab_part(f1 int, f2 real, f3 number)
  2 PARTITION BY RANGE(f1)
  3 (
  4  PARTITION p1 values less than(1500),
  5  PARTITION p2 values less than(3000),
  6  PARTITION p3 values less than(4500),
  7  PARTITION p4 values less than(6001)
  8 ) crmode row;

Succeed.

SQL> create index hzy_idx_p1_1 on hzy_emp_tab_part(f1);

Succeed.

SQL> create index hzy_idx_p1_2 on hzy_emp_tab_part(f2,f3) local;

Succeed.

SQL> create index hzy_idx_p1_3 on hzy_emp_tab_part(f1,f3) local
  2 (
  3 partition p1,
  4 partition p2,
  5 partition p3,
  6 partition p4
  7 );

Succeed.

SQL> 
SQL> --2. normal table
SQL> declare
  2     i integer;
  3 begin
  4     for i in 1 .. 4500 loop
  5         execute immediate 'insert into hzy_emp_tab values(1, ' || i || ')';
  6     end loop;
  7     commit;
  8 end;
  9 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select PAGES from USER_SEGMENTS where SEGMENT_NAME = 'IDX_HZY_EMP_TAB';

PAGES               
--------------------
24                  

1 rows fetched.

SQL> analyze table hzy_emp_tab compute statistics;

Succeed.

SQL> select BLEVEL,LEVEL_BLOCKS,EMPTY_LEAF_BLOCKS,DISTINCT_KEYS,COMB_COLS_2_NDV,COMB_COLS_3_NDV,COMB_COLS_4_NDV from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_EMP_TAB');

BLEVEL       LEVEL_BLOCKS EMPTY_LEAF_BLOCKS DISTINCT_KEYS COMB_COLS_2_NDV COMB_COLS_3_NDV COMB_COLS_4_NDV
------------ ------------ ----------------- ------------- --------------- --------------- ---------------
2            18           0                 4500          0               0               0              

1 rows fetched.

SQL> delete from hzy_emp_tab;

4500 rows affected.

SQL> commit;

Succeed.

SQL> analyze table hzy_emp_tab compute statistics;

Succeed.

SQL> select BLEVEL,LEVEL_BLOCKS,EMPTY_LEAF_BLOCKS,DISTINCT_KEYS,COMB_COLS_2_NDV,COMB_COLS_3_NDV,COMB_COLS_4_NDV from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_EMP_TAB');

BLEVEL       LEVEL_BLOCKS EMPTY_LEAF_BLOCKS DISTINCT_KEYS COMB_COLS_2_NDV COMB_COLS_3_NDV COMB_COLS_4_NDV
------------ ------------ ----------------- ------------- --------------- --------------- ---------------
2            18           18                0             0               0               0              

1 rows fetched.

SQL> 
SQL> --4. partition table
SQL> declare
  2     i integer;
  3 begin
  4     for i in 1 .. 4500 loop
  5         execute immediate 'insert into hzy_emp_tab_part values(' || i || ', 1, ' || i || ')';
  6     end loop;
  7     commit;
  8 end;
  9 /

PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> select PAGES from user_segments where SEGMENT_NAME = 'HZY_IDX_P1_2' order by pages;

PAGES               
--------------------
0                   
8                   
16                  
16                  
16                  

5 rows fetched.

SQL> analyze table hzy_emp_tab_part compute statistics;

Succeed.

SQL> select index#,part#,BLEVEL,LEVEL_BLOCKS,EMPTY_LEAF_BLOCKS,DISTKEY,COMB_COLS_2_NDV from SYS_INDEX_PARTS where table# = (select id from SYS_TABLES where name = 'HZY_EMP_TAB_PART') order by index#,part#;

INDEX#       PART#        BLEVEL       LEVEL_BLOCKS EMPTY_LEAF_BLOCKS DISTKEY      COMB_COLS_2_NDV
------------ ------------ ------------ ------------ ----------------- ------------ ---------------
1            10           2            9            0                 1499         1499           
1            20           2            9            0                 1500         1500           
1            30           2            9            0                 1500         1500           
1            40           1            1            0                 1            1              
2            10           2            8            0                 1499         1499           
2            20           2            8            0                 1500         1500           
2            30           2            8            0                 1500         1500           
2            40           1            1            0                 1            1              

8 rows fetched.

SQL> delete from hzy_emp_tab_part;

4500 rows affected.

SQL> commit;

Succeed.

SQL> analyze table hzy_emp_tab_part compute statistics;

Succeed.

SQL> select index#,part#,BLEVEL,LEVEL_BLOCKS,EMPTY_LEAF_BLOCKS,DISTKEY,COMB_COLS_2_NDV from SYS_INDEX_PARTS where table# = (select id from SYS_TABLES where name = 'HZY_EMP_TAB_PART') order by index#,part#;

INDEX#       PART#        BLEVEL       LEVEL_BLOCKS EMPTY_LEAF_BLOCKS DISTKEY      COMB_COLS_2_NDV
------------ ------------ ------------ ------------ ----------------- ------------ ---------------
1            10           2            9            9                 0            0              
1            20           2            9            9                 0            0              
1            30           2            9            9                 0            0              
1            40           1            1            0                 0            0              
2            10           2            8            8                 0            0              
2            20           2            8            8                 0            0              
2            30           2            8            8                 0            0              
2            40           1            1            0                 0            0              

8 rows fetched.

SQL> 
SQL> drop table if exists hzy_emp_tab;

Succeed.

SQL> CREATE TABLE hzy_emp_tab(id int, b int) crmode page;

Succeed.

SQL> create index idx_hzy_emp_tab on hzy_emp_tab(b);

Succeed.

SQL> drop table if exists hzy_emp_tab_part;

Succeed.

SQL> create table hzy_emp_tab_part(f1 int, f2 real, f3 number)
  2 PARTITION BY RANGE(f1)
  3 (
  4  PARTITION p1 values less than(1500),
  5  PARTITION p2 values less than(3000),
  6  PARTITION p3 values less than(4500),
  7  PARTITION p4 values less than(6001)
  8 ) crmode page;

Succeed.

SQL> create index hzy_idx_p1_1 on hzy_emp_tab_part(f1);

Succeed.

SQL> create index hzy_idx_p1_2 on hzy_emp_tab_part(f2,f3) local;

Succeed.

SQL> create index hzy_idx_p1_3 on hzy_emp_tab_part(f1,f3) local
  2 (
  3 partition p1,
  4 partition p2,
  5 partition p3,
  6 partition p4
  7 );

Succeed.

SQL> 
SQL> --2. normal table
SQL> declare
  2     i integer;
  3 begin
  4     for i in 1 .. 4500 loop
  5         execute immediate 'insert into hzy_emp_tab values(1, ' || i || ')';
  6     end loop;
  7     commit;
  8 end;
  9 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select PAGES from USER_SEGMENTS where SEGMENT_NAME = 'IDX_HZY_EMP_TAB';

PAGES               
--------------------
16                  

1 rows fetched.

SQL> analyze table hzy_emp_tab compute statistics;

Succeed.

SQL> select BLEVEL,LEVEL_BLOCKS,EMPTY_LEAF_BLOCKS,DISTINCT_KEYS,COMB_COLS_2_NDV,COMB_COLS_3_NDV,COMB_COLS_4_NDV from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_EMP_TAB');

BLEVEL       LEVEL_BLOCKS EMPTY_LEAF_BLOCKS DISTINCT_KEYS COMB_COLS_2_NDV COMB_COLS_3_NDV COMB_COLS_4_NDV
------------ ------------ ----------------- ------------- --------------- --------------- ---------------
2            11           0                 4500          0               0               0              

1 rows fetched.

SQL> delete from hzy_emp_tab;

4500 rows affected.

SQL> commit;

Succeed.

SQL> analyze table hzy_emp_tab compute statistics;

Succeed.

SQL> select BLEVEL,LEVEL_BLOCKS,EMPTY_LEAF_BLOCKS,DISTINCT_KEYS,COMB_COLS_2_NDV,COMB_COLS_3_NDV,COMB_COLS_4_NDV from SYS_INDEXES where table# = (select id from SYS_TABLES where name = 'HZY_EMP_TAB');

BLEVEL       LEVEL_BLOCKS EMPTY_LEAF_BLOCKS DISTINCT_KEYS COMB_COLS_2_NDV COMB_COLS_3_NDV COMB_COLS_4_NDV
------------ ------------ ----------------- ------------- --------------- --------------- ---------------
2            11           11                0             0               0               0              

1 rows fetched.

SQL> 
SQL> --4. partition table
SQL> declare
  2     i integer;
  3 begin
  4     for i in 1 .. 4500 loop
  5         execute immediate 'insert into hzy_emp_tab_part values(' || i || ', 1, ' || i || ')';
  6     end loop;
  7     commit;
  8 end;
  9 /

PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> select PAGES from user_segments where SEGMENT_NAME = 'HZY_IDX_P1_2' order by pages;

PAGES               
--------------------
0                   
8                   
16                  
16                  
16                  

5 rows fetched.

SQL> analyze table hzy_emp_tab_part compute statistics;

Succeed.

SQL> select index#,part#,BLEVEL,LEVEL_BLOCKS,EMPTY_LEAF_BLOCKS,DISTKEY,COMB_COLS_2_NDV from SYS_INDEX_PARTS where table# = (select id from SYS_TABLES where name = 'HZY_EMP_TAB_PART') order by index#,part#;

INDEX#       PART#        BLEVEL       LEVEL_BLOCKS EMPTY_LEAF_BLOCKS DISTKEY      COMB_COLS_2_NDV
------------ ------------ ------------ ------------ ----------------- ------------ ---------------
1            10           2            13           3                 1499         1499           
1            20           2            13           3                 1500         1500           
1            30           2            13           3                 1500         1500           
1            40           1            1            0                 1            1              
2            10           2            13           4                 1499         1499           
2            20           2            13           4                 1500         1500           
2            30           2            13           4                 1500         1500           
2            40           1            1            0                 1            1              

8 rows fetched.

SQL> delete from hzy_emp_tab_part;

4500 rows affected.

SQL> commit;

Succeed.

SQL> analyze table hzy_emp_tab_part compute statistics;

Succeed.

SQL> select index#,part#,BLEVEL,LEVEL_BLOCKS,EMPTY_LEAF_BLOCKS,DISTKEY,COMB_COLS_2_NDV from SYS_INDEX_PARTS where table# = (select id from SYS_TABLES where name = 'HZY_EMP_TAB_PART') order by index#,part#;

INDEX#       PART#        BLEVEL       LEVEL_BLOCKS EMPTY_LEAF_BLOCKS DISTKEY      COMB_COLS_2_NDV
------------ ------------ ------------ ------------ ----------------- ------------ ---------------
1            10           2            13           13                0            0              
1            20           2            13           13                0            0              
1            30           2            13           13                0            0              
1            40           1            1            0                 0            0              
2            10           2            13           13                0            0              
2            20           2            13           13                0            0              
2            30           2            13           13                0            0              
2            40           1            1            0                 0            0              

8 rows fetched.

SQL> 
SQL> drop table if exists hzy_sep;

Succeed.

SQL> create table hzy_sep(a int, b int, c int, d char(10));

Succeed.

SQL> create index ix_hzy_sep on hzy_sep(a);

Succeed.

SQL> insert into hzy_sep values(1,2,3,'hzy');

1 rows affected.

SQL> insert into hzy_sep values(2,4,3,'hzy');

1 rows affected.

SQL> insert into hzy_sep values(3,34,3,'hzy');

1 rows affected.

SQL> insert into hzy_sep values(4,2,1,'hzy');

1 rows affected.

SQL> insert into hzy_sep values(5,21,3,'hzy');

1 rows affected.

SQL> insert into hzy_sep values(6,2,13,'hzy');

1 rows affected.

SQL> insert into hzy_sep values(7,21,3,'hzy');

1 rows affected.

SQL> insert into hzy_sep values(1,2,3,'hzy');

1 rows affected.

SQL> exec  dbe_stats.collect_table_stats(schema => 'sys',name => 'hzy_sep',part_name => null,sample_ratio => dbe_stats.auto_sample_size,method_opt=>'for columns c');

PL/SQL procedure successfully completed.

SQL> select col#,BUCKET_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'HZY_SEP') order by col#;

COL#         BUCKET_NUM   NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM    
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------
2            3            0            1                                                                13                                                               3           

1 rows fetched.

SQL> exec  dbe_stats.collect_table_stats(schema => 'sys',name => 'hzy_sep',part_name => null,sample_ratio => dbe_stats.auto_sample_size,method_opt=>'for columns with indexed columns');

CT-00932, [1:3] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:3] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:152] CT-00601, Sql syntax error: unexpected word 'with' found

SQL> exec  dbe_stats.collect_table_stats(schema => 'sys',name => 'hzy_sep',part_name => null,sample_ratio => dbe_stats.auto_sample_size,method_opt=>'for columns c,d with indexed columns');

PL/SQL procedure successfully completed.

SQL> select col#,BUCKET_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'HZY_SEP') order by col#;

COL#         BUCKET_NUM   NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM    
------------ ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------
0            7            0            1                                                                7                                                                7           
2            3            0            1                                                                13                                                               3           
3            1            0            hzy                                                              hzy                                                              1           

3 rows fetched.

SQL> 
SQL> drop table if exists hzy_sep;

Succeed.

SQL> create table hzy_sep(f1 int, f2 int, f3 char(30))
  2 PARTITION BY RANGE(f2)
  3 INTERVAL(10)
  4 (
  5  PARTITION hzy_sepp1 values less than(10),
  6  PARTITION hzy_sepp2 values less than(20),
  7  PARTITION hzy_sepp3 values less than(30)
  8 );

Succeed.

SQL> create index ix_hzy_sep on hzy_sep(f1);

Succeed.

SQL> insert into hzy_sep values(1,5,'hzy');

1 rows affected.

SQL> insert into hzy_sep values(2,15,'hzy1');

1 rows affected.

SQL> insert into hzy_sep values(3,25,'hzy2');

1 rows affected.

SQL> insert into hzy_sep values(4,35,'hzy3');

1 rows affected.

SQL> insert into hzy_sep values(5,115,'hzy66');

1 rows affected.

SQL> insert into hzy_sep values(6,55,'6hzy');

1 rows affected.

SQL> insert into hzy_sep values(7,65,'hezy');

1 rows affected.

SQL> insert into hzy_sep values(8,75,'hzfdy');

1 rows affected.

SQL> insert into hzy_sep values(9,85,'hzyf');

1 rows affected.

SQL> insert into hzy_sep values(10,95,'hzyd');

1 rows affected.

SQL> insert into hzy_sep values(11,105,'hzy');

1 rows affected.

SQL> insert into hzy_sep select * from hzy_sep;

11 rows affected.

SQL> insert into hzy_sep select * from hzy_sep;

22 rows affected.

SQL> commit;

Succeed.

SQL> exec  dbe_stats.collect_table_stats(schema => 'sys',name => 'hzy_sep',part_name => null,sample_ratio => dbe_stats.auto_sample_size,method_opt=>'for columns f1');

PL/SQL procedure successfully completed.

SQL> select col#,spare1,BUCKET_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'HZY_SEP') order by col#,spare1;

COL#         SPARE1               BUCKET_NUM   NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM    
------------ -------------------- ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------
0            10                   1            0            1                                                                1                                                                1           
0            20                   1            0            2                                                                2                                                                1           
0            30                   1            0            3                                                                3                                                                1           
0            1073741824           1            0            4                                                                4                                                                1           
0            1073741826           1            0            6                                                                6                                                                1           
0            1073741827           1            0            7                                                                7                                                                1           
0            1073741828           1            0            8                                                                8                                                                1           
0            1073741829           1            0            9                                                                9                                                                1           
0            1073741830           1            0            10                                                               10                                                               1           
0            1073741831           1            0            11                                                               11                                                               1           
0            1073741832           1            0            5                                                                5                                                                1           
0            4294967295           11           0            1                                                                11                                                               11          

12 rows fetched.

SQL> exec  dbe_stats.collect_table_stats(schema => 'sys',name => 'hzy_sep',part_name => null,sample_ratio => dbe_stats.auto_sample_size,method_opt=>'for columns with indexed columns');

CT-00932, [1:3] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:3] PL/SQL(DBE_STATS.COLLECT_TABLE_STATS) terminated with execute errors
[1:152] CT-00601, Sql syntax error: unexpected word 'with' found

SQL> exec  dbe_stats.collect_table_stats(schema => 'sys',name => 'hzy_sep',part_name => null,sample_ratio => dbe_stats.auto_sample_size,method_opt=>'for columns f3,f1 with indexed columns');

PL/SQL procedure successfully completed.

SQL> select col#,spare1,BUCKET_NUM,NULL_NUM,MINVALUE,MAXVALUE,DIST_NUM from SYS_HISTGRAM_ABSTR where tab# = (select id from SYS_TABLES where name = 'HZY_SEP') order by col#,spare1;

COL#         SPARE1               BUCKET_NUM   NULL_NUM     MINVALUE                                                         MAXVALUE                                                         DIST_NUM    
------------ -------------------- ------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------
0            10                   1            0            1                                                                1                                                                1           
0            20                   1            0            2                                                                2                                                                1           
0            30                   1            0            3                                                                3                                                                1           
0            1073741824           1            0            4                                                                4                                                                1           
0            1073741826           1            0            6                                                                6                                                                1           
0            1073741827           1            0            7                                                                7                                                                1           
0            1073741828           1            0            8                                                                8                                                                1           
0            1073741829           1            0            9                                                                9                                                                1           
0            1073741830           1            0            10                                                               10                                                               1           
0            1073741831           1            0            11                                                               11                                                               1           
0            1073741832           1            0            5                                                                5                                                                1           
0            4294967295           11           0            1                                                                11                                                               11          
2            10                   1            0            hzy                                                              hzy                                                              1           
2            20                   1            0            hzy1                                                             hzy1                                                             1           
2            30                   1            0            hzy2                                                             hzy2                                                             1           
2            1073741824           1            0            hzy3                                                             hzy3                                                             1           
2            1073741826           1            0            6hzy                                                             6hzy                                                             1           
2            1073741827           1            0            hezy                                                             hezy                                                             1           
2            1073741828           1            0            hzfdy                                                            hzfdy                                                            1           
2            1073741829           1            0            hzyf                                                             hzyf                                                             1           
2            1073741830           1            0            hzyd                                                             hzyd                                                             1           
2            1073741831           1            0            hzy                                                              hzy                                                              1           
2            1073741832           1            0            hzy66                                                            hzy66                                                            1           
2            4294967295           10           0            6hzy                                                             hzyf                                                             10          

24 rows fetched.

SQL> drop table if exists hzy_patch_insert;

Succeed.

SQL> create table hzy_patch_insert(a int,b int);

Succeed.

SQL> create index bat_idx on hzy_patch_insert(a);

Succeed.

SQL> insert into hzy_patch_insert values(1,0);

1 rows affected.

SQL> insert into hzy_patch_insert select * from hzy_patch_insert;

1 rows affected.

SQL> insert into hzy_patch_insert select * from hzy_patch_insert;

2 rows affected.

SQL> insert into hzy_patch_insert select * from hzy_patch_insert;

4 rows affected.

SQL> commit;

Succeed.

SQL> select count(*) from HZY_PATCH_INSERT;

COUNT(*)            
--------------------
8                   

1 rows fetched.

SQL> exec DBE_STATS.FLUSH_DB_STATS_INFO();

PL/SQL procedure successfully completed.

SQL> select TABLE_NAME,INSERTS,UPDATES,DELETES from ADM_TAB_MODIFICATIONS where TABLE_NAME  =  'HZY_PATCH_INSERT';

TABLE_NAME                                                       INSERTS      UPDATES      DELETES     
---------------------------------------------------------------- ------------ ------------ ------------
HZY_PATCH_INSERT                                                 8            0            0           

1 rows fetched.

SQL> 
SQL> drop table if exists T_SP_ITP2GCELLFREQ_FREQ_C41;

Succeed.

SQL> drop table if exists t_TP_GTRX_C4;

Succeed.

SQL> 
SQL> CREATE GLOBAL TEMPORARY TABLE "T_SP_ITP2GCELLFREQ_FREQ_C41"
  2 (
  3 "OPERTYPE" BINARY_INTEGER NOT NULL,
  4 "PLANID" BINARY_INTEGER NOT NULL,
  5 "CMENEID" BINARY_INTEGER NOT NULL,
  6 "CELLID" BINARY_INTEGER
  7 )ON COMMIT DELETE ROWS;

Succeed.

SQL> 
SQL> 
SQL> create table t_TP_GTRX_C4
  2 (OperType BINARY_INTEGER,
  3 PlanID int);

Succeed.

SQL> 
SQL> create index t11 on t_TP_GTRX_C4(OperType);

Succeed.

SQL> insert into t_TP_GTRX_C4 values(1,2);

1 rows affected.

SQL> insert into t_TP_GTRX_C4 values(2,2);

1 rows affected.

SQL> 
SQL> insert into t_TP_GTRX_C4 values(3,2);

1 rows affected.

SQL> 
SQL> insert into t_TP_GTRX_C4 values(4,2);

1 rows affected.

SQL> insert into t_TP_GTRX_C4 values(5,2);

1 rows affected.

SQL> insert into t_TP_GTRX_C4 values(6,2);

1 rows affected.

SQL> 
SQL> insert into t_TP_GTRX_C4 select * from t_TP_GTRX_C4;

6 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> SELECT b.PlanID
  2 FROM t_sp_ITP2GCELLFREQ_FREQ_C41 b
  3 LEFT JOIN (
  4     SELECT *
  5     FROM t_TP_GTRX_C4
  6     WHERE OperType = 2
  7     ) c ON b.PlanID = c.PlanID
  8 WHERE b.PlanID = 54;

PLANID      
------------

0 rows fetched.

SQL> 
SQL> alter system set cbo = on;

Succeed.

SQL> drop table if exists pbi_edition;

Succeed.

SQL> create table pbi_edition (id int, ENTITY_ID varbinary(20), category varbinary(20));

Succeed.

SQL> insert into pbi_edition values(1, '1','1');

1 rows affected.

SQL> CREATE or replace procedure proc_insert(startall int,endall int) as
  2 sqlst varchar(500);
  3 BEGIN
  4   FOR i IN startall..endall LOOP
  5         insert into pbi_edition select i+1, ENTITY_ID,category from  pbi_edition where id = 1;commit;
  6   END LOOP;
  7 END;
  8 /

Succeed.

SQL> 
SQL> exec proc_insert(1,80);

PL/SQL procedure successfully completed.

SQL> 
SQL> call dbe_stats.collect_table_stats( schema=>'sys', name=>'pbi_edition', sample_ratio => 100, method_opt=>'for all columns');

PL/SQL procedure successfully completed.

SQL> select count(*) from pbi_edition t1 , pbi_edition t2 where t1.ENTITY_ID = t2.category;

COUNT(*)            
--------------------
6561                

1 rows fetched.

SQL> 
SQL> alter system set cbo = off;

Succeed.

SQL> 
SQL> drop table if exists hzy_emp;

Succeed.

SQL> create table hzy_emp (id int, name varchar(20));

Succeed.

SQL> insert into hzy_emp values(0, 'it is a long string');

1 rows affected.

SQL> insert into hzy_emp select id + 1, name from hzy_emp;

1 rows affected.

SQL> insert into hzy_emp select id + 2, name from hzy_emp;

2 rows affected.

SQL> insert into hzy_emp select id + 4, name from hzy_emp;

4 rows affected.

SQL> insert into hzy_emp select id + 8, name from hzy_emp;

8 rows affected.

SQL> insert into hzy_emp select id + 16, name from hzy_emp;

16 rows affected.

SQL> insert into hzy_emp select id + 32, name from hzy_emp;

32 rows affected.

SQL> insert into hzy_emp select id + 64, name from hzy_emp;

64 rows affected.

SQL> insert into hzy_emp select id + 120, name from hzy_emp;

128 rows affected.

SQL> insert into hzy_emp select * from hzy_emp;

256 rows affected.

SQL> insert into hzy_emp select * from hzy_emp;

512 rows affected.

SQL> insert into hzy_emp select * from hzy_emp;

1024 rows affected.

SQL> insert into hzy_emp select * from hzy_emp;

2048 rows affected.

SQL> insert into hzy_emp select * from hzy_emp;

4096 rows affected.

SQL> insert into hzy_emp select * from hzy_emp;

8192 rows affected.

SQL> commit;

Succeed.

SQL> delete from hzy_emp;

16384 rows affected.

SQL> commit;

Succeed.

SQL> analyze table hzy_emp compute statistics;

Succeed.

SQL> SELECT BLOCKS,EMPTY_BLOCKS  from sys_tables where name = 'HZY_EMP';

BLOCKS       EMPTY_BLOCKS
------------ ------------
86           86          

1 rows fetched.

SQL> 
SQL> drop table hzy;

CT-00843, The table or view SYS.HZY does not exist.
SQL> CREATE TABLE HZY(ID INT,NAME VARCHAR(100),ADDR VARCHAR(1024));

Succeed.

SQL> insert into hzy values(1,'hzy','dadadas');

1 rows affected.

SQL> insert into hzy values(1,'hzy','dadadas');

1 rows affected.

SQL> insert into hzy values(1,'hzy','dadadas');

1 rows affected.

SQL> insert into hzy values(1,'hzy','dadadas');

1 rows affected.

SQL> insert into hzy values(1,'hzy','dadadas');

1 rows affected.

SQL> exec dbe_stats.collect_table_stats('sys', 'HZY', part_name=>NULL, sample_ratio => 100, method_opt=>'for all columns');

PL/SQL procedure successfully completed.

SQL> 
SQL> EXEC DBE_STATS.MODIFY_COLUMN_STATS('sys','HZY', 'NAME', dist_nums=>0, density=>0.0075, null_cnt=>1);

PL/SQL procedure successfully completed.

SQL> create index iii on hzy(id, addr);

Succeed.

SQL> EXEC DBE_STATS.MODIFY_COLUMN_STATS('sys','HZY', 'NAME', dist_nums=>0, density=>0.0075, null_cnt=>1);
PL/SQL procedure successfully completed.

SQL> 
SQL> drop table if exists  PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010;

Succeed.

SQL> create GLOBAL TEMPORARY table PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010(c_id int,c_d_id int NOT NULL,c_w_id int NOT NULL,c_first varchar(32) NOT NULL,c_middle char(2),c_last varchar(50) NOT NULL,c_street_1 varchar(20) NOT NULL,c_street_2 varchar(20),c_city varchar(20) NOT NULL,c_state char(2) NOT NULL,c_zip char(9) NOT NULL,c_phone char(16) NOT NULL,c_since timestamp,c_credit char(2) NOT NULL,c_credit_lim numeric(12,2),c_discount numeric(4,4),c_balance numeric(12,2),c_ytd_payment real NOT NULL,c_payment_cnt number NOT NULL,c_delivery_cnt bool NOT NULL,c_end date NOT NULL,c_unsig tinyint unsigned,c_big bigint,c_vchar varchar2(8000),c_data long,c_text blob,c_clob clob,c_image image,c_binary binary(1000),c_varbinary varbinary(1000),c_raw raw(1000),primary key(c_id,c_d_id,c_w_id)) ON COMMIT DELETE rows;

Succeed.

SQL> 
SQL> CREATE or replace procedure PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PRO_010(startall int,endall int) as
  2 i INT;
  3 m int;
  4 f_start timestamp;
  5 f_end timestamp;
  6 f_interval INTERVAL DAY(7) TO SECOND(6);
  7 BEGIN
  8     delete from PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010;
  9 
 10     FOR a in 1..120 LOOP
 11         insert into PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010 select 1,1,1,'AA'||'is1cmvls','OE','AA'||'BAR1BARBAR','bkili'||'1'||'fcxcle'||'1','pmbwo'||'1'||'vhvpaj'||'1','dyf'||'1'||'rya'||'1','uq',4800||'1',940||'1'||205||'1','1800-01-01 10:51:47','GC',50000.0,0.4361328,-10.0,10.0,1,true,'1800-01-01 10:51:47',1,1,lpad('1234ABCDRFGHopqrstuvwxyz8',1500,'ABfgCDefgh'),lpad('sbfacwjdafgjyjhfpyxcpmnutcjxrbxxbm',200,'yxcfgdsgtcjxrbxxbm'),lpad('124324543256546324554354325',200,'7687389015'),lpad('sbfacwjpbvpgthpyxcpmnutcjdfaxrbxxbm',200,'yxcpmnutcjxrbxxbm'),lpad('123dSHGGefasdy',200,'678ASVDFopqrst9234'),lpad('12345abcdegf',200,'adbede1fghij1kLMHG3FFHUK'),lpad('ede1fghij1kLMHG3',200,'xcp2345abcdepmnu'),lpad('1234567890abcdfe',200,'abc1d2fe123895ab456cdef');
 12 
 13        select count(*) into m from (select distinct c_id from PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010);
 14 
 15      dbe_output.print_line(m);
 16 
 17         select sysdate into f_start from sys_dummy;
 18 
 19         FOR i IN startall..endall LOOP
 20             insert into PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010 select c_id+i,c_d_id+i,c_w_id+i,'AA'||'is'||i||'cmvls',c_middle,'AA'||'BAR'||i||'ddBARBAR',c_street_1,c_street_2,c_city,c_state,c_zip,'940'||i||'205'||i,c_since+i,c_credit,c_credit_lim,c_discount,c_balance,c_ytd_payment,c_payment_cnt,c_delivery_cnt,c_end+i,c_unsig+i,c_big+100000*i,c_vchar,c_data,c_text,c_clob,c_image,lpad('12345abcdegf',200,'adbede1fghij'||i||'kLMHG3FFHUK'),lpad('ede1fghij1kLMHG3',200,'xcp23'||i||'45abcdepmnu'),lpad('1234567890abcdfe',200,'abc1d2fe123'||i||'895ab456cdef') from PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010 where c_id=1;
 21         END LOOP;
 22      update PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010 set c_first='qwertyuityuiopasdfghjkl',c_street_1='qwertyuityu',c_last='qwertyuityuiopasdfghjklwertyuityuiopasdfg' where rowid>10;
 23 
 24        select count(*) into m from (select c_id from PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010);
 25      dbe_output.print_line(m);
 26 
 27      update PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010 set c_first='qwert',c_street_1='qwerty',c_last='qwertyuityuio' where rowid>10000;
 28 
 29      delete from PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010;
 30 
 31   select sysdate into f_end from sys_dummy;
 32 
 33  -- dbe_output.print_line(f_end - f_start);
 34   END LOOP;
 35 END;
 36 /

Succeed.

SQL> 
SQL> SET serveroutput ON;

ON
SQL> 
SQL> select count(*) c_id from PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_TAB_010;

C_ID                
--------------------
0                   

1 rows fetched.

SQL> 
SQL> call PROC_FOR_LOOP_JOIN_1_DML_TRUNCATE_PRO_010(1,1);

1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2

PL/SQL procedure successfully completed.

SQL> 
SQL> drop table if exists test_csf_number_stat;

Succeed.

SQL> create table test_csf_number_stat(id number, ids binary_integer) format csf;

Succeed.

SQL> insert into test_csf_number_stat values(0, 0);

1 rows affected.

SQL> commit;

Succeed.

SQL> call dbe_stats.collect_table_stats('sys','test_csf_number_stat');

PL/SQL procedure successfully completed.

SQL> select col#,BUCKET,ENDPOINT from SYS_HISTGRAM where table# = (select id from SYS_TABLES where name = 'TEST_CSF_NUMBER_STAT') order by col#,endpoint;

COL#         BUCKET                                                           ENDPOINT    
------------ ---------------------------------------------------------------- ------------
0            0                                                                1           
1            0                                                                1           

2 rows fetched.

SQL> 
SQL> drop table if exists hzy_number;

Succeed.

SQL> create table hzy_number(a NUMBER(6) ,b int);

Succeed.

SQL> insert into hzy_number values(0,1);

1 rows affected.

SQL> analyze table hzy_number compute statistics;

Succeed.

SQL> select col#,bucket_num,minvalue,maxvalue,dist_num from SYS_HISTGRAM_ABSTR where tab# = (select id from sys_tables where name = 'HZY_NUMBER') order by col#;

COL#         BUCKET_NUM   MINVALUE                                                         MAXVALUE                                                         DIST_NUM    
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------
0            1            0                                                                0                                                                1           
1            1            1                                                                1                                                                1           

2 rows fetched.

SQL> delete from hzy_number;

1 rows affected.

SQL> analyze table hzy_number compute statistics;

Succeed.

SQL> select col#,bucket_num,minvalue,maxvalue,dist_num from SYS_HISTGRAM_ABSTR where tab# = (select id from sys_tables where name = 'HZY_NUMBER') order by col#;

COL#         BUCKET_NUM   MINVALUE                                                         MAXVALUE                                                         DIST_NUM    
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------
0            0                                                                                                                                              0           
1            0                                                                                                                                              0           

2 rows fetched.

SQL> 
SQL> -- table function 'dba_analyze_table' for partition table
SQL> drop table if exists test_analyze_subpart_tab;

Succeed.

SQL> CREATE TABLE test_analyze_subpart_tab(c int, c1 int, c2 int) partition by list(c) subpartition by range(c1) (
  2 PARTITION PART_1 VALUES(1)
  3 (
  4  SUBPARTITION PART_11 VALUES LESS THAN(10),
  5  SUBPARTITION PART_12 VALUES LESS THAN(100)
  6 ),
  7 PARTITION PART_2 VALUES(2)
  8 (
  9  SUBPARTITION PART_21 VALUES LESS THAN(10),
 10  SUBPARTITION PART_22 VALUES LESS THAN(100)
 11 ),
 12 PARTITION PART_3 VALUES(DEFAULT));

Succeed.

SQL> 
SQL> insert into test_analyze_subpart_tab values(1,9,1),(1,19,1),(2,9,1),(2,19,1),(3,9,1);

5 rows affected.

SQL> select * from table(dba_analyze_table('SYS', 'TEST_ANALYZE_SUBPART_TAB')) where STAT_ITEM = 'total rows';

STAT_ITEM                                                        VALUE               
---------------------------------------------------------------- --------------------
total rows                                                       5                   

1 rows fetched.

SQL> drop table if exists test_analyze_subpart_tab;

Succeed.

SQL> drop table if exists EEE CASCADE CONSTRAINTS;

Succeed.

SQL> CREATE TABLE "EEE"
  2 (
  3   "ID" BINARY_INTEGER,
  4   "NAME" VARCHAR(30 BYTE)
  5 )
  6 PARTITION BY RANGE ("ID")
  7 INTERVAL(50)
  8 SUBPARTITION BY HASH ("NAME")
  9 (
 10     PARTITION P1 VALUES LESS THAN (50) TABLESPACE "USERS" INITRANS 2 PCTFREE 8(
 11         SUBPARTITION P11 TABLESPACE "USERS",
 12         SUBPARTITION P12 TABLESPACE "USERS"
 13     ),
 14     PARTITION P2 VALUES LESS THAN (100) TABLESPACE "USERS" INITRANS 2 PCTFREE 8(
 15         SUBPARTITION P21 TABLESPACE "USERS",
 16         SUBPARTITION P22 TABLESPACE "USERS"
 17     )
 18 );

Succeed.

SQL> 
SQL> INSERT INTO "EEE" ("ID","NAME") values (5,'OSS3:NE=5');

1 rows affected.

SQL> INSERT INTO "EEE" ("ID","NAME") values (6,'OSS3:NE=6');

1 rows affected.

SQL> INSERT INTO "EEE" ("ID","NAME") values (7,'OSS3:NE=7');

1 rows affected.

SQL> INSERT INTO "EEE" ("ID","NAME") values (8,'OSS3:NE=8');

1 rows affected.

SQL> INSERT INTO "EEE" ("ID","NAME") values (10,'OSS3:NE=10');

1 rows affected.

SQL> commit;

Succeed.

SQL> exec dbe_stats.collect_table_stats(schema=>'SYS', name=>'EEE',part_name=>null, sample_ratio=>100,method_opt=> 'for all columns');

PL/SQL procedure successfully completed.

SQL> EXEC DBE_STATS.MODIFY_COLUMN_STATS(table_schema =>'SYS',table_name=>'EEE',part_name=>NULL,column_name=>'ID',dist_nums=>100);

PL/SQL procedure successfully completed.

SQL> EXEC DBE_STATS.MODIFY_COLUMN_STATS(table_schema =>'SYS',table_name=>'EEE',part_name=>'P1',column_name=>'ID',dist_nums=>100);

PL/SQL procedure successfully completed.

SQL> select col#,bucket_num,minvalue,maxvalue,dist_num,spare1,spare2 from SYS_HISTGRAM_ABSTR where tab# = (select id from sys_tables where name = 'EEE') order by col#,spare1,spare2;

COL#         BUCKET_NUM   MINVALUE                                                         MAXVALUE                                                         DIST_NUM     SPARE1               SPARE2              
------------ ------------ ---------------------------------------------------------------- ---------------------------------------------------------------- ------------ -------------------- --------------------
0            5            5                                                                10                                                               100          10                   10                  
0            5            5                                                                10                                                               5            10                   4294967295          
0            0                                                                                                                                              0            20                   4294967295          
0            5            5                                                                10                                                               100          4294967295           4294967295          
1            5            OSS3:NE=10                                                       OSS3:NE=8                                                        5            10                   10                  
1            5            OSS3:NE=10                                                       OSS3:NE=8                                                        5            10                   4294967295          
1            0                                                                                                                                              0            20                   4294967295          
1            5            OSS3:NE=10                                                       OSS3:NE=8                                                        5            4294967295           4294967295          

8 rows fetched.

SQL> drop table if exists EEE CASCADE CONSTRAINTS;

Succeed.

SQL> 
SQL> ----DTS202107140GFWGPP1300
SQL> drop table if exists META_CLASS;

Succeed.

SQL> CREATE TABLE "META_CLASS"
  2 (
  3   "ID" BINARY_BIGINT NOT NULL,
  4   "NAME" VARCHAR(128 BYTE) NOT NULL,
  5   "DESCRIPTION" VARCHAR(750 BYTE),
  6   "PARENT_ID" BINARY_BIGINT NOT NULL,
  7   "DISPLAY_NAME" VARCHAR(1500 BYTE),
  8   "CUSTOM" BOOLEAN DEFAULT TRUE,
  9   "ABSTRACT_CI" BOOLEAN DEFAULT FALSE,
 10   "SENDEVENT" BOOLEAN DEFAULT FALSE,
 11   "MERES" BOOLEAN DEFAULT FALSE,
 12   "CATEGORY" VARCHAR(128 BYTE),
 13   "DISPLAYPARENTNODENAME" VARCHAR(1500 BYTE),
 14   "LINKTOMOUI" BOOLEAN DEFAULT TRUE,
 15   "TOPIC_NAME" VARCHAR(240 BYTE),
 16   "VERSION" NUMBER(3, 2) DEFAULT NULL,
 17   "UPDATETIME" BINARY_BIGINT
 18 );

Succeed.

SQL> ALTER TABLE "META_CLASS" MODIFY "ID" AUTO_INCREMENT;

Succeed.

SQL> ALTER TABLE "META_CLASS" AUTO_INCREMENT = 10100;

Succeed.

SQL> ALTER TABLE "META_CLASS" ADD PRIMARY KEY("ID");

Succeed.

SQL> ALTER TABLE "META_CLASS" ADD UNIQUE("NAME");

Succeed.

SQL> 
SQL> alter system set cbo = on;

Succeed.

SQL> MERGE INTO META_CLASS A USING (select 1 as ID,'BaseClass' as NAME,'BASE CLASS' as DESCRIPTION, -1 as PARENT_ID, '{"zh_CN":"aa","en_US":"Base Class"}' as DISPLAY_NAME, FALSE as CUSTOM, TRUE as ABSTRACT_CI, 1.0 as VERSION, 1000000000000 as UPDATETIME from SYS_DUMMY) B
  2 ON (A.ID=B.ID)
  3 WHEN NOT MATCHED THEN
  4 INSERT (ID,NAME,DESCRIPTION,PARENT_ID,DISPLAY_NAME,CUSTOM,ABSTRACT_CI,VERSION,UPDATETIME) VALUES (B.ID,B.NAME,B.DESCRIPTION,B.PARENT_ID,B.DISPLAY_NAME,B.CUSTOM,B.ABSTRACT_CI,B.VERSION,B.UPDATETIME);

1 rows affected.

SQL> alter system set cbo = off;

Succeed.

SQL> 
SQL> drop table if exists gst_session;

Succeed.

SQL> drop table if exists res_t;

Succeed.

SQL> drop table if exists normal_table;

Succeed.

SQL> alter system set cbo = on;

Succeed.

SQL> 
SQL> create global temporary table gst_session(a int, b bigint, c number, d date, e timestamp, f real, g char(10), h clob, i varchar(10)) on commit preserve rows;

Succeed.

SQL> create index idx1_gst_session on gst_session(a);

Succeed.

SQL> create global temporary table res_t(a int) on commit delete rows;

Succeed.

SQL> 
SQL> create table normal_table(a int, b bigint, c number, d date, e timestamp, f real, g char(10), h clob, i varchar(10));

Succeed.

SQL> insert into normal_table values(5,213525678150, 52312.122, '1995-02-01', '1995-02-09 11:12:40', 1272.264, 'fgggaaaaaa','aaaaaaaaaaa','ccccc');

1 rows affected.

SQL> insert into normal_table values(6,113545678150, 12812.722, '1995-03-09', '1995-02-09 12:12:40', 61272.264, 'cacccaaaaa','aaaaaaaaaaa','fsda');

1 rows affected.

SQL> insert into normal_table values(7,223545678150, 12312.722, '1996-05-09', '1995-02-09 13:12:40', 1272.264, 'ccbccaaaaa','aaaaaaaaaaa','ter');

1 rows affected.

SQL> insert into normal_table values(8,213545678150, 22312.722, '1992-02-09', '1995-02-09 14:12:40', 6272.264, 'cccccaaaaa','aaaaaaaaaaa','fds');

1 rows affected.

SQL> insert into normal_table values(91,213645678150, 52312.722, '1991-02-09', '1995-02-09 15:12:40', 6122.264, 'cccccaaaaa','aaaaaaaaaaa','gfd');

1 rows affected.

SQL> insert into normal_table values(19,213945678150, 62312.722, '1992-02-09', '1995-02-01 15:12:40', 672.264, 'ccdccaaaaa','aaaaaaaaaaa','dfgasd');

1 rows affected.

SQL> insert into normal_table values(39,213145678150, 72312.722, '1995-02-09', '1995-02-19 15:12:40', 1272.264, 'cecccaaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(94,13545678150, 1312.722, '1999-02-09', '1995-02-02 15:12:40', 2.264, 'ccccca7aaa','aaaaaaaaaaa','6bsdf');

1 rows affected.

SQL> insert into normal_table values(91,2135678150, 2312.722, '1991-01-09', '1995-02-13 15:12:40', 71272.264, 'cccgcaaaaa','aaaaaaaaaaa','fvadfv');

1 rows affected.

SQL> insert into normal_table values(93,2135458150, 12312.722, '1995-02-09', '1995-02-04 15:12:40', 11272.264, 'cscccaaaaa','aaaaaaaaaaa','tt4rdf');

1 rows affected.

SQL> insert into normal_table values(54,545678150, 5232.122, '1995-03-09', '1995-02-05 15:12:40', 21272.264, 'fgg9aaaaaa','aaaaaaaaaaa','dfga');

1 rows affected.

SQL> insert into normal_table values(67,45678150, 1232.722, '1995-04-09', '1995-02-06 15:12:40', 31272.264, 'cccchaaaaa','aaaaaaaaaaa','va');

1 rows affected.

SQL> insert into normal_table values(97,213545678150, 2312.722, '1995-05-09', '1995-02-07 15:12:40', 41272.264, 'jccccaaaaa','aaaaaaaaaaa','adgery');

1 rows affected.

SQL> insert into normal_table values(80,21354560, 1232.722, '1995-06-09', '1995-02-08 15:12:40', 71272.264, 'ccccsaaaaa','aaaaaaaaaaa','bbb');

1 rows affected.

SQL> insert into normal_table values(98,213545678150, 82312.722, '1995-02-01', '1995-02-11 15:12:40', 81272.264, 'vccccaaaaa','aaaaaaaaaaa','afdgdf');

1 rows affected.

SQL> insert into normal_table values(1,213545678150, 12.722, '1995-02-02', '1995-02-09 15:12:40', 61278.264, 'ccccoaaaaa','aaaaaaaaaaa','ggadga');

1 rows affected.

SQL> insert into normal_table values(2,213545678150, 2512.722, '1995-02-03', '1995-03-09 15:12:40', 61271.264, '1cccaaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(3,213545678150, 62312.722, '1995-02-04', '1995-02-09 15:12:40', 6172.264, 'cc8ccaaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(4,213545678150, 62312.722, '1995-02-05', '1995-02-09 15:12:40', 6272.264, 'cccccaaaaa','aaaaaaaaaaa','gasd');

1 rows affected.

SQL> insert into normal_table values(8,213545678150, 1312.722, '1995-02-05', '1995-02-09 15:12:40', 64272.264, 'ccc3caaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(511,2135478150, 82312.122, '1991-01-09', '1995-02-09 15:12:40', 1272.264, 'fgg0aaaaaa','aaaaaaaaaaa','asdfgsa');

1 rows affected.

SQL> insert into normal_table values(63,213545678150, 4312.722, '1995-02-09', '1995-02-09 15:12:40', 91272.264, '8ccccaaaaa','aaaaaaaaaaa','bbb');

1 rows affected.

SQL> insert into normal_table values(17,213545678150, 92312.722, '1995-03-09', '1995-02-09 15:12:40', 61272.264, 'cccccaaaaa','aaaaaaaaaaa','dfas');

1 rows affected.

SQL> insert into normal_table values(118,545678150, 112.722, '1995-02-19', '1995-02-09 15:12:40', 61272.264, 'cfcccaaaaa','aaaaaaaaaaa','bbb');

1 rows affected.

SQL> insert into normal_table values(9232,2135456781, 22312.722, '1995-02-19', '1995-02-09 15:12:40', 61272.264, 'cccdaaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(9212,2545678150, 82312.722, '1995-02-20', '1995-02-09 15:12:40', 61272.264, '5ccccaaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(129,213578150, 1.722, '1995-08-09', '1995-02-09 15:12:40', 61272.264, 'ccccfaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(194,2135478150, 13.722, '1995-12-09', '1995-02-09 15:12:40', 61272.264, 'ccaaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(69,13545678150, 122.722, '1993-02-09', '1995-02-09 15:12:40', 61272.264, 'dccccaaaaa','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> insert into normal_table values(1099,213678150, 112.722, '1998-02-09', '1995-02-09 15:12:40', 61272.264, 'asdfs','aaaaaaaaaaa','aaaaaa');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> delete from gst_session;

0 rows affected.

SQL> insert into gst_session select * from normal_table limit 1;

1 rows affected.

SQL> DELETE FROM gst_session;

1 rows affected.

SQL> exec dbe_stats.collect_table_stats('SYS', 'gst_session', part_name=>NULL,sample_ratio => 35,method_opt=>'for all indexed columns');

PL/SQL procedure successfully completed.

SQL> insert into gst_session select * from normal_table;

30 rows affected.

SQL> insert into res_t select normal_table.a from normal_table, gst_session where normal_table.a = gst_session.a and normal_table.b = gst_session.b;

32 rows affected.

SQL> alter system set cbo = off;

Succeed.

SQL> 


