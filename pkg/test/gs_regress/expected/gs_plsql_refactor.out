

SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER IF EXISTS EXEC_IMME_USER1 CASCADE;

Succeed.

SQL> CREATE USER EXEC_IMME_USER1 IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT CREATE PROCEDURE TO EXEC_IMME_USER1;

Succeed.

SQL> GRANT CONNECT TO EXEC_IMME_USER1;

Succeed.

SQL> SET serveroutput ON

ON
SQL> CREATE OR REPLACE PROCEDURE P1(V_NUM IN OUT INT) IS
  2   V_NUM_1 INT;
  3   V_NUM_2 INT;
  4 BEGIN
  5   V_NUM_1 := V_NUM - 1;
  6   V_NUM_2 := V_NUM - 2;
  7   IF V_NUM < 3 THEN
  8     V_NUM := 1;
  9   ELSE
 10     P1(V_NUM_1);
 11     P1(V_NUM_2);
 12     V_NUM := V_NUM_1 + V_NUM_2;
 13   END IF;
 14 END;
 15 /

Succeed.

SQL> DECLARE
  2   V_NUM INT;
  3 BEGIN
  4     V_NUM := 30;
  5     P1(V_NUM);
  6     DBE_OUTPUT.PRINT_LINE(V_NUM);
  7 END;
  8 /

832040

PL/SQL procedure successfully completed.

SQL> 
SQL> CONN EXEC_IMME_USER1/Cantian_234@127.0.0.1:1611

connected.

SQL> CREATE OR REPLACE PROCEDURE P1(C1 INT) IS
  2 BEGIN
  3  EXECUTE IMMEDIATE 'DROP PROCEDURE SYS.P1';
  4 END;
  5 /

Succeed.

SQL> CALL P1(1);

CT-00932, [1:2] PL/SQL(EXEC_IMME_USER1.ANONYMOUS BLOCK) terminated with execute errors
[3:2] PL/SQL(EXEC_IMME_USER1.P1) terminated with execute errors
[3:2] CT-01001, Permissions were insufficient

SQL> CREATE OR REPLACE PROCEDURE P2(C1 INT) IS
  2 BEGIN
  3  EXECUTE IMMEDIATE 'DROP TABLE SYS.T1';
  4 END;
  5 /

Succeed.

SQL> CALL P2(1);

CT-00932, [1:2] PL/SQL(EXEC_IMME_USER1.ANONYMOUS BLOCK) terminated with execute errors
[3:2] PL/SQL(EXEC_IMME_USER1.P2) terminated with execute errors
[3:2] CT-01001, Permissions were insufficient

SQL> 
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER IF EXISTS EXEC_IMME_USER1 CASCADE;

Succeed.

SQL> DROP PROCEDURE P1;

Succeed.

SQL> 
SQL> CONN / AS SYSDBA

connected.

SQL> CREATE OR REPLACE PACKAGE DTS202104270I3BD5P1O00_PKG IS
  2  FUNCTION F1(V1 INT) RETURN INT;
  3  PROCEDURE P1(V1 INT);
  4 END;
  5 /

Succeed.

SQL> --DTS202104270I3BD5P1O00
SQL> DROP USER IF EXISTS DTS202104270I3BD5P1O00_USER1 CASCADE;

Succeed.

SQL> CREATE USER DTS202104270I3BD5P1O00_USER1 IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT DBA TO DTS202104270I3BD5P1O00_USER1;

Succeed.

SQL> CONN DTS202104270I3BD5P1O00_USER1/Cantian_234@127.0.0.1:1611

connected.

SQL> SELECT USER,PACKAGE_NAME FROM DV_PL_MANAGER WHERE PACKAGE_NAME='DTS202104270I3BD5P1O00_PKG';

USER                                                             PACKAGE_NAME                                                    
---------------------------------------------------------------- ----------------------------------------------------------------
DTS202104270I3BD5P1O00_USER1                                     DTS202104270I3BD5P1O00_PKG                                      
DTS202104270I3BD5P1O00_USER1                                     DTS202104270I3BD5P1O00_PKG                                      

2 rows fetched.

SQL> 
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER DTS202104270I3BD5P1O00_USER1 CASCADE;

Succeed.

SQL> DROP PACKAGE DTS202104270I3BD5P1O00_PKG;

Succeed.

SQL> 
SQL> 
SQL> --DTS202104300J274AP1100 START
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER IF EXISTS DTS202104300J274AP1100_U1 CASCADE;

Succeed.

SQL> CREATE USER DTS202104300J274AP1100_U1 IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT CONNECT TO DTS202104300J274AP1100_U1;

Succeed.

SQL> 
SQL> CONN DTS202104300J274AP1100_U1/Cantian_234@127.0.0.1:1611

connected.

SQL> GRANT EXECUTE ON DTS202104300J274AP1100_U2.PROC1 TO DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> GRANT EXECUTE ON DTS202104300J274AP1100_U2.FUNC1 TO DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> GRANT REFERENCES ON DTS202104300J274AP1100_U2.T1 TO DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> GRANT INDEX ON DTS202104300J274AP1100_U2.T1 TO DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> GRANT UPDATE ON DTS202104300J274AP1100_U2.T1 TO DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> GRANT DELETE ON DTS202104300J274AP1100_U2.T1 TO DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> REVOKE EXECUTE ON DTS202104300J274AP1100_U2.PROC1 FROM DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> REVOKE EXECUTE ON DTS202104300J274AP1100_U2.FUNC1 FROM DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> REVOKE REFERENCES ON DTS202104300J274AP1100_U2.T1 FROM DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> REVOKE INDEX ON DTS202104300J274AP1100_U2.T1 FROM DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> REVOKE UPDATE ON DTS202104300J274AP1100_U2.T1 FROM DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> REVOKE DELETE ON DTS202104300J274AP1100_U2.T1 FROM DTS202104300J274AP1100_U1;

CT-01001, Permissions were insufficient
SQL> CREATE VIEW DTS202104300J274AP1100_U2.V1 AS SELECT * FROM DTS202104300J274AP1100_U2.T1;

CT-01001, [1:57]Permissions were insufficient
SQL> CREATE OR REPLACE TRIGGER DTS202104300J274AP1100_U2.TRIGGER1 AFTER INSERT ON DTS202104300J274AP1100_U2.T1
  2 BEGIN
  3  NULL;
  4 END;
  5 /

CT-01001, Permissions were insufficient
SQL> CREATE OR REPLACE SYNONYM DTS202104300J274AP1100_SYN1 FOR DTS202104300J274AP1100_U2.T1;

CT-01001, Permissions were insufficient
SQL> 
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER IF EXISTS DTS202104300J274AP1100_U1 CASCADE;

Succeed.

SQL> --DTS202104300J274AP1100 END
SQL> 
SQL> --DTS202105210G3G7PP1F00 START skip check priv dml in plsql
SQL> DROP TABLE IF EXISTS DTS202105210G3G7PP1F00_T1;

Succeed.

SQL> CREATE TABLE DTS202105210G3G7PP1F00_T1(C1 INT);

Succeed.

SQL> CREATE OR REPLACE TRIGGER DTS202105210G3G7PP1F00_TRIGGER1 AFTER INSERT ON DTS202105210G3G7PP1F00_T1
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE PROCEDURE DTS202105210G3G7PP1F00_PROC1(V1 INT) IS
  2 BEGIN
  3  EXECUTE IMMEDIATE 'DROP TABLE IF EXISTS DTS202105210G3G7PP1F00_T1';
  4  EXECUTE IMMEDIATE 'CREATE TABLE DTS202105210G3G7PP1F00_T1(C1 INT)';
  5  INSERT INTO DTS202105210G3G7PP1F00_T1 VALUES(1);
  6  COMMIT;
  7 END;
  8 /

Succeed.

SQL> CALL DTS202105210G3G7PP1F00_PROC1(1);

PL/SQL procedure successfully completed.

SQL> SELECT * FROM DTS202105210G3G7PP1F00_T1;

C1          
------------
1           

1 rows fetched.

SQL> DROP TABLE IF EXISTS DTS202105210G3G7PP1F00_T1;

Succeed.

SQL> DROP PROCEDURE IF EXISTS DTS202105210G3G7PP1F00_PROC1;

Succeed.

SQL> --DTS202105210G3G7PP1F00 END
SQL> 
SQL> --DTS2021052305VX31P1L00 START plsql objects cannot rely on gtt. but need add gtt into knl_list
SQL> CONN / AS SYSDBA

connected.

SQL> DROP TABLE IF EXISTS DTS2021052305VX31P1L00_GT1;

Succeed.

SQL> DROP TABLE IF EXISTS DTS2021052305VX31P1L00_T1;

Succeed.

SQL> CREATE GLOBAL TEMPORARY TABLE DTS2021052305VX31P1L00_GT1(c1 int);

Succeed.

SQL> CREATE TABLE DTS2021052305VX31P1L00_T1(c1 int);

Succeed.

SQL> DECLARE
  2   TYPE1 DTS2021052305VX31P1L00_GT1%ROWTYPE;
  3   TYPE2 DTS2021052305VX31P1L00_GT1.C1%TYPE;
  4 BEGIN
  5  NULL;
  6 END;
  7 /

PL/SQL procedure successfully completed.

SQL> DECLARE
  2   TYPE1 DTS2021052305VX31P1L00_T1%ROWTYPE;
  3   TYPE2 DTS2021052305VX31P1L00_T1.C1%TYPE;
  4 BEGIN
  5  NULL;
  6 END;
  7 /

PL/SQL procedure successfully completed.

SQL> SELECT SQL_TEXT FROM DV_ANONYMOUS WHERE SQL_TEXT LIKE '%DTS2021052305VX31P1L00%' ORDER BY SQL_TEXT;

SQL_TEXT                                                        
----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE DTS2021052305VX31P1L00_PROC1(V1 INT) IS
  2   TYPE1 DTS2021052305VX31P1L00_GT1%ROWTYPE;
  3   TYPE2 DTS2021052305VX31P1L00_GT1.C1%TYPE;
  4   TYPE3 DTS2021052305VX31P1L00_T1%ROWTYPE;
  5 BEGIN
  6   NULL;
  7 END;
  8 /

Succeed.

SQL> SELECT NAME, REFERENCED_NAME FROM MY_DEPENDENCIES WHERE NAME='DTS2021052305VX31P1L00_PROC1';

NAME                                                             REFERENCED_NAME                                                 
---------------------------------------------------------------- ----------------------------------------------------------------
DTS2021052305VX31P1L00_PROC1                                     DTS2021052305VX31P1L00_T1                                       

1 rows fetched.

SQL> CALL DTS2021052305VX31P1L00_PROC1(1);

PL/SQL procedure successfully completed.

SQL> SELECT SQL_TEXT FROM DV_ANONYMOUS WHERE SQL_TEXT LIKE '%DTS2021052305VX31P1L00%' ORDER BY SQL_TEXT;

SQL_TEXT                                                        
----------------------------------------------------------------

0 rows fetched.

SQL> DROP TABLE IF EXISTS DTS2021052305VX31P1L00_GT1;

Succeed.

SQL> DROP TABLE IF EXISTS DTS2021052305VX31P1L00_T1;

Succeed.

SQL> DROP PROCEDURE IF EXISTS DTS2021052305VX31P1L00_PROC1;

Succeed.

SQL> --DTS2021052305VX31P1L00 END
SQL> 
SQL> --DTS2021052506HJFDP1G00 START
SQL> DROP USER IF EXISTS DTS2021052506HJFDP1G00_U1 CASCADE;

Succeed.

SQL> DROP USER IF EXISTS DTS2021052506HJFDP1G00_U2 CASCADE;

Succeed.

SQL> CREATE USER DTS2021052506HJFDP1G00_U1 IDENTIFIED BY Cantian_234;

Succeed.

SQL> CREATE USER DTS2021052506HJFDP1G00_U2 IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT CONNECT TO DTS2021052506HJFDP1G00_U1;

Succeed.

SQL> GRANT CREATE TABLE TO DTS2021052506HJFDP1G00_U1;

Succeed.

SQL> GRANT CREATE PROCEDURE TO DTS2021052506HJFDP1G00_U1;

Succeed.

SQL> GRANT CREATE TRIGGER TO DTS2021052506HJFDP1G00_U1;

Succeed.

SQL> GRANT INHERIT PRIVILEGES ON USER SYS TO PUBLIC;

Succeed.

SQL> 
SQL> CREATE TABLE DTS2021052506HJFDP1G00_U2.PT1(C1 INT);

Succeed.

SQL> CREATE TABLE DTS2021052506HJFDP1G00_U2.TT1(C1 INT);

Succeed.

SQL> CREATE OR REPLACE PROCEDURE DTS2021052506HJFDP1G00_U2.P1(V1 INT) IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> 
SQL> CONN DTS2021052506HJFDP1G00_U1/Cantian_234@127.0.0.1:1611

connected.

SQL> CREATE TABLE PT1(C1 INT);

Succeed.

SQL> CREATE OR REPLACE PROCEDURE P1(V1 INT) IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE TEST_P1(V1 INT) IS --Succeed
  2 BEGIN
  3  INSERT INTO DTS2021052506HJFDP1G00_U1.PT1 VALUES(1);
  4 END;
  5 /

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE TEST_P2(V1 INT) IS --PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.PT2 does not exist.
  2 BEGIN
  3  INSERT INTO DTS2021052506HJFDP1G00_U1.PT2 VALUES(1);
  4 END;
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P2) terminated with compiling errors
[3:14] PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.PT2 does not exist.


SQL> 
SQL> CREATE OR REPLACE PROCEDURE TEST_P3(V1 INT) IS --PLC-01001 Permissions were insufficient
  2 BEGIN
  3  INSERT INTO DTS2021052506HJFDP1G00_U2.PT1 VALUES(1);
  4 END;
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P3) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> 
SQL> CREATE OR REPLACE PROCEDURE TEST_P4(V1 INT) IS --PLC-01001 Permissions were insufficient
  2 BEGIN
  3  INSERT INTO DTS2021052506HJFDP1G00_U2.PT2 VALUES(1);
  4 END;
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P4) terminated with compiling errors
[3:14] PLC-01001 Permissions were insufficient


SQL> 
SQL> CREATE OR REPLACE PROCEDURE TEST_P5(V1 INT) IS --Succeed
  2 BEGIN
  3  DTS2021052506HJFDP1G00_U1.P1(V1);
  4 END;
  5 /

Succeed.

SQL> 
SQL> CREATE OR REPLACE PROCEDURE TEST_P6(V1 INT) IS --PLC-00828 procedure DTS2021052506HJFDP1G00_U1.P2 does not exist
  2 BEGIN
  3  DTS2021052506HJFDP1G00_U1.P2(V1);
  4 END;
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P6) terminated with compiling errors
[3:2] PLC-00828 procedure DTS2021052506HJFDP1G00_U1.P2 does not exist


SQL> 
SQL> CREATE OR REPLACE PROCEDURE TEST_P7(V1 INT) IS --PLC-01001 Permissions were insufficient
  2 BEGIN
  3  DTS2021052506HJFDP1G00_U2.P1(V1);
  4 END;
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P7) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> 
SQL> CREATE OR REPLACE PROCEDURE TEST_P8(V1 INT) IS --PLC-01001 Permissions were insufficient
  2 BEGIN
  3  DTS2021052506HJFDP1G00_U2.P2(V1);
  4 END;
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P8) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> 
SQL> CALL TEST_P1(1); --successfully

PL/SQL procedure successfully completed.

SQL> CALL TEST_P2(2); --PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.PT2 does not exist

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P2) terminated with compiling errors
[3:14] PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.PT2 does not exist.


SQL> CALL TEST_P3(3); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P3) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> CALL TEST_P4(4); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P4) terminated with compiling errors
[3:14] PLC-01001 Permissions were insufficient


SQL> CALL TEST_P5(5); --successfully

PL/SQL procedure successfully completed.

SQL> CALL TEST_P6(6); --PLC-00828 procedure DTS2021052506HJFDP1G00_U1.P2 does not exist

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P6) terminated with compiling errors
[3:2] PLC-00828 procedure DTS2021052506HJFDP1G00_U1.P2 does not exist


SQL> CALL TEST_P7(7); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P7) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> CALL TEST_P8(8); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P8) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> 
SQL> CREATE TABLE T1(C1 INT);

Succeed.

SQL> CREATE TABLE TT1(C1 INT);

Succeed.

SQL> CREATE TABLE T2(C1 INT);

Succeed.

SQL> CREATE TABLE T3(C1 INT);

Succeed.

SQL> CREATE TABLE T4(C1 INT);

Succeed.

SQL> 
SQL> CREATE OR REPLACE TRIGGER TEST_T1 AFTER INSERT ON T1 --Succeed.
  2 BEGIN
  3  INSERT INTO DTS2021052506HJFDP1G00_U1.TT1 VALUES(0);
  4 END; 
  5 /

Succeed.

SQL> 
SQL> CREATE OR REPLACE TRIGGER TEST_T2 AFTER INSERT ON T2 --PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.TT2 does not exist
  2 BEGIN
  3  INSERT INTO DTS2021052506HJFDP1G00_U1.TT2 VALUES(1);
  4 END; 
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T2) terminated with compiling errors
[3:14] PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.TT2 does not exist.


SQL> 
SQL> CREATE OR REPLACE TRIGGER TEST_T3 AFTER INSERT ON T3 --PLC-01001 Permissions were insufficient
  2 BEGIN
  3  INSERT INTO DTS2021052506HJFDP1G00_U2.TT1 VALUES(0);
  4 END; 
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T3) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> 
SQL> CREATE OR REPLACE TRIGGER TEST_T4 AFTER INSERT ON T4 --PLC-01001 Permissions were insufficient
  2 BEGIN
  3  INSERT INTO DTS2021052506HJFDP1G00_U2.TT2 VALUES(1);
  4 END; 
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T4) terminated with compiling errors
[3:14] PLC-01001 Permissions were insufficient


SQL> 
SQL> INSERT INTO T1 VALUES(1); --1 rows affected

1 rows affected.

SQL> INSERT INTO T2 VALUES(2); --PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.TT2 does not exist

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T2) terminated with compiling errors
[3:14] PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.TT2 does not exist.

SQL> INSERT INTO T3 VALUES(3); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T3) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient

SQL> INSERT INTO T4 VALUES(4); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T4) terminated with compiling errors
[3:14] PLC-01001 Permissions were insufficient

SQL> CONN / AS SYSDBA

connected.

SQL> CALL DTS2021052506HJFDP1G00_U1.TEST_P1(1); --Succeed.

PL/SQL procedure successfully completed.

SQL> CALL DTS2021052506HJFDP1G00_U1.TEST_P2(2); --PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.PT2

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P2) terminated with compiling errors
[3:14] PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.PT2 does not exist.


SQL> CALL DTS2021052506HJFDP1G00_U1.TEST_P3(3); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P3) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> CALL DTS2021052506HJFDP1G00_U1.TEST_P4(4); --PLC-00843 The table or view DTS2021052506HJFDP1G00_U2.PT2 does not exist

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P4) terminated with compiling errors
[3:14] PLC-00843 The table or view DTS2021052506HJFDP1G00_U2.PT2 does not exist.


SQL> CALL DTS2021052506HJFDP1G00_U1.TEST_P5(5); --Succeed.

PL/SQL procedure successfully completed.

SQL> CALL DTS2021052506HJFDP1G00_U1.TEST_P6(6); --PLC-00828 procedure DTS2021052506HJFDP1G00_U1.P2 does not exist

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P6) terminated with compiling errors
[3:2] PLC-00828 procedure DTS2021052506HJFDP1G00_U1.P2 does not exist


SQL> CALL DTS2021052506HJFDP1G00_U1.TEST_P7(7); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P7) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> CALL DTS2021052506HJFDP1G00_U1.TEST_P8(8); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[1:2] PLC-00944 PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_P8) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient


SQL> INSERT INTO DTS2021052506HJFDP1G00_U1.T1 VALUES(1); --Succeed.

1 rows affected.

SQL> INSERT INTO DTS2021052506HJFDP1G00_U1.T2 VALUES(2); --PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.TT2 does not exist

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T2) terminated with compiling errors
[3:14] PLC-00843 The table or view DTS2021052506HJFDP1G00_U1.TT2 does not exist.

SQL> INSERT INTO DTS2021052506HJFDP1G00_U1.T3 VALUES(3); --PLC-01001 Permissions were insufficient

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T3) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient

SQL> INSERT INTO DTS2021052506HJFDP1G00_U1.T4 VALUES(4); --PLC-00843 The table or view DTS2021052506HJFDP1G00_U2.TT2 does not exist

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U1.TEST_T4) terminated with compiling errors
[3:14] PLC-00843 The table or view DTS2021052506HJFDP1G00_U2.TT2 does not exist.

SQL> DROP USER IF EXISTS DTS2021052506HJFDP1G00_U1 CASCADE;

Succeed.

SQL> DROP USER IF EXISTS DTS2021052506HJFDP1G00_U2 CASCADE;

Succeed.

SQL> --2
SQL> DROP USER IF EXISTS DTS2021052506HJFDP1G00_U3 CASCADE;

Succeed.

SQL> CREATE USER DTS2021052506HJFDP1G00_U3 IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT CREATE SESSION TO DTS2021052506HJFDP1G00_U3;

Succeed.

SQL> GRANT CREATE TRIGGER TO DTS2021052506HJFDP1G00_U3;

Succeed.

SQL> GRANT CREATE TABLE TO DTS2021052506HJFDP1G00_U3;

Succeed.

SQL> 
SQL> CONN DTS2021052506HJFDP1G00_U3/Cantian_234@127.0.0.1:1611

connected.

SQL> CREATE TABLE TEST(A INT,B TEXT);

Succeed.

SQL> CREATE OR REPLACE TRIGGER TEST_TRIG AFTER INSERT ON TEST
  2 BEGIN
  3  INSERT INTO SYS.DTS2021052506HJFDP1G00_T1 VALUES(1,2);
  4 END; 
  5 /

Succeed.
Warning:
PL/SQL(DTS2021052506HJFDP1G00_U3.TEST_TRIG) terminated with compiling errors
[3:14] PLC-01001 Permissions were insufficient


SQL> 
SQL> CONN / AS SYSDBA

connected.

SQL> DROP TABLE IF EXISTS DTS2021052506HJFDP1G00_T1;

Succeed.

SQL> CREATE TABLE DTS2021052506HJFDP1G00_T1(A INT,B TEXT);

Succeed.

SQL> INSERT INTO DTS2021052506HJFDP1G00_U3.TEST VALUES(1,2);

CT-00944, PL/SQL(DTS2021052506HJFDP1G00_U3.TEST_TRIG) terminated with compiling errors
[3:2] PLC-01001 Permissions were insufficient

SQL> SELECT * FROM DTS2021052506HJFDP1G00_T1;

A            B                                                               
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> DROP USER IF EXISTS DTS2021052506HJFDP1G00_U3 CASCADE;

Succeed.

SQL> --DTS2021052506HJFDP1G00 END
SQL> 
SQL> --DTS202106030JHF9OP0F00 START
SQL> --1
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER IF EXISTS DTS202106030JHF9OP0F00_U1 CASCADE;

Succeed.

SQL> CREATE USER DTS202106030JHF9OP0F00_U1 IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT DBA TO DTS202106030JHF9OP0F00_U1;

Succeed.

SQL> CONN DTS202106030JHF9OP0F00_U1/Cantian_234@127.0.0.1:1611

connected.

SQL> CREATE TABLE T1(C1 INT);

Succeed.

SQL> CREATE TABLE T2(C1 INT);

Succeed.

SQL> INSERT INTO T1 VALUES(1);

1 rows affected.

SQL> INSERT INTO T2 VALUES(1);

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> CREATE OR REPLACE PROCEDURE D(V1 INT) IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> SELECT 1,(SELECT D.C1 FROM T1) FROM T2 D;

1            (SELECT D.C1 FROM T1)
------------ ---------------------
1            1                    

1 rows fetched.

SQL> 
SQL> --2
SQL> CREATE OR REPLACE FUNCTION DTS202106030JHF9OP0F00_F1(V1 INT) RETURN INT IS
  2 BEGIN
  3  RETURN V1;
  4 END;
  5 /

Succeed.

SQL> SELECT DTS202106030JHF9OP0F00_F1(1) FROM SYS_DUMMY;

DTS202106030JHF9OP0F00_F1(1)
----------------------------
1                           

1 rows fetched.

SQL> SELECT DTS202106030JHF9OP0F00_F1.DTS202106030JHF9OP0F00_F1(1) FROM SYS_DUMMY;

CT-00828, [1:8]function DTS202106030JHF9OP0F00_F1.DTS202106030JHF9OP0F00_F1 does not exist
SQL> 
SQL> CREATE OR REPLACE PACKAGE "PUBLIC".DTS202106030JHF9OP0F00_F1 IS
  2  FUNCTION DTS202106030JHF9OP0F00_F1(V1 INT) RETURN INT;
  3 END;
  4 /

Succeed.

SQL> 
SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC".DTS202106030JHF9OP0F00_F1 IS
  2  FUNCTION DTS202106030JHF9OP0F00_F1(V1 INT) RETURN INT IS
  3  BEGIN
  4   RETURN V1 + 1;
  5  END;
  6 END;
  7 /

Succeed.

SQL> SELECT DTS202106030JHF9OP0F00_F1(1) FROM SYS_DUMMY;

DTS202106030JHF9OP0F00_F1(1)
----------------------------
1                           

1 rows fetched.

SQL> SELECT DTS202106030JHF9OP0F00_F1.DTS202106030JHF9OP0F00_F1(1) FROM SYS_DUMMY;

DTS202106030JHF9OP0F00_F1.DTS202106030JHF9OP0F00_F1(1)
------------------------------------------------------
2                                                     

1 rows fetched.

SQL> 
SQL> --3
SQL> CREATE OR REPLACE SYNONYM DTS202106030JHF9OP0F00_LSYN FOR DTS202106030JHF9OP0F00_F1;

Succeed.

SQL> DROP USER IF EXISTS DTS202106030JHF9OP0F00_LSYN CASCADE;

Succeed.

SQL> CREATE USER DTS202106030JHF9OP0F00_LSYN IDENTIFIED BY Cantian_234;

Succeed.

SQL> CREATE OR REPLACE FUNCTION DTS202106030JHF9OP0F00_LSYN.F1(V1 INT) RETURN INT IS
  2 BEGIN
  3  RETURN V1 * 10;
  4 END;
  5 /

Succeed.

SQL> SELECT DTS202106030JHF9OP0F00_LSYN(1) FROM SYS_DUMMY;

DTS202106030JHF9OP0F00_LSYN(1)
------------------------------
1                             

1 rows fetched.

SQL> SELECT DTS202106030JHF9OP0F00_LSYN.F1(1) FROM SYS_DUMMY;

DTS202106030JHF9OP0F00_LSYN.F1(1)
---------------------------------
10                               

1 rows fetched.

SQL> SELECT DTS202106030JHF9OP0F00_LSYN.F2(1) FROM SYS_DUMMY;

CT-00828, [1:8]function DTS202106030JHF9OP0F00_LSYN.F2 does not exist
SQL> DROP FUNCTION DTS202106030JHF9OP0F00_F1;

Succeed.

SQL> SELECT DTS202106030JHF9OP0F00_LSYN(1) FROM SYS_DUMMY;

CT-00828, [1:8]function DTS202106030JHF9OP0F00_U1.DTS202106030JHF9OP0F00_LSYN does not exist
SQL> SELECT DTS202106030JHF9OP0F00_LSYN.F1(1) FROM SYS_DUMMY;

DTS202106030JHF9OP0F00_LSYN.F1(1)
---------------------------------
10                               

1 rows fetched.

SQL> SELECT DTS202106030JHF9OP0F00_LSYN.F2(1) FROM SYS_DUMMY;

CT-00828, [1:8]function DTS202106030JHF9OP0F00_LSYN.F2 does not exist
SQL> 
SQL> --end
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER IF EXISTS DTS202106030JHF9OP0F00_U1 CASCADE;

Succeed.

SQL> DROP USER IF EXISTS DTS202106030JHF9OP0F00_LSYN CASCADE;

Succeed.

SQL> DROP PACKAGE "PUBLIC".DTS202106030JHF9OP0F00_F1;

Succeed.

SQL> --DTS202106030JHF9OP0F00 END
SQL> 
SQL> --PLSQL_REVIEW START
SQL> DROP USER IF EXISTS PLSQL_REVIEW_U1 CASCADE;

Succeed.

SQL> CREATE USER PLSQL_REVIEW_U1 IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT DBA TO PLSQL_REVIEW_U1;

Succeed.

SQL> CONN PLSQL_REVIEW_U1/Cantian_234@127.0.0.1:1611

connected.

SQL> 
SQL> CREATE TABLE PLSQL_REVIEW_T1(C1 INT);

Succeed.

SQL> CREATE OR REPLACE FUNCTION PLSQL_REVIEW_F1(C1 INT) RETURN INT IS
  2 BEGIN
  3  INSERT INTO PLSQL_REVIEW_T1 VALUES(C1);
  4  RETURN C1;
  5 END;
  6 /

Succeed.

SQL> CREATE OR REPLACE PROCEDURE PLSQL_REVIEW_P1(C1 INT) IS
  2 BEGIN
  3  INSERT INTO PLSQL_REVIEW_T1 VALUES(C1);
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE PUBLIC SYNONYM PLSQL_REVIEW_F1 FOR PLSQL_REVIEW_P1;

Succeed.

SQL> 
SQL> DECLARE
  2  A INT;
  3 BEGIN
  4  A := PLSQL_REVIEW_F1(1);
  5  PLSQL_REVIEW_F1(2);
  6 END;
  7 /

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  A INT;
  3 BEGIN
  4  A := PLSQL_REVIEW_F1(3);
  5 END;
  6 /

PL/SQL procedure successfully completed.

SQL> BEGIN
  2  PLSQL_REVIEW_F1(4);
  3 END;
  4 /

PL/SQL procedure successfully completed.

SQL> SELECT * FROM PLSQL_REVIEW_T1;

C1          
------------
1           
2           
3           
4           

4 rows fetched.

SQL> CREATE OR REPLACE PACKAGE PKG1 IS
  2  PROCEDURE P1(C1 INT);
  3 END;
  4 /

Succeed.

SQL> CREATE OR REPLACE PACKAGE BODY PKG1 IS
  2  PROCEDURE P1(C1 INT) IS
  3  BEGIN
  4   NULL;
  5  END;
  6 END;
  7 /

Succeed.

SQL> BEGIN
  2  PLSQL_REVIEW_U1.PKG1.P1(1);
  3  PLSQL_REVIEW_U1.PKG1.P1(1);
  4 END;
  5 /

PL/SQL procedure successfully completed.

SQL> 
SQL> CREATE OR REPLACE TYPE ATTR_TYPE FORCE AS OBJECT(MONTH INT,DAY INT);
  2 /

Succeed.

SQL> create or replace procedure p2(c1 int) is
  2  a ATTR_TYPE;
  3  b ATTR_TYPE;
  4 begin
  5  NULL;
  6 end;
  7 /

Succeed.

SQL> call p2(1);

PL/SQL procedure successfully completed.

SQL> 
SQL> create or replace function f3(c1 int) return int is
  2 begin
  3  if c1 > 1 then
  4   return f3(c1 - 1) + f3(c1 - 2);
  5  else
  6   return 1;
  7  end if;
  8 end;
  9 /

Succeed.

SQL> select f3(0) from sys_dummy;

F3(0)       
------------
1           

1 rows fetched.

SQL> select f3(1) from sys_dummy;

F3(1)       
------------
1           

1 rows fetched.

SQL> select f3(2) from sys_dummy;

F3(2)       
------------
2           

1 rows fetched.

SQL> select f3(4) from sys_dummy;

F3(4)       
------------
5           

1 rows fetched.

SQL> 
SQL> CONN / AS SYSDBA

connected.

SQL> DROP PUBLIC SYNONYM IF EXISTS PLSQL_REVIEW_F1;

Succeed.

SQL> DROP USER IF EXISTS PLSQL_REVIEW_U1 CASCADE;

Succeed.

SQL> --PLSQL_REVIEW END
SQL> 
SQL> --DTS2021062805RK0WP0G00 START
SQL> BEGIN
  2  EXECUTE IMMEDIATE '
  3  BEGIN
  4   :x := 1;
  5  END;
  6  ';
  7 END;
  8 /

CT-00932, [2:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[2:2] CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[2:2] PLC-00908 PL/SQL internal program error(The param count of dynamic sql is not same as the param count of using clause).


SQL> --DTS2021062805RK0WP0G00 END


SQL> 
SQL> --pl_free_broken_entry START
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER IF EXISTS PL_FREE_ENTRY_U1 CASCADE;

Succeed.

SQL> CREATE USER PL_FREE_ENTRY_U1 IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT DBA TO PL_FREE_ENTRY_U1;

Succeed.

SQL> CONN PL_FREE_ENTRY_U1/Cantian_234@127.0.0.1:1611

connected.

SQL> CREATE TABLE T1(C1 INT);

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER1 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER2 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER3 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER4 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER5 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER6 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER7 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER8 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE TRIGGER TRIGGER9 AFTER INSERT ON T1 IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

CT-00706, The number 8 reached the upper limit of triggers in a table.
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER PL_FREE_ENTRY_U1 CASCADE;

Succeed.

SQL> --pl_free_broken_entry END
SQL> 
SQL> --pl_find_entry_with_public START
SQL> CONN / AS SYSDBA

connected.

SQL> DROP USER IF EXISTS PL_FIND_ENTRY_WITH_PUBLIC_U1 CASCADE;

Succeed.

SQL> DROP USER IF EXISTS PL_FIND_ENTRY_WITH_PUBLIC_U2 CASCADE;

Succeed.

SQL> CREATE USER PL_FIND_ENTRY_WITH_PUBLIC_U1 IDENTIFIED BY Cantian_234;

Succeed.

SQL> CREATE USER PL_FIND_ENTRY_WITH_PUBLIC_U2 IDENTIFIED BY Cantian_234;

Succeed.

SQL> CREATE OR REPLACE PROCEDURE PL_FIND_ENTRY_WITH_PUBLIC_U1.PROC1(V1 INT) IS
  2 BEGIN
  3  NULL;
  4 END;
  5 /

Succeed.

SQL> CREATE OR REPLACE PUBLIC SYNONYM PL_FIND_ENTRY_WITH_PUBLIC_PROC1 FOR PL_FIND_ENTRY_WITH_PUBLIC_U1.PROC1;

Succeed.

SQL> GRANT EXECUTE ON PL_FIND_ENTRY_WITH_PUBLIC_PROC1 TO PL_FIND_ENTRY_WITH_PUBLIC_U2;

Succeed.

SQL> REVOKE EXECUTE ON PL_FIND_ENTRY_WITH_PUBLIC_PROC1 FROM PL_FIND_ENTRY_WITH_PUBLIC_U2;

Succeed.

SQL> DROP USER PL_FIND_ENTRY_WITH_PUBLIC_U1 CASCADE;

Succeed.

SQL> DROP USER PL_FIND_ENTRY_WITH_PUBLIC_U2 CASCADE;

Succeed.

SQL> DROP PUBLIC SYNONYM PL_FIND_ENTRY_WITH_PUBLIC_PROC1;

Succeed.

SQL> --pl_find_entry_with_public END
SQL> 
SQL> --plc keywords START
SQL> DECLARE
  2  I INT;
  3 BEGIN
  4  I := 0;
  5  ELSIF I > 1 THEN
  6   I := 1;
  7  END IF;
  8 END;
  9 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[5:2] PLC-00954 OTHERS expected but ELSIF found
[7:6] PLC-00920 Undefined symbol IF

SQL> 
SQL> DECLARE
  2  I INT;
  3 BEGIN
  4  FORALL I IN 0..100
  5   I := 1;
  6 END;
  7 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[4:2] PLC-00958 Unsupported feature

SQL> 
SQL> DECLARE
  2  I INT;
  3 BEGIN
  4  FORALL I IN 0..100
  5   I := 1;
  6 END;
  7 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[4:2] PLC-00958 Unsupported feature

SQL> 
SQL> BEGIN
  2  WITH A AS SELECT * FROM SYS_DUMMY;
  3 END;
  4 /

CT-00944, PL/SQL(SYS.ANONYMOUS BLOCK) terminated with compiling errors
[2:2] PLC-00958 Unsupported feature

SQL> --plc keywords END


