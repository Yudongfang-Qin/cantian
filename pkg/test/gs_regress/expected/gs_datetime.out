

SQL> ---- The following cases have been debugged and passed by pufuan, p00421579
SQL> 
SQL> --- The cases for sysdate, systimestamp
SQL> -- select sysdate, systimestamp from dual;
SQL> -- select SYSDATE, SYSTIMESTAMP from dual;
SQL> 
SQL> --- The cases for date expression
SQL> select to_date('2017-08-11', 'YYYY-MM-DD') from dual;

TO_DATE('2017-08-11', 'YYYY-MM-DD')
-----------------------------------
2017-08-11 00:00:00                

1 rows fetched.

SQL> select to_date('2017-08-11', 'YYYY-MM-DD') + 1 from dual;

TO_DATE('2017-08-11', 'YYYY-MM-DD') + 1
---------------------------------------
2017-08-12 00:00:00                    

1 rows fetched.

SQL> select 1 + to_date('2017-08-11', 'YYYY-MM-DD') from dual;

1 + TO_DATE('2017-08-11', 'YYYY-MM-DD')
---------------------------------------
2017-08-12 00:00:00                    

1 rows fetched.

SQL> select to_date('2017-08-11', 'YYYY-MM-DD') - 1 from dual;

TO_DATE('2017-08-11', 'YYYY-MM-DD') - 1
---------------------------------------
2017-08-10 00:00:00                    

1 rows fetched.

SQL> select 1 - to_date('2017-08-11', 'YYYY-MM-DD') from dual;

CT-01320, [1:10]Undefined operator: BINARY_INTEGER - DATE
SQL> select to_date('2017-08-11', 'YYYY-MM-DD') * 1 from dual;

CT-01320, [1:44]Undefined operator: DATE * BINARY_INTEGER
SQL> select 1 * to_date('2017-08-11', 'YYYY-MM-DD') from dual;

CT-01320, [1:10]Undefined operator: BINARY_INTEGER * DATE
SQL> select to_date('2017-08-11', 'YYYY-MM-DD') || ' <---' from dual;

TO_DATE('2017-08-11', 'YYYY-MM-DD') || ' <---'
----------------------------------------------
2017-08-11 00:00:00 <---                      

1 rows fetched.

SQL> select to_date('2017-08-11', 'YYYY-MM-DD') || to_date('2018-08-11', 'YYYY-MM-DD') from dual;

TO_DATE('2017-08-11', 'YYYY-MM-DD') || TO_DATE('2018-08-11', 'YY
----------------------------------------------------------------
2017-08-11 00:00:002018-08-11 00:00:00                          

1 rows fetched.

SQL> select to_date('2017-08-11', 'YYYY-MM-DD') from dual;

TO_DATE('2017-08-11', 'YYYY-MM-DD')
-----------------------------------
2017-08-11 00:00:00                

1 rows fetched.

SQL> select to_date('2017-08-11 13:24:55', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_DATE('2017-08-11 13:24:55', 'YYYY-MM-DD HH24:MI:SS')
-------------------------------------------------------
2017-08-11 13:24:55                                    

1 rows fetched.

SQL> select to_timestamp('2017-08-11 13:24:55', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_TIMESTAMP('2017-08-11 13:24:55', 'YYYY-MM-DD HH24:MI:SS')
------------------------------------------------------------
2017-08-11 13:24:55.000000                                  

1 rows fetched.

SQL> select to_timestamp('2017-09-11 23:45:59.44', 'YYYY-MM-DD HH24:MI:SS.FF3') + 1 from dual;

TO_TIMESTAMP('2017-09-11 23:45:59.44', 'YYYY-MM-DD HH24:MI:SS.FF
----------------------------------------------------------------
2017-09-12 23:45:59.440000                                      

1 rows fetched.

SQL> 
SQL> 
SQL> --- The cases for datetime format
SQL> select to_date('2017-08-11 12:12:12', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_DATE('2017-08-11 12:12:12', 'YYYY-MM-DD HH24:MI:SS')
-------------------------------------------------------
2017-08-11 12:12:12                                    

1 rows fetched.

SQL> select to_date('2017-08-11 12:12:12', 'YYYY-MM-DD') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_date('2017-08-11 12:12:12', 'YYYY-MM-DD HH:MI:SS') from dual;

TO_DATE('2017-08-11 12:12:12', 'YYYY-MM-DD HH:MI:SS')
-----------------------------------------------------
2017-08-11 12:12:12                                  

1 rows fetched.

SQL> select to_date('2017-08-11 12:12', 'YYYY-MM-DD HH24:MI') from dual;

TO_DATE('2017-08-11 12:12', 'YYYY-MM-DD HH24:MI')
-------------------------------------------------
2017-08-11 12:12:00                              

1 rows fetched.

SQL> select to_date('2017-08-11 12', 'YYYY-MM-DD HH24') from dual;

TO_DATE('2017-08-11 12', 'YYYY-MM-DD HH24')
-------------------------------------------
2017-08-11 12:00:00                        

1 rows fetched.

SQL> 
SQL> -- format /
SQL> select to_date('2017/08/11', 'YYYY/MM/DD') from dual;

TO_DATE('2017/08/11', 'YYYY/MM/DD')
-----------------------------------
2017-08-11 00:00:00                

1 rows fetched.

SQL> select to_date('08/11/2012', 'MM/DD/YYYY') from dual;

TO_DATE('08/11/2012', 'MM/DD/YYYY')
-----------------------------------
2012-08-11 00:00:00                

1 rows fetched.

SQL> select to_date('08:11:2012', 'MM:DD:YYYY') from dual;

TO_DATE('08:11:2012', 'MM:DD:YYYY')
-----------------------------------
2012-08-11 00:00:00                

1 rows fetched.

SQL> select to_date('2017.08.11 12', 'YYYY.MM.DD HH24') from dual;

TO_DATE('2017.08.11 12', 'YYYY.MM.DD HH24')
-------------------------------------------
2017-08-11 12:00:00                        

1 rows fetched.

SQL> 
SQL> select to_timestamp('2017-09-11 23:45:59.44', 'YYYY-MM-DD HH24:MI:SS.FF3') from dual;

TO_TIMESTAMP('2017-09-11 23:45:59.44', 'YYYY-MM-DD HH24:MI:SS.FF
----------------------------------------------------------------
2017-09-11 23:45:59.440000                                      

1 rows fetched.

SQL> select to_timestamp('2017-09-11 23:45:59.44', 'YYYY-MM-DD HH24:MI:SS.FF6') + 1 from dual;

TO_TIMESTAMP('2017-09-11 23:45:59.44', 'YYYY-MM-DD HH24:MI:SS.FF
----------------------------------------------------------------
2017-09-12 23:45:59.440000                                      

1 rows fetched.

SQL> select to_timestamp('2017-09-11 23:45:59.44', 'YYYY-MM-DD HH24:MI:SS.FF') + 1 from dual;

TO_TIMESTAMP('2017-09-11 23:45:59.44', 'YYYY-MM-DD HH24:MI:SS.FF
----------------------------------------------------------------
2017-09-12 23:45:59.440000                                      

1 rows fetched.

SQL> select to_timestamp('2017-09-11 23:45:59.44444', 'YYYY-MM-DD HH24:MI:SS.FF') + 1 from dual;

TO_TIMESTAMP('2017-09-11 23:45:59.44444', 'YYYY-MM-DD HH24:MI:SS
----------------------------------------------------------------
2017-09-12 23:45:59.444440                                      

1 rows fetched.

SQL> 
SQL> 
SQL> --- DATETIME subtraction is expected to obtain the days, but it is not supported
SQL> select to_date('2017-08-11', 'YYYY-MM-DD')-to_date('2018-09-24', 'YYYY-MM-DD') from dual;

TO_DATE('2017-08-11', 'YYYY-MM-DD')-TO_DATE('2018-09-24', 'YYYY-
----------------------------------------------------------------
-409                                                            

1 rows fetched.

SQL> select to_date('2017-08-11', 'YYYY-MM-DD')-to_date('2018-08-11', 'YYYY-MM-DD') from dual;

TO_DATE('2017-08-11', 'YYYY-MM-DD')-TO_DATE('2018-08-11', 'YYYY-
----------------------------------------------------------------
-365                                                            

1 rows fetched.

SQL> select to_timestamp('2017-08-11 13:24:55', 'YYYY-MM-DD HH24:MI:SS') - to_timestamp('2018-08-11 13:24:54', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_TIMESTAMP('2017-08-11 13:24:55', 'YYYY-MM-DD HH24:MI:SS') - T
----------------------------------------------------------------
-0000364 23:59:59.000000                                        

1 rows fetched.

SQL> 
SQL> 
SQL> --- DATETIME operation overflow & underflow
SQL> -- underflow cases
SQL> select to_date('2290-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_DATE('2290-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
-------------------------------------------------------
2290-12-31 23:59:59                                    

1 rows fetched.

SQL> select to_date('2291-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_DATE('2291-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
-------------------------------------------------------
2291-01-01 00:00:00                                    

1 rows fetched.

SQL> select to_date('2290-09-12', 'YYYY-MM-DD')+500 from dual;

TO_DATE('2290-09-12', 'YYYY-MM-DD')+500
---------------------------------------
2292-01-25 00:00:00                    

1 rows fetched.

SQL> select to_timestamp('2290-12-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF') from dual;

TO_TIMESTAMP('2290-12-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:S
----------------------------------------------------------------
2290-12-31 23:59:59.999999                                      

1 rows fetched.

SQL> select to_timestamp('2291-01-01 00:00:00.000000', 'YYYY-MM-DD HH24:MI:SS.FF') from dual;

TO_TIMESTAMP('2291-01-01 00:00:00.000000', 'YYYY-MM-DD HH24:MI:S
----------------------------------------------------------------
2291-01-01 00:00:00.000000                                      

1 rows fetched.

SQL> select to_timestamp('2290-09-12', 'YYYY-MM-DD')+500 from dual;

TO_TIMESTAMP('2290-09-12', 'YYYY-MM-DD')+500
--------------------------------------------
2292-01-25 00:00:00.000000                  

1 rows fetched.

SQL> select to_timestamp('0001-01-01', 'YYYY-MM-DD') from dual;

TO_TIMESTAMP('0001-01-01', 'YYYY-MM-DD')
----------------------------------------
0001-01-01 00:00:00.000000              

1 rows fetched.

SQL> select to_timestamp('0001-01-01', 'YYYY-MM-DD') - 1 from dual;

CT-00694, [1:49]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select to_timestamp('0001-01-01', 'YYYY-MM-DD') - 2 from dual;

CT-00694, [1:49]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select -2 + to_timestamp('0001-01-01', 'YYYY-MM-DD') from dual;

CT-00694, [1:11]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select to_timestamp('0001-01-01', 'YYYY-MM-DD') - 1.0 / 86400 from dual;

CT-00694, [1:49]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select to_timestamp('0001-01-01', 'YYYY-MM-DD') - 0.0001 / 86400 from dual;

CT-00694, [1:49]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select to_timestamp('0001-01-01 00:00:00.0', 'YYYY-MM-DD HH24:MI:SS.FF') - 1.0 / 86400 from dual;

CT-00694, [1:74]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select to_timestamp('0001-01-01 00:00:00.0', 'YYYY-MM-DD HH24:MI:SS.FF') - 0.00001 / 86400 from dual;

CT-00694, [1:74]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> 
SQL> -- overflow
SQL> select to_date('1710-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_DATE('1710-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
-------------------------------------------------------
1710-01-01 00:00:00                                    

1 rows fetched.

SQL> select to_date('1709-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_DATE('1709-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
-------------------------------------------------------
1709-12-31 00:00:00                                    

1 rows fetched.

SQL> select to_date('1710-05-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')-500.3333333333333333333 from dual;

TO_DATE('1710-05-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')-500.3333
----------------------------------------------------------------
1708-12-16 16:00:00                                             

1 rows fetched.

SQL> select to_timestamp('1710-01-01 00:00:00.000000', 'YYYY-MM-DD HH24:MI:SS.FF') from dual;

TO_TIMESTAMP('1710-01-01 00:00:00.000000', 'YYYY-MM-DD HH24:MI:S
----------------------------------------------------------------
1710-01-01 00:00:00.000000                                      

1 rows fetched.

SQL> select to_timestamp('1709-12-31 00:00:00.000000', 'YYYY-MM-DD HH24:MI:SS.FF') from dual;

TO_TIMESTAMP('1709-12-31 00:00:00.000000', 'YYYY-MM-DD HH24:MI:S
----------------------------------------------------------------
1709-12-31 00:00:00.000000                                      

1 rows fetched.

SQL> select to_timestamp('1710-05-01 00:00:00.000000', 'YYYY-MM-DD HH24:MI:SS.FF')-500.3333333333333333333 from dual;

TO_TIMESTAMP('1710-05-01 00:00:00.000000', 'YYYY-MM-DD HH24:MI:S
----------------------------------------------------------------
1708-12-16 16:00:00.000000                                      

1 rows fetched.

SQL> select to_timestamp('9999-12-31', 'YYYY-MM-DD') from dual;

TO_TIMESTAMP('9999-12-31', 'YYYY-MM-DD')
----------------------------------------
9999-12-31 00:00:00.000000              

1 rows fetched.

SQL> select to_timestamp('9999-12-31', 'YYYY-MM-DD') + 1 from dual;

CT-00694, [1:49]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select to_timestamp('9999-12-31', 'YYYY-MM-DD') + 2 from dual;

CT-00694, [1:49]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select -2 + to_timestamp('9999-12-31', 'YYYY-MM-DD') from dual;

-2 + TO_TIMESTAMP('9999-12-31', 'YYYY-MM-DD')
---------------------------------------------
9999-12-29 00:00:00.000000                   

1 rows fetched.

SQL> -- the default time is 12:00:00
SQL> select to_timestamp('9999-12-31', 'YYYY-MM-DD') + 1.0 / 86400 from dual;

TO_TIMESTAMP('9999-12-31', 'YYYY-MM-DD') + 1.0 / 86400
------------------------------------------------------
9999-12-31 00:00:01.000000                            

1 rows fetched.

SQL> select to_timestamp('9999-12-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF6') + 1.0 / 86400 from dual;

CT-00694, [1:80]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> select to_timestamp('9999-12-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF6') + 0.000001 / 86400 from dual;

CT-00694, [1:80]DATETIME out of range, it must be between 0001-01-01 00:00:00 and 9999-12-31 23:59:59
SQL> 
SQL> --- Invalid datatime input
SQL> select to_timestamp('2017-09-31 23:45:59.44444', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2017-13-01 23:45:59.4444', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('207-11-01 23:45:59.44444', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

TO_TIMESTAMP('207-11-01 23:45:59.44444', 'YYYY-MM-DD HH24:MI:SS.
----------------------------------------------------------------
0207-11-01 23:45:59.444440                                      

1 rows fetched.

SQL> select to_timestamp('2017-02-30 23:45:59.444454', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_date('2017-00-11', 'YYYY-MM-DD') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_date('2017-01-00', 'YYYY-MM-DD') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_date('2017-01-00', 'YYYY-MM-DD') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2017-02-22 25:45:59.444444', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2017-02-22 -12:45:59.444444', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

TO_TIMESTAMP('2017-02-22 -12:45:59.444444', 'YYYY-MM-DD HH24:MI:
----------------------------------------------------------------
2017-02-22 12:45:59.444444                                      

1 rows fetched.

SQL> select to_timestamp('2017-02-22 00:87:59.444444', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2017-02-22 00:23:23.444444', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

TO_TIMESTAMP('2017-02-22 00:23:23.444444', 'YYYY-MM-DD HH24:MI:S
----------------------------------------------------------------
2017-02-22 00:23:23.444444                                      

1 rows fetched.

SQL> select to_timestamp('2017-02-22 00:23:23.444444', 'YYYY-MM-DD HH24:MI:SS.FF3')  from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2017-02-22 00:23:23.444444', 'YYYY-MM-DD HH24:MI:SS.FF6')  from dual;

TO_TIMESTAMP('2017-02-22 00:23:23.444444', 'YYYY-MM-DD HH24:MI:S
----------------------------------------------------------------
2017-02-22 00:23:23.444444                                      

1 rows fetched.

SQL> select to_timestamp('2017-2-22 00:23:23.444444', 'YYYY-MM-DD HH24:MI:SS.FF')  from dual;

TO_TIMESTAMP('2017-2-22 00:23:23.444444', 'YYYY-MM-DD HH24:MI:SS
----------------------------------------------------------------
2017-02-22 00:23:23.444444                                      

1 rows fetched.

SQL> select to_date('2017-01-12', 'YYYY-MM-DD HH24:MI:SS') from dual;

TO_DATE('2017-01-12', 'YYYY-MM-DD HH24:MI:SS')
----------------------------------------------
2017-01-12 00:00:00                           

1 rows fetched.

SQL> select to_date('2017-01-2', 'YYYY-MM-DD') from dual;

TO_DATE('2017-01-2', 'YYYY-MM-DD')
----------------------------------
2017-01-02 00:00:00               

1 rows fetched.

SQL> 
SQL> --- Instert into table
SQL> DROP TABLE IF EXISTS ts_tbl_1;

Succeed.

SQL> create table ts_tbl_1(c1 int, c3 datetime, c2 timestamp);

Succeed.

SQL> insert into ts_tbl_1 values(1, to_date('2017-09-22 12:34:56', 'YYYY-MM-DD HH24:MI:SS'), to_timestamp('2017-09-22 23:45:00.112233', 'YYYY-MM-DD HH24:MI:SS.FF'));

1 rows affected.

SQL> insert into ts_tbl_1 values(2, to_date('2017-09-22 12:34:56', 'YYYY-MM-DD HH24:MI:SS')+1, to_timestamp('2017-09-22 23:45:00.11223', 'YYYY-MM-DD HH24:MI:SS.FF')+1);

1 rows affected.

SQL> insert into ts_tbl_1 values(3, to_date('2017-09-22 12:34:56', 'YYYY-MM-DD HH24:MI:SS')+2, to_timestamp('2017-09-22 23:45:00.112233', 'YYYY-MM-DD HH24:MI:SS.FF')+2);

1 rows affected.

SQL> insert into ts_tbl_1 values(4, to_date('2017-09-22 12:34:56', 'YYYY-MM-DD HH24:MI:SS')+3, to_timestamp('2017-09-22 23:45:00.1122', 'YYYY-MM-DD HH24:MI:SS.FF')+3);

1 rows affected.

SQL> select * from ts_tbl_1 order by c1;

C1           C3                     C2                              
------------ ---------------------- --------------------------------
1            2017-09-22 12:34:56    2017-09-22 23:45:00.112233      
2            2017-09-23 12:34:56    2017-09-23 23:45:00.112230      
3            2017-09-24 12:34:56    2017-09-24 23:45:00.112233      
4            2017-09-25 12:34:56    2017-09-25 23:45:00.112200      

4 rows fetched.

SQL> select * from ts_tbl_1 order by c2;

C1           C3                     C2                              
------------ ---------------------- --------------------------------
1            2017-09-22 12:34:56    2017-09-22 23:45:00.112233      
2            2017-09-23 12:34:56    2017-09-23 23:45:00.112230      
3            2017-09-24 12:34:56    2017-09-24 23:45:00.112233      
4            2017-09-25 12:34:56    2017-09-25 23:45:00.112200      

4 rows fetched.

SQL> 
SQL> --- timestamp with precision, do not support
SQL> DROP TABLE IF EXISTS ts_tbl_2;

Succeed.

SQL> create table ts_tbl_2(c1 int, c2 timestamp(6));

Succeed.

SQL> insert into ts_tbl_2 values(1, to_timestamp('2017-09-22 23:45:00.1122', 'YYYY-MM-DD HH24:MI:SS.FF6'));

1 rows affected.

SQL> insert into ts_tbl_2 values(2, to_timestamp('2017-09-22 23:45:00.1122', 'YYYY-MM-DD HH24:MI:SS.FF6')+1);

1 rows affected.

SQL> insert into ts_tbl_2 values(3, 2+to_timestamp('2017-09-22 23:45:00.1122', 'YYYY-MM-DD HH24:MI:SS.FF6'));

1 rows affected.

SQL> select * from ts_tbl_2 order by c1;

C1           C2                              
------------ --------------------------------
1            2017-09-22 23:45:00.112200      
2            2017-09-23 23:45:00.112200      
3            2017-09-24 23:45:00.112200      

3 rows fetched.

SQL> select * from ts_tbl_2 order by c2;

C1           C2                              
------------ --------------------------------
1            2017-09-22 23:45:00.112200      
2            2017-09-23 23:45:00.112200      
3            2017-09-24 23:45:00.112200      

3 rows fetched.

SQL> 
SQL> DROP TABLE IF EXISTS ts_tbl_2;

Succeed.

SQL> create table ts_tbl_2(id int, c_date date);

Succeed.

SQL> insert into ts_tbl_2(id,c_date) values(1,to_timestamp('2017-09-22 23:45:00.1122', 'YYYY-MM-DD HH24:MI:SS.FF6'));

1 rows affected.

SQL> insert into ts_tbl_2(id,c_date) values(2,to_timestamp('2017-09-22 23:46:01.1122', 'YYYY-MM-DD HH24:MI:SS.FF6'));

1 rows affected.

SQL> insert into ts_tbl_2(id,c_date) values(3,to_timestamp('2017-09-22 23:45:00.1122', 'YYYY-MM-DD HH24:MI:SS.FF6'));

1 rows affected.

SQL> select * from ts_tbl_2 order by id;

ID           C_DATE                
------------ ----------------------
1            2017-09-22 23:45:00   
2            2017-09-22 23:46:01   
3            2017-09-22 23:45:00   

3 rows fetched.

SQL> select * from ts_tbl_2 where c_date = to_date('2017-09-22 23:45:00','yyyy-mm-dd hh24:mi:ss') order by id;

ID           C_DATE                
------------ ----------------------
1            2017-09-22 23:45:00   
3            2017-09-22 23:45:00   

2 rows fetched.

SQL> select * from ts_tbl_2 where c_date = to_date('2017-09-22 23:46:01','yyyy-mm-dd hh24:mi:ss') order by id;

ID           C_DATE                
------------ ----------------------
2            2017-09-22 23:46:01   

1 rows fetched.

SQL> 
SQL> -- timestamp DDL test
SQL> DROP TABLE IF EXISTS TS_TBL_180130_1;

Succeed.

SQL> CREATE TABLE TS_TBL_180130_1(X TIMESTAMP(1) WITH LOCAL TIME ZONE);

Succeed.

SQL> desc TS_TBL_180130_1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            TIMESTAMP(1) WITH LOCAL TIME ZONE   

SQL> 
SQL> DROP TABLE IF EXISTS TS_TBL_180130_2;

Succeed.

SQL> CREATE TABLE TS_TBL_180130_2(X TIMESTAMP(2) WITH TIME ZONE);

Succeed.

SQL> desc TS_TBL_180130_2

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
X                                            TIMESTAMP(2) WITH TIME ZONE         

SQL> 
SQL> DROP TABLE IF EXISTS TS_TBL_180130_3;

Succeed.

SQL> create table TS_TBL_180130_3(s timestamp(3) /*213*/ with /*asdasd*/ local /*time*/ time /*xx*/ zone);

Succeed.

SQL> desc TS_TBL_180130_3

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
S                                            TIMESTAMP(3) WITH LOCAL TIME ZONE   

SQL> 
SQL> DROP TABLE IF EXISTS TS_TBL_180130_4;

Succeed.

SQL> create table TS_TBL_180130_4(s/*ssdgf*/ timestamp(4) /*213*/ with /*asdasd*/ local /*time*/ time /*xx*/ zone);

Succeed.

SQL> desc TS_TBL_180130_4

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
S                                            TIMESTAMP(4) WITH LOCAL TIME ZONE   

SQL> 
SQL> drop table if exists PGS_ddl_1;

Succeed.

SQL> create table PGS_ddl_1(r1 double, r2 double precision);

Succeed.

SQL> desc PGS_ddl_1

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
R1                                           BINARY_DOUBLE                       
R2                                           BINARY_DOUBLE                       

SQL> 
SQL> drop table if exists PGS_ddl_2;

Succeed.

SQL> create table PGS_ddl_2(c1 character(10), r2 character varying(12));

Succeed.

SQL> desc PGS_ddl_2

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
C1                                           CHAR(10 BYTE)                       
R2                                           VARCHAR(12 BYTE)                    

SQL> 
SQL> -- DTS2018011610974
SQL> drop table if exists t_datatime_1;

Succeed.

SQL> create table t_datatime_1(f1 int, f2 TIMESTAMP with time zone NOT NULL default current_timestamp);

Succeed.

SQL> insert into t_datatime_1(f1) values(1);

1 rows affected.

SQL> commit;

Succeed.

SQL> select f1 from t_datatime_1;

F1          
------------
1           

1 rows fetched.

SQL> drop table t_datatime_1;

Succeed.

SQL> 
SQL> select '2010-10-10 12:10:333'::timestamp;

'2010-10-10 12:10:333'::TIMESTAMP
---------------------------------
2010-10-10 12:10:33.300000       

1 rows fetched.

SQL> select '2010-10-10 12:8'::timestamp;

'2010-10-10 12:8'::TIMESTAMP    
--------------------------------
2010-10-10 12:08:00.000000      

1 rows fetched.

SQL> select '2010-10-10 12:18'::timestamp;

'2010-10-10 12:18'::TIMESTAMP   
--------------------------------
2010-10-10 12:18:00.000000      

1 rows fetched.

SQL> select '12342'::timestamp;

'12342'::TIMESTAMP              
--------------------------------
1234-02-01 00:00:00.000000      

1 rows fetched.

SQL> select '2010-22'::timestamp;

CT-00105, [1:17]Invalid format of datetime
SQL> select '2010'::timestamp;

'2010'::TIMESTAMP               
--------------------------------
2010-01-01 00:00:00.000000      

1 rows fetched.

SQL> select ''::timestamp;

''::TIMESTAMP                   
--------------------------------
                                

1 rows fetched.

SQL> select '1234-12'::timestamp;

'1234-12'::TIMESTAMP            
--------------------------------
1234-12-01 00:00:00.000000      

1 rows fetched.

SQL> select '234-12'::timestamp;

'234-12'::TIMESTAMP             
--------------------------------
0234-12-01 00:00:00.000000      

1 rows fetched.

SQL> select '1234-12-11 1'::timestamp;

'1234-12-11 1'::TIMESTAMP       
--------------------------------
1234-12-11 01:00:00.000000      

1 rows fetched.

SQL> select '1234-12-11 11:21'::timestamp;

'1234-12-11 11:21'::TIMESTAMP   
--------------------------------
1234-12-11 11:21:00.000000      

1 rows fetched.

SQL> select '1234-12-11 11:23:21'::timestamp;

'1234-12-11 11:23:21'::TIMESTAMP
--------------------------------
1234-12-11 11:23:21.000000      

1 rows fetched.

SQL> select '1234-12-11 11:23:1'::timestamp;

'1234-12-11 11:23:1'::TIMESTAMP 
--------------------------------
1234-12-11 11:23:01.000000      

1 rows fetched.

SQL> select '1234-12-11 11:3:21'::timestamp;

'1234-12-11 11:3:21'::TIMESTAMP 
--------------------------------
1234-12-11 11:03:21.000000      

1 rows fetched.

SQL> 
SQL> DROP TABLE IF EXISTS ADD__TBL_20015;

Succeed.

SQL> CREATE TABLE ADD__TBL_20015 (COL INTEGER); ALTER TABLE ADD__TBL_20015 ADD COL_1 TIMESTAMP DEFAULT '2010-10-10' ; -- ; -- , ADD COL_2 NUMBER NOT NULL ;

Succeed.


Succeed.

SQL> insert into ADD__TBL_20015 values(1, default);

1 rows affected.

SQL> insert into ADD__TBL_20015 values(2, default);

1 rows affected.

SQL> insert into ADD__TBL_20015 values(3, default+1);

1 rows affected.

SQL> select * from ADD__TBL_20015;

COL          COL_1                           
------------ --------------------------------
1            2010-10-10 00:00:00.000000      
2            2010-10-10 00:00:00.000000      
3            2010-10-11 00:00:00.000000      

3 rows fetched.

SQL> 
SQL> 
SQL> -- timestamp with precision
SQL> select to_char(to_timestamp('2017-01-02 03:04:05.888888', 'YYYY-MM-DD HH24:MI:SS.FF6')) from dual;

TO_CHAR(TO_TIMESTAMP('2017-01-02 03:04:05.888888', 'YYYY-MM-DD H
----------------------------------------------------------------
2017-01-02 03:04:05.888888                                      

1 rows fetched.

SQL> select to_char(to_timestamp('2017-01-02 03:04:05.888888', 'YYYY-MM-DD HH24:MI:SS.FF6'), 'FF1') from dual;

TO_CHAR(TO_TIMESTAMP('2017-01-02 03:04:05.888888', 'YYYY-MM-DD H
----------------------------------------------------------------
8                                                               

1 rows fetched.

SQL> select to_char(to_timestamp('2017-01-02 03:04:05.888888', 'YYYY-MM-DD HH24:MI:SS.FF6'), 'FF2') from dual;

TO_CHAR(TO_TIMESTAMP('2017-01-02 03:04:05.888888', 'YYYY-MM-DD H
----------------------------------------------------------------
88                                                              

1 rows fetched.

SQL> select to_char(to_timestamp('2017-01-02 03:04:05.888888', 'YYYY-MM-DD HH24:MI:SS.FF6'), 'FF3') from dual;

TO_CHAR(TO_TIMESTAMP('2017-01-02 03:04:05.888888', 'YYYY-MM-DD H
----------------------------------------------------------------
888                                                             

1 rows fetched.

SQL> select to_char(to_timestamp('2017-01-02 03:04:05.888888', 'YYYY-MM-DD HH24:MI:SS.FF6'), 'FF4') from dual;

TO_CHAR(TO_TIMESTAMP('2017-01-02 03:04:05.888888', 'YYYY-MM-DD H
----------------------------------------------------------------
8888                                                            

1 rows fetched.

SQL> select to_char(to_timestamp('2017-01-02 03:04:05.888888', 'YYYY-MM-DD HH24:MI:SS.FF6'), 'FF5') from dual;

TO_CHAR(TO_TIMESTAMP('2017-01-02 03:04:05.888888', 'YYYY-MM-DD H
----------------------------------------------------------------
88888                                                           

1 rows fetched.

SQL> select to_char(to_timestamp('2017-01-02 03:04:05.888888', 'YYYY-MM-DD HH24:MI:SS.FF6'), 'FF6') from dual;

TO_CHAR(TO_TIMESTAMP('2017-01-02 03:04:05.888888', 'YYYY-MM-DD H
----------------------------------------------------------------
888888                                                          

1 rows fetched.

SQL> 
SQL> 
SQL> drop table if exists TS_TBL_180201_1;

Succeed.

SQL> create table TS_TBL_180201_1(
  2 c0 timestamp,
  3 c1 timestamp(1),
  4 c2 timestamp(2),
  5 c3 timestamp(3),
  6 c4 timestamp(4),
  7 c5 timestamp(5),
  8 c6 timestamp(6)
  9 );

Succeed.

SQL> insert into TS_TBL_180201_1 values('2017-01-01 12:34:56.789012','2017-01-01 12:34:56.789012','2017-01-01 12:34:56.789012','2017-01-01 12:34:56.789012','2017-01-01 12:34:56.789012','2017-01-01 12:34:56.789012','2017-01-01 12:34:56.789012');

1 rows affected.

SQL> insert into TS_TBL_180201_1 values('2017-01-01 12:34:56.000000','2017-01-01 12:34:56.000000','2017-01-01 12:34:56.000000','2017-01-01 12:34:56.000000','2017-01-01 12:34:56.000000','2017-01-01 12:34:56.000000','2017-01-01 12:34:56.000000');

1 rows affected.

SQL> 
SQL> select * from TS_TBL_180201_1;

C0                               C1                               C2                               C3                               C4                               C5                               C6                              
-------------------------------- -------------------------------- -------------------------------- -------------------------------- -------------------------------- -------------------------------- --------------------------------
2017-01-01 12:34:56.789012       2017-01-01 12:34:56.8            2017-01-01 12:34:56.79           2017-01-01 12:34:56.789          2017-01-01 12:34:56.7890         2017-01-01 12:34:56.78901        2017-01-01 12:34:56.789012      
2017-01-01 12:34:56.000000       2017-01-01 12:34:56.0            2017-01-01 12:34:56.00           2017-01-01 12:34:56.000          2017-01-01 12:34:56.0000         2017-01-01 12:34:56.00000        2017-01-01 12:34:56.000000      

2 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('1600-01-01 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'YYYY-MM-DD HH24:MI:SS DAY') from dual;

TO_CHAR(TO_TIMESTAMP('1600-01-01 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
1600-01-01 12:12:12 SATURDAY                                    

1 rows fetched.

SQL> select to_char(to_timestamp('1800-01-01 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'YYYY-MM-DD HH24:MI:SS DAY') from dual;

TO_CHAR(TO_TIMESTAMP('1800-01-01 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
1800-01-01 12:12:12 WEDNESDAY                                   

1 rows fetched.

SQL> select to_char(to_timestamp('1900-01-01 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'YYYY-MM-DD HH24:MI:SS DAY') from dual;

TO_CHAR(TO_TIMESTAMP('1900-01-01 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
1900-01-01 12:12:12 MONDAY                                      

1 rows fetched.

SQL> select to_char(to_timestamp('2000-01-01 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'YYYY-MM-DD HH24:MI:SS DAY') from dual;

TO_CHAR(TO_TIMESTAMP('2000-01-01 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
2000-01-01 12:12:12 SATURDAY                                    

1 rows fetched.

SQL> select to_char(to_timestamp('2018-04-20 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'YYYY-MM-DD HH24:MI:SS DAY') from dual;

TO_CHAR(TO_TIMESTAMP('2018-04-20 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
2018-04-20 12:12:12 FRIDAY                                      

1 rows fetched.

SQL> 
SQL> -- HH is the default, and equal to HH12
SQL> select to_char(to_timestamp('2001-01-01 20:20:20.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'AM-PM-DAY-DY HH12 - HH24 - HH') from dual;

TO_CHAR(TO_TIMESTAMP('2001-01-01 20:20:20.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
PM-PM-MONDAY-MON 08 - 20 - 08                                   

1 rows fetched.

SQL> select to_char(to_timestamp('2018-01-01 10:10:10.121', 'YYYY-MM-DD HH24:MI:SS.FF'), 'AM-PM-DAY-DY HH12 - HH24 - HH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-01-01 10:10:10.121', 'YYYY-MM-DD HH24
----------------------------------------------------------------
AM-AM-MONDAY-MON 10 - 10 - 10                                   

1 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('2018-01-20 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-01-20 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
01-JAN-JANUARY                                                  

1 rows fetched.

SQL> select to_char(to_timestamp('2018-02-02 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-02-02 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
02-FEB-FEBRUARY                                                 

1 rows fetched.

SQL> select to_char(to_timestamp('2018-03-20 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-03-20 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
03-MAR-MARCH                                                    

1 rows fetched.

SQL> select to_char(to_timestamp('2018-04-02 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-04-02 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
04-APR-APRIL                                                    

1 rows fetched.

SQL> select to_char(to_timestamp('2018-05-20 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-05-20 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
05-MAY-MAY                                                      

1 rows fetched.

SQL> select to_char(to_timestamp('2018-06-02 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-06-02 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
06-JUN-JUNE                                                     

1 rows fetched.

SQL> select to_char(to_timestamp('2018-07-20 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-07-20 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
07-JUL-JULY                                                     

1 rows fetched.

SQL> select to_char(to_timestamp('2018-08-02 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-08-02 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
08-AUG-AUGUST                                                   

1 rows fetched.

SQL> select to_char(to_timestamp('2018-09-20 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-09-20 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
09-SEP-SEPTEMBER                                                

1 rows fetched.

SQL> select to_char(to_timestamp('2018-10-02 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-10-02 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
10-OCT-OCTOBER                                                  

1 rows fetched.

SQL> select to_char(to_timestamp('2018-11-02 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-11-02 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
11-NOV-NOVEMBER                                                 

1 rows fetched.

SQL> select to_char(to_timestamp('2018-12-02 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'MM-MON-MONTH') from dual;

TO_CHAR(TO_TIMESTAMP('2018-12-02 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
12-DEC-DECEMBER                                                 

1 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('2018-04-20 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'YYYY-YYY-YY-Y') from dual;

TO_CHAR(TO_TIMESTAMP('2018-04-20 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
2018-018-18-8                                                   

1 rows fetched.

SQL> select to_char(to_timestamp('1000-11-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'YYYY-YYY-YY-Y') from dual;

TO_CHAR(TO_TIMESTAMP('1000-11-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
1000-000-00-0                                                   

1 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('2018-04-20 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'CC') from dual;

TO_CHAR(TO_TIMESTAMP('2018-04-20 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
21                                                              

1 rows fetched.

SQL> select to_char(to_timestamp('2000-01-01 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'CC') from dual;

TO_CHAR(TO_TIMESTAMP('2000-01-01 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
20                                                              

1 rows fetched.

SQL> select to_char(to_timestamp('1999-12-31 23:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'CC') from dual;

TO_CHAR(TO_TIMESTAMP('1999-12-31 23:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
20                                                              

1 rows fetched.

SQL> select to_char(to_timestamp('1000-11-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'CC') from dual;

TO_CHAR(TO_TIMESTAMP('1000-11-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
10                                                              

1 rows fetched.

SQL> select to_char(to_timestamp('0001-11-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'CC') from dual;

TO_CHAR(TO_TIMESTAMP('0001-11-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
01                                                              

1 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('1000-11-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'WW/W') from dual;

TO_CHAR(TO_TIMESTAMP('1000-11-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
45/2                                                            

1 rows fetched.

SQL> select to_char(to_timestamp('2018-04-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'WW/W') from dual;

TO_CHAR(TO_TIMESTAMP('2018-04-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
15/2                                                            

1 rows fetched.

SQL> select to_char(to_timestamp('2018-01-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'WW/W') from dual;

TO_CHAR(TO_TIMESTAMP('2018-01-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
02/2                                                            

1 rows fetched.

SQL> select to_char(to_timestamp('2018-12-31 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'WW/W') from dual;

TO_CHAR(TO_TIMESTAMP('2018-12-31 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
53/5                                                            

1 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('2000-04-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'DDD - DD - D - DY') from dual;

TO_CHAR(TO_TIMESTAMP('2000-04-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
102 - 11 - 3 - TUE                                              

1 rows fetched.

SQL> select to_char(to_timestamp('2000-01-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'DDD - DD - D - DY') from dual;

TO_CHAR(TO_TIMESTAMP('2000-01-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
011 - 11 - 3 - TUE                                              

1 rows fetched.

SQL> select to_char(to_timestamp('2018-12-31 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'DDD - DD - D - DY') from dual;

TO_CHAR(TO_TIMESTAMP('2018-12-31 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
365 - 31 - 2 - MON                                              

1 rows fetched.

SQL> -- The following cases are differnt from Oracle's results. The reason may be that Oracle has differnt count befor 1200 year
SQL> select to_char(to_timestamp('1000-11-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'DDD - DD - D - DY') from dual;

TO_CHAR(TO_TIMESTAMP('1000-11-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
315 - 11 - 3 - TUE                                              

1 rows fetched.

SQL> select to_char(to_timestamp('0400-01-01 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'DDD - DD - D - DY') from dual;

TO_CHAR(TO_TIMESTAMP('0400-01-01 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
001 - 01 - 7 - SAT                                              

1 rows fetched.

SQL> select to_char(to_timestamp('0400-11-11 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'DDD - DD - D - DY') from dual;

TO_CHAR(TO_TIMESTAMP('0400-11-11 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
316 - 11 - 7 - SAT                                              

1 rows fetched.

SQL> 
SQL> select to_timestamp('2012-DEC-31', 'YYYY-MON-DD') from dual;

TO_TIMESTAMP('2012-DEC-31', 'YYYY-MON-DD')
------------------------------------------
2012-12-31 00:00:00.000000                

1 rows fetched.

SQL> select to_timestamp('2012-XPG-31', 'YYYY-MON-DD') from dual; 

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2012-DE-31', 'YYYY-MON-DD') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2012-MAY-12', 'YYYY-MON-MM') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2012-25-DEC', 'YYYY-DD-MON') from dual;

TO_TIMESTAMP('2012-25-DEC', 'YYYY-DD-MON')
------------------------------------------
2012-12-25 00:00:00.000000                

1 rows fetched.

SQL> select to_timestamp('2012-25-DE', 'YYYY-DD-MON') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2018-SEP-31-MAY', 'YYYY-MON-DD-MONTH') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> 
SQL> select to_timestamp('2018-SEPTEMBER-31', 'YYYY-MONTH-DD') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2018-SEPTEMBER-31-MAY', 'YYYY-MONTH-DD-MON') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2018-18-DE', 'YYYY-DD-MONTH') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2018-SEXXXXXXX-31', 'YYYY-MONTH-DD') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2018-SEPTEMBER-10', 'YYYY-MONTH-DD') from dual;

TO_TIMESTAMP('2018-SEPTEMBER-10', 'YYYY-MONTH-DD')
--------------------------------------------------
2018-09-10 00:00:00.000000                        

1 rows fetched.

SQL> select to_timestamp('2018-SEPTEMBER-10', 'YYYY-MONTH-MM') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2000-04-11 12:12:12.12a2', 'YYYY-MM-DD HH24:MI:SS.FF') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2000-04-11 12:12:12.123.123', 'YYYY-MM-DD HH24:MI:SS.FF3.FF3') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2000-04-11 12:12:12.12345678', 'YYYY-MM-DD HH24:MI:SS.FF') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('2000-04-11 12:12:12.123-123', 'YYYY-MM-DD HH24:MI:SS.FF3-FF') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('18-04-11 12:12:12.123', 'YY-MM-DD HH24:MI:SS.FF3') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> select to_timestamp('18-04-11 12:12:12.123', 'XPG-MM-DD HH24:MI:SS.FF3') from dual;

CT-00105, [1:8]Invalid format of datetime
SQL> 
SQL> select to_char(to_timestamp('2018-01-01 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'Q') from dual;

TO_CHAR(TO_TIMESTAMP('2018-01-01 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
1                                                               

1 rows fetched.

SQL> select to_char(to_timestamp('2000-03-31 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'Q') from dual;

TO_CHAR(TO_TIMESTAMP('2000-03-31 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
1                                                               

1 rows fetched.

SQL> select to_char(to_timestamp('2000-04-01 12:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'Q') from dual;

TO_CHAR(TO_TIMESTAMP('2000-04-01 12:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
2                                                               

1 rows fetched.

SQL> select to_char(to_timestamp('0999-08-31 23:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'Q') from dual;

TO_CHAR(TO_TIMESTAMP('0999-08-31 23:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
3                                                               

1 rows fetched.

SQL> select to_char(to_timestamp('1999-12-31 23:12:12.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'Q') from dual;

TO_CHAR(TO_TIMESTAMP('1999-12-31 23:12:12.121212', 'YYYY-MM-DD H
----------------------------------------------------------------
4                                                               

1 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('2018-01-01 00:00:00.0', 'YYYY-MM-DD HH24:MI:SS.FF'), 'SS - SSSSS') as "SS - SSSSS" from dual;

SS - SSSSS                                      
------------------------------------------------
00 - 00000                                      

1 rows fetched.

SQL> select to_char(to_timestamp('2000-03-31 00:00:00.999999', 'YYYY-MM-DD HH24:MI:SS.FF'), 'SS - SSSSS') as "SS - SSSSS" from dual;

SS - SSSSS                                      
------------------------------------------------
00 - 00000                                      

1 rows fetched.

SQL> select to_char(to_timestamp('2000-04-01 00:00:01.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'SS - SSSSS') as "SS - SSSSS" from dual;

SS - SSSSS                                      
------------------------------------------------
01 - 00001                                      

1 rows fetched.

SQL> select to_char(to_timestamp('0999-08-31 00:01:00.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'SS - SSSSS') as "SS - SSSSS" from dual;

SS - SSSSS                                      
------------------------------------------------
00 - 00060                                      

1 rows fetched.

SQL> select to_char(to_timestamp('1999-12-31 01:00:00.121212', 'YYYY-MM-DD HH24:MI:SS.FF'), 'SS - SSSSS') as "SS - SSSSS" from dual;

SS - SSSSS                                      
------------------------------------------------
00 - 03600                                      

1 rows fetched.

SQL> select to_char(to_timestamp('2999-12-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF'), 'SS - SSSSS') as "SS - SSSSS" from dual;

SS - SSSSS                                      
------------------------------------------------
59 - 86399                                      

1 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('2018-01-01 12:12:12.0', 'YYYY-MM-DD HH24:MI:SS.FF'),      'FF - FF1 - FF2 - FF3 - FF4 - FF5 - FF6') as "FFi Test" from dual;

FFi Test                                        
------------------------------------------------
000000 - 0 - 00 - 000 - 0000 - 00000 - 000000   

1 rows fetched.

SQL> select to_char(to_timestamp('2000-03-31 12:12:12.000001', 'YYYY-MM-DD HH24:MI:SS.FF'), 'FF - FF1 - FF2 - FF3 - FF4 - FF5 - FF6') as "FFi Test" from dual;

FFi Test                                        
------------------------------------------------
000001 - 0 - 00 - 000 - 0000 - 00000 - 000001   

1 rows fetched.

SQL> select to_char(to_timestamp('2000-04-01 12:12:12.000010', 'YYYY-MM-DD HH24:MI:SS.FF'), 'FF - FF1 - FF2 - FF3 - FF4 - FF5 - FF6') as "FFi Test" from dual;

FFi Test                                        
------------------------------------------------
000010 - 0 - 00 - 000 - 0000 - 00001 - 000010   

1 rows fetched.

SQL> select to_char(to_timestamp('0999-08-31 23:12:12.001000', 'YYYY-MM-DD HH24:MI:SS.FF'), 'FF - FF1 - FF2 - FF3 - FF4 - FF5 - FF6') as "FFi Test" from dual;

FFi Test                                        
------------------------------------------------
001000 - 0 - 00 - 001 - 0010 - 00100 - 001000   

1 rows fetched.

SQL> select to_char(to_timestamp('1999-12-31 23:12:12.099',    'YYYY-MM-DD HH24:MI:SS.FF'), 'FF - FF1 - FF2 - FF3 - FF4 - FF5 - FF6') as "FFi Test" from dual;

FFi Test                                        
------------------------------------------------
099000 - 0 - 09 - 099 - 0990 - 09900 - 099000   

1 rows fetched.

SQL> select to_char(to_timestamp('1999-12-31 23:12:12.099999', 'YYYY-MM-DD HH24:MI:SS.FF'), 'FF - FF1 - FF2 - FF3 - FF4 - FF5 - FF6') as "FFi Test" from dual;

FFi Test                                        
------------------------------------------------
099999 - 0 - 09 - 099 - 0999 - 09999 - 099999   

1 rows fetched.

SQL> select to_char(to_timestamp('1999-12-31 23:12:12.999999', 'YYYY-MM-DD HH24:MI:SS.FF'), 'FF - FF1 - FF2 - FF3 - FF4 - FF5 - FF6') as "FFi Test" from dual;

FFi Test                                        
------------------------------------------------
999999 - 9 - 99 - 999 - 9999 - 99999 - 999999   

1 rows fetched.

SQL> 
SQL> select to_char(to_timestamp('2018-01-01 12:12:12.0', 'YYYY-MM-DD HH24:MI:SS.FF'),      'FF0') as "FFi Test" from dual;

CT-00105, Invalid format of datetime
SQL> -- FF7, 8, 9 are not supported by Zenith now, but supported by Oracle 
SQL> select to_char(to_timestamp('2018-01-01 12:12:12.0', 'YYYY-MM-DD HH24:MI:SS.FF'),      'FF7') as "FFi Test" from dual;

CT-00105, Invalid format of datetime
SQL> select cast(to_timestamp('9999-12-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(9)) from dual;

CT-00601, [1:97]Sql syntax error: timestamp precision must be between 0 and 6
SQL> 
SQL> -- adjust_timestamp
SQL> select cast(to_timestamp('2018-01-01 12:12:12.123456', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(3)) from dual;

CAST(TO_TIMESTAMP('2018-01-01 12:12:12.123456', 'YYYY-MM-DD HH24
----------------------------------------------------------------
2018-01-01 12:12:12.123                                         

1 rows fetched.

SQL> select cast(to_timestamp('2018-01-01 12:12:12.45678', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(4)) from dual;

CAST(TO_TIMESTAMP('2018-01-01 12:12:12.45678', 'YYYY-MM-DD HH24:
----------------------------------------------------------------
2018-01-01 12:12:12.4568                                        

1 rows fetched.

SQL> select cast(to_timestamp('2018-01-01 00:00:00.999999', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(5)) from dual;

CAST(TO_TIMESTAMP('2018-01-01 00:00:00.999999', 'YYYY-MM-DD HH24
----------------------------------------------------------------
2018-01-01 00:00:01.00000                                       

1 rows fetched.

SQL> select cast(to_timestamp('2018-01-01 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(6)) from dual;

CAST(TO_TIMESTAMP('2018-01-01 23:59:59.999999', 'YYYY-MM-DD HH24
----------------------------------------------------------------
2018-01-01 23:59:59.999999                                      

1 rows fetched.

SQL> select cast(to_timestamp('2012-02-28 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(5)) from dual;

CAST(TO_TIMESTAMP('2012-02-28 23:59:59.999999', 'YYYY-MM-DD HH24
----------------------------------------------------------------
2012-02-29 00:00:00.00000                                       

1 rows fetched.

SQL> select cast(to_timestamp('2018-03-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(5)) from dual;

CAST(TO_TIMESTAMP('2018-03-31 23:59:59.999999', 'YYYY-MM-DD HH24
----------------------------------------------------------------
2018-04-01 00:00:00.00000                                       

1 rows fetched.

SQL> select cast(to_timestamp('1970-03-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(2)) from dual;

CAST(TO_TIMESTAMP('1970-03-31 23:59:59.999999', 'YYYY-MM-DD HH24
----------------------------------------------------------------
1970-04-01 00:00:00.00                                          

1 rows fetched.

SQL> select cast(to_timestamp('1900-02-28 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(1)) from dual;

CAST(TO_TIMESTAMP('1900-02-28 23:59:59.999999', 'YYYY-MM-DD HH24
----------------------------------------------------------------
1900-03-01 00:00:00.0                                           

1 rows fetched.

SQL> select cast(to_timestamp('9999-12-31 23:59:59.999999', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(1)) from dual;

CT-00659, [1:8]DATETIME out of range
SQL> select cast(to_timestamp('9999-12-31 23:59:59.222222', 'YYYY-MM-DD HH24:MI:SS.FF') as timestamp(0)) from dual;

CAST(TO_TIMESTAMP('9999-12-31 23:59:59.222222', 'YYYY-MM-DD HH24
----------------------------------------------------------------
9999-12-31 23:59:59                                             

1 rows fetched.

SQL> 
SQL> --timestampadd
SQL> SELECT TIMESTAMPADD(MONTH,10000000,'2003-01-02') FROM DUAL;

CT-00695, [1:8]TIMESTAMP out of range, it must be between 0001-01-01 00:00:00.000000 and 9999-12-31 23:59:59.999999
SQL> SELECT TIMESTAMPADD(MONTH,4294967296,'2003-01-02') FROM DUAL;

CT-00695, [1:8]TIMESTAMP out of range, it must be between 0001-01-01 00:00:00.000000 and 9999-12-31 23:59:59.999999
SQL> 
SQL> select 1 from dual where to_char(scn2date('252455615999999999'), 'YYYY') > 1000;

1           
------------
1           

1 rows fetched.

SQL> --select to_char(scn2date('2524556159999999998'), 'YYYY') from dual;
SQL> select 1 from dual where to_char(scn2date('25245561599999999945'), 'YYYY') > 1000;

CT-00659, [1:34]BIGINT out of range
SQL> 
SQL> select 1 from dual where unix_timestamp() > (sysdate - 1 - to_date('01-JAN-1970 00:00:00','DD-MON-YYYY HH24:MI:SS')) * (86400);

1           
------------
1           

1 rows fetched.

SQL> 
SQL> select unix_timestamp(to_timestamp('1970-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS')) from dual;

UNIX_TIMESTAMP(TO_TIMESTAMP('1970-01-01 00:00:00', 'YYYY-MM-DD H
----------------------------------------------------------------
0                                                               

1 rows fetched.

SQL> 
SQL> SELECT UNIX_TIMESTAMP('') from dual;

UNIX_TIMESTAMP('')  
--------------------
                    

1 rows fetched.

SQL> SELECT UNIX_TIMESTAMP(null) from dual;

UNIX_TIMESTAMP(NULL)
--------------------
                    

1 rows fetched.

SQL> select unix_timestamp('2000-01-01 00:00:00') from dual;

UNIX_TIMESTAMP('2000-01-01 00:00:00')
-------------------------------------
946656000                            

1 rows fetched.

SQL> select unix_timestamp('2018-06-23 09:30:34') from dual;

UNIX_TIMESTAMP('2018-06-23 09:30:34')
-------------------------------------
1529717434                           

1 rows fetched.

SQL> select unix_timestamp('1971-01-01 00:00:00') from dual;

UNIX_TIMESTAMP('1971-01-01 00:00:00')
-------------------------------------
31507200                             

1 rows fetched.

SQL> SELECT UNIX_TIMESTAMP('2007-11-30 10:30:19') from dual;

UNIX_TIMESTAMP('2007-11-30 10:30:19')
-------------------------------------
1196389819                           

1 rows fetched.

SQL> 
SQL> -- invalid cases
SQL> SELECT UNIX_TIMESTAMP(1) from dual;

CT-00614, [1:23]Parameter error: illegal function argument: DATETIME argument expected - got BINARY_INTEGER
SQL> SELECT UNIX_TIMESTAMP('123') from dual;

UNIX_TIMESTAMP('123')
---------------------
0                    

1 rows fetched.

SQL> SELECT UNIX_TIMESTAMP('') from dual;

UNIX_TIMESTAMP('')  
--------------------
                    

1 rows fetched.

SQL> 
SQL> select ADD_MONTHS('2005-08-01',1) from dual;

ADD_MONTHS('2005-08-01',1)
--------------------------
2005-09-01 00:00:00       

1 rows fetched.

SQL> select ADD_MONTHS(to_date('2005-08-01'),1) from dual;

ADD_MONTHS(TO_DATE('2005-08-01'),1)
-----------------------------------
2005-09-01 00:00:00                

1 rows fetched.

SQL> alter session set nls_date_format='YYYY-MM';

Succeed.

SQL> select ADD_MONTHS(to_date('2005-08'),1) from dual;

ADD_MONTHS(TO_DATE('2005-08'),1)
--------------------------------
2005-09                         

1 rows fetched.

SQL> select ADD_MONTHS('2005-08',1) from dual;

ADD_MONTHS('2005-08',1)
-----------------------
2005-09                

1 rows fetched.

SQL> select ADD_MONTHS('2005-08-01',1) from dual;

CT-00105, [1:19]Invalid format of datetime
SQL> 
SQL> -- SESSIONTIMEZONE
SQL> ALTER SESSION SET TIME_ZONE='';

CT-00635, Value error: string does not match the timezone offset format
SQL> ALTER SESSION SET TIME_ZONE='    ';

CT-00635, Value error: string does not match the timezone offset format
SQL> ALTER SESSION SET TIME_ZONE='-';

CT-00635, Value error: string does not match the timezone offset format
SQL> ALTER SESSION SET TIME_ZONE='-+12:00';

CT-00635, Value error: unrecognized character in the specified timezone offset
SQL> ALTER SESSION SET TIME_ZONE='-12';

CT-00635, Value error: string does not match the timezone offset format
SQL> ALTER SESSION SET TIME_ZONE='-12:00:30';

CT-00635, Value error: string does not match the timezone offset format
SQL> ALTER SESSION SET TIME_ZONE='-12+00';

CT-00635, Value error: unrecognized character in the specified timezone offset
SQL> ALTER SESSION SET TIME_ZONE='14:01';

CT-00635, Value error: invalid time zone offset. time zone offset must be between -12:00 and 14:00
SQL> ALTER SESSION SET TIME_ZONE='-12:01';

CT-00635, Value error: invalid time zone offset. time zone offset must be between -12:00 and 14:00
SQL> ALTER SESSION SET TIME_ZONE='+12345:00';

CT-00635, Value error: invalid time zone offset. time zone offset must be between -12:00 and 14:00
SQL> ALTER SESSION SET TIME_ZONE='+11:60';

CT-00635, Value error: invalid time zone offset. time zone offset must be between -12:00 and 14:00
SQL> ALTER SESSION SET SESSIONTIMEZONE='+08:00';

CT-00601, [1:34]Sql syntax error: missing or invalid parameter
SQL> 
SQL> ALTER SESSION SET TIME_ZONE='-12:00';

Succeed.

SQL> SELECT SESSIONTIMEZONE FROM DUAL;

SESSIONTIMEZONE
---------------
-12:00         

1 rows fetched.

SQL> 
SQL> ALTER SESSION SET TIME_ZONE='+14:00';

Succeed.

SQL> SELECT SESSIONTIMEZONE FROM DUAL;

SESSIONTIMEZONE
---------------
+14:00         

1 rows fetched.

SQL> 
SQL> ALTER SESSION SET TIME_ZONE='-9:5';

Succeed.

SQL> SELECT SESSIONTIMEZONE FROM DUAL;

SESSIONTIMEZONE
---------------
-09:05         

1 rows fetched.

SQL> 
SQL> ALTER SESSION SET TIME_ZONE='9:00';

Succeed.

SQL> SELECT SESSIONTIMEZONE FROM DUAL;

SESSIONTIMEZONE
---------------
+09:00         

1 rows fetched.

SQL> 
SQL> ALTER SESSION SET TIME_ZONE='+009:059';

Succeed.

SQL> SELECT SESSIONTIMEZONE FROM DUAL;

SESSIONTIMEZONE
---------------
+09:59         

1 rows fetched.

SQL> 
SQL> --DTS2018092509761 
SQL> select min(sysdate)-max(sysdate) date_diff, min(current_timestamp)-max(current_timestamp) timestamp_diff from all_objects a, all_objects b where rownum <= 50000;

DATE_DIFF                                TIMESTAMP_DIFF          
---------------------------------------- ------------------------
0                                        +0000000 00:00:00.000000

1 rows fetched.

SQL> 
SQL> --DTS2019013102954
SQL> select cast(to_yminterval('12-02') as varchar(200)) from dual;

CAST(TO_YMINTERVAL('12-02') AS VARCHAR(200))
--------------------------------------------
+12-02                                      

1 rows fetched.

SQL> select cast(to_dsinterval('P12DT0.332S') as varchar(200)) from dual;

CAST(TO_DSINTERVAL('P12DT0.332S') AS VARCHAR(200))
--------------------------------------------------
+12 00:00:00.332000                               

1 rows fetched.

SQL> 
SQL> --begin test tz
SQL> --time zone type length
SQL> select length(current_timestamp) as test;

TEST                
--------------------
33                  

1 rows fetched.

SQL> select length(systimestamp) as test;

TEST                
--------------------
33                  

1 rows fetched.

SQL> 
SQL> ALTER SESSION SET TIME_ZONE='+08:00';

Succeed.

SQL> SELECT SESSIONTIMEZONE FROM DUAL;

SESSIONTIMEZONE
---------------
+08:00         

1 rows fetched.

SQL> 
SQL> drop table if exists TIMETESTTABLE;

Succeed.

SQL> drop index if exists TIMETESTTABLE_INDEX on TIMETESTTABLE;

CT-00843, The table or view SYS.TIMETESTTABLE does not exist.
SQL> create table TIMETESTTABLE(id timestamp with time zone default current_timestamp, cc int default 666);

Succeed.

SQL> desc TIMETESTTABLE;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
ID                                           TIMESTAMP(6) WITH TIME ZONE         
CC                                           BINARY_INTEGER                      

SQL> 
SQL> insert into TIMETESTTABLE(id, cc) values('2018-12-21 11:41:54.335265 +06:00',22);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values('2018-12-21 11:41:54.335265 -06:00',22);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values('2018-12-21 11:41:54.335265 +08:22',23);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values('2018-12-21 11:41:54.335265 +08:00',24);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values('2018-12-21 11:41:54.335265 +00:00',25);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 17:20:23.551220 -2',71);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 17:20:23.551222 -2',72);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 17:20:23.551221 -4',73);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 17:20:23.551221 -3',74);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 19:20:23.551221 -6',75);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values (to_timestamp('2018-8-7 19:20:23.551221','YYYY-MM-DD HH24:MI:SS.FF'),66);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 19:20:23.551221 +03:00',77);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 19:20:23.551221 -3',76);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 19:20:23.551221 8',77);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-8-7 19:20:23.551221 9:3',77);

1 rows affected.

SQL> insert into TIMETESTTABLE(id, cc) values ('2018-9-7 19:20:23.698541 9:3',77);

1 rows affected.

SQL> select id from TIMETESTTABLE order by id;

ID                                      
----------------------------------------
2018-08-07 19:20:23.551221 +09:03       
2018-08-07 19:20:23.551221 +08:00       
2018-08-07 19:20:23.551221 +08:00       
2018-08-07 19:20:23.551221 +03:00       
2018-08-07 17:20:23.551220 -02:00       
2018-08-07 17:20:23.551222 -02:00       
2018-08-07 17:20:23.551221 -03:00       
2018-08-07 17:20:23.551221 -04:00       
2018-08-07 19:20:23.551221 -03:00       
2018-08-07 19:20:23.551221 -06:00       
2018-09-07 19:20:23.698541 +09:03       
2018-12-21 11:41:54.335265 +08:22       
2018-12-21 11:41:54.335265 +08:00       
2018-12-21 11:41:54.335265 +06:00       
2018-12-21 11:41:54.335265 +00:00       
2018-12-21 11:41:54.335265 -06:00       

16 rows fetched.

SQL> 
SQL> --create index on tz column
SQL> create index TIMETESTTABLE_INDEX on TIMETESTTABLE(id);

Succeed.

SQL> 
SQL> drop table if exists TIMETESTTABLE;

Succeed.

SQL> drop index if exists TIMETESTTABLE_INDEX on TIMETESTTABLE;

CT-00843, The table or view SYS.TIMETESTTABLE does not exist.
SQL> 
SQL> --right calculation
SQL> select cast('2018-12-19 21:09:52.586081' as timestamp with time zone) - cast('2018-12-19 20:09:51.586080' as  timestamp with time zone) as test;

TEST                    
------------------------
+0000000 01:00:01.000001

1 rows fetched.

SQL> select cast('2018-12-19 20:09:51.586080 +08:00' as timestamp with time zone) - cast('2018-12-19 20:09:51.586080 +05:00' as  timestamp with time zone);

CAST('2018-12-19 20:09:51.586080 +08:00' AS TIMESTAMP WITH TIME 
----------------------------------------------------------------
-0000000 03:00:00.000000                                        

1 rows fetched.

SQL> select cast('2018-12-19 20:09:51.586080 +08:00' as timestamp with time zone) - cast('2018-12-19 18:09:51.586080 +06:00' as  timestamp with time zone);

CAST('2018-12-19 20:09:51.586080 +08:00' AS TIMESTAMP WITH TIME 
----------------------------------------------------------------
+0000000 00:00:00.000000                                        

1 rows fetched.

SQL> select to_timestamp(cast(cast(cast('2018-12-12 16:38:09.454903 +06:00' as timestamp with time zone) as timestamp) as varchar(26))) - cast('2018-12-18 19:09:50.586080 +08:00' as timestamp with time zone);

TO_TIMESTAMP(CAST(CAST(CAST('2018-12-12 16:38:09.454903 +06:00' 
----------------------------------------------------------------
-0000006 02:31:41.131177                                        

1 rows fetched.

SQL> 
SQL> select cast('2018-12-12 16:38:09.454903 +06:00' as timestamp with time zone) + 1;

CAST('2018-12-12 16:38:09.454903 +06:00' AS TIMESTAMP WITH TIME 
----------------------------------------------------------------
2018-12-13 16:38:09.454903 +06:00                               

1 rows fetched.

SQL> select 3 + cast('2018-12-12 16:38:09.454903 +06:00' as timestamp with time zone) + 1;

3 + CAST('2018-12-12 16:38:09.454903 +06:00' AS TIMESTAMP WITH T
----------------------------------------------------------------
2018-12-16 16:38:09.454903 +06:00                               

1 rows fetched.

SQL> select cast('2018-12-12 16:38:09.454903 +06:00' as timestamp with time zone) - 5;

CAST('2018-12-12 16:38:09.454903 +06:00' AS TIMESTAMP WITH TIME 
----------------------------------------------------------------
2018-12-07 16:38:09.454903 +06:00                               

1 rows fetched.

SQL> 
SQL> --error cases
SQL> select 5 - cast('2018-12-12 16:38:09.454903 +06:00' as timestamp with time zone);

CT-01320, [1:10]Undefined operator: BINARY_INTEGER - TIMESTAMP_TZ
SQL> select 5 * cast('2018-12-12 16:38:09.454903 +06:00' as timestamp with time zone);

CT-01320, [1:10]Undefined operator: BINARY_INTEGER * TIMESTAMP_TZ
SQL> select 5 / cast('2018-12-12 16:38:09.454903 +06:00' as timestamp with time zone);

CT-01320, [1:10]Undefined operator: BINARY_INTEGER / TIMESTAMP_TZ
SQL> --end
SQL> 
SQL> --begin test ltz
SQL> drop table if exists date_tab;

Succeed.

SQL> CREATE TABLE date_tab (tsltz_col   TIMESTAMP WITH LOCAL TIME ZONE);

Succeed.

SQL> 
SQL> INSERT INTO date_tab VALUES ('1999-12-01 10:00:00');

1 rows affected.

SQL> INSERT INTO date_tab VALUES ('1999-12-01 10:00:00.123456');

1 rows affected.

SQL> INSERT INTO date_tab VALUES (cast('2018-12-19 9:38:09.454903' as timestamp with local time zone));

1 rows affected.

SQL> 
SQL> --ltz to xxx
SQL> select tsltz_col from date_tab;

TSLTZ_COL                       
--------------------------------
1999-12-01 10:00:00.000000      
1999-12-01 10:00:00.123456      
2018-12-19 09:38:09.454903      

3 rows fetched.

SQL> select cast(tsltz_col as date) from date_tab;

CAST(TSLTZ_COL AS DATE)
-----------------------
1999-12                
1999-12                
2018-12                

3 rows fetched.

SQL> select cast(tsltz_col as timestamp) from date_tab;

CAST(TSLTZ_COL AS TIMESTAMP)    
--------------------------------
1999-12-01 10:00:00.000000      
1999-12-01 10:00:00.123456      
2018-12-19 09:38:09.454903      

3 rows fetched.

SQL> select cast(tsltz_col as timestamp with time zone) from date_tab;

CAST(TSLTZ_COL AS TIMESTAMP WITH TIME ZONE)
-------------------------------------------
1999-12-01 10:00:00.000000 +08:00          
1999-12-01 10:00:00.123456 +08:00          
2018-12-19 09:38:09.454903 +08:00          

3 rows fetched.

SQL> select cast(tsltz_col as timestamp with local time zone) from date_tab;

CAST(TSLTZ_COL AS TIMESTAMP WITH LOCAL TIME ZONE)
-------------------------------------------------
1999-12-01 10:00:00.000000                       
1999-12-01 10:00:00.123456                       
2018-12-19 09:38:09.454903                       

3 rows fetched.

SQL> 
SQL> alter session set NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';

Succeed.

SQL> alter session set NLS_TIMESTAMP_FORMAT = 'YYYY-MM-DD HH24:MI:SS.FF';

Succeed.

SQL> alter session set NLS_TIMESTAMP_TZ_FORMAT = 'YYYY-MM-DD HH24:MI:SS.FF TZH:TZM';

Succeed.

SQL> 
SQL> -- xxx to date
SQL> select cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp with local time zone) from dual;

CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP WITH T
----------------------------------------------------------------
2018-12-19 11:38:09.454903                                      

1 rows fetched.

SQL> select cast(cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp with local time zone) as date) from dual;

CAST(CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP W
----------------------------------------------------------------
2018-12-19 11:38:09                                             

1 rows fetched.

SQL> 
SQL> select cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp) from dual;

CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP WITH T
----------------------------------------------------------------
2018-12-19 09:38:09.454903                                      

1 rows fetched.

SQL> select cast(cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp) as date) from dual;

CAST(CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP W
----------------------------------------------------------------
2018-12-19 09:38:09                                             

1 rows fetched.

SQL> 
SQL> select cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as date) from dual;

CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP WITH T
----------------------------------------------------------------
2018-12-19 09:38:09                                             

1 rows fetched.

SQL> select cast(cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as date) as timestamp with time zone) from dual;

CAST(CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP W
----------------------------------------------------------------
2018-12-19 09:38:09.000000 +08:00                               

1 rows fetched.

SQL> 
SQL> -- xxx to ltz
SQL> select cast('2018-12-19 9:38:09.454903' as timestamp with local time zone) from dual;

CAST('2018-12-19 9:38:09.454903' AS TIMESTAMP WITH LOCAL TIME ZO
----------------------------------------------------------------
2018-12-19 09:38:09.454903                                      

1 rows fetched.

SQL> select cast('2018-12-19 9:38:09.454903' as timestamp with time zone) from dual;

CAST('2018-12-19 9:38:09.454903' AS TIMESTAMP WITH TIME ZONE)
-------------------------------------------------------------
2018-12-19 09:38:09.454903 +08:00                            

1 rows fetched.

SQL> select cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) from dual;

CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP WITH TIME Z
----------------------------------------------------------------
2018-12-19 09:38:09.454903 +06:00                               

1 rows fetched.

SQL> select cast(cast('2018-12-19 9:38:09.454903' as timestamp with local time zone) as timestamp with local time zone) from dual;

CAST(CAST('2018-12-19 9:38:09.454903' AS TIMESTAMP WITH LOCAL TI
----------------------------------------------------------------
2018-12-19 09:38:09.454903                                      

1 rows fetched.

SQL> 
SQL> select cast(cast('2018-12-19 9:38:09' as date) as timestamp with local time zone) from dual;

CAST(CAST('2018-12-19 9:38:09' AS DATE) AS TIMESTAMP WITH LOCAL 
----------------------------------------------------------------
2018-12-19 09:38:09.000000                                      

1 rows fetched.

SQL> select cast(cast('2018-12-19 9:38:09.454903' as timestamp) as timestamp with local time zone) from dual;

CAST(CAST('2018-12-19 9:38:09.454903' AS TIMESTAMP) AS TIMESTAMP
----------------------------------------------------------------
2018-12-19 09:38:09.454903                                      

1 rows fetched.

SQL> select cast(cast('2018-12-19 9:38:09.454903' as timestamp with time zone) as timestamp with local time zone) from dual;

CAST(CAST('2018-12-19 9:38:09.454903' AS TIMESTAMP WITH TIME ZON
----------------------------------------------------------------
2018-12-19 09:38:09.454903                                      

1 rows fetched.

SQL> 
SQL> select cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp with local time zone) from dual;

CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP WITH T
----------------------------------------------------------------
2018-12-19 11:38:09.454903                                      

1 rows fetched.

SQL> 
SQL> -- xxx to ts
SQL> select cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp) from dual;

CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP WITH T
----------------------------------------------------------------
2018-12-19 09:38:09.454903                                      

1 rows fetched.

SQL> select cast(cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp) as timestamp with time zone) from dual;

CAST(CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP W
----------------------------------------------------------------
2018-12-19 09:38:09.454903 +08:00                               

1 rows fetched.

SQL> select cast(cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp with local time zone) as timestamp with time zone) from dual;

CAST(CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP W
----------------------------------------------------------------
2018-12-19 11:38:09.454903 +08:00                               

1 rows fetched.

SQL> select cast(cast(cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp) as timestamp with local time zone) as timestamp with time zone) from dual;

CAST(CAST(CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMEST
----------------------------------------------------------------
2018-12-19 09:38:09.454903 +08:00                               

1 rows fetched.

SQL> select cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp) - cast(cast('2018-12-19 9:38:09.454903 +06:00' as timestamp with time zone) as timestamp with local time zone) from dual;

CAST(CAST('2018-12-19 9:38:09.454903 +06:00' AS TIMESTAMP WITH T
----------------------------------------------------------------
-0000000 02:00:00.000000                                        

1 rows fetched.

SQL> 
SQL> select cast('2019-03-31 11:26:53.2088 +08:34' as timestamp(4) with time zone);

CAST('2019-03-31 11:26:53.2088 +08:34' AS TIMESTAMP(4) WITH TIME
----------------------------------------------------------------
2019-03-31 11:26:53.2088 +08:34                                 

1 rows fetched.

SQL> select cast('2019-03-31 11:26:53.2088              +06:00' as timestamp(4) with time zone);

CAST('2019-03-31 11:26:53.2088              +06:00' AS TIMESTAMP
----------------------------------------------------------------
2019-03-31 11:26:53.2088 +06:00                                 

1 rows fetched.

SQL> select cast('2019-03-31 11:26:53.2088 +01:00' as timestamp with time zone) from dual;

CAST('2019-03-31 11:26:53.2088 +01:00' AS TIMESTAMP WITH TIME ZO
----------------------------------------------------------------
2019-03-31 11:26:53.208800 +01:00                               

1 rows fetched.

SQL> select cast('2019-04-15 23:05:45.844402 8:20' as timestamp(4) with time zone);

CAST('2019-04-15 23:05:45.844402 8:20' AS TIMESTAMP(4) WITH TIME
----------------------------------------------------------------
2019-04-15 23:05:45.8444 +08:20                                 

1 rows fetched.

SQL> select cast('2019-03-31 11:26:53.2088 -8:00' as timestamp(2) with time zone);

CAST('2019-03-31 11:26:53.2088 -8:00' AS TIMESTAMP(2) WITH TIME 
----------------------------------------------------------------
2019-03-31 11:26:53.21 -08:00                                   

1 rows fetched.

SQL> select cast('2019-03-31 11:26:53.20 +08:00' as timestamp with time zone) from dual;

CAST('2019-03-31 11:26:53.20 +08:00' AS TIMESTAMP WITH TIME ZONE
----------------------------------------------------------------
2019-03-31 11:26:53.200000 +08:00                               

1 rows fetched.

SQL> select cast('2019-04-15 23:05:45.844402 +08:50' as timestamp(3) with time zone);

CAST('2019-04-15 23:05:45.844402 +08:50' AS TIMESTAMP(3) WITH TI
----------------------------------------------------------------
2019-04-15 23:05:45.844 +08:50                                  

1 rows fetched.

SQL> select cast(cast('2019-04-15 23:05:45.844402 -1:00' as timestamp(3) with time zone) as timestamp(4) with time zone);

CAST(CAST('2019-04-15 23:05:45.844402 -1:00' AS TIMESTAMP(3) WIT
----------------------------------------------------------------
2019-04-15 23:05:45.8440 -01:00                                 

1 rows fetched.

SQL> 
SQL> drop procedure if exists tstz_type_test
  2 /

Succeed.

SQL> create or replace procedure tstz_type_test()
  2 as
  3     sqlstr  varchar2(200);
  4 begin
  5     sqlstr:='drop table if exists tstz_type_test_tbl';
  6     execute immediate sqlstr;
  7 	
  8     sqlstr:='create table tstz_type_test_tbl(c1 timestamp with time zone , c2 int)';
  9     execute immediate sqlstr;
 10 end;
 11 /

Succeed.

SQL> 
SQL> call tstz_type_test()
  2 /

PL/SQL procedure successfully completed.

SQL> 
SQL> DECLARE
  2 BEGIN
  3 	INSERT INTO tstz_type_test_tbl VALUES('2018-08-07 19:20:23.551221 +03:00',32);
  4 	INSERT INTO tstz_type_test_tbl VALUES('2018-08-08 19:20:23.551221 +04:00',32);
  5 	INSERT INTO tstz_type_test_tbl VALUES('2018-08-09 19:20:23.551221 +05:00',32);
  6 END;
  7 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select cast(c1 as timestamp(4) with time zone) from tstz_type_test_tbl;

CAST(C1 AS TIMESTAMP(4) WITH TIME ZONE) 
----------------------------------------
2018-08-07 19:20:23.5512 +03:00         
2018-08-08 19:20:23.5512 +04:00         
2018-08-09 19:20:23.5512 +05:00         

3 rows fetched.

SQL> drop table tstz_type_test_tbl;

Succeed.

SQL> 
SQL> select cast('0001-01-01 00:00:00.000000 +14:00' as timestamp with time zone) from dual;

CAST('0001-01-01 00:00:00.000000 +14:00' AS TIMESTAMP WITH TIME 
----------------------------------------------------------------
0001-01-01 00:00:00.000000 +14:00                               

1 rows fetched.

SQL> select cast('9999-12-31 23:59:59.999999 -12:00' as timestamp with time zone) from dual;

CAST('9999-12-31 23:59:59.999999 -12:00' AS TIMESTAMP WITH TIME 
----------------------------------------------------------------
9999-12-31 23:59:59.999999 -12:00                               

1 rows fetched.

SQL> select cast('2018-12-19 9:38:09.4549 +4:34' as timestamp with  time zone);

CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP WITH  TIME ZON
----------------------------------------------------------------
2018-12-19 09:38:09.454900 +04:34                               

1 rows fetched.

SQL> select to_char(cast('2018-12-19 9:38:09.4549 +4:34' as timestamp with time zone), 'YYYY')   from dual;

TO_CHAR(CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP WITH T
----------------------------------------------------------------
2018                                                            

1 rows fetched.

SQL> select to_char(cast('2018-12-19 9:38:09.4549 +4:34' as timestamp with time zone), 'MM')   from dual;

TO_CHAR(CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP WITH T
----------------------------------------------------------------
12                                                              

1 rows fetched.

SQL> select to_char(cast('2018-12-19 9:38:09.4549 +4:34' as timestamp with time zone), 'DD')   from dual;

TO_CHAR(CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP WITH T
----------------------------------------------------------------
19                                                              

1 rows fetched.

SQL> select to_char(cast('2018-12-19 9:38:09.4549 +4:34' as timestamp with time zone), 'HH24')   from dual;

TO_CHAR(CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP WITH T
----------------------------------------------------------------
09                                                              

1 rows fetched.

SQL> select to_char(cast('2018-12-19 9:38:09.4549 +4:34' as timestamp with time zone), 'FF')   from dual;

TO_CHAR(CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP WITH T
----------------------------------------------------------------
454900                                                          

1 rows fetched.

SQL> select to_char(cast('2018-12-19 9:38:09.4549 +4:34' as timestamp with time zone), 'FF4' )   from dual;

TO_CHAR(CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP WITH T
----------------------------------------------------------------
4549                                                            

1 rows fetched.

SQL> select to_char(cast('2018-12-19 9:38:09.4549 +4:34' as timestamp(3) with time zone), 'FF4' )   from dual;

TO_CHAR(CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP(3) WIT
----------------------------------------------------------------
4550                                                            

1 rows fetched.

SQL> select to_char(cast('2018-12-19 9:38:09.4549 +4:34' as timestamp with time zone), 'TZH:TZM')   from dual;

TO_CHAR(CAST('2018-12-19 9:38:09.4549 +4:34' AS TIMESTAMP WITH T
----------------------------------------------------------------
+04:34                                                          

1 rows fetched.

SQL> 
SQL> --executed twice, the result should be the same
SQL> SELECT TIMESTAMPADD(SECOND,1000000000,'2008-02-28 23:59:00');

TIMESTAMPADD(SECOND,1000000000,'2008-02-28 23:59:00')
-----------------------------------------------------
2039-11-07 01:45:40.000000                           

1 rows fetched.

SQL> SELECT TIMESTAMPADD(SECOND,1000000000,'2008-02-28 23:59:00');

TIMESTAMPADD(SECOND,1000000000,'2008-02-28 23:59:00')
-----------------------------------------------------
2039-11-07 01:45:40.000000                           

1 rows fetched.

SQL> 
SQL> --to_char
SQL> drop table if exists tstz_type_test_tbl;

Succeed.

SQL> create table tstz_type_test_tbl(a int, b timestamp with local time zone default localtimestamp);

Succeed.

SQL> insert into tstz_type_test_tbl values(1,'2019-04-24 14:36:25.046731');

1 rows affected.

SQL> insert into tstz_type_test_tbl values(2,'2019-04-24 14:36:25.048023');

1 rows affected.

SQL> insert into tstz_type_test_tbl values(3,'2019-04-24 14:36:25.048802');

1 rows affected.

SQL> 
SQL> select to_char(b) from tstz_type_test_tbl;

TO_CHAR(B)                                      
------------------------------------------------
2019-04-24 14:36:25.046731                      
2019-04-24 14:36:25.048023                      
2019-04-24 14:36:25.048802                      

3 rows fetched.

SQL> select cast(to_char(b) as timestamp with local time zone) from tstz_type_test_tbl;

CAST(TO_CHAR(B) AS TIMESTAMP WITH LOCAL TIME ZONE)
--------------------------------------------------
2019-04-24 14:36:25.046731                        
2019-04-24 14:36:25.048023                        
2019-04-24 14:36:25.048802                        

3 rows fetched.

SQL> select to_char(cast(to_char(b) as timestamp with local time zone)) from tstz_type_test_tbl;

TO_CHAR(CAST(TO_CHAR(B) AS TIMESTAMP WITH LOCAL TIME ZONE))
-----------------------------------------------------------
2019-04-24 14:36:25.046731                                 
2019-04-24 14:36:25.048023                                 
2019-04-24 14:36:25.048802                                 

3 rows fetched.

SQL> select cast(to_char(cast(to_char(b) as timestamp with local time zone)) as timestamp with local time zone) from tstz_type_test_tbl;

CAST(TO_CHAR(CAST(TO_CHAR(B) AS TIMESTAMP WITH LOCAL TIME ZONE))
----------------------------------------------------------------
2019-04-24 14:36:25.046731                                      
2019-04-24 14:36:25.048023                                      
2019-04-24 14:36:25.048802                                      

3 rows fetched.

SQL> select to_char(cast(to_char(cast(to_char(b) as timestamp with local time zone)) as timestamp with local time zone)) from tstz_type_test_tbl;

TO_CHAR(CAST(TO_CHAR(CAST(TO_CHAR(B) AS TIMESTAMP WITH LOCAL TIM
----------------------------------------------------------------
2019-04-24 14:36:25.046731                                      
2019-04-24 14:36:25.048023                                      
2019-04-24 14:36:25.048802                                      

3 rows fetched.

SQL> select cast(to_char(cast(to_char(cast(to_char(b) as timestamp with local time zone)) as timestamp with local time zone)) as timestamp with local time zone) from tstz_type_test_tbl;

CAST(TO_CHAR(CAST(TO_CHAR(CAST(TO_CHAR(B) AS TIMESTAMP WITH LOCA
----------------------------------------------------------------
2019-04-24 14:36:25.046731                                      
2019-04-24 14:36:25.048023                                      
2019-04-24 14:36:25.048802                                      

3 rows fetched.

SQL> select to_char(cast(to_char(cast(to_char(cast(to_char(b) as timestamp with local time zone)) as timestamp with local time zone)) as timestamp with local time zone)) from tstz_type_test_tbl;

TO_CHAR(CAST(TO_CHAR(CAST(TO_CHAR(CAST(TO_CHAR(B) AS TIMESTAMP W
----------------------------------------------------------------
2019-04-24 14:36:25.046731                                      
2019-04-24 14:36:25.048023                                      
2019-04-24 14:36:25.048802                                      

3 rows fetched.

SQL> select to_char(b, 'HH24') from tstz_type_test_tbl;

TO_CHAR(B, 'HH24')                              
------------------------------------------------
14                                              
14                                              
14                                              

3 rows fetched.

SQL> 
SQL> --ltz cmp
SQL> drop table if exists tstz_type_test_tbl;

Succeed.

SQL> create table tstz_type_test_tbl(c_zone timestamp with local time zone);

Succeed.

SQL> insert into tstz_type_test_tbl values(to_timestamp('2010-08-01 00:00:00.000000','YYYY-MM-DD HH24:MI:SS.FF'));

1 rows affected.

SQL> select * from tstz_type_test_tbl where c_zone='2010-08-01 00:00:00.000000';

C_ZONE                          
--------------------------------
2010-08-01 00:00:00.000000      

1 rows fetched.

SQL> select * from tstz_type_test_tbl where c_zone=cast(to_timestamp('2010-08-01 00:00:00.000000','YYYY-MM-DD HH24:MI:SS.FF') as timestamp with local time zone);

C_ZONE                          
--------------------------------
2010-08-01 00:00:00.000000      

1 rows fetched.

SQL> 
SQL> drop table if exists tstz_type_test_tbl;

Succeed.

SQL> create table tstz_type_test_tbl(c1 timestamp with time zone,c2 timestamp with local time zone);

Succeed.

SQL> insert into tstz_type_test_tbl values(to_date('2019-01-01','YYYY-MM-DD HH24:MI:SS'),to_date('2019-01-01','YYYY-MM-DD HH24:MI:SS'));

1 rows affected.

SQL> select * from tstz_type_test_tbl where c1=c2;

C1                                       C2                              
---------------------------------------- --------------------------------
2019-01-01 00:00:00.000000 +08:00        2019-01-01 00:00:00.000000      

1 rows fetched.

SQL> drop table if exists tstz_type_test_tbl;

Succeed.

SQL> 
SQL> --default sessiontimezone
SQL> ALTER SESSION SET TIME_ZONE='+02:00';

Succeed.

SQL> select cast('2019-04-24 14:36:25.046731' as timestamp with time zone) from dual;

CAST('2019-04-24 14:36:25.046731' AS TIMESTAMP WITH TIME ZONE)
--------------------------------------------------------------
2019-04-24 14:36:25.046731 +02:00                             

1 rows fetched.

SQL> ALTER SESSION SET TIME_ZONE='+05:00';

Succeed.

SQL> select cast('2019-04-24 14:36:25.046731' as timestamp with time zone) from dual;

CAST('2019-04-24 14:36:25.046731' AS TIMESTAMP WITH TIME ZONE)
--------------------------------------------------------------
2019-04-24 14:36:25.046731 +05:00                             

1 rows fetched.

SQL> ALTER SESSION SET TIME_ZONE='+08:00';

Succeed.

SQL> select cast('2019-04-24 14:36:25.046731' as timestamp with time zone) from dual;

CAST('2019-04-24 14:36:25.046731' AS TIMESTAMP WITH TIME ZONE)
--------------------------------------------------------------
2019-04-24 14:36:25.046731 +08:00                             

1 rows fetched.

SQL> 
SQL> --var as string
SQL> select cast(cast('2019-04-24 14:36:25.046731' as timestamp with local time zone) as varchar(100)) from dual;

CAST(CAST('2019-04-24 14:36:25.046731' AS TIMESTAMP WITH LOCAL T
----------------------------------------------------------------
2019-04-24 14:36:25.046731                                      

1 rows fetched.

SQL> 
SQL> --tz order
SQL> drop table if exists tz_test_tbl;

Succeed.

SQL> create table tz_test_tbl(staff_id timestamp with time zone , b int);

Succeed.

SQL> insert into tz_test_tbl values('2019-04-28 16:17:03.853738 +00:00', 1);

1 rows affected.

SQL> insert into tz_test_tbl values('2019-04-28 16:16:55.836670 +00:00', 3);

1 rows affected.

SQL> insert into tz_test_tbl values('2019-04-28 16:16:58.844263 +00:00', 2);

1 rows affected.

SQL> insert into tz_test_tbl values('2019-04-28 16:16:55.801212 +00:00', 4);

1 rows affected.

SQL> select * from tz_test_tbl order by b,staff_id;

STAFF_ID                                 B           
---------------------------------------- ------------
2019-04-28 16:17:03.853738 +00:00        1           
2019-04-28 16:16:58.844263 +00:00        2           
2019-04-28 16:16:55.836670 +00:00        3           
2019-04-28 16:16:55.801212 +00:00        4           

4 rows fetched.

SQL> select * from tz_test_tbl order by staff_id,b;

STAFF_ID                                 B           
---------------------------------------- ------------
2019-04-28 16:16:55.801212 +00:00        4           
2019-04-28 16:16:55.836670 +00:00        3           
2019-04-28 16:16:58.844263 +00:00        2           
2019-04-28 16:17:03.853738 +00:00        1           

4 rows fetched.

SQL> drop table if exists tz_test_tbl;

Succeed.

SQL> 
SQL> --trunc return date when input type is datetimetype
SQL> select trunc(to_date('2010-08-01 07:00:00')) from dual;

TRUNC(TO_DATE('2010-08-01 07:00:00'))
-------------------------------------
2010-08-01 00:00:00                  

1 rows fetched.

SQL> select trunc(to_timestamp('2010-08-01 07:00:00.000000')) from dual;

TRUNC(TO_TIMESTAMP('2010-08-01 07:00:00.000000'))
-------------------------------------------------
2010-08-01 00:00:00                              

1 rows fetched.

SQL> select trunc(cast('2010-08-01 07:00:00.000000' as timestamp with time zone)) from dual;

TRUNC(CAST('2010-08-01 07:00:00.000000' AS TIMESTAMP WITH TIME Z
----------------------------------------------------------------
2010-08-01 00:00:00                                             

1 rows fetched.

SQL> select trunc(cast('2010-08-01 07:00:00.000000 +04:00' as timestamp with time zone)) from dual;

TRUNC(CAST('2010-08-01 07:00:00.000000 +04:00' AS TIMESTAMP WITH
----------------------------------------------------------------
2010-08-01 00:00:00                                             

1 rows fetched.

SQL> 
SQL> alter session set time_zone= '+01:00';

Succeed.

SQL> select trunc(cast('2010-09-01 07:00:00.000000 +04:00' as timestamp with time zone),'yy') from dual;

TRUNC(CAST('2010-09-01 07:00:00.000000 +04:00' AS TIMESTAMP WITH
----------------------------------------------------------------
2010-01-01 00:00:00                                             

1 rows fetched.

SQL> select trunc(cast('2010-09-01 07:00:00.000000 +04:00' as timestamp with time zone),'MM') from dual;

TRUNC(CAST('2010-09-01 07:00:00.000000 +04:00' AS TIMESTAMP WITH
----------------------------------------------------------------
2010-09-01 00:00:00                                             

1 rows fetched.

SQL> select trunc(cast('2010-09-01 07:00:00.000000 +04:00' as timestamp with time zone),'DD') from dual;

TRUNC(CAST('2010-09-01 07:00:00.000000 +04:00' AS TIMESTAMP WITH
----------------------------------------------------------------
2010-09-01 00:00:00                                             

1 rows fetched.

SQL> 
SQL> alter session set time_zone= '+08:00';

Succeed.

SQL> select trunc(cast('2010-10-01 07:00:00.000000 +04:00' as timestamp with time zone),'yy') from dual;

TRUNC(CAST('2010-10-01 07:00:00.000000 +04:00' AS TIMESTAMP WITH
----------------------------------------------------------------
2010-01-01 00:00:00                                             

1 rows fetched.

SQL> select trunc(cast('2010-10-01 07:00:00.000000 +04:00' as timestamp with time zone),'MM') from dual;

TRUNC(CAST('2010-10-01 07:00:00.000000 +04:00' AS TIMESTAMP WITH
----------------------------------------------------------------
2010-10-01 00:00:00                                             

1 rows fetched.

SQL> select trunc(cast('2010-10-01 07:00:00.000000 +04:00' as timestamp with time zone),'DD') from dual;

TRUNC(CAST('2010-10-01 07:00:00.000000 +04:00' AS TIMESTAMP WITH
----------------------------------------------------------------
2010-10-01 00:00:00                                             

1 rows fetched.

SQL> 
SQL> desc -q select trunc(cast('2010-10-01 07:00:00.000000 +04:00' as timestamp with time zone),'DD') a from dual;

Name                                Null?    Type                                
----------------------------------- -------- ------------------------------------
A                                            DATE                                

SQL> 
SQL> --union tz
SQL> select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual union select cast('0001-01-01 01:01:01.123456 +12:00' as timestamp with time zone) from dual;

CAST('0001-01-01 01:01:01.123456 +12:00' AS TIMESTAMP WITH TIME 
----------------------------------------------------------------
0001-01-01 01:01:01.123456 +12:00                               

1 rows fetched.

SQL> 
SQL> set serveroutput on;

ON
SQL> CREATE OR REPLACE PROCEDURE plsql_Zenith_Test_current_timestamp()
  2 IS
  3     c1 number;
  4     c2 number;
  5     c3 number;
  6     sqlstr varchar2(200);
  7 begin
  8     sqlstr := 'alter session set time_zone=' || '''' || '+08:00' || '''';
  9     execute immediate sqlstr;
 10     sqlstr := 'select cast(to_char(current_timestamp(),' || '''' || 'HH24' || '''' ||') as number) from dual';
 11     execute immediate sqlstr into c1;
 12
 13     sqlstr := 'alter session set time_zone=' || '''' || '+09:00' || '''';
 14     execute immediate sqlstr;
 15     sqlstr := 'select cast(to_char(current_timestamp(),' || '''' || 'HH24' || '''' ||') as number) from dual';
 16     execute immediate sqlstr into c2;
 17
 18     sqlstr := 'alter session set time_zone=' || '''' || '+10:00' || '''';
 19     execute immediate sqlstr;
 20     sqlstr := 'select cast(to_char(current_timestamp(),' || '''' || 'HH24' || '''' ||') as number) from dual';
 21     execute immediate sqlstr into c3;
 22
 23     IF c3 < c1 THEN
 24         c3 := c3 + 24;
 25     END IF;
 26
 27     IF c2 < c1 THEN
 28         c2 := c2 + 24;
 29     END IF;
 30
 31     IF (c3-c2)>=1 THEN
 32         dbe_output.print_line (TO_CHAR('ok!'));
 33     ELSE
 34         dbe_output.print_line (TO_CHAR('error!'));
 35     END IF;
 36
 37     IF (c3-c2)<=2 THEN
 38         dbe_output.print_line (TO_CHAR('ok!'));
 39     ELSE
 40         dbe_output.print_line (TO_CHAR('error!'));
 41     END IF;
 42
 43     IF (c2-c1)>=1 THEN
 44         dbe_output.print_line (TO_CHAR('ok!'));
 45     ELSE
 46         dbe_output.print_line (TO_CHAR('error!'));
 47     END IF;
 48 
 49     IF (c2-c1)<=2 THEN
 50         dbe_output.print_line (TO_CHAR('ok!'));
 51     ELSE
 52         dbe_output.print_line (TO_CHAR('error!'));
 53     END IF;
 54
 55 end;
 56 /

Succeed.

SQL>
SQL> call plsql_Zenith_Test_current_timestamp()
  2 /

ok!
ok!
ok!
ok!

PL/SQL procedure successfully completed.

SQL>
SQL> alter session set time_zone='+08:00';

Succeed.

SQL> set serveroutput off;

OFF
SQL> drop PROCEDURE plsql_Zenith_Test_current_timestamp;

Succeed.

SQL> 
SQL> --DTS2019070309413
SQL> drop table if exists test_int_add_timeltz;

Succeed.

SQL> CREATE TABLE test_int_add_timeltz 
  2 (
  3   "COL_INT_UNSIGNED" NUMBER(38) NOT NULL,
  4   "COL_TIMESTAMP4" TIMESTAMP(6) WITH LOCAL TIME ZONE
  5 );

Succeed.

SQL> INSERT INTO test_int_add_timeltz ("COL_INT_UNSIGNED","COL_TIMESTAMP4") values (1,'2008-08-01 00:00:00.000000');

1 rows affected.

SQL> select col_int_unsigned+col_timestamp4,col_timestamp4  from test_int_add_timeltz;

COL_INT_UNSIGNED+COL_TIMESTAMP4  COL_TIMESTAMP4                  
-------------------------------- --------------------------------
2008-08-02 00:00:00.000000       2008-08-01 00:00:00.000000      

1 rows fetched.

SQL> drop table test_int_add_timeltz;

Succeed.

SQL> 
SQL> --DTS2019072400696
SQL> drop table if exists t_DTS2019072400696_tab;

Succeed.

SQL> drop sequence if exists t_DTS2019072400696_seq;

Succeed.

SQL> create table t_DTS2019072400696_tab(se int, t bigint);

Succeed.

SQL> create sequence t_DTS2019072400696_seq;

Succeed.

SQL> begin
  2 for i in 1..10000 loop
  3 insert into t_DTS2019072400696_tab values(t_DTS2019072400696_seq.nextval, cast(UNIX_TIMESTAMP() || to_char(current_timestamp(),'ff3') as number));
  4 end loop;
  5 end;
  6 /

PL/SQL procedure successfully completed.

SQL> 
SQL> select * from t_DTS2019072400696_tab a, t_DTS2019072400696_tab b where a.se = b.se-1 and a.t > b.t;

SE           T                    SE           T                   
------------ -------------------- ------------ --------------------

0 rows fetched.

SQL> drop table t_DTS2019072400696_tab;

Succeed.

SQL> drop sequence t_DTS2019072400696_seq;
Succeed.
SQL> --localtimestamp Bracket
SQL> select current_timestamp()-localtimestamp() time from dual;

TIME
------------------------
+0000000 00:00:00.000000

1 rows fetched.

SQL> --FROM_TZ
SQL> --range
SQL> select FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', '21:00') from dual;

CT-00635, [1:8]Value error: invalid time zone offset. time zone offset must be between -12:00 and 14:00
SQL> select FROM_TZ(TIMESTAMP '0000-00-00 02:00:00', '9:00') from dual;

FROM_TZ(TIMESTAMP '0000-00-00 02:00:00', '9:00')
------------------------------------------------
0001-01-01 00:00:00.000000 +09:00               

1 rows fetched.

SQL> select FROM_TZ(TIMESTAMP '2019-02-29 02:00:00', '9:00') from dual;

FROM_TZ(TIMESTAMP '2019-02-29 02:00:00', '9:00')
------------------------------------------------
2019-02-01 00:00:00.000000 +09:00               

1 rows fetched.

SQL> select FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', '-12:00') from dual;

FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', '-12:00')
--------------------------------------------------
2019-07-13 02:00:00.000000 -12:00                 

1 rows fetched.

SQL> --format
SQL> select FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', '9') from dual;

CT-00635, [1:8]Value error: string does not match the timezone offset format
SQL> select FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', '9:00') from dual;

FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', '9:00')
------------------------------------------------
2019-07-13 02:00:00.000000 +09:00               

1 rows fetched.

SQL> select FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', '9:00:00') from dual; 

CT-00635, [1:8]Value error: string does not match the timezone offset format
SQL> select FROM_TZ(TIMESTAMP '2019-07-13 02:00', '9:00') from dual;

FROM_TZ(TIMESTAMP '2019-07-13 02:00', '9:00')
---------------------------------------------
2019-07-13 02:00:00.000000 +09:00            

1 rows fetched.

SQL> select FROM_TZ(TIMESTAMP '2019-07-13 2', '9:00') from dual;

FROM_TZ(TIMESTAMP '2019-07-13 2', '9:00')
-----------------------------------------
2019-07-01 00:00:00.000000 +09:00        

1 rows fetched.

SQL> --parameter 
SQL> select FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', 9) from dual;

CT-00606, [1:8]Inconsistent datatypes, expected CHAR - got BINARY_INTEGER
SQL> select FROM_TZ('2019-07-13' '02:00:00', '9:00') from dual;

CT-00601, [1:29]Sql syntax error: ',' expected but '02:00:00' found
SQL> select FROM_TZ(DATE '2019-07-13 02:00:00', '9:00') from dual;

CT-00105, Invalid format of datetime
SQL> select FROM_TZ(DATE '2019-07-13', '9:00') from dual;

CT-00606, [1:8]Inconsistent datatypes, expected TIMESTAMP - got DATE
SQL> select FROM_TZ(current_timestamp, '9:00') from dual;

CT-00606, [1:8]Inconsistent datatypes, expected TIMESTAMP - got TIMESTAMP_TZ
SQL> select FROM_TZ(to_timestamp('2019-07-13'), '9:00') from dual;

FROM_TZ(TO_TIMESTAMP('2019-07-13'), '9:00')
-------------------------------------------
2019-07-13 00:00:00.000000 +09:00          

1 rows fetched.

SQL> select from_tz(sysdate, '09:00') from dual;

CT-00606, [1:8]Inconsistent datatypes, expected TIMESTAMP - got DATE
SQL> select from_tz(null, '09:00') from dual;

CT-00606, [1:8]Inconsistent datatypes, expected TIMESTAMP - got VARCHAR
SQL> select FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', null) from dual;

FROM_TZ(TIMESTAMP '2019-07-13 02:00:00', NULL)
----------------------------------------------
                                              

1 rows fetched.

SQL> drop table if exists fromtzt1;

Succeed.

SQL> create table fromtzt1 (a clob);

Succeed.

SQL> insert into fromtzt1 values('hujkl7jtyhpj0909');

1 rows affected.

SQL> select from_tz(timestamp'1999-9-8 9:00:00', a) from fromtzt1;

CT-00606, [1:8]Inconsistent datatypes, expected CHAR - got CLOB
SQL> select from_tz(a,'9:00') from fromtzt1;

CT-00606, [1:8]Inconsistent datatypes, expected TIMESTAMP - got CLOB
SQL> --NEXT_DAY
SQL> select next_day("9999-12-31",'mon') from dual;

CT-00601, [1:17]Sql syntax error: invalid column name '9999-12-31'
SQL> 
SQL> --DTS2019090201769
SQL> create table const_to_datetime(c1 int, c2 timestamp with local time zone);

Succeed.

SQL>
SQL> declare
  2 i int;
  3 begin
  4 i := 1;
  5 Loop
  6 insert into const_to_datetime values(i,to_timestamp('2019-12-01 23:11:11.123','yyyy-mm-dd hh24:mi:ss.ff'));
  7 insert into const_to_datetime values(i,to_timestamp('2019-06-01 23:11:11.123','yyyy-mm-dd hh24:mi:ss.ff'));
  8 insert into const_to_datetime values(i,to_timestamp('2019-03-01 23:11:11.123','yyyy-mm-dd hh24:mi:ss.ff'));
  9 insert into const_to_datetime values(i,to_timestamp('2019-01-01 23:11:11.123','yyyy-mm-dd hh24:mi:ss.ff'));
 10 i := i+1;
 11 exit when i>5000;
 12 end loop;
 13 commit;
 14 end;
 15 /

PL/SQL procedure successfully completed.

SQL>
SQL> select count(*) from const_to_datetime where c2 > '2019-03-21 11:38:34.263000';

COUNT(*)
--------------------
10000

1 rows fetched.

SQL> drop table const_to_datetime;

Succeed.

SQL> 
SQL> -- case when from datetype
SQL> drop table if exists test_date;

Succeed.

SQL> create table test_date(f1 int, f2 date, f3 timestamp, f4 timestamp with time zone, f5 timestamp with local time zone);

Succeed.

SQL> insert into test_date values(1, to_date('2020-10-17 17:18:23', 'yyyy-mm-dd hh24:mi:ss'), to_timestamp('2020-10-18 12:23:34.362237', 'yyyy-mm-dd hh24:mi:ss.ff'), '2020-10-19 20:58:21.637186 +08:00', '2020-10-20 8:12:42.123456');

1 rows affected.

SQL> insert into test_date values(2, to_date('2020-10-11 17:18:23', 'yyyy-mm-dd hh24:mi:ss'), to_timestamp('2020-10-12 12:23:34.362237', 'yyyy-mm-dd hh24:mi:ss.ff'), '2020-10-13 20:58:21.637186 +08:00', '2020-10-14 8:12:42.123456');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> select case when f1 < 0 then f2 else f3 end from test_date;

CASE WHEN F1 < 0 THEN F2 ELSE F3 END
------------------------------------
2020-10-18 12:23:34.362237          
2020-10-12 12:23:34.362237          

2 rows fetched.

SQL> desc -q select case when f1 < 0 then f2 else f3 end from test_date;

Name                                    Null?    Type                                
--------------------------------------- -------- ------------------------------------
CASE WHEN F1 < 0 THEN F2 ELSE F3 END             TIMESTAMP(6)                        

SQL> 
SQL> select case when f1 < 0 then f2 else f4 end from test_date;

CASE WHEN F1 < 0 THEN F2 ELSE F4 END    
----------------------------------------
2020-10-19 20:58:21.637186 +08:00       
2020-10-13 20:58:21.637186 +08:00       

2 rows fetched.

SQL> desc -q select case when f1 < 0 then f2 else f4 end from test_date;

Name                                    Null?    Type                                
--------------------------------------- -------- ------------------------------------
CASE WHEN F1 < 0 THEN F2 ELSE F4 END             TIMESTAMP(6) WITH TIME ZONE         

SQL> 
SQL> select case when f1 < 0 then f2 else f5 end from test_date;

CASE WHEN F1 < 0 THEN F2 ELSE F5 END
------------------------------------
2020-10-20 08:12:42.123456          
2020-10-14 08:12:42.123456          

2 rows fetched.

SQL> desc -q select case when f1 < 0 then f2 else f5 end from test_date;

Name                                    Null?    Type                                
--------------------------------------- -------- ------------------------------------
CASE WHEN F1 < 0 THEN F2 ELSE F5 END             TIMESTAMP(6) WITH LOCAL TIME ZONE   

SQL> 
SQL> select case when f1 < 0 then f3 else f4 end from test_date;

CASE WHEN F1 < 0 THEN F3 ELSE F4 END    
----------------------------------------
2020-10-19 20:58:21.637186 +08:00       
2020-10-13 20:58:21.637186 +08:00       

2 rows fetched.

SQL> desc -q select case when f1 < 0 then f3 else f4 end from test_date;

Name                                    Null?    Type                                
--------------------------------------- -------- ------------------------------------
CASE WHEN F1 < 0 THEN F3 ELSE F4 END             TIMESTAMP(6) WITH TIME ZONE         

SQL> 
SQL> select case when f1 < 0 then f3 else f5 end from test_date;

CASE WHEN F1 < 0 THEN F3 ELSE F5 END
------------------------------------
2020-10-20 08:12:42.123456          
2020-10-14 08:12:42.123456          

2 rows fetched.

SQL> desc -q select case when f1 < 0 then f3 else f5 end from test_date;

Name                                    Null?    Type                                
--------------------------------------- -------- ------------------------------------
CASE WHEN F1 < 0 THEN F3 ELSE F5 END             TIMESTAMP(6) WITH LOCAL TIME ZONE   

SQL> 
SQL> select case when f1 < 0 then f4 else f5 end from test_date;

CASE WHEN F1 < 0 THEN F4 ELSE F5 END    
----------------------------------------
2020-10-20 08:12:42.123456 +08:00       
2020-10-14 08:12:42.123456 +08:00       

2 rows fetched.

SQL> desc -q select case when f1 < 0 then f4 else f5 end from test_date;

Name                                    Null?    Type                                
--------------------------------------- -------- ------------------------------------
CASE WHEN F1 < 0 THEN F4 ELSE F5 END             TIMESTAMP(6) WITH TIME ZONE         

SQL> drop table if exists test_date;

Succeed.

SQL> 
SQL> drop table if exists test_date2;

Succeed.

SQL> create table test_date2(f1 int[], f2 date[], f3 timestamp[], f4 timestamp with time zone[], f5 timestamp with local time zone[]);

Succeed.

SQL> insert into test_date2 values(array[1,2], array['2020-10-17 17:18:23', '2020-10-17 17:22:23'], array['2020-10-17 17:18:23.123456', '2020-10-17 17:22:23.123456'], array['2020-10-19 20:58:21.637186 +08:00', '2020-10-19 20:12:21.637186 +08:00'], array['2020-10-20 8:12:42.123456', '2020-10-20 18:12:42.123456']);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> select case when f1[1] < 0 then f2 else f3 end from test_date2;

CASE WHEN F1[1] < 0 THEN F2 ELSE F3 END                         
----------------------------------------------------------------
{2020-10-17 17:18:23.123456,2020-10-17 17:22:23.123456}         

1 rows fetched.

SQL> desc -q select case when f1[1] < 0 then f2 else f3 end from test_date2;

Name                                       Null?    Type                                
------------------------------------------ -------- ------------------------------------
CASE WHEN F1[1] < 0 THEN F2 ELSE F3 END             TIMESTAMP(6)[]                      

SQL> 
SQL> select case when f1[1] < 0 then f2 else f4 end from test_date2;

CASE WHEN F1[1] < 0 THEN F2 ELSE F4 END                         
----------------------------------------------------------------
{2020-10-19 20:58:21.637186 +08:00,2020-10-19 20:12:21.637186 +08:00}

1 rows fetched.

SQL> desc -q select case when f1[1] < 0 then f2 else f4 end from test_date2;

Name                                       Null?    Type                                
------------------------------------------ -------- ------------------------------------
CASE WHEN F1[1] < 0 THEN F2 ELSE F4 END             TIMESTAMP(6) WITH TIME ZONE[]       

SQL> 
SQL> select case when f1[1] < 0 then f2 else f5 end from test_date2;

CASE WHEN F1[1] < 0 THEN F2 ELSE F5 END                         
----------------------------------------------------------------
{2020-10-20 00:12:42.123456,2020-10-20 10:12:42.123456}         

1 rows fetched.

SQL> desc -q select case when f1[1] < 0 then f2 else f5 end from test_date2;

Name                                       Null?    Type                                
------------------------------------------ -------- ------------------------------------
CASE WHEN F1[1] < 0 THEN F2 ELSE F5 END             TIMESTAMP(6) WITH LOCAL TIME ZONE[] 

SQL> 
SQL> select case when f1[1] < 0 then f3 else f4 end from test_date2;

CASE WHEN F1[1] < 0 THEN F3 ELSE F4 END                         
----------------------------------------------------------------
{2020-10-19 20:58:21.637186 +08:00,2020-10-19 20:12:21.637186 +08:00}

1 rows fetched.

SQL> desc -q select case when f1[1] < 0 then f3 else f4 end from test_date2;

Name                                       Null?    Type                                
------------------------------------------ -------- ------------------------------------
CASE WHEN F1[1] < 0 THEN F3 ELSE F4 END             TIMESTAMP(6) WITH TIME ZONE[]       

SQL> 
SQL> select case when f1[1] < 0 then f3 else f5 end from test_date2;

CASE WHEN F1[1] < 0 THEN F3 ELSE F5 END                         
----------------------------------------------------------------
{2020-10-20 00:12:42.123456,2020-10-20 10:12:42.123456}         

1 rows fetched.

SQL> desc -q select case when f1[1] < 0 then f3 else f5 end from test_date2;

Name                                       Null?    Type                                
------------------------------------------ -------- ------------------------------------
CASE WHEN F1[1] < 0 THEN F3 ELSE F5 END             TIMESTAMP(6) WITH LOCAL TIME ZONE[] 

SQL> 
SQL> select case when f1[1] < 0 then f4 else f5 end from test_date2;

CASE WHEN F1[1] < 0 THEN F4 ELSE F5 END                         
----------------------------------------------------------------
{2020-10-20 08:12:42.123456 +08:00,2020-10-20 18:12:42.123456 +08:00}

1 rows fetched.

SQL> desc -q select case when f1[1] < 0 then f4 else f5 end from test_date2;

Name                                       Null?    Type                                
------------------------------------------ -------- ------------------------------------
CASE WHEN F1[1] < 0 THEN F4 ELSE F5 END             TIMESTAMP(6) WITH TIME ZONE[]       

SQL> drop table if exists test_date2;

Succeed.
