

SQL> drop table if exists ref1;

Succeed.

SQL> drop table if exists cons1;

Succeed.

SQL> create table cons1(id int, res int, val int);

Succeed.

SQL> create unique index idx2 on cons1(id);

Succeed.

SQL> create table ref1(cid int REFERENCES cons1(id), cval int); --expect error

CT-00650, The column referenced by a foreign key was not the unique or primary key of the referenced table
SQL> drop table if exists ref1;

Succeed.

SQL> drop table if exists cons1;

Succeed.

SQL> create table cons1(id int, res int, val int);

Succeed.

SQL> alter table cons1 add constraint c unique(id, res);

Succeed.

SQL> create table ref1(cid int REFERENCES cons1(id), cval int); --expect error

CT-00650, The column referenced by a foreign key was not the unique or primary key of the referenced table
SQL> drop table if exists ref1;

Succeed.

SQL> drop table if exists cons1;

Succeed.

SQL> create table cons1(id int, res int, val int);

Succeed.

SQL> alter table cons1 add constraint c unique(id);

Succeed.

SQL> create table ref1(cid int REFERENCES cons1(id), cval int); --expect right

Succeed.

SQL> drop table if exists ref1;

Succeed.

SQL> drop table if exists cons1;

Succeed.
SQL> drop table if exists t_default_check_111;

Succeed.

SQL> create table t_default_check_111(id int,c_int int,c_vchar varchar(100),c_clob clob,c_blob blob,c_date date,
  2 constraint t_default_check_111con check( c_vchar>'a' or c_vchar||c_vchar not in('abcabc') and c_vchar||c_vchar in(c_vchar||c_vchar) and abs(c_int)=length(c_vchar) and abs(c_int)=length(c_clob) and c_date in(ADD_MONTHS(TO_DATE('2016-01-29','YYYY-MM-DD'),1)) and c_date in (TO_DATE('2016-01-29','YYYY-MM-DD')+NUMTOYMINTERVAL(1, 'MONTH')) and c_int in(CAST('12' AS INT)) and c_vchar like '%abc_' and c_int between -1000 and 1000 and c_vchar is not null and c_int=any(12,12) or c_vchar>'a' or c_vchar||c_vchar not in('abcabc') and c_vchar||c_vchar in(c_vchar||c_vchar) and abs(c_int)=length(c_vchar) and abs(c_int)=length(c_clob) and c_date in(ADD_MONTHS(TO_DATE('2016-01-29','YYYY-MM-DD'),1)) and c_date in (TO_DATE('2016-01-29','YYYY-MM-DD')+NUMTOYMINTERVAL(1, 'MONTH')) and c_int in(CAST('12' AS INT)) and c_vchar like '%abc_' and c_int between -1000 and 1000 and c_vchar is not null and c_int=any(12,12) or c_vchar>'a' or c_vchar||c_vchar not in('abcabc') and c_vchar||c_vchar in(c_vchar||c_vchar) and abs(c_int)=length(c_vchar) and abs(c_int)=length(c_clob) and c_date in(ADD_MONTHS(TO_DATE('2016-01-29','YYYY-MM-DD'),1)) and c_date in (TO_DATE('2016-01-29','YYYY-MM-DD')+NUMTOYMINTERVAL(1, 'MONTH')) and c_int in(CAST('12' AS INT)) and c_vchar like '%abc_' and c_int between -1000 and 1000 and c_vchar is not null and c_int=any(12,12) or c_vchar>'a' or c_vchar||c_vchar not in('abcabc') and c_vchar||c_vchar in(c_vchar||c_vchar) and abs(c_int)=length(c_vchar) and abs(c_int)=length(c_clob) and c_date in(ADD_MONTHS(TO_DATE('2016-01-29','YYYY-MM-DD'),1)) and c_date in (TO_DATE('2016-01-29','YYYY-MM-DD')+NUMTOYMINTERVAL(1, 'MONTH')) and c_int in(CAST('12' AS INT)) and c_vchar like '%abc_' and c_int between -1000 and 1000 and c_vchar is not null and c_int=any(12,12) or c_vchar>'a' or c_vchar||c_vchar not in('abcabc') and c_vchar||c_vchar in(c_vchar||c_vchar) and abs(c_int)=length(c_vchar) and abs(c_int)=length(c_clob) and c_date in(ADD_MONTHS(TO_DATE('2016-01-29','YYYY-MM-DD'),1))));

Succeed.

SQL> insert into t_default_check_111(id,c_int,c_vchar,c_clob,c_date) values(1,12,'11111111abc1','111111111111',TO_DATE('2012-02-29','YYYY-MM-DD')); 

CT-01127, Check constraint violated
SQL> insert into t_default_check_111(id,c_int,c_vchar,c_clob) values(1,12,'111111111111','11111111111');

CT-01127, Check constraint violated
SQL> 
SQL> --normal test
SQL> DROP TABLE if exists training;

Succeed.

SQL> DROP TABLE if exists education;

Succeed.

SQL> CREATE TABLE education(staff_id INT primary key, first_name VARCHAR(20));

Succeed.

SQL> CREATE TABLE training(staff_id INT check(staff_id is not null), first_name VARCHAR(20));

Succeed.

SQL> alter table training add constraint trainingcon foreign key(staff_id) REFERENCES education(staff_id) on delete set null;

Succeed.

SQL> INSERT INTO education VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO education VALUES(2, 'BROWN');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> commit;

Succeed.

SQL> delete from education where staff_id=1; 

CT-01127, Check constraint violated
SQL> 
SQL> --index
SQL> DROP TABLE if exists training;

Succeed.

SQL> DROP TABLE if exists education;

Succeed.

SQL> CREATE TABLE education(staff_id INT primary key, first_name VARCHAR(20));

Succeed.

SQL> CREATE TABLE training(staff_id INT check(staff_id is not null), first_name VARCHAR(20));

Succeed.

SQL> create index training_idx on training(staff_id);

Succeed.

SQL> alter table training add constraint trainingcon foreign key(staff_id) REFERENCES education(staff_id) on delete set null;

Succeed.

SQL> INSERT INTO education VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO education VALUES(2, 'BROWN');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> commit;

Succeed.

SQL> delete from education where staff_id=1; 

CT-01127, Check constraint violated
SQL> 
SQL>  --partition 
SQL> DROP TABLE if exists training;

Succeed.

SQL> DROP TABLE if exists education;

Succeed.

SQL> CREATE TABLE education(staff_id INT primary key, first_name VARCHAR(20));

Succeed.

SQL> CREATE TABLE training(staff_id INT check(staff_id is not null), first_name VARCHAR(20)) partition by hash(staff_id)
  2 (partition part_0, partition part_1,partition part_2);

Succeed.

SQL> alter table training add constraint trainingcon foreign key(staff_id) REFERENCES education(staff_id) on delete set null;

Succeed.

SQL> INSERT INTO education VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO education VALUES(2, 'BROWN');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> commit;

Succeed.

SQL> delete from education where staff_id=1; 

CT-01127, Check constraint violated
SQL> 
SQL> --partition + global index
SQL> DROP TABLE if exists training;

Succeed.

SQL> DROP TABLE if exists education;

Succeed.

SQL> CREATE TABLE education(staff_id INT primary key, first_name VARCHAR(20));

Succeed.

SQL> CREATE TABLE training(staff_id INT check(staff_id is not null), first_name VARCHAR(20)) partition by hash(staff_id)
  2 (partition part_0, partition part_1,partition part_2);

Succeed.

SQL> create index training_idx on training(staff_id);

Succeed.

SQL> alter table training add constraint trainingcon foreign key(staff_id) REFERENCES education(staff_id) on delete set null;

Succeed.

SQL> INSERT INTO education VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO education VALUES(2, 'BROWN');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> commit;

Succeed.

SQL> delete from education where staff_id=1; 

CT-01127, Check constraint violated
SQL> 
SQL> --partition + local index
SQL> DROP TABLE if exists training;

Succeed.

SQL> DROP TABLE if exists education;

Succeed.

SQL> CREATE TABLE education(staff_id INT primary key, first_name VARCHAR(20));

Succeed.

SQL> CREATE TABLE training(staff_id INT check(staff_id is not null), first_name VARCHAR(20)) partition by hash(staff_id)
  2 (partition part_0, partition part_1,partition part_2);

Succeed.

SQL> create index training_idx on training(staff_id) local;

Succeed.

SQL> alter table training add constraint trainingcon foreign key(staff_id) REFERENCES education(staff_id) on delete set null;

Succeed.

SQL> INSERT INTO education VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO education VALUES(2, 'BROWN');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> INSERT INTO training VALUES(1, 'ALICE');

1 rows affected.

SQL> commit;

Succeed.

SQL>  delete from education where staff_id=1; 

CT-01127, Check constraint violated
SQL> 
SQL> DROP TABLE IF EXISTS T_CONDITION_1;

Succeed.

SQL> CREATE TABLE T_CONDITION_1(F_INT INT, F_CHAR CHAR(10), F_FLOAT FLOAT, F_DATE DATE);

Succeed.

SQL> INSERT INTO T_CONDITION_1 VALUES(1,'ABC',1.00,'2017-12-13 17:24:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_1 VALUES(2,'BCD',2.00,'2017-12-13 17:25:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_1 VALUES(3,'CDE',3.00,'2017-12-13 17:26:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_1 VALUES(4,'EFG',4.00,'2017-12-13 17:27:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_1 VALUES(null,'FGH',5.00,'2017-12-13 17:28:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_1 VALUES(6,'GHM',6.00,'2017-12-13 17:29:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_1 VALUES(7,'HMN',7.00,'2017-12-13 17:30:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_1 VALUES(null,null,8.00,'2017-12-13 17:30:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_1 VALUES(null,null,1.00,'2017-12-13 17:30:00');

1 rows affected.

SQL> DROP TABLE IF EXISTS T_CONDITION_2;

Succeed.

SQL> CREATE TABLE T_CONDITION_2(F_INT INT, F_CHAR CHAR(10), F_FLOAT FLOAT, F_DATE DATE);

Succeed.

SQL> INSERT INTO T_CONDITION_2 VALUES(1,'ABC',1.00,'2017-12-13 17:24:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_2 VALUES(2,'BCD',2.00,'2017-12-13 17:25:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_2 VALUES(3,null,3.00,'2017-12-13 17:26:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_2 VALUES(4,'EFG',4.00,'2017-12-13 17:27:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_2 VALUES(null,'FGH',5.00,'2017-12-13 17:28:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_2 VALUES(6,'GHM',6.00,'2017-12-13 17:29:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_2 VALUES(null,null,7.00,'2017-12-13 17:29:00');

1 rows affected.

SQL> DROP TABLE IF EXISTS T_CONDITION_3;

Succeed.

SQL> CREATE TABLE T_CONDITION_3(F_INT INT, F_CHAR CHAR(10), F_FLOAT FLOAT, F_DATE DATE);

Succeed.

SQL> INSERT INTO T_CONDITION_3 VALUES(1,'ABC',1.00,'2017-12-13 17:24:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_3 VALUES(2,'BCD',2.00,'2017-12-13 17:25:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_3 VALUES(3,null,3.00,'2017-12-13 17:26:00');

1 rows affected.

SQL> INSERT INTO T_CONDITION_3 VALUES(4,'EFG',4.00,'2017-12-13 17:27:00');

1 rows affected.

SQL> DROP TABLE IF EXISTS T_CONDITION_4;

Succeed.

SQL> CREATE TABLE T_CONDITION_4(F_INT INT, F_CHAR CHAR(10), F_FLOAT FLOAT, F_DATE DATE);

Succeed.

SQL> --TEST IS[NOT] NULL CONDITION
SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT IS NULL;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
             FGH        5                    2017-12-13 17:28:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT IS NOT NULL;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

6 rows fetched.

SQL> --TEST [NOT] IN CONDITION
SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT IN (1,2,3);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT IN (1,2,3);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT IN (1,2,3,null,4);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT IN (1,2,3,null,4);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR IN ('ABC','BCD','CDE');

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR NOT IN ('ABC','BCD','CDE');

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT IN (1.00,2.00,3.00);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
                        1                    2017-12-13 17:30:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT NOT IN (1.00,2.00,3.00);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   

5 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) IN ((1,'ABC'),(2,'BCD'),(3,'CDE'));

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) NOT IN ((1,'ABC'),(2,'BCD'),(3,'CDE'));

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) IN ((1,'ABC'),(3,null),(null,'EFG'),(6,'GHM'));

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
6            GHM        6                    2017-12-13 17:29:00   

2 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR)  NOT IN ((1,'ABC'),(3,null),(null,'BCD'),(6,'GHM'));

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   
7            HMN        7                    2017-12-13 17:30:00   

2 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) IN ((1,'ABC'),(null,'FGH'),(null,null),(6,'GHM'));

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
6            GHM        6                    2017-12-13 17:29:00   

2 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) NOT IN ((1,'ABC'),(null,'FGH'),(null,null),(6,'GHM'));

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT,F_CHAR,F_FLOAT) IN ((1,'ABC',null));

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT,F_CHAR,F_FLOAT) not IN ((1,'ABC',null));

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

6 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT IN (SELECT F_INT FROM T_CONDITION_2);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
6            GHM        6                    2017-12-13 17:29:00   

5 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT IN (SELECT F_INT FROM T_CONDITION_2);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) IN (SELECT F_INT, F_CHAR FROM T_CONDITION_2);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
4            EFG        4                    2017-12-13 17:27:00   
6            GHM        6                    2017-12-13 17:29:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) NOT IN (SELECT F_INT, F_CHAR FROM T_CONDITION_2);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR, F_FLOAT) IN (SELECT F_INT, F_CHAR, F_FLOAT FROM T_CONDITION_2);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
4            EFG        4                    2017-12-13 17:27:00   
6            GHM        6                    2017-12-13 17:29:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR, F_FLOAT) NOT IN (SELECT F_INT, F_CHAR, F_FLOAT FROM T_CONDITION_2);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
                        8                    2017-12-13 17:30:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) IN (1,'A');

CT-00601, [1:55]Sql syntax error: (...) expected but 1 found
SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) NOT IN (1,'A');

CT-00601, [1:59]Sql syntax error: (...) expected but 1 found
SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) IN (SELECT F_INT FROM T_CONDITION_2);

CT-00923, Values were not enough
SQL> SELECT * FROM T_CONDITION_1 WHERE (F_INT, F_CHAR) NOT IN (SELECT F_INT FROM T_CONDITION_2);

CT-00923, Values were not enough
SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT IN (SELECT F_INT, F_CHAR FROM T_CONDITION_2);

CT-00687, Values were too many
SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT IN (SELECT F_INT, F_CHAR FROM T_CONDITION_2);

CT-00687, Values were too many
SQL> --TEST [NOT] BETWEEN AND CONDITION
SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT BETWEEN 2 AND 6;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
6            GHM        6                    2017-12-13 17:29:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT BETWEEN 2 AND 6;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
7            HMN        7                    2017-12-13 17:30:00   

2 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT BETWEEN 6 AND 2;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT BETWEEN 6 AND 2;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

6 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT BETWEEN null AND 6;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT BETWEEN null AND 6;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
7            HMN        7                    2017-12-13 17:30:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT BETWEEN 2 AND null;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT BETWEEN 2 AND null;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT BETWEEN null AND null;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT NOT BETWEEN null AND null;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR BETWEEN 'ABC' AND 'GHM';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   

6 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR NOT BETWEEN 'ABC' AND 'GHM';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
7            HMN        7                    2017-12-13 17:30:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT BETWEEN 2.00 AND 6.00;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   

5 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT NOT BETWEEN 2.00 AND 6.00;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

4 rows fetched.

SQL> 
SQL> DROP INDEX IF EXISTS T_CONDITION_1_INDEX ON T_CONDITION_1;

Succeed.

SQL> CREATE INDEX T_CONDITION_1_INDEX ON T_CONDITION_1(F_INT);

Succeed.

SQL> SELECT COUNT(*) FROM T_CONDITION_1 WHERE F_INT = 1 and F_INT < 10;

COUNT(*)            
--------------------
1                   

1 rows fetched.

SQL> 
SQL> --TEST LIKE
SQL> create table likett1 (a int);

Succeed.

SQL> INSERT INTO LIKETT1 VALUES(66);

1 rows affected.

SQL> INSERT INTO LIKETT1 VALUES(132);

1 rows affected.

SQL> INSERT INTO LIKETT1 VALUES(5);

1 rows affected.

SQL> SELECT * FROM LIKETT1 WHERE 12563 LIKE 1%63;

A           
------------

0 rows fetched.

SQL> SELECT * FROM LIKETT1 WHERE 1%63 LIKE 12363;

A           
------------

0 rows fetched.

SQL> drop table likett1;

Succeed.

SQL> 
SQL> --TEST [NOT] EXISTS
SQL> SELECT * FROM T_CONDITION_1 WHERE EXISTS (SELECT * FROM T_CONDITION_2 WHERE F_INT <= 10);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

9 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE NOT EXISTS (SELECT * FROM T_CONDITION_2 WHERE F_INT <= 10);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE EXISTS (SELECT * FROM T_CONDITION_2 WHERE F_INT > 10);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE NOT EXISTS (SELECT * FROM T_CONDITION_2 WHERE F_INT > 10);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

9 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE EXISTS (SELECT count(*) FROM T_CONDITION_2 WHERE F_INT <= 10);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

9 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE NOT EXISTS (SELECT count(*) FROM T_CONDITION_2 WHERE F_INT <= 10);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE EXISTS (SELECT count(*) FROM T_CONDITION_2 WHERE F_INT > 10);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

9 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE NOT EXISTS (SELECT count(*) FROM T_CONDITION_2 WHERE F_INT > 10);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE EXISTS (SELECT * FROM T_CONDITION_2 T_2 JOIN T_CONDITION_3 T_3 ON T_2.F_INT=T_3.F_INT);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

9 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE NOT EXISTS (SELECT * FROM T_CONDITION_2 T_2 JOIN T_CONDITION_3 T_3 ON T_2.F_INT=T_3.F_INT);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE EXISTS (SELECT * FROM T_CONDITION_2 T_2 JOIN T_CONDITION_4 T_4 ON T_2.F_INT=T_4.F_INT);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE NOT EXISTS (SELECT * FROM T_CONDITION_2 T_2 JOIN T_CONDITION_4 T_4 ON T_2.F_INT=T_4.F_INT);

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

9 rows fetched.

SQL> 
SQL> --TEST ||
SQL> SELECT 'HELLO' || ' ' || 'WORLD' FROM DUAL;

'HELLO' || ' ' || 'WORLD'
-------------------------
HELLO WORLD              

1 rows fetched.

SQL> SELECT 'HELLO' || NULL FROM DUAL;

'HELLO' || NULL
---------------
HELLO          

1 rows fetched.

SQL> SELECT 1234 || 5678 || 'HELLO' FROM DUAL;

1234 || 5678 || 'HELLO'
-----------------------
12345678HELLO          

1 rows fetched.

SQL> SELECT 'TEST' || ' ' || F_CHAR FROM T_CONDITION_1;

'TEST' || ' ' || F_CHAR
-----------------------
TEST ABC               
TEST BCD               
TEST CDE               
TEST EFG               
TEST FGH               
TEST GHM               
TEST HMN               
TEST                   
TEST                   

9 rows fetched.

SQL> --DTS2018021400824
SQL> DROP TABLE IF EXISTS TEST_CONCAT;

Succeed.

SQL> CREATE TABLE TEST_CONCAT(F1 VARCHAR(10), F2 INT);

Succeed.

SQL> INSERT INTO TEST_CONCAT VALUES(NULL, 10000);

1 rows affected.

SQL> SELECT * FROM TEST_CONCAT WHERE ((F1 || F1) || (F1 || (((-2454461796916920320) || NULL) || '2004'))) <> NULL;

F1         F2          
---------- ------------

0 rows fetched.

SQL> DROP TABLE IF EXISTS TEST_CONCAT;

Succeed.

SQL> 
SQL> --TEST +,-,*,\
SQL> SELECT 1+1 FROM DUAL;

1+1                 
--------------------
2                   

1 rows fetched.

SQL> SELECT 1+NULL FROM DUAL;

1+NULL                                  
----------------------------------------
                                        

1 rows fetched.

SQL> SELECT 10-5 FROM DUAL;

10-5                
--------------------
5                   

1 rows fetched.

SQL> SELECT 6-8 FROM DUAL;

6-8                 
--------------------
-2                  

1 rows fetched.

SQL> SELECT 6-NULL FROM DUAL;

6-NULL                                  
----------------------------------------
                                        

1 rows fetched.

SQL> SELECT 3*4 FROM DUAL;

3*4                 
--------------------
12                  

1 rows fetched.

SQL> SELECT 0*4 FROM DUAL;

0*4                 
--------------------
0                   

1 rows fetched.

SQL> SELECT 4*NULL FROM DUAL;

4*NULL                                  
----------------------------------------
                                        

1 rows fetched.

SQL> SELECT 20/5 FROM DUAL;

20/5                
--------------------
4                   

1 rows fetched.

SQL> SELECT 6/20 FROM DUAL;

6/20                
--------------------
0.3                 

1 rows fetched.

SQL> SELECT 0/10 FROM DUAL;

0/10                
--------------------
0                   

1 rows fetched.

SQL> SELECT 10/0 FROM DUAL;

CT-00637, [1:10]The divisor was zero
SQL> SELECT NULL/8 FROM DUAL;

NULL/8                                  
----------------------------------------
                                        

1 rows fetched.

SQL> SELECT 8/NULL FROM DUAL;

8/NULL                                  
----------------------------------------
                                        

1 rows fetched.

SQL> SELECT 1+8-5*4/2 FROM DUAL;

1+8-5*4/2           
--------------------
-1                  

1 rows fetched.

SQL> SELECT (1+8-5)*4/2 FROM DUAL;

(1+8-5)*4/2         
--------------------
8                   

1 rows fetched.

SQL> SELECT 'ABCDG'+13 FROM DUAL;

CT-00636, [1:15]Invalid number -- unexpected character
SQL> SELECT 'ABCDG'-10 FROM DUAL;

CT-00636, [1:15]Invalid number -- unexpected character
SQL> SELECT 'ABCDG'*10 FROM DUAL;

CT-00636, [1:15]Invalid number -- unexpected character
SQL> SELECT 'ABCDG'/8 FROM DUAL;

CT-00636, [1:15]Invalid number -- unexpected character
SQL> --TEST & | ^
SQL> SELECT 5&3 FROM DUAL;

5&3                 
--------------------
1                   

1 rows fetched.

SQL> SELECT 5|3 FROM DUAL;

5|3                 
--------------------
7                   

1 rows fetched.

SQL> SELECT 5^3 FROM DUAL;

5^3                 
--------------------
6                   

1 rows fetched.

SQL> SELECT 3&8 FROM DUAL;

3&8                 
--------------------
0                   

1 rows fetched.

SQL> SELECT 3|8 FROM DUAL;

3|8                 
--------------------
11                  

1 rows fetched.

SQL> SELECT 3^8 FROM DUAL;

3^8                 
--------------------
11                  

1 rows fetched.

SQL> SELECT 4&NULL FROM DUAL;

4&NULL              
--------------------
                    

1 rows fetched.

SQL> SELECT 6|NULL FROM DUAL;

6|NULL              
--------------------
                    

1 rows fetched.

SQL> SELECT NULL^7 FROM DUAL;

NULL^7              
--------------------
                    

1 rows fetched.

SQL> SELECT 1+8-5*4/2&6|8^10 FROM DUAL;

1+8-5*4/2&6|8^10    
--------------------
6                   

1 rows fetched.

SQL> SELECT 5&'ABC' FROM DUAL;

CT-00636, [1:9]Invalid number -- unexpected character
SQL> SELECT 'BCD'&8 FROM DUAL;

CT-00636, [1:13]Invalid number -- unexpected character
SQL> SELECT 'ABG'&'ABC' FROM DUAL;

CT-00636, [1:13]Invalid number -- unexpected character
SQL> 
SQL> --TEST <,<=,>,>=,=,<> OR !=
SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < 4;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT <= 4;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < NULL;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT > 4;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

2 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT >= 4;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT > NULL;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT = 4;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT = NULL;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT <> 4;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

5 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT <> NULL;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR < 'EFG';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR <= 'EFG';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR > 'EFG';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR >= 'EFG';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR = 'EFG';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_CHAR <> 'EFG';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   

6 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT < 4.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
                        1                    2017-12-13 17:30:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT <= 4.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
4            EFG        4                    2017-12-13 17:27:00   
                        1                    2017-12-13 17:30:00   

5 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT > 4.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   

4 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT >= 4.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   

5 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT = 4.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
4            EFG        4                    2017-12-13 17:27:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_FLOAT <> 4.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
             FGH        5                    2017-12-13 17:28:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   
                        1                    2017-12-13 17:30:00   

8 rows fetched.

SQL> --SELECT * FROM T_CONDITION_1 WHERE F_INT < 'EFG';
SQL> --SELECT * FROM T_CONDITION_1 WHERE F_INT < '100';
SQL> --SELECT * FROM T_CONDITION_1 WHERE F_CHAR < 100;
SQL> --SELECT * FROM T_CONDITION_1 WHERE F_FLOAT < 'EFG';
SQL> --SELECT * FROM T_CONDITION_1 WHERE F_FLOAT < '4.00';
SQL> 
SQL> --TEST AND,OR
SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < 4 AND F_CHAR = 'ABC';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < 4 AND F_CHAR = 'ABC' AND F_FLOAT < 4.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   

1 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < 4 AND F_CHAR = NULL;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < 4 AND F_CHAR > NULL AND F_FLOAT < 4.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------

0 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < 4 OR F_CHAR = 'ABC';

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < 4 OR F_CHAR = NULL;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   

3 rows fetched.

SQL> SELECT * FROM T_CONDITION_1 WHERE F_INT < 4 OR F_CHAR = NULL OR F_FLOAT > 5.0;

F_INT        F_CHAR     F_FLOAT              F_DATE                
------------ ---------- -------------------- ----------------------
1            ABC        1                    2017-12-13 17:24:00   
2            BCD        2                    2017-12-13 17:25:00   
3            CDE        3                    2017-12-13 17:26:00   
6            GHM        6                    2017-12-13 17:29:00   
7            HMN        7                    2017-12-13 17:30:00   
                        8                    2017-12-13 17:30:00   

6 rows fetched.

SQL> 
SQL> --not
SQL> DROP TABLE IF EXISTS t_temp_1;

Succeed.

SQL> CREATE TABLE t_temp_1(F1 int, F2 int);

Succeed.

SQL> INSERT INTO t_temp_1 VALUES(1, 11);

1 rows affected.

SQL> INSERT INTO t_temp_1 VALUES(2, 22);

1 rows affected.

SQL> COMMIT;

Succeed.

SQL> 
SQL> select f1 from t_temp_1 where (f1>1 and f1<1 and f1=1 and f1>=1 and f1<=1 and f1 != 1);

F1          
------------

0 rows fetched.

SQL> select f1 from t_temp_1 where (f1>1 or f1<1 or f1=1 or f1>=1 or f1<=1 or f1 != 1);

F1          
------------
1           
2           

2 rows fetched.

SQL> select f1 from t_temp_1 where (f1>1 or f1<1 and f1=1 or f1>=1 and f1<=1 or f1 != 1);

F1          
------------
1           
2           

2 rows fetched.

SQL> 
SQL> DROP TABLE IF EXISTS t_temp_1;

Succeed.

SQL> 
SQL> select 1 from dual where not 1=1;

1           
------------

0 rows fetched.

SQL> select 1 from dual where not 1=2;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where not (1=2 or 1=1);

1           
------------

0 rows fetched.

SQL> select 1 from dual where not (1=2 or 2=1);

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where not(exists(select 1 from dual));

1           
------------

0 rows fetched.

SQL> select 1 from dual where not(not exists(select 1 from dual));

1           
------------
1           

1 rows fetched.

SQL> 
SQL> select 1 from dual where not(3 in (1,2,3));

1           
------------

0 rows fetched.

SQL> select 1 from dual where not (3 not in (1,2,3,null) or 1=1);

1           
------------

0 rows fetched.

SQL> select 1 from dual where not (3 not in (1,2,null) or 1=2);

1           
------------

0 rows fetched.

SQL> select 1 from dual where  3 not in (1,2,null) or 1=1;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where  not (3 not in (1,2) or 1=2);

1           
------------

0 rows fetched.

SQL> select 1 from dual where 3   in (1,2,null) ;

1           
------------

0 rows fetched.

SQL> select 1 from dual where not (3  in (1,2,null) );

1           
------------

0 rows fetched.

SQL> select 1 from dual where 3 in (1,2,null) and not 1=2;

1           
------------

0 rows fetched.

SQL> select 1 from dual where not (3 not in (1,2,null)) and not 1=2;

1           
------------

0 rows fetched.

SQL> select 1 from dual where not(3 not in (1,2,null) or 1=1);

1           
------------

0 rows fetched.

SQL> select 1 from dual where 3 in (null, 1,2,3,null);

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where not (1=1 and 2=2);

1           
------------

0 rows fetched.

SQL> select 1 from dual where not 1=1 and  not 2=2;

1           
------------

0 rows fetched.

SQL> select 1 from dual where  not(not 3 not in (1,2,null));

1           
------------

0 rows fetched.

SQL> 
SQL> select 1 from dual where  10  between null and 9;

1           
------------

0 rows fetched.

SQL> select 1 from dual where  10 not between null and 9;

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where  1 not between null and 9;

1           
------------

0 rows fetched.

SQL> 
SQL> select 1 from dual where  not (10  between null and 9);

1           
------------
1           

1 rows fetched.

SQL> select 1 from dual where  not (10 not between null and 9);

1           
------------

0 rows fetched.

SQL> select 1 from dual where  not (1 not between null and 9);

1           
------------

0 rows fetched.

SQL> 
SQL> select 1 from dual where not( 'a' like null);

1           
------------

0 rows fetched.

SQL> select 1 from dual where not ('a' not like null);

1           
------------

0 rows fetched.

SQL> select 1 from dual where not('a' not like 'a%');

1           
------------
1           

1 rows fetched.

SQL> 
SQL> --TEST [NOT] LIKE
SQL> DROP TABLE IF EXISTS T_TEST_LIKE;

Succeed.

SQL> CREATE TABLE T_TEST_LIKE(F1 VARCHAR(20), F2 VARCHAR(20));

Succeed.

SQL> INSERT INTO T_TEST_LIKE VALUES('ABCDE','ABCDE');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE VALUES('EFGHL','EFGHL');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE VALUES('HIJKU','HIJKU');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE VALUES('WIYTR','WIYTR');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE VALUES('123456789','123456789');

1 rows affected.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE 'AB%';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE 'AB%';

F1                   F2                  
-------------------- --------------------
EFGHL                EFGHL               
HIJKU                HIJKU               
WIYTR                WIYTR               
123456789            123456789           

4 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE 'EF%%L';

F1                   F2                  
-------------------- --------------------
EFGHL                EFGHL               

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE 'EF%%L';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
HIJKU                HIJKU               
WIYTR                WIYTR               
123456789            123456789           

4 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE '1%67%%9';

F1                   F2                  
-------------------- --------------------
123456789            123456789           

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE '1%67%%9';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
EFGHL                EFGHL               
HIJKU                HIJKU               
WIYTR                WIYTR               

4 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE '%';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
EFGHL                EFGHL               
HIJKU                HIJKU               
WIYTR                WIYTR               
123456789            123456789           

5 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE '%';

F1                   F2                  
-------------------- --------------------

0 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE '%KU';

F1                   F2                  
-------------------- --------------------
HIJKU                HIJKU               

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE '%KU';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
EFGHL                EFGHL               
WIYTR                WIYTR               
123456789            123456789           

4 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE 'AB_';

F1                   F2                  
-------------------- --------------------

0 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE 'AB_';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
EFGHL                EFGHL               
HIJKU                HIJKU               
WIYTR                WIYTR               
123456789            123456789           

5 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE 'EF__L';

F1                   F2                  
-------------------- --------------------
EFGHL                EFGHL               

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE 'EF__L';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
HIJKU                HIJKU               
WIYTR                WIYTR               
123456789            123456789           

4 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE '1_67__9';

F1                   F2                  
-------------------- --------------------

0 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE '1_67__9';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
EFGHL                EFGHL               
HIJKU                HIJKU               
WIYTR                WIYTR               
123456789            123456789           

5 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE '_';

F1                   F2                  
-------------------- --------------------

0 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE '_';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
EFGHL                EFGHL               
HIJKU                HIJKU               
WIYTR                WIYTR               
123456789            123456789           

5 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 LIKE '_KU';

F1                   F2                  
-------------------- --------------------

0 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE WHERE F1 NOT LIKE '_KU';

F1                   F2                  
-------------------- --------------------
ABCDE                ABCDE               
EFGHL                EFGHL               
HIJKU                HIJKU               
WIYTR                WIYTR               
123456789            123456789           

5 rows fetched.

SQL> DROP TABLE IF EXISTS T_TEST_LIKE_2;

Succeed.

SQL> CREATE TABLE T_TEST_LIKE_2(A VARCHAR(128));

Succeed.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCXXX123');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCXXX%123');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABC');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABC_XX123');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ADC_XX123');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCD');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABC_%XXX_\123');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('%ABC');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABC%');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('123XXXABC');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('%123XXXABC');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('123XXX%ABC');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('123XXXAB%C');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('123XXXABC%');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCXXX123%');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABC%XXX123');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABC%X123');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCX123');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCX');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCXXX');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCXXX123XXX456');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCXXX%123XXX456');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('ABCXXX123XXX4');

1 rows affected.

SQL> INSERT INTO T_TEST_LIKE_2 VALUES('\ABCC124123');

1 rows affected.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123                                                       
ABCXXX%123                                                      
ABC_XX123                                                       
ABC_%XXX_\123                                                   
ABC%XXX123                                                      
ABC%X123                                                        
ABCX123                                                         

7 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%\%123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX%123                                                      

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC\\' ESCAPE '\';

A                                                               
----------------------------------------------------------------

0 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABCD%123' ESCAPE '\';

A                                                               
----------------------------------------------------------------

0 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC_%123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123                                                       
ABCXXX%123                                                      
ABC_XX123                                                       
ABC_%XXX_\123                                                   
ABC%XXX123                                                      
ABC%X123                                                        
ABCX123                                                         

7 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC\_%123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABC_XX123                                                       
ABC_%XXX_\123                                                   

2 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABC                                                             

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC\_\%%\_\\123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABC_%XXX_\123                                                   

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC\%123' ESCAPE '\';

A                                                               
----------------------------------------------------------------

0 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE '\%ABC%' ESCAPE '\';

A                                                               
----------------------------------------------------------------
%ABC                                                            

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE '%\%ABC' ESCAPE '\';

A                                                               
----------------------------------------------------------------
%ABC                                                            
123XXX%ABC                                                      

2 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE '%ABC' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABC                                                             
%ABC                                                            
123XXXABC                                                       
%123XXXABC                                                      
123XXX%ABC                                                      

5 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123                                                       
ABCXXX%123                                                      
ABC                                                             
ABC_XX123                                                       
ABCD                                                            
ABC_%XXX_\123                                                   
ABC%                                                            
ABCXXX123%                                                      
ABC%XXX123                                                      
ABC%X123                                                        
ABCX123                                                         
ABCX                                                            
ABCXXX                                                          
ABCXXX123XXX456                                                 
ABCXXX%123XXX456                                                
ABCXXX123XXX4                                                   

16 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE '\%%ABC' ESCAPE '\';

A                                                               
----------------------------------------------------------------
%ABC                                                            
%123XXXABC                                                      

2 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE '%\%ABC' ESCAPE '\';

A                                                               
----------------------------------------------------------------
%ABC                                                            
123XXX%ABC                                                      

2 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE '%AB\%C' ESCAPE '\';

A                                                               
----------------------------------------------------------------
123XXXAB%C                                                      

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE '%ABC\%' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABC%                                                            
123XXXABC%                                                      

2 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%\%' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABC%                                                            
ABCXXX123%                                                      

2 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC\%%' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABC%                                                            
ABC%XXX123                                                      
ABC%X123                                                        

3 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%%%123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123                                                       
ABCXXX%123                                                      
ABC_XX123                                                       
ABC_%XXX_\123                                                   
ABC%XXX123                                                      
ABC%X123                                                        
ABCX123                                                         

7 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%__123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123                                                       
ABCXXX%123                                                      
ABC_XX123                                                       
ABC_%XXX_\123                                                   
ABC%XXX123                                                      
ABC%X123                                                        

6 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%%_123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123                                                       
ABCXXX%123                                                      
ABC_XX123                                                       
ABC_%XXX_\123                                                   
ABC%XXX123                                                      
ABC%X123                                                        
ABCX123                                                         

7 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%__' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123                                                       
ABCXXX%123                                                      
ABC_XX123                                                       
ABC_%XXX_\123                                                   
ABCXXX123%                                                      
ABC%XXX123                                                      
ABC%X123                                                        
ABCX123                                                         
ABCXXX                                                          
ABCXXX123XXX456                                                 
ABCXXX%123XXX456                                                
ABCXXX123XXX4                                                   

12 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%123%456' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123XXX456                                                 
ABCXXX%123XXX456                                                

2 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%\%123%456' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX%123XXX456                                                

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE 'ABC%123%4' ESCAPE '\';

A                                                               
----------------------------------------------------------------
ABCXXX123XXX4                                                   

1 rows fetched.

SQL> SELECT * FROM T_TEST_LIKE_2 WHERE A LIKE '\\ABC%123' ESCAPE '\';

A                                                               
----------------------------------------------------------------
\ABCC124123                                                     

1 rows fetched.

SQL> DROP TABLE IF EXISTS T_TEST_LIKE_2;

Succeed.

SQL> 
SQL> --TEST TRUE AND FALSE
SQL> SELECT 1 FROM DUAL WHERE TRUE;

1           
------------
1           

1 rows fetched.

SQL> SELECT 1 FROM DUAL WHERE FALSE;

1           
------------

0 rows fetched.

SQL> SELECT 1 FROM DUAL WHERE TRUE AND FALSE;

1           
------------

0 rows fetched.

SQL> SELECT 1 FROM DUAL WHERE TRUE OR FALSE;

1           
------------
1           

1 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE TRUE AND F_INT = 1;

F_INT       
------------
1           

1 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE F_INT = 1 AND FALSE;

F_INT       
------------

0 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE F_INT = 1 OR TRUE ORDER BY F_INT;

F_INT       
------------
1           
2           
3           
4           
6           
7           
            
            
            

9 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE F_INT = 1 OR FALSE;

F_INT       
------------
1           

1 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 GROUP BY F_INT HAVING TRUE AND F_INT = 1;

F_INT       
------------
1           

1 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 GROUP BY F_INT HAVING F_INT = 1 AND FALSE;

F_INT       
------------

0 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 GROUP BY F_INT HAVING F_INT = 1 OR TRUE;

F_INT       
------------
7
4
6
2
1

3

7 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 GROUP BY F_INT HAVING F_INT = 1 OR FALSE;

F_INT       
------------
1           

1 rows fetched.

SQL> 
SQL> --TEST IS [NOT] NULL
SQL> SELECT 1 FROM DUAL WHERE (2) IS NULL;

1           
------------

0 rows fetched.

SQL> SELECT 1 FROM DUAL WHERE (-2) IS NOT NULL;

1           
------------
1           

1 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE (F_INT) IS NULL;

F_INT       
------------
            
            
            

3 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE (F_INT) IS NOT NULL ORDER BY F_INT;

F_INT       
------------
1           
2           
3           
4           
6           
7           

6 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE (-F_INT) IS NULL;

F_INT       
------------
            
            
            

3 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE (-F_INT) IS NOT NULL ORDER BY F_INT;

F_INT       
------------
1           
2           
3           
4           
6           
7           

6 rows fetched.

SQL> SELECT F_INT FROM T_CONDITION_1 WHERE (F_INT+1) IS NULL;

F_INT       
------------
            
            
            

3 rows fetched.

SQL> 
SQL> --DROP TABLES
SQL> DROP TABLE IF EXISTS T_CONDITION_1;

Succeed.

SQL> DROP TABLE IF EXISTS T_CONDITION_2;

Succeed.

SQL> DROP TABLE IF EXISTS T_CONDITION_3;

Succeed.

SQL> DROP TABLE IF EXISTS T_CONDITION_4;

Succeed.

SQL> DROP TABLE IF EXISTS T_TEST_LIKE;

Succeed.

SQL> 
SQL> --DTS2019032601535  DTS2019032602165
SQL> Drop table if exists test_tt;

Succeed.

SQL> Create table test_tt(f1 int);

Succeed.

SQL> Insert into test_tt values(1);

1 rows affected.

SQL> Create index t1_indx on test_tt(f1);

Succeed.

SQL> Select * from test_tt where f1 in (999999999999999999,'aa');

CT-00636, Invalid number -- unexpected character
SQL> Drop table test_tt;

Succeed.

SQL> 
SQL> --DTS2019041206092
SQL> drop table if exists t_all_base_001;

Succeed.

SQL> create table t_all_base_001(id int);

Succeed.

SQL> insert into t_all_base_001 values(1);

1 rows affected.

SQL> insert into t_all_base_001 values(2);

1 rows affected.

SQL> select t1.id,t2.id from t_all_base_001 t1 left join t_all_base_001 t2 on t2.id<all((select sum(id) from t_all_base_001),(select * from (select id from t_all_base_001 order by 1) where rownum=1));

ID           ID          
------------ ------------
1                        
2                        

2 rows fetched.

SQL> drop table t_all_base_001;

Succeed.

SQL> 
SQL> drop table if exists warehouse;

Succeed.

SQL> create table warehouse
  2 (
  3     w_warehouse_sk            integer               not null,
  4     w_warehouse_id            char(16)              not null,
  5     w_warehouse_name          varchar(20)                   ,
  6     w_warehouse_sq_ft         integer                       ,
  7     w_street_number           char(10)                      ,
  8     w_street_name             varchar(60)                   ,
  9     w_street_type             char(15)                      ,
 10     w_suite_number            char(10)                      ,
 11     w_city                    varchar(60)                   ,
 12     w_county                  varchar(30)                   ,
 13     w_state                   char(2)                       ,
 14     w_zip                     char(10)                      ,
 15     w_country                 varchar(20)                   ,
 16     w_gmt_offset              decimal(5,2)
 17  );

Succeed.

SQL> drop table if exists catalog_page;

Succeed.

SQL> create table catalog_page
  2 (
  3     cp_catalog_page_sk        integer               not null,
  4     cp_catalog_page_id        char(16)              not null,
  5     cp_start_date_sk          integer                       ,
  6     cp_end_date_sk            integer                       ,
  7     cp_department             varchar(50)                   ,
  8     cp_catalog_number         integer                       ,
  9     cp_catalog_page_number    integer                       ,
 10     cp_description            varchar(100)                  ,
 11     cp_type                   varchar(100)
 12  );

Succeed.

SQL> drop table if exists income_band;

Succeed.

SQL> create table income_band
  2 (
  3     ib_income_band_sk         integer               not null,
  4     ib_lower_bound            integer                       ,
  5     ib_upper_bound            integer
  6  );

Succeed.

SQL>  drop table if exists reason;

Succeed.

SQL> create table reason
  2 (
  3     r_reason_sk               integer               not null,
  4     r_reason_id               char(16)              not null,
  5     r_reason_desc             char(100)
  6  );

Succeed.

SQL>  drop table if exists household_demographics;

Succeed.

SQL> create table household_demographics
  2 (
  3     hd_demo_sk                integer               not null,
  4     hd_income_band_sk         integer                       ,
  5     hd_buy_potential          char(15)                      ,
  6     hd_dep_count              integer                       ,
  7     hd_vehicle_count          integer
  8  );

Succeed.

SQL>  drop table if exists item;

Succeed.

SQL> create table item
  2 (
  3     i_item_sk                 integer               not null,
  4     i_item_id                 char(16)              not null,
  5     i_rec_start_date          date                          ,
  6     i_rec_end_date            date                          ,
  7     i_item_desc               varchar(200)                  ,
  8     i_current_price           decimal(7,2)                  ,
  9     i_wholesale_cost          decimal(7,2)                  ,
 10     i_brand_id                integer                       ,
 11     i_brand                   char(50)                      ,
 12     i_class_id                integer                       ,
 13     i_class                   char(50)                      ,
 14     i_category_id             integer                       ,
 15     i_category                char(50)                      ,
 16     i_manufact_id             integer                       ,
 17     i_manufact                char(50)                      ,
 18     i_size                    char(20)                      ,
 19     i_formulation             char(20)                      ,
 20     i_color                   char(20)                      ,
 21     i_units                   char(10)                      ,
 22     i_container               char(10)                      ,
 23     i_manager_id              integer                       ,
 24     i_product_name            char(50)
 25 );

Succeed.

SQL> 
SQL> drop table if exists ship_mode;

Succeed.

SQL> create table ship_mode
  2 (
  3     sm_ship_mode_sk           integer               not null,
  4     sm_ship_mode_id           char(16)              not null,
  5     sm_type                   char(30)                      ,
  6     sm_code                   char(10)                      ,
  7     sm_carrier                char(20)                      ,
  8     sm_contract               char(20)
  9 );

Succeed.

SQL> 
SQL>  select /*+hashjoin(warehouse ship_mode)*/ count(w_warehouse_sk),w_warehouse_id, w_warehouse_name from warehouse
  2  where w_warehouse_sk  in (select cast(r_reason_sk as char(2)) from reason where r_reason_sk>'5')
  3  or right(replace(w_warehouse_id,'A','1'),1)  in (select /*+blockname (ship_mode)*/   sm_ship_mode_id from ship_mode group by sm_ship_mode_id having avg(sm_ship_mode_sk)>'10')
  4  group by w_warehouse_id, w_warehouse_name order by 1,2,3;

COUNT(W_WAREHOUSE_SK) W_WAREHOUSE_ID   W_WAREHOUSE_NAME    
--------------------- ---------------- --------------------

0 rows fetched.

SQL> 
SQL> 
SQL>  select  /*+leading(warehouse catalog_page) hashjoin(catalog_page income_band) rows(catalog_page warehouse #2)*/ (w_warehouse_sk),replace(w_warehouse_id,'A','1') from warehouse
  2  where w_warehouse_sk in (select /*+blockname(catalog_page)*/  cp_catalog_page_sk from catalog_page group by cp_catalog_page_sk)
  3  and left (replace(w_warehouse_id,'A','1'),1) in (select /*+blockname(income_band)*/ ib_income_band_sk from income_band ) order by 1,2;

W_WAREHOUSE_SK REPLACE(W_WAREHOUSE_ID,'A','1')                                 
-------------- ----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> select /*+hashjoin(warehouse ship_mode reason )*/ count(w_warehouse_sk),w_warehouse_id, w_warehouse_name from warehouse
  2  where w_warehouse_sk not in (select /*+blockname (reason)*/  cast(r_reason_sk as char) from reason) or right(replace(w_warehouse_id,'A','1'),1)
  3  not in (select /*+blockname (ship_mode)*/   sm_ship_mode_id from ship_mode group by sm_ship_mode_id having avg(sm_ship_mode_sk)>'10')
  4  group by w_warehouse_id, w_warehouse_name order by 1,2,3;

COUNT(W_WAREHOUSE_SK) W_WAREHOUSE_ID   W_WAREHOUSE_NAME    
--------------------- ---------------- --------------------

0 rows fetched.

SQL> 
SQL> select  /*+leading(warehouse catalog_page) hashjoin(catalog_page income_band) rows(catalog_page warehouse #2)*/ (w_warehouse_sk),replace(w_warehouse_id,'A','1') from warehouse
  2  where w_warehouse_sk in (select /*+blockname(catalog_page)*/  cp_catalog_page_sk from catalog_page where cp_catalog_page_id=w_warehouse_id)
  3  and left (replace(w_warehouse_id,'A','1'),1) in (select /*+blockname(income_band)*/ ib_income_band_sk from income_band where ib_income_band_sk = w_warehouse_sk) order by 1,2;

W_WAREHOUSE_SK REPLACE(W_WAREHOUSE_ID,'A','1')                                 
-------------- ----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> select  /*+leading(warehouse catalog_page) hashjoin(catalog_page income_band) rows(catalog_page warehouse #2)*/ trim(w_warehouse_sk),replace(w_warehouse_id,'A','1') from warehouse
  2  where w_warehouse_sk in (select /*+blockname(catalog_page)*/  cp_catalog_page_sk from catalog_page where cp_catalog_page_id=w_warehouse_id)
  3  and left (replace(w_warehouse_id,'A','1'),1) in (select /*+blockname(income_band)*/ ib_income_band_sk from income_band where ib_income_band_sk = w_warehouse_sk) order by 1,2;

TRIM(W_WAREHOUSE_SK) REPLACE(W_WAREHOUSE_ID,'A','1')                                 
-------------------- ----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> select w_warehouse_sk,replace(w_warehouse_id,'A','1') from warehouse
  2  where w_warehouse_sk in (select cp_catalog_page_sk from catalog_page where cp_catalog_page_id=w_warehouse_id)
  3  and left (replace(w_warehouse_id,'A','1'),1) in (select ib_income_band_sk from income_band where ib_income_band_sk = w_warehouse_sk) order by 1,2;

W_WAREHOUSE_SK REPLACE(W_WAREHOUSE_ID,'A','1')                                 
-------------- ----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> select count(w_warehouse_sk),w_warehouse_id, w_warehouse_name from warehouse
  2  where w_warehouse_sk not in (select cast(r_reason_sk as char) from reason where r_reason_sk>'5')
  3  and right(replace(w_warehouse_id,'A','1'),1) not  in (select sm_ship_mode_id from ship_mode group by sm_ship_mode_id having avg(sm_ship_mode_sk)>'10')
  4  group by w_warehouse_id, w_warehouse_name order by 1,2,3;

COUNT(W_WAREHOUSE_SK) W_WAREHOUSE_ID   W_WAREHOUSE_NAME    
--------------------- ---------------- --------------------

0 rows fetched.

SQL> 
SQL> select sum(hd_demo_sk),
  2 case when i_item_sk is not null
  3   and left(i_item_sk,2)=18
  4    then i_item_sk
  5      when (select count(*) from household_demographics)>100
  6           then (select avg(hd_demo_sk) from household_demographics)
  7        else null end
  8  from (select hd_demo_sk,hd_income_band_sk,hd_buy_potential,hd_dep_count from household_demographics)A
  9  full join item on hd_demo_sk=i_item_sk
 10  group by hd_demo_sk,i_rec_start_date,i_rec_end_date,i_item_sk ,hd_income_band_sk
 11  having  hd_income_band_sk between 1 and 2
 12  and sum(hd_demo_sk)<50
 13  order by 1,2; 

SUM(HD_DEMO_SK)      CASE WHEN I_ITEM_SK IS NOT NULL
AND LEFT(I_ITEM_SK,2)=18
THEN I_
-------------------- ----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> drop table if exists warehouse;

Succeed.

SQL> drop table if exists catalog_page;

Succeed.

SQL> drop table if exists income_band;

Succeed.

SQL> drop table if exists reason;

Succeed.

SQL> drop table if exists household_demographics;

Succeed.

SQL> drop table if exists item;

Succeed.

SQL> drop table if exists ship_mode;

Succeed.

SQL> 
SQL> drop table if exists  t_in_base_001;

Succeed.

SQL> create table t_in_base_001(id int,c_int int not null primary key,c_vchar varchar(100),c_clob clob,c_blob blob,c_date date);  

Succeed.

SQL> create index idx_in_base_001_2 on t_in_base_001(c_int,c_vchar);

Succeed.

SQL> create index idx_in_base_001_3 on t_in_base_001(c_int,c_vchar,c_date);

Succeed.

SQL> insert into t_in_base_001 values(1,1000,'abc123',lpad('123abc',50,'abc'),lpad('11100011',50,'1100'),to_timestamp(to_char('1800-01-01 10:51:47'),'yyyy-mm-dd hh24:mi:ss'));

1 rows affected.

SQL> insert into t_in_base_001 values('',997,'','','','');

1 rows affected.

SQL> insert into t_in_base_001 values(null,998,null,null,null,null);

1 rows affected.

SQL> CREATE or replace procedure proc_insert(tname varchar,startall int,endall int) as
  2 sqlst varchar(500);
  3 BEGIN
  4   FOR i IN startall..endall LOOP
  5         sqlst := 'insert into ' || tname ||' select id+'||i||',c_int+'||i||',c_vchar||'||i||',c_clob||'||i||',c_blob'||',c_date from '||tname|| ' where id=1';
  6         execute immediate sqlst;
  7   END LOOP;
  8 END;
  9 /

Succeed.

SQL> exec proc_insert('t_in_base_001',1,20);

PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> 
SQL> select count(*) from t_in_base_001 t1 where
  2 (select t1.id+t3.id-t1.id from t_in_base_001 t2,t_in_base_001 t3 where t1.id=t2.id and t1.id=t3.id and t1.c_date=t2.c_date and t1.c_int=t3.c_int and t3.id=t2.id or t1.c_vchar=t3.c_vchar and t2.id=t3.id and t1.c_vchar||t1.c_vchar=t3.c_vchar||t2.c_vchar) in(select id from t_in_base_001 t2 where t1.id=id
  3 and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id
  4 and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id and (select t1.id+t2.id+id from t_in_base_001 t3 where t2.id=id) in(select id+t2.id+t1.id from t_in_base_001 t4 where t4.id=t2.id)))))))))))))))))))))))))));

COUNT(*)            
--------------------
21                  

1 rows fetched.

SQL> drop table t_in_base_001 purge;

Succeed.

SQL> drop procedure proc_insert;

Succeed.

SQL> 
SQL> drop table if exists offset_tab;

Succeed.

SQL> create table offset_tab(a int);

Succeed.

SQL> insert into offset_tab values(4);

1 rows affected.

SQL> commit;

Succeed.

SQL> select * from offset_tab where 1=1 offset 0;

A           
------------
4           

1 rows fetched.

SQL> select * from offset_tab where 1=1 offset 0 limit 1 ;

A           
------------
4           

1 rows fetched.

SQL> drop table if exists offset_tab;

Succeed.

SQL> 
SQL> --regexp
SQL> create table regexp_kkk3 (a char(15), b int, c varchar(15));

Succeed.

SQL> insert into regexp_kkk3 values ('23', 888, 'abcd');

1 rows affected.

SQL> insert into regexp_kkk3 values ('joy', 888, 'abcd');

1 rows affected.

SQL> insert into regexp_kkk3 values ('amy', 999, 'hunki');

1 rows affected.

SQL> insert into regexp_kkk3 values ('amy', 333, 'kpp');

1 rows affected.

SQL> --basic regexp
SQL> select b from regexp_kkk3 where a regexp 'amy' order by c;

B           
------------
999         
333         

2 rows fetched.

SQL> select b from regexp_kkk3 where 'amy' regexp a order by c;

B           
------------

0 rows fetched.

SQL> select a from regexp_kkk3 where b regexp 888 order by a;

A              
---------------
23             
joy            

2 rows fetched.

SQL> select a from regexp_kkk3 where 90 regexp 90 order by a;

A              
---------------
23             
amy            
amy            
joy            

4 rows fetched.

SQL> --or regexp
SQL> select a from regexp_kkk3 where 90 regexp 90|80 order by a;

A              
---------------
23             
amy            
amy            
joy            

4 rows fetched.

SQL> select a from regexp_kkk3 where 90 regexp 70|80 order by a;

A              
---------------

0 rows fetched.

SQL> select a from regexp_kkk3 where b regexp b|65 order by a;

A              
---------------
amy            
amy            

2 rows fetched.

SQL> select a from regexp_kkk3 where 'dfg' regexp 'dfg|98' order by a;

A              
---------------
23             
amy            
amy            
joy            

4 rows fetched.

SQL> --20200612
SQL> select
  2   ref_0.GRANTOR as c0, ref_0.GRANTOR as c1, ref_0.UID as c2, ref_0.GRANTOR as c3, ref_0.GRANTOR as c5
  3 from SYS.SYS_USER_PRIVS as ref_0 where EXISTS (
  4   select ref_0.GRANTOR as c0, subq_0.c4 as c1, (select UID from SYS.SYS_USER_PRIVS limit 1 offset 26) as c2
  5     from (select ref_0.GRANTOR as c0, 37 as c1, ref_0.GRANTOR as c2, ref_1.GRANTOR as c3, ref_0.GRANTOR as c4
  6           from (SYS.SYS_USER_PRIVS as ref_1)
  7               left join (SYS.SYS_USER_PRIVS as ref_2)
  8               on (ref_1.GRANTOR = ref_2.UID )
  9           where ((true) and (EXISTS ( select ref_1.UID as c0, ref_0.GRANTOR as c1, ref_0.GRANTOR as c2, ref_1.UID as c3
 10                   from SYS.SYS_USER_PRIVS as ref_3
 11                   where ref_2.GRANTOR is not NULL)))
 12             or ((((false) and (true)) and (ref_1.GRANTOR is not NULL))
 13               or (ref_1.UID is NULL))) as subq_0
 14     where (case when subq_0.c2 is NULL then (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5)
 15              else (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5) end is NULL)
 16       and (case when EXISTS ( select ref_0.GRANTOR as c0, ref_4.GRANTOR as c1, subq_0.c1 as c2, ref_0.GRANTOR as c3, ref_4.GRANTOR as c4
 17               from SYS.SYS_USER_PRIVS as ref_4
 18               where (((ref_4.GRANTOR is not NULL)
 19                     and (ref_4.GRANTOR is not NULL))
 20                   and (((((false)
 21                           and (subq_0.c4 is NULL))
 22                         or (ref_0.GRANTOR is NULL))
 23                       or (true))
 24                     or (ref_4.GRANTOR is NULL)))
 25                 and (subq_0.c1 is not NULL)
 26               limit 109) then subq_0.c2 else subq_0.c2 end
 27            is NULL)    limit 102)limit 99;

C0           C1           C2           C3           C5
------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> select
  2   ref_0.GRANTOR as c0, ref_0.GRANTOR as c1, ref_0.UID as c2, ref_0.GRANTOR as c3, ref_0.GRANTOR as c5
  3 from SYS.SYS_USER_PRIVS as ref_0 where EXISTS (
  4   select ref_0.GRANTOR as c0, subq_0.c4 as c1, (select UID from SYS.SYS_USER_PRIVS limit 1 offset 26) as c2
  5     from (select ref_0.GRANTOR as c0, 37 as c1, ref_0.GRANTOR as c2, ref_1.GRANTOR as c3, ref_0.GRANTOR as c4
  6           from (SYS.SYS_USER_PRIVS as ref_1)
  7               left join (SYS.SYS_USER_PRIVS as ref_2)
  8               on (ref_1.GRANTOR = ref_2.UID )
  9           where ((true) and (EXISTS ( select ref_1.UID as c0, ref_0.GRANTOR as c1, ref_0.GRANTOR as c2, ref_1.UID as c3
 10                   from SYS.SYS_USER_PRIVS as ref_3
 11                   where ref_2.GRANTOR is not NULL)))
 12             or ((((false) and (true)) and (ref_1.GRANTOR is not NULL))
 13               or (ref_1.UID is NULL))) as subq_0
 14     where (case when subq_0.c2 is NULL then (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5)
 15              else (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5) end is NULL)
 16       and (case when EXISTS ( select ref_0.GRANTOR as c0, ref_4.GRANTOR as c1, subq_0.c1 as c2, ref_0.GRANTOR as c3, ref_4.GRANTOR as c4
 17               from SYS.SYS_USER_PRIVS as ref_4
 18               where (((ref_4.GRANTOR is not NULL)
 19                     and (ref_4.GRANTOR is not NULL))
 20                   and (((((false)
 21                           and (subq_0.c4 is NULL))
 22                         or (ref_0.GRANTOR is NULL))
 23                       or (true))
 24                     or (ref_4.GRANTOR is NULL)))
 25                 and (subq_0.c1 is not NULL)
 26               limit 109) then subq_0.c2 else subq_0.c2 end
 27            is NULL)    limit 102)limit 99;

C0           C1           C2           C3           C5
------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> select
  2   ref_0.GRANTOR as c0, ref_0.GRANTOR as c1, ref_0.UID as c2, ref_0.GRANTOR as c3, ref_0.GRANTOR as c5
  3 from SYS.SYS_USER_PRIVS as ref_0 where EXISTS (
  4   select ref_0.GRANTOR as c0, subq_0.c4 as c1, (select UID from SYS.SYS_USER_PRIVS limit 1 offset 26) as c2
  5     from (select ref_0.GRANTOR as c0, 37 as c1, ref_0.GRANTOR as c2, ref_1.GRANTOR as c3, ref_0.GRANTOR as c4
  6           from (SYS.SYS_USER_PRIVS as ref_1)
  7               left join (SYS.SYS_USER_PRIVS as ref_2)
  8               on (ref_1.GRANTOR = ref_2.UID )
  9           where ((true) and (EXISTS ( select ref_1.UID as c0, ref_0.GRANTOR as c1, ref_0.GRANTOR as c2, ref_1.UID as c3
 10                   from SYS.SYS_USER_PRIVS as ref_3
 11                   where ref_2.GRANTOR is not NULL)))
 12             or ((((false) and (true)) and (ref_1.GRANTOR is not NULL))
 13               or (ref_1.UID is NULL))) as subq_0
 14     where (case when subq_0.c2 is NULL then (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5)
 15              else (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5) end is NULL)
 16       and (case when EXISTS ( select ref_0.GRANTOR as c0, ref_4.GRANTOR as c1, subq_0.c1 as c2, ref_0.GRANTOR as c3, ref_4.GRANTOR as c4
 17               from SYS.SYS_USER_PRIVS as ref_4
 18               where (((ref_4.GRANTOR is not NULL)
 19                     and (ref_4.GRANTOR is not NULL))
 20                   and (((((false)
 21                           and (subq_0.c4 is NULL))
 22                         or (ref_0.GRANTOR is NULL))
 23                       or (true))
 24                     or (ref_4.GRANTOR is NULL)))
 25                 and (subq_0.c1 is not NULL)
 26               limit 109) then subq_0.c2 else subq_0.c2 end
 27            is NULL)    limit 102)limit 99;

C0           C1           C2           C3           C5
------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> select
  2   ref_0.GRANTOR as c0, ref_0.GRANTOR as c1, ref_0.UID as c2, ref_0.GRANTOR as c3, ref_0.GRANTOR as c5
  3 from SYS.SYS_USER_PRIVS as ref_0 where EXISTS (
  4   select ref_0.GRANTOR as c0, subq_0.c4 as c1, (select UID from SYS.SYS_USER_PRIVS limit 1 offset 26) as c2
  5     from (select ref_0.GRANTOR as c0, 37 as c1, ref_0.GRANTOR as c2, ref_1.GRANTOR as c3, ref_0.GRANTOR as c4
  6           from (SYS.SYS_USER_PRIVS as ref_1)
  7               left join (SYS.SYS_USER_PRIVS as ref_2)
  8               on (ref_1.GRANTOR = ref_2.UID )
  9           where ((true) and (EXISTS ( select ref_1.UID as c0, ref_0.GRANTOR as c1, ref_0.GRANTOR as c2, ref_1.UID as c3
 10                   from SYS.SYS_USER_PRIVS as ref_3
 11                   where ref_2.GRANTOR is not NULL)))
 12             or ((((false) and (true)) and (ref_1.GRANTOR is not NULL))
 13               or (ref_1.UID is NULL))) as subq_0
 14     where (case when subq_0.c2 is NULL then (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5)
 15              else (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5) end is NULL)
 16       and (case when EXISTS ( select ref_0.GRANTOR as c0, ref_4.GRANTOR as c1, subq_0.c1 as c2, ref_0.GRANTOR as c3, ref_4.GRANTOR as c4
 17               from SYS.SYS_USER_PRIVS as ref_4
 18               where (((ref_4.GRANTOR is not NULL)
 19                     and (ref_4.GRANTOR is not NULL))
 20                   and (((((false)
 21                           and (subq_0.c4 is NULL))
 22                         or (ref_0.GRANTOR is NULL))
 23                       or (true))
 24                     or (ref_4.GRANTOR is NULL)))
 25                 and (subq_0.c1 is not NULL)
 26               limit 109) then subq_0.c2 else subq_0.c2 end
 27            is NULL)    limit 102)limit 99;

C0           C1           C2           C3           C5
------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> select
  2   ref_0.GRANTOR as c0, ref_0.GRANTOR as c1, ref_0.UID as c2, ref_0.GRANTOR as c3, ref_0.GRANTOR as c5
  3 from SYS.SYS_USER_PRIVS as ref_0 where EXISTS (
  4   select ref_0.GRANTOR as c0, subq_0.c4 as c1, (select UID from SYS.SYS_USER_PRIVS limit 1 offset 26) as c2
  5     from (select ref_0.GRANTOR as c0, 37 as c1, ref_0.GRANTOR as c2, ref_1.GRANTOR as c3, ref_0.GRANTOR as c4
  6           from (SYS.SYS_USER_PRIVS as ref_1)
  7               left join (SYS.SYS_USER_PRIVS as ref_2)
  8               on (ref_1.GRANTOR = ref_2.UID )
  9           where ((true) and (EXISTS ( select ref_1.UID as c0, ref_0.GRANTOR as c1, ref_0.GRANTOR as c2, ref_1.UID as c3
 10                   from SYS.SYS_USER_PRIVS as ref_3
 11                   where ref_2.GRANTOR is not NULL)))
 12             or ((((false) and (true)) and (ref_1.GRANTOR is not NULL))
 13               or (ref_1.UID is NULL))) as subq_0
 14     where (case when subq_0.c2 is NULL then (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5)
 15              else (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5) end is NULL)
 16       and (case when EXISTS ( select ref_0.GRANTOR as c0, ref_4.GRANTOR as c1, subq_0.c1 as c2, ref_0.GRANTOR as c3, ref_4.GRANTOR as c4
 17               from SYS.SYS_USER_PRIVS as ref_4
 18               where (((ref_4.GRANTOR is not NULL)
 19                     and (ref_4.GRANTOR is not NULL))
 20                   and (((((false)
 21                           and (subq_0.c4 is NULL))
 22                         or (ref_0.GRANTOR is NULL))
 23                       or (true))
 24                     or (ref_4.GRANTOR is NULL)))
 25                 and (subq_0.c1 is not NULL)
 26               limit 109) then subq_0.c2 else subq_0.c2 end
 27            is NULL)    limit 102)limit 99;

C0           C1           C2           C3           C5
------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> select
  2   ref_0.GRANTOR as c0, ref_0.GRANTOR as c1, ref_0.UID as c2, ref_0.GRANTOR as c3, ref_0.GRANTOR as c5
  3 from SYS.SYS_USER_PRIVS as ref_0 where EXISTS (
  4   select ref_0.GRANTOR as c0, subq_0.c4 as c1, (select UID from SYS.SYS_USER_PRIVS limit 1 offset 26) as c2
  5     from (select ref_0.GRANTOR as c0, 37 as c1, ref_0.GRANTOR as c2, ref_1.GRANTOR as c3, ref_0.GRANTOR as c4
  6           from (SYS.SYS_USER_PRIVS as ref_1)
  7               left join (SYS.SYS_USER_PRIVS as ref_2)
  8               on (ref_1.GRANTOR = ref_2.UID )
  9           where ((true) and (EXISTS ( select ref_1.UID as c0, ref_0.GRANTOR as c1, ref_0.GRANTOR as c2, ref_1.UID as c3
 10                   from SYS.SYS_USER_PRIVS as ref_3
 11                   where ref_2.GRANTOR is not NULL)))
 12             or ((((false) and (true)) and (ref_1.GRANTOR is not NULL))
 13               or (ref_1.UID is NULL))) as subq_0
 14     where (case when subq_0.c2 is NULL then (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5)
 15              else (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5) end is NULL)
 16       and (case when EXISTS ( select ref_0.GRANTOR as c0, ref_4.GRANTOR as c1, subq_0.c1 as c2, ref_0.GRANTOR as c3, ref_4.GRANTOR as c4
 17               from SYS.SYS_USER_PRIVS as ref_4
 18               where (((ref_4.GRANTOR is not NULL)
 19                     and (ref_4.GRANTOR is not NULL))
 20                   and (((((false)
 21                           and (subq_0.c4 is NULL))
 22                         or (ref_0.GRANTOR is NULL))
 23                       or (true))
 24                     or (ref_4.GRANTOR is NULL)))
 25                 and (subq_0.c1 is not NULL)
 26               limit 109) then subq_0.c2 else subq_0.c2 end
 27            is NULL)    limit 102)limit 99;

C0           C1           C2           C3           C5
------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> select
  2   ref_0.GRANTOR as c0, ref_0.GRANTOR as c1, ref_0.UID as c2, ref_0.GRANTOR as c3, ref_0.GRANTOR as c5
  3 from SYS.SYS_USER_PRIVS as ref_0 where EXISTS (
  4   select ref_0.GRANTOR as c0, subq_0.c4 as c1, (select UID from SYS.SYS_USER_PRIVS limit 1 offset 26) as c2
  5     from (select ref_0.GRANTOR as c0, 37 as c1, ref_0.GRANTOR as c2, ref_1.GRANTOR as c3, ref_0.GRANTOR as c4
  6           from (SYS.SYS_USER_PRIVS as ref_1)
  7               left join (SYS.SYS_USER_PRIVS as ref_2)
  8               on (ref_1.GRANTOR = ref_2.UID )
  9           where ((true) and (EXISTS ( select ref_1.UID as c0, ref_0.GRANTOR as c1, ref_0.GRANTOR as c2, ref_1.UID as c3
 10                   from SYS.SYS_USER_PRIVS as ref_3
 11                   where ref_2.GRANTOR is not NULL)))
 12             or ((((false) and (true)) and (ref_1.GRANTOR is not NULL))
 13               or (ref_1.UID is NULL))) as subq_0
 14     where (case when subq_0.c2 is NULL then (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5)
 15              else (select GRANTOR from SYS.SYS_USER_PRIVS limit 1 offset 5) end is NULL)
 16       and (case when EXISTS ( select ref_0.GRANTOR as c0, ref_4.GRANTOR as c1, subq_0.c1 as c2, ref_0.GRANTOR as c3, ref_4.GRANTOR as c4
 17               from SYS.SYS_USER_PRIVS as ref_4
 18               where (((ref_4.GRANTOR is not NULL)
 19                     and (ref_4.GRANTOR is not NULL))
 20                   and (((((false)
 21                           and (subq_0.c4 is NULL))
 22                         or (ref_0.GRANTOR is NULL))
 23                       or (true))
 24                     or (ref_4.GRANTOR is NULL)))
 25                 and (subq_0.c1 is not NULL)
 26               limit 109) then subq_0.c2 else subq_0.c2 end
 27            is NULL)    limit 102)limit 99;

C0           C1           C2           C3           C5
------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> --DTS2020031805402
SQL> drop table if exists t_DTS2020031805402;

Succeed.

SQL> create table t_DTS2020031805402(a int);

Succeed.

SQL> select * from t_DTS2020031805402  where(a=9832) or(a=9831) or(a=9830) or(a=9829) or(a=9828) or(a=9827) or(a=9826) or(a=9825) or(a=9824) or(a=9823) or(a=9822) or(a=9821) or(a=9820) or(a=9819) or(a=9818) or(a=9817) or(a=9816) or(a=9815) or
  2 (a=9814) or(a=9813) or(a=9812) or(a=9811) or(a=9810) or(a=9809) or(a=9808) or(a=9807) or(a=9806) or(a=9805) or(a=9804) or(a=9803) or(a=9802) or(a=9801) or(a=9800) or(a=9799) or(a=9798) or(a=9797) or
  3 (a=9796) or(a=9795) or(a=9794) or(a=9793) or(a=9792) or(a=9791) or(a=9790) or(a=9789) or(a=9788) or(a=9787) or(a=9786) or(a=9785) or(a=9784) or(a=9783) or(a=9782) or(a=9781) or(a=9780) or(a=9779) or
  4 (a=9778) or(a=9777) or(a=9776) or(a=9775) or(a=9774) or(a=9773) or(a=9772) or(a=9771) or(a=9770) or(a=9769) or(a=9768) or(a=9767) or(a=9766) or(a=9765) or(a=9764) or(a=9763) or(a=9762) or(a=9761) or
  5 (a=9760) or(a=9759) or(a=9758) or(a=9757) or(a=9756) or(a=9755) or(a=9754) or(a=9753) or(a=9752) or(a=9751) or(a=9750) or(a=9749) or(a=9748) or(a=9747) or(a=9746) or(a=9745) or(a=9744) or(a=9743) or
  6 (a=9742) or(a=9741) or(a=9740) or(a=9739) or(a=9738) or(a=9737) or(a=9736) or(a=9735) or(a=9734) or(a=9733) or(a=9732) or(a=9731) or(a=9730) or(a=9729) or(a=9728) or(a=9727) or(a=9726) or(a=9725) or
  7 (a=9724) or(a=9723) or(a=9722) or(a=9721) or(a=9720) or(a=9719) or(a=9718) or(a=9717) or(a=9716) or(a=9715) or(a=9714) or(a=9713) or(a=9712) or(a=9711) or(a=9710) or(a=9709) or(a=9708) or(a=9707) or
  8 (a=9706) or(a=9705) or(a=9704) or(a=9703) or(a=9702) or(a=9701) or(a=9700) or(a=9699) or(a=9698) or(a=9697) or(a=9696) or(a=9695) or(a=9694) or(a=9693) or(a=9692) or(a=9691) or(a=9690) or(a=9689) or
  9 (a=9688) or(a=9687) or(a=9686) or(a=9685) or(a=9684) or(a=9683) or(a=9682) or(a=9681) or(a=9680) or(a=9679) or(a=9678) or(a=9677) or(a=9676) or(a=9675) or(a=9674) or(a=9673) or(a=9672) or(a=9671) or
 10 (a=9670) or(a=9669) or(a=9668) or(a=9667) or(a=9666) or(a=9665) or(a=9664) or(a=9663) or(a=9662) or(a=9661) or(a=9660) or(a=9659) or(a=9658) or(a=9657) or(a=9656) or(a=9655) or(a=9654) or(a=9653) or
 11 (a=9652) or(a=9651) or(a=9650) or(a=9649) or(a=9648) or(a=9647) or(a=9646) or(a=9645) or(a=9644) or(a=9643) or(a=9642) or(a=9641) or(a=9640) or(a=9639) or(a=9638) or(a=9637) or(a=9636) or(a=9635) or
 12 (a=9634) or(a=9633) or(a=9632) or(a=9631) or(a=9630) or(a=9629) or(a=9628) or(a=9627) or(a=9626) or(a=9625) or(a=9624) or(a=9623) or(a=9622) or(a=9621) or(a=9620) or(a=9619) or(a=9618) or(a=9617) or
 13 (a=9616) or(a=9615) or(a=9614) or(a=9613) or(a=9612) or(a=9611) or(a=9610) or(a=9609) or(a=9608) or(a=9607) or(a=9606) or(a=9605) or(a=9604) or(a=9603) or(a=9602) or(a=9601) or(a=9600) or(a=9599) or
 14 (a=9598) or(a=9597) or(a=9596) or(a=9595) or(a=9594) or(a=9593) or(a=9592) or(a=9591) or(a=9590) or(a=9589) or(a=9588) or(a=9587) or(a=9586) or(a=9585) or(a=9584) or(a=9583) or(a=9582) or(a=9581) or
 15 (a=9580) or(a=9579) or(a=9578) or(a=9577) or(a=9576) or(a=9575) or(a=9574) or(a=9573) or(a=9572) or(a=9571) or(a=9570) or(a=9569) or(a=9568) or(a=9567) or(a=9566) or(a=9565) or(a=9564) or(a=9563) or
 16 (a=9562) or(a=9561) or(a=9560) or(a=9559) or(a=9558) or(a=9557) or(a=9556) or(a=9555) or(a=9554) or(a=9553) or(a=9552) or(a=9551) or(a=9550) or(a=9549) or(a=9548) or(a=9547) or(a=9546) or(a=9545) or
 17 (a=9544) or(a=9543) or(a=9542) or(a=9541) or(a=9540) or(a=9539) or(a=9538) or(a=9537) or(a=9536) or(a=9535) or(a=9534) or(a=9533) or(a=9532) or(a=9531) or(a=9530) or(a=9529) or(a=9528) or(a=9527) or
 18 (a=9526) or(a=9525) or(a=9524) or(a=9523) or(a=9522) or(a=9521) or(a=9520) or(a=9519) or(a=9518) or(a=9517) or(a=9516) or(a=9515) or(a=9514) or(a=9513) or(a=9512) or(a=9511) or(a=9510) or(a=9509) or
 19 (a=9508) or(a=9507) or(a=9506) or(a=9505) or(a=9504) or(a=9503) or(a=9502) or(a=9501) or(a=9500) or(a=9499) or(a=9498) or(a=9497) or(a=9496) or(a=9495) or(a=9494) or(a=9493) or(a=9492) or(a=9491) or
 20 (a=9490) or(a=9489) or(a=9488) or(a=9487) or(a=9486) or(a=9485) or(a=9484) or(a=9483) or(a=9482) or(a=9481) or(a=9480) or(a=9479) or(a=9478) or(a=9477) or(a=9476) or(a=9475) or(a=9474) or(a=9473) or
 21 (a=9472) or(a=9471) or(a=9470) or(a=9469) or(a=9468) or(a=9467) or(a=9466) or(a=9465) or(a=9464) or(a=9463) or(a=9462) or(a=9461) or(a=9460) or(a=9459) or(a=9458) or(a=9457) or(a=9456) or(a=9455) or
 22 (a=9454) or(a=9453) or(a=9452) or(a=9451) or(a=9450) or(a=9449) or(a=9448) or(a=9447) or(a=9446) or(a=9445) or(a=9444) or(a=9443) or(a=9442) or(a=9441) or(a=9440) or(a=9439) or(a=9438) or(a=9437) or
 23 (a=9436) or(a=9435) or(a=9434) or(a=9433) or(a=9432) or(a=9431) or(a=9430) or(a=9429) or(a=9428) or(a=9427) or(a=9426) or(a=9425) or(a=9424) or(a=9423) or(a=9422) or(a=9421) or(a=9420) or(a=9419) or
 24 (a=9418) or(a=9417) or(a=9416) or(a=9415) or(a=9414) or(a=9413) or(a=9412) or(a=9411) or(a=9410) or(a=9409) or(a=9408) or(a=9407) or(a=9406) or(a=9405) or(a=9404) or(a=9403) or(a=9402) or(a=9401) or
 25 (a=9400) or(a=9399) or(a=9398) or(a=9397) or(a=9396) or(a=9395) or(a=9394) or(a=9393) or(a=9392) or(a=9391) or(a=9390) or(a=9389) or(a=9388) or(a=9387) or(a=9386) or(a=9385) or(a=9384) or(a=9383) or
 26 (a=9382) or(a=9381) or(a=9380) or(a=9379) or(a=9378) or(a=9377) or(a=9376) or(a=9375) or(a=9374) or(a=9373) or(a=9372) or(a=9371) or(a=9370) or(a=9369) or(a=9368) or(a=9367) or(a=9366) or(a=9365) or
 27 (a=9364) or(a=9363) or(a=9362) or(a=9361) or(a=9360) or(a=9359) or(a=9358) or(a=9357) or(a=9356) or(a=9355) or(a=9354) or(a=9353) or(a=9352) or(a=9351) or(a=9350) or(a=9349) or(a=9348) or(a=9347) or
 28 (a=9346) or(a=9345) or(a=9344) or(a=9343) or(a=9342) or(a=9341) or(a=9340) or(a=9339) or(a=9338) or(a=9337) or(a=9336) or(a=9335) or(a=9334) or(a=9333) or(a=9332) or(a=9331) or(a=9330) or(a=9329) or
 29 (a=9328) or(a=9327) or(a=9326) or(a=9325) or(a=9324) or(a=9323) or(a=9322) or(a=9321) or(a=9320) or(a=9319) or(a=9318) or(a=9317) or(a=9316) or(a=9315) or(a=9314) or(a=9313) or(a=9312) or(a=9311) or
 30 (a=9310) or(a=9309) or(a=9308) or(a=9307) or(a=9306) or(a=9305) or(a=9304) or(a=9303) or(a=9302) or(a=9301) or(a=9300) or(a=9299) or(a=9298) or(a=9297) or(a=9296) or(a=9295) or(a=9294) or(a=9293) or
 31 (a=9292) or(a=9291) or(a=9290) or(a=9289) or(a=9288) or(a=9287) or(a=9286) or(a=9285) or(a=9284) or(a=9283) or(a=9282) or(a=9281) or(a=9280) or(a=9279) or(a=9278) or(a=9277) or(a=9276) or(a=9275) or
 32 (a=9274) or(a=9273) or(a=9272) or(a=9271) or(a=9270) or(a=9269) or(a=9268) or(a=9267) or(a=9266) or(a=9265) or(a=9264) or(a=9263) or(a=9262) or(a=9261) or(a=9260) or(a=9259) or(a=9258) or(a=9257) or
 33 (a=9256) or(a=9255) or(a=9254) or(a=9253) or(a=9252) or(a=9251) or(a=9250) or(a=9249) or(a=9248) or(a=9247) or(a=9246) or(a=9245) or(a=9244) or(a=9243) or(a=9242) or(a=9241) or(a=9240) or(a=9239) or
 34 (a=9238) or(a=9237) or(a=9236) or(a=9235) or(a=9234) or(a=9233) or(a=9232) or(a=9231) or(a=9230) or(a=9229) or(a=9228) or(a=9227) or(a=9226) or(a=9225) or(a=9224) or(a=9223) or(a=9222) or(a=9221) or
 35 (a=9220) or(a=9219) or(a=9218) or(a=9217) or(a=9216) or(a=9215) or(a=9214) or(a=9213) or(a=9212) or(a=9211) or(a=9210) or(a=9209) or(a=9208) or(a=9207) or(a=9206) or(a=9205) or(a=9204) or(a=9203) or
 36 (a=9202) or(a=9201) or(a=9200) or(a=9199) or(a=9198) or(a=9197) or(a=9196) or(a=9195) or(a=9194) or(a=9193) or(a=9192) or(a=9191) or(a=9190) or(a=9189) or(a=9188) or(a=9187) or(a=9186) or(a=9185) or
 37 (a=9184) or(a=9183) or(a=9182) or(a=9181) or(a=9180) or(a=9179) or(a=9178) or(a=9177) or(a=9176) or(a=9175) or(a=9174) or(a=9173) or(a=9172) or(a=9171) or(a=9170) or(a=9169) or(a=9168) or(a=9167) or
 38 (a=9166) or(a=9165) or(a=9164) or(a=9163) or(a=9162) or(a=9161) or(a=9160) or(a=9159) or(a=9158) or(a=9157) or(a=9156) or(a=9155) or(a=9154) or(a=9153) or(a=9152) or(a=9151) or(a=9150) or(a=9149) or
 39 (a=9148) or(a=9147) or(a=9146) or(a=9145) or(a=9144) or(a=9143) or(a=9142) or(a=9141) or(a=9140) or(a=9139) or(a=9138) or(a=9137) or(a=9136) or(a=9135) or(a=9134) or(a=9133) or(a=9132) or(a=9131) or
 40 (a=9130) or(a=9129) or(a=9128) or(a=9127) or(a=9126) or(a=9125) or(a=9124) or(a=9123) or(a=9122) or(a=9121) or(a=9120) or(a=9119) or(a=9118) or(a=9117) or(a=9116) or(a=9115) or(a=9114) or(a=9113) or
 41 (a=9112) or(a=9111) or(a=9110) or(a=9109) or(a=9108) or(a=9107) or(a=9106) or(a=9105) or(a=9104) or(a=9103) or(a=9102) or(a=9101) or(a=9100) or(a=9099) or(a=9098) or(a=9097) or(a=9096) or(a=9095) or
 42 (a=9094) or(a=9093) or(a=9092) or(a=9091) or(a=9090) or(a=9089) or(a=9088) or(a=9087) or(a=9086) or(a=9085) or(a=9084) or(a=9083) or(a=9082) or(a=9081) or(a=9080) or(a=9079) or(a=9078) or(a=9077) or
 43 (a=9076) or(a=9075) or(a=9074) or(a=9073) or(a=9072) or(a=9071) or(a=9070) or(a=9069) or(a=9068) or(a=9067) or(a=9066) or(a=9065) or(a=9064) or(a=9063) or(a=9062) or(a=9061) or(a=9060) or(a=9059) or
 44 (a=9058) or(a=9057) or(a=9056) or(a=9055) or(a=9054) or(a=9053) or(a=9052) or(a=9051) or(a=9050) or(a=9049) or(a=9048) or(a=9047) or(a=9046) or(a=9045) or(a=9044) or(a=9043) or(a=9042) or(a=9041) or
 45 (a=9040) or(a=9039) or(a=9038) or(a=9037) or(a=9036) or(a=9035) or(a=9034) or(a=9033) or(a=9032) or(a=9031) or(a=9030) or(a=9029) or(a=9028) or(a=9027) or(a=9026) or(a=9025) or(a=9024) or(a=9023) or
 46 (a=9022) or(a=9021) or(a=9020) or(a=9019) or(a=9018) or(a=9017) or(a=9016) or(a=9015) or(a=9014) or(a=9013) or(a=9012) or(a=9011) or(a=9010) or(a=9009) or(a=9008) or(a=9007) or(a=9006) or(a=9005) or(a=9004) or(a=9003) or(a=9002) or
 47 (a=9001) or(a=9000) or(a=8999) or(a=8998) or(a=8997) or(a=8996) or(a=8995) or(a=8994) or(a=8993) or(a=8992) or(a=8991) or(a=8990) or(a=8989) or(a=8988) or(a=8987) or(a=8986) or(a=8985) or(a=8984) or(a=8983) or(a=8982) or(a=8981) or
 48 (a=8980) or(a=8979) or(a=8978) or(a=8977) or(a=8976) or(a=8975) or(a=8974) or(a=8973) or(a=8972) or(a=8971) or(a=8970) or(a=8969) or(a=8968) or(a=8967) or(a=8966) or(a=8965) or(a=8964) or(a=8963) or(a=8962) or(a=8961) or(a=8960) or
 49 (a=8959) or(a=8958) or(a=8957) or(a=8956) or(a=8955) or(a=8954) or(a=8953) or(a=8952) or(a=8951) or(a=8950) or(a=8949) or(a=8948) or(a=8947) or(a=8946) or(a=8945) or(a=8944) or(a=8943) or(a=8942) or(a=8941) or(a=8940) or(a=8939) or
 50 (a=8938) or(a=8937) or(a=8936) or(a=8935) or(a=8934) or(a=8933) or(a=8932) or(a=8931) or(a=8930) or(a=8929) or(a=8928) or(a=8927) or(a=8926) or(a=8925) or(a=8924) or(a=8923) or(a=8922) or(a=8921) or(a=8920) or(a=8919) or(a=8918) or
 51 (a=8917) or(a=8916) or(a=8915) or(a=8914) or(a=8913) or(a=8912) or(a=8911) or(a=8910) or(a=8909) or(a=8908) or(a=8907) or(a=8906) or(a=8905) or(a=8904) or(a=8903) or(a=8902) or(a=8901) or(a=8900) or(a=8899) or(a=8898) or(a=8897) or(a=8896) or(a=8895) or(a=8894) or(a=8893) or(a=8892) or(a=8891) or(a=8890) or(a=8889) or(a=8888) or
 52 (a=8887) or(a=8886) or(a=8885) or(a=8884) or(a=8883) or(a=8882) or(a=8881) or(a=8880) or(a=8879) or(a=8878) or(a=8877) or(a=8876) or(a=8875) or(a=8874) or(a=8873) or(a=8872) or(a=8871) or(a=8870) or(a=8869) or(a=8868) or(a=8867) or(a=8866) or(a=8865) or(a=8864) or(a=8863) or(a=8862) or(a=8861) or(a=8860) or(a=8859) or(a=8858) or
 53 (a=8857) or(a=8856) or(a=8855) or(a=8854) or(a=8853) or(a=8852) or(a=8851) or(a=8850) or(a=8849) or(a=8848) or(a=8847) or(a=8846) or(a=8845) or(a=8844) or(a=8843) or(a=8842) or(a=8841) or(a=8840) or(a=8839) or(a=8838) or(a=8837) or(a=8836) or(a=8835) or(a=8834) or(a=8833) or(a=8832) or(a=8831) or(a=8830) or(a=8829) or(a=8828) or
 54 (a=8827) or(a=8826) or(a=8825) or(a=8824) or(a=8823) or(a=8822) or(a=8821) or(a=8820) or(a=8819) or(a=8818) or(a=8817) or(a=8816) or(a=8815) or(a=8814) or(a=8813) or(a=8812) or(a=8811) or(a=8810) or(a=8809) or(a=8808) or(a=8807) or(a=8806) or(a=8805) or(a=8804) or(a=8803) or(a=8802) or(a=8801) or(a=8800) or(a=8799) or(a=8798) or
 55 (a=8797) or(a=8796) or(a=8795) or(a=8794) or(a=8793) or(a=8792) or(a=8791) or(a=8790) or(a=8789) or(a=8788) or(a=8787) or(a=8786) or(a=8785) or(a=8784) or(a=8783) or(a=8782) or(a=8781) or(a=8780) or(a=8779) or(a=8778) or(a=8777) or(a=8776) or(a=8775) or(a=8774) or(a=8773) or(a=8772) or(a=8771) or(a=8770) or(a=8769) or(a=8768) or
 56 (a=8767) or(a=8766) or(a=8765) or(a=8764) or(a=8763) or(a=8762) or(a=8761) or(a=8760) or(a=8759) or(a=8758) or(a=8757) or(a=8756) or(a=8755) or(a=8754) or(a=8753) or(a=8752) or(a=8751) or(a=8750) or(a=8749) or(a=8748) or(a=8747) or(a=8746) or(a=8745) or(a=8744) or(a=8743) or(a=8742) or(a=8741) or(a=8740) or(a=8739) or(a=8738) or
 57 (a=8737) or(a=8736) or(a=8735) or(a=8734) or(a=8733) or(a=8732) or(a=8731) or(a=8730) or(a=8729) or(a=8728) or(a=8727) or(a=8726) or(a=8725) or(a=8724) or(a=8723) or(a=8722) or(a=8721) or(a=8720) or(a=8719) or(a=8718) or(a=8717) or(a=8716) or(a=8715) or(a=8714) or(a=8713) or(a=8712) or(a=8711) or(a=8710) or(a=8709) or(a=8708) or
 58 (a=8707) or(a=8706) or(a=8705) or(a=8704) or(a=8703) or(a=8702) or(a=8701) or(a=8700) or(a=8699) or(a=8698) or(a=8697) or(a=8696) or(a=8695) or(a=8694) or(a=8693) or(a=8692) or(a=8691) or(a=8690) or(a=8689) or(a=8688) or(a=8687) or(a=8686) or(a=8685) or(a=8684) or(a=8683) or(a=8682) or(a=8681) or(a=8680) or(a=8679) or(a=8678) or
 59 (a=8677) or(a=8676) or(a=8675) or(a=8674) or(a=8673) or(a=8672) or(a=8671) or(a=8670) or(a=8669) or(a=8668) or(a=8667) or(a=8666) or(a=8665) or(a=8664) or(a=8663) or(a=8662) or(a=8661) or(a=8660) or(a=8659) or(a=8658) or(a=8657) or(a=8656) or(a=8655) or(a=8654) or(a=8653) or(a=8652) or(a=8651) or(a=8650) or(a=8649) or(a=8648) or
 60 (a=8647) or(a=8646) or(a=8645) or(a=8644) or(a=8643) or(a=8642) or(a=8641) or(a=8640) or(a=8639) or(a=8638) or(a=8637) or(a=8636) or(a=8635) or(a=8634) or(a=8633) or(a=8632) or(a=8631) or(a=8630) or(a=8629) or(a=8628) or(a=8627) or(a=8626) or(a=8625) or(a=8624) or(a=8623) or(a=8622) or(a=8621) or(a=8620) or(a=8619) or(a=8618) or
 61 (a=8617) or(a=8616) or(a=8615) or(a=8614) or(a=8613) or(a=8612) or(a=8611) or(a=8610) or(a=8609) or(a=8608) or(a=8607) or(a=8606) or(a=8605) or(a=8604) or(a=8603) or(a=8602) or(a=8601) or(a=8600) or(a=8599) or(a=8598) or(a=8597) or(a=8596) or(a=8595) or(a=8594) or(a=8593) or(a=8592) or(a=8591) or(a=8590) or(a=8589) or(a=8588) or
 62 (a=8587) or(a=8586) or(a=8585) or(a=8584) or(a=8583) or(a=8582) or(a=8581) or(a=8580) or(a=8579) or(a=8578) or(a=8577) or(a=8576) or(a=8575) or(a=8574) or(a=8573) or(a=8572) or(a=8571) or(a=8570) or(a=8569) or(a=8568) or(a=8567) or(a=8566) or(a=8565) or(a=8564) or(a=8563) or(a=8562) or(a=8561) or(a=8560) or(a=8559) or(a=8558) or
 63 (a=8557) or(a=8556) or(a=8555) or(a=8554) or(a=8553) or(a=8552) or(a=8551) or(a=8550) or(a=8549) or(a=8548) or(a=8547) or(a=8546) or(a=8545) or(a=8544) or(a=8543) or(a=8542) or(a=8541) or(a=8540) or(a=8539) or(a=8538) or(a=8537) or(a=8536) or(a=8535) or(a=8534) or(a=8533) or(a=8532) or(a=8531) or(a=8530) or(a=8529) or(a=8528) or
 64 (a=8527) or(a=8526) or(a=8525) or(a=8524) or(a=8523) or(a=8522) or(a=8521) or(a=8520) or(a=8519) or(a=8518) or(a=8517) or(a=8516) or(a=8515) or(a=8514) or(a=8513) or(a=8512) or(a=8511) or(a=8510) or(a=8509) or(a=8508) or(a=8507) or(a=8506) or(a=8505) or(a=8504) or(a=8503) or(a=8502) or(a=8501) or(a=8500) or(a=8499) or(a=8498) or
 65 (a=8497) or(a=8496) or(a=8495) or(a=8494) or(a=8493) or(a=8492) or(a=8491) or(a=8490) or(a=8489) or(a=8488) or(a=8487) or(a=8486) or(a=8485) or(a=8484) or(a=8483) or(a=8482) or(a=8481) or(a=8480) or(a=8479) or(a=8478) or(a=8477) or(a=8476) or(a=8475) or(a=8474) or(a=8473) or(a=8472) or(a=8471) or(a=8470) or(a=8469) or(a=8468) or
 66 (a=8467) or(a=8466) or(a=8465) or(a=8464) or(a=8463) or(a=8462) or(a=8461) or(a=8460) or(a=8459) or(a=8458) or(a=8457) or(a=8456) or(a=8455) or(a=8454) or(a=8453) or(a=8452) or(a=8451) or(a=8450) or(a=8449) or(a=8448) or(a=8447) or(a=8446) or(a=8445) or(a=8444) or(a=8443) or(a=8442) or(a=8441) or(a=8440) or(a=8439) or(a=8438) or
 67 (a=8437) or(a=8436) or(a=8435) or(a=8434) or(a=8433) or(a=8432) or(a=8431) or(a=8430) or(a=8429) or(a=8428) or(a=8427) or(a=8426) or(a=8425) or(a=8424) or(a=8423) or(a=8422) or(a=8421) or(a=8420) or(a=8419) or(a=8418) or(a=8417) or(a=8416) or(a=8415) or(a=8414) or(a=8413) or(a=8412) or(a=8411) or(a=8410) or(a=8409) or(a=8408) or
 68 (a=8407) or(a=8406) or(a=8405) or(a=8404) or(a=8403) or(a=8402) or(a=8401) or(a=8400) or(a=8399) or(a=8398) or(a=8397) or(a=8396) or(a=8395) or(a=8394) or(a=8393) or(a=8392) or(a=8391) or(a=8390) or(a=8389) or(a=8388) or(a=8387) or(a=8386) or(a=8385) or(a=8384) or(a=8383) or(a=8382) or(a=8381) or(a=8380) or(a=8379) or(a=8378) or
 69 (a=8377) or(a=8376) or(a=8375) or(a=8374) or(a=8373) or(a=8372) or(a=8371) or(a=8370) or(a=8369) or(a=8368) or(a=8367) or(a=8366) or(a=8365) or(a=8364) or(a=8363) or(a=8362) or(a=8361) or(a=8360) or(a=8359) or(a=8358) or(a=8357) or(a=8356) or(a=8355) or(a=8354) or(a=8353) or(a=8352) or(a=8351) or(a=8350) or(a=8349) or(a=8348) or
 70 (a=8347) or(a=8346) or(a=8345) or(a=8344) or(a=8343) or(a=8342) or(a=8341) or(a=8340) or(a=8339) or(a=8338) or(a=8337) or(a=8336) or(a=8335) or(a=8334) or(a=8333) or(a=8332) or(a=8331) or(a=8330) or(a=8329) or(a=8328) or(a=8327) or(a=8326) or(a=8325) or(a=8324) or(a=8323) or(a=8322) or(a=8321) or(a=8320) or(a=8319) or(a=8318) or
 71 (a=8317) or(a=8316) or(a=8315) or(a=8314) or(a=8313) or(a=8312) or(a=8311) or(a=8310) or(a=8309) or(a=8308) or(a=8307) or(a=8306) or(a=8305) or(a=8304) or(a=8303) or(a=8302) or(a=8301) or(a=8300) or(a=8299) or(a=8298) or(a=8297) or(a=8296) or(a=8295) or(a=8294) or(a=8293) or(a=8292) or(a=8291) or(a=8290) or(a=8289) or(a=8288) or
 72 (a=8287) or(a=8286) or(a=8285) or(a=8284) or(a=8283) or(a=8282) or(a=8281) or(a=8280) or(a=8279) or(a=8278) or(a=8277) or(a=8276) or(a=8275) or(a=8274) or(a=8273) or(a=8272) or(a=8271) or(a=8270) or(a=8269) or(a=8268) or(a=8267) or(a=8266) or(a=8265) or(a=8264) or(a=8263) or(a=8262) or(a=8261) or(a=8260) or(a=8259) or(a=8258) or
 73 (a=8257) or(a=8256) or(a=8255) or(a=8254) or(a=8253) or(a=8252) or(a=8251) or(a=8250) or(a=8249) or(a=8248) or(a=8247) or(a=8246) or(a=8245) or(a=8244) or(a=8243) or(a=8242) or(a=8241) or(a=8240) or(a=8239) or(a=8238) or(a=8237) or(a=8236) or(a=8235) or(a=8234) or(a=8233) or(a=8232) or(a=8231) or(a=8230) or(a=8229) or(a=8228) or
 74 (a=8227) or(a=8226) or(a=8225) or(a=8224) or(a=8223) or(a=8222) or(a=8221) or(a=8220) or(a=8219) or(a=8218) or(a=8217) or(a=8216) or(a=8215) or(a=8214) or(a=8213) or(a=8212) or(a=8211) or(a=8210) or(a=8209) or(a=8208) or(a=8207) or(a=8206) or(a=8205) or(a=8204) or(a=8203) or(a=8202) or(a=8201) or(a=8200) or(a=8199) or(a=8198) or
 75 (a=8197) or(a=8196) or(a=8195) or(a=8194) or(a=8193) or(a=8192) or(a=8191) or(a=8190) or(a=8189) or(a=8188) or(a=8187) or(a=8186) or(a=8185) or(a=8184) or(a=8183) or(a=8182) or(a=8181) or(a=8180) or(a=8179) or(a=8178) or(a=8177) or(a=8176) or(a=8175) or(a=8174) or(a=8173) or(a=8172) or(a=8171) or(a=8170) or(a=8169) or(a=8168) or
 76 (a=8167) or(a=8166) or(a=8165) or(a=8164) or(a=8163) or(a=8162) or(a=8161) or(a=8160) or(a=8159) or(a=8158) or(a=8157) or(a=8156) or(a=8155) or(a=8154) or(a=8153) or(a=8152) or(a=8151) or(a=8150) or(a=8149) or(a=8148) or(a=8147) or(a=8146) or(a=8145) or(a=8144) or(a=8143) or(a=8142) or(a=8141) or(a=8140) or(a=8139) or(a=8138) or
 77 (a=8137) or(a=8136) or(a=8135) or(a=8134) or(a=8133) or(a=8132) or(a=8131) or(a=8130) or(a=8129) or(a=8128) or(a=8127) or(a=8126) or(a=8125) or(a=8124) or(a=8123) or(a=8122) or(a=8121) or(a=8120) or(a=8119) or(a=8118) or(a=8117) or(a=8116) or(a=8115) or(a=8114) or(a=8113) or(a=8112) or(a=8111) or(a=8110) or(a=8109) or(a=8108) or
 78 (a=8107) or(a=8106) or(a=8105) or(a=8104) or(a=8103) or(a=8102) or(a=8101) or(a=8100) or(a=8099) or(a=8098) or(a=8097) or(a=8096) or(a=8095) or(a=8094) or(a=8093) or(a=8092) or(a=8091) or(a=8090) or(a=8089) or(a=8088) or(a=8087) or(a=8086) or(a=8085) or(a=8084) or(a=8083) or(a=8082) or(a=8081) or(a=8080) or(a=8079) or(a=8078) or
 79 (a=8077) or(a=8076) or(a=8075) or(a=8074) or(a=8073) or(a=8072) or(a=8071) or(a=8070) or(a=8069) or(a=8068) or(a=8067) or(a=8066) or(a=8065) or(a=8064) or(a=8063) or(a=8062) or(a=8061) or(a=8060) or(a=8059) or(a=8058) or(a=8057) or(a=8056) or(a=8055) or(a=8054) or(a=8053) or(a=8052) or(a=8051) or(a=8050) or(a=8049) or(a=8048) or
 80 (a=8047) or(a=8046) or(a=8045) or(a=8044) or(a=8043) or(a=8042) or(a=8041) or(a=8040) or(a=8039) or(a=8038) or(a=8037) or(a=8036) or(a=8035) or(a=8034) or(a=8033) or(a=8032) or(a=8031) or(a=8030) or(a=8029) or(a=8028) or(a=8027) or(a=8026) or(a=8025) or(a=8024) or(a=8023) or(a=8022) or(a=8021) or(a=8020) or(a=8019) or(a=8018) or
 81 (a=8017) or(a=8016) or(a=8015) or(a=8014) or(a=8013) or(a=8012) or(a=8011) or(a=8010) or(a=8009) or(a=8008) or(a=8007) or(a=8006) or(a=8005) or(a=8004) or(a=8003) or(a=8002) or(a=8001) or(a=8000) or(a=7999) or(a=7998) or(a=7997) or(a=7996) or(a=7995) or(a=7994) or(a=7993) or(a=7992) or(a=7991) or(a=7990) or(a=7989) or(a=7988) or
 82 (a=7987) or(a=7986) or(a=7985) or(a=7984) or(a=7983) or(a=7982) or(a=7981) or(a=7980) or(a=7979) or(a=7978) or(a=7977) or(a=7976) or(a=7975) or(a=7974) or(a=7973) or(a=7972) or(a=7971) or(a=7970) or(a=7969) or(a=7968) or(a=7967) or(a=7966) or(a=7965) or(a=7964) or(a=7963) or(a=7962) or(a=7961) or(a=7960) or(a=7959) or(a=7958) or
 83 (a=7957) or(a=7956) or(a=7955) or(a=7954) or(a=7953) or(a=7952) or(a=7951) or(a=7950) or(a=7949) or(a=7948) or(a=7947) or(a=7946) or(a=7945) or(a=7944) or(a=7943) or(a=7942) or(a=7941) or(a=7940) or(a=7939) or(a=7938) or(a=7937) or(a=7936) or(a=7935) or(a=7934) or(a=7933) or(a=7932) or(a=7931) or(a=7930) or(a=7929) or(a=7928) or
 84 (a=7927) or(a=7926) or(a=7925) or(a=7924) or(a=7923) or(a=7922) or(a=7921) or(a=7920) or(a=7919) or(a=7918) or(a=7917) or(a=7916) or(a=7915) or(a=7914) or(a=7913) or(a=7912) or(a=7911) or(a=7910) or(a=7909) or(a=7908) or(a=7907) or(a=7906) or(a=7905) or(a=7904) or(a=7903) or(a=7902) or(a=7901) or(a=7900) or(a=7899) or(a=7898) or
 85 (a=7897) or(a=7896) or(a=7895) or(a=7894) or(a=7893) or(a=7892) or(a=7891) or(a=7890) or(a=7889) or(a=7888) or(a=7887) or(a=7886) or(a=7885) or(a=7884) or(a=7883) or(a=7882) or(a=7881) or(a=7880) or(a=7879) or(a=7878) or(a=7877) or(a=7876) or(a=7875) or(a=7874) or(a=7873) or(a=7872) or(a=7871) or(a=7870) or(a=7869) or(a=7868) or
 86 (a=7867) or(a=7866) or(a=7865) or(a=7864) or(a=7863) or(a=7862) or(a=7861) or(a=7860) or(a=7859) or(a=7858) or(a=7857) or(a=7856) or(a=7855) or(a=7854) or(a=7853) or(a=7852) or(a=7851) or(a=7850) or(a=7849) or(a=7848) or(a=7847) or(a=7846) or(a=7845) or(a=7844) or(a=7843) or(a=7842) or(a=7841) or(a=7840) or(a=7839) or(a=7838) or
 87 (a=7837) or(a=7836) or(a=7835) or(a=7834) or(a=7833) or(a=7832) or(a=7831) or(a=7830) or(a=7829) or(a=7828) or(a=7827) or(a=7826) or(a=7825) or(a=7824) or(a=7823) or(a=7822) or(a=7821) or(a=7820) or(a=7819) or(a=7818) or(a=7817) or(a=7816) or(a=7815) or(a=7814) or(a=7813) or(a=7812) or(a=7811) or(a=7810) or(a=7809) or(a=7808) or
 88 (a=7807) or(a=7806) or(a=7805) or(a=7804) or(a=7803) or(a=7802) or(a=7801) or(a=7800) or(a=7799) or(a=7798) or(a=7797) or(a=7796) or(a=7795) or(a=7794) or(a=7793) or(a=7792) or(a=7791) or(a=7790) or(a=7789) or(a=7788) or(a=7787) or(a=7786) or(a=7785) or(a=7784) or(a=7783) or(a=7782) or(a=7781) or(a=7780) or(a=7779) or(a=7778) or
 89 (a=7777) or(a=7776) or(a=7775) or(a=7774) or(a=7773) or(a=7772) or(a=7771) or(a=7770) or(a=7769) or(a=7768) or(a=7767) or(a=7766) or(a=7765) or(a=7764) or(a=7763) or(a=7762) or(a=7761) or(a=7760) or(a=7759) or(a=7758) or(a=7757) or(a=7756) or(a=7755) or(a=7754) or(a=7753) or(a=7752) or(a=7751) or(a=7750) or(a=7749) or(a=7748) or
 90 (a=7747) or(a=7746) or(a=7745) or(a=7744) or(a=7743) or(a=7742) or(a=7741) or(a=7740) or(a=7739) or(a=7738) or(a=7737) or(a=7736) or(a=7735) or(a=7734) or(a=7733) or(a=7732) or(a=7731) or(a=7730) or(a=7729) or(a=7728) or(a=7727) or(a=7726) or(a=7725) or(a=7724) or(a=7723) or(a=7722) or(a=7721) or(a=7720) or(a=7719) or(a=7718) or
 91 (a=7717) or(a=7716) or(a=7715) or(a=7714) or(a=7713) or(a=7712) or(a=7711) or(a=7710) or(a=7709) or(a=7708) or(a=7707) or(a=7706) or(a=7705) or(a=7704) or(a=7703) or(a=7702) or(a=7701) or(a=7700) or(a=7699) or(a=7698) or(a=7697) or(a=7696) or(a=7695) or(a=7694) or(a=7693) or(a=7692) or(a=7691) or(a=7690) or(a=7689) or(a=7688) or
 92 (a=7687) or(a=7686) or(a=7685) or(a=7684) or(a=7683) or(a=7682) or(a=7681) or(a=7680) or(a=7679) or(a=7678) or(a=7677) or(a=7676) or(a=7675) or(a=7674) or(a=7673) or(a=7672) or(a=7671) or(a=7670) or(a=7669) or(a=7668) or(a=7667) or(a=7666) or(a=7665) or(a=7664) or(a=7663) or(a=7662) or(a=7661) or(a=7660) or(a=7659) or(a=7658) or
 93 (a=7657) or(a=7656) or(a=7655) or(a=7654) or(a=7653) or(a=7652) or(a=7651) or(a=7650) or(a=7649) or(a=7648) or(a=7647) or(a=7646) or(a=7645) or(a=7644) or(a=7643) or(a=7642) or(a=7641) or(a=7640) or(a=7639) or(a=7638) or(a=7637) or(a=7636) or(a=7635) or(a=7634) or(a=7633) or(a=7632) or(a=7631) or(a=7630) or(a=7629) or(a=7628) or
 94 (a=7627) or(a=7626) or(a=7625) or(a=7624) or(a=7623) or(a=7622) or(a=7621) or(a=7620) or(a=7619) or(a=7618) or(a=7617) or(a=7616) or(a=7615) or(a=7614) or(a=7613) or(a=7612) or(a=7611) or(a=7610) or(a=7609) or(a=7608) or(a=7607) or(a=7606) or(a=7605) or(a=7604) or(a=7603) or(a=7602) or(a=7601) or(a=7600) or(a=7599) or(a=7598) or
 95 (a=7597) or(a=7596) or(a=7595) or(a=7594) or(a=7593) or(a=7592) or(a=7591) or(a=7590) or(a=7589) or(a=7588) or(a=7587) or(a=7586) or(a=7585) or(a=7584) or(a=7583) or(a=7582) or(a=7581) or(a=7580) or(a=7579) or(a=7578) or(a=7577) or(a=7576) or(a=7575) or(a=7574) or(a=7573) or(a=7572) or(a=7571) or(a=7570) or(a=7569) or(a=7568) or
 96 (a=7567) or(a=7566) or(a=7565) or(a=7564) or(a=7563) or(a=7562) or(a=7561) or(a=7560) or(a=7559) or(a=7558) or(a=7557) or(a=7556) or(a=7555) or(a=7554) or(a=7553) or(a=7552) or(a=7551) or(a=7550) or(a=7549) or(a=7548) or(a=7547) or(a=7546) or(a=7545) or(a=7544) or(a=7543) or(a=7542) or(a=7541) or(a=7540) or(a=7539) or(a=7538) or
 97 (a=7537) or(a=7536) or(a=7535) or(a=7534) or(a=7533) or(a=7532) or(a=7531) or(a=7530) or(a=7529) or(a=7528) or(a=7527) or(a=7526) or(a=7525) or(a=7524) or(a=7523) or(a=7522) or(a=7521) or(a=7520) or(a=7519) or(a=7518) or(a=7517) or(a=7516) or(a=7515) or(a=7514) or(a=7513) or(a=7512) or(a=7511) or(a=7510) or(a=7509) or(a=7508) or
 98 (a=7507) or(a=7506) or(a=7505) or(a=7504) or(a=7503) or(a=7502) or(a=7501) or(a=7500) or(a=7499) or(a=7498) or(a=7497) or(a=7496) or(a=7495) or(a=7494) or(a=7493) or(a=7492) or(a=7491) or(a=7490) or(a=7489) or(a=7488) or(a=7487) or(a=7486) or(a=7485) or(a=7484) or(a=7483) or(a=7482) or(a=7481) or(a=7480) or(a=7479) or(a=7478) or
 99 (a=7477) or(a=7476) or(a=7475) or(a=7474) or(a=7473) or(a=7472) or(a=7471) or(a=7470) or(a=7469) or(a=7468) or(a=7467) or(a=7466) or(a=7465) or(a=7464) or(a=7463) or(a=7462) or(a=7461) or(a=7460) or(a=7459) or(a=7458) or(a=7457) or(a=7456) or(a=7455) or(a=7454) or(a=7453) or(a=7452) or(a=7451) or(a=7450) or(a=7449) or(a=7448) or
100 (a=7447) or(a=7446) or(a=7445) or(a=7444) or(a=7443) or(a=7442) or(a=7441) or(a=7440) or(a=7439) or(a=7438) or(a=7437) or(a=7436) or(a=7435) or(a=7434) or(a=7433) or(a=7432) or(a=7431) or(a=7430) or(a=7429) or(a=7428) or(a=7427) or(a=7426) or(a=7425) or(a=7424) or(a=7423) or(a=7422) or(a=7421) or(a=7420) or(a=7419) or(a=7418) or
101 (a=7417) or(a=7416) or(a=7415) or(a=7414) or(a=7413) or(a=7412) or(a=7411) or(a=7410) or(a=7409) or(a=7408) or(a=7407) or(a=7406) or(a=7405) or(a=7404) or(a=7403) or(a=7402) or(a=7401) or(a=7400) or(a=7399) or(a=7398) or(a=7397) or(a=7396) or(a=7395) or(a=7394) or(a=7393) or(a=7392) or(a=7391) or(a=7390) or(a=7389) or(a=7388) or
102 (a=7387) or(a=7386) or(a=7385) or(a=7384) or(a=7383) or(a=7382) or(a=7381) or(a=7380) or(a=7379) or(a=7378) or(a=7377) or(a=7376) or(a=7375) or(a=7374) or(a=7373) or(a=7372) or(a=7371) or(a=7370) or(a=7369) or(a=7368) or(a=7367) or(a=7366) or(a=7365) or(a=7364) or(a=7363) or(a=7362) or(a=7361) or(a=7360) or(a=7359) or(a=7358) or
103 (a=7357) or(a=7356) or(a=7355) or(a=7354) or(a=7353) or(a=7352) or(a=7351) or(a=7350) or(a=7349) or(a=7348) or(a=7347) or(a=7346) or(a=7345) or(a=7344) or(a=7343) or(a=7342) or(a=7341) or(a=7340) or(a=7339) or(a=7338) or(a=7337) or(a=7336) or(a=7335) or(a=7334) or(a=7333) or(a=7332) or(a=7331) or(a=7330) or(a=7329) or(a=7328) or
104 (a=7327) or(a=7326) or(a=7325) or(a=7324) or(a=7323) or(a=7322) or(a=7321) or(a=7320) or(a=7319) or(a=7318) or(a=7317) or(a=7316) or(a=7315) or(a=7314) or(a=7313) or(a=7312) or(a=7311) or(a=7310) or(a=7309) or(a=7308) or(a=7307) or(a=7306) or(a=7305) or(a=7304) or(a=7303) or(a=7302) or(a=7301) or(a=7300) or(a=7299) or(a=7298) or
105 (a=7297) or(a=7296) or(a=7295) or(a=7294) or(a=7293) or(a=7292) or(a=7291) or(a=7290) or(a=7289) or(a=7288) or(a=7287) or(a=7286) or(a=7285) or(a=7284) or(a=7283) or(a=7282) or(a=7281) or(a=7280) or(a=7279) or(a=7278) or(a=7277) or(a=7276) or(a=7275) or(a=7274) or(a=7273) or(a=7272) or(a=7271) or(a=7270) or(a=7269) or(a=7268) or
106 (a=7267) or(a=7266) or(a=7265) or(a=7264) or(a=7263) or(a=7262) or(a=7261) or(a=7260) or(a=7259) or(a=7258) or(a=7257) or(a=7256) or(a=7255) or(a=7254) or(a=7253) or(a=7252) or(a=7251) or(a=7250) or(a=7249) or(a=7248) or(a=7247) or(a=7246) or(a=7245) or(a=7244) or(a=7243) or(a=7242) or(a=7241) or(a=7240) or(a=7239) or(a=7238) or
107 (a=7237) or(a=7236) or(a=7235) or(a=7234) or(a=7233) or(a=7232) or(a=7231) or(a=7230) or(a=7229) or(a=7228) or(a=7227) or(a=7226) or(a=7225) or(a=7224) or(a=7223) or(a=7222) or(a=7221) or(a=7220) or(a=7219) or(a=7218) or(a=7217) or(a=7216) or(a=7215) or(a=7214) or(a=7213) or(a=7212) or(a=7211) or(a=7210) or(a=7209) or(a=7208) or
108 (a=7207) or(a=7206) or(a=7205) or(a=7204) or(a=7203) or(a=7202) or(a=7201) or(a=7200) or(a=7199) or(a=7198) or(a=7197) or(a=7196) or(a=7195) or(a=7194) or(a=7193) or(a=7192) or(a=7191) or(a=7190) or(a=7189) or(a=7188) or(a=7187) or(a=7186) or(a=7185) or(a=7184) or(a=7183) or(a=7182) or(a=7181) or(a=7180) or(a=7179) or(a=7178) or
109 (a=7177) or(a=7176) or(a=7175) or(a=7174) or(a=7173) or(a=7172) or(a=7171) or(a=7170) or(a=7169) or(a=7168) or(a=7167) or(a=7166) or(a=7165) or(a=7164) or(a=7163) or(a=7162) or(a=7161) or(a=7160) or(a=7159) or(a=7158) or(a=7157) or(a=7156) or(a=7155) or(a=7154) or(a=7153) or(a=7152) or(a=7151) or(a=7150) or(a=7149) or(a=7148) or
110 (a=7147) or(a=7146) or(a=7145) or(a=7144) or(a=7143) or(a=7142) or(a=7141) or(a=7140) or(a=7139) or(a=7138) or(a=7137) or(a=7136) or(a=7135) or(a=7134) or(a=7133) or(a=7132) or(a=7131) or(a=7130) or(a=7129) or(a=7128) or(a=7127) or(a=7126) or(a=7125) or(a=7124) or(a=7123) or(a=7122) or(a=7121) or(a=7120) or(a=7119) or(a=7118) or
111 (a=7117) or(a=7116) or(a=7115) or(a=7114) or(a=7113) or(a=7112) or(a=7111) or(a=7110) or(a=7109) or(a=7108) or(a=7107) or(a=7106) or(a=7105) or(a=7104) or(a=7103) or(a=7102) or(a=7101) or(a=7100) or(a=7099) or(a=7098) or(a=7097) or(a=7096) or(a=7095) or(a=7094) or(a=7093) or(a=7092) or(a=7091) or(a=7090) or(a=7089) or(a=7088) or
112 (a=7087) or(a=7086) or(a=7085) or(a=7084) or(a=7083) or(a=7082) or(a=7081) or(a=7080) or(a=7079) or(a=7078) or(a=7077) or(a=7076) or(a=7075) or(a=7074) or(a=7073) or(a=7072) or(a=7071) or(a=7070) or(a=7069) or(a=7068) or(a=7067) or(a=7066) or(a=7065) or(a=7064) or(a=7063) or(a=7062) or(a=7061) or(a=7060) or(a=7059) or(a=7058) or
113 (a=7057) or(a=7056) or(a=7055) or(a=7054) or(a=7053) or(a=7052) or(a=7051) or(a=7050) or(a=7049) or(a=7048) or(a=7047) or(a=7046) or(a=7045) or(a=7044) or(a=7043) or(a=7042) or(a=7041) or(a=7040) or(a=7039) or(a=7038) or(a=7037) or(a=7036) or(a=7035) or(a=7034) or(a=7033) or(a=7032) or(a=7031) or(a=7030) or(a=7029) or(a=7028) or
114 (a=7027) or(a=7026) or(a=7025) or(a=7024) or(a=7023) or(a=7022) or(a=7021) or(a=7020) or(a=7019) or(a=7018) or(a=7017) or(a=7016) or(a=7015) or(a=7014) or(a=7013) or(a=7012) or(a=7011) or(a=7010) or(a=7009) or(a=7008) or(a=7007) or(a=7006) or(a=7005) or(a=7004) or(a=7003) or(a=7002) or(a=7001) or(a=7000) or(a=6999) or(a=6998) or
115 (a=6997) or(a=6996) or(a=6995) or(a=6994) or(a=6993) or(a=6992) or(a=6991) or(a=6990) or(a=6989) or(a=6988) or(a=6987) or(a=6986) or(a=6985) or(a=6984) or(a=6983) or(a=6982) or(a=6981) or(a=6980) or(a=6979) or(a=6978) or(a=6977) or(a=6976) or(a=6975) or(a=6974) or(a=6973) or(a=6972) or(a=6971) or(a=6970) or(a=6969) or(a=6968) or
116 (a=6967) or(a=6966) or(a=6965) or(a=6964) or(a=6963) or(a=6962) or(a=6961) or(a=6960) or(a=6959) or(a=6958) or(a=6957) or(a=6956) or(a=6955) or(a=6954) or(a=6953) or(a=6952) or(a=6951) or(a=6950) or(a=6949) or(a=6948) or(a=6947) or(a=6946) or(a=6945) or(a=6944) or(a=6943) or(a=6942) or(a=6941) or(a=6940) or(a=6939) or(a=6938) or
117 (a=6937) or(a=6936) or(a=6935) or(a=6934) or(a=6933) or(a=6932) or(a=6931) or(a=6930) or(a=6929) or(a=6928) or(a=6927) or(a=6926) or(a=6925) or(a=6924) or(a=6923) or(a=6922) or(a=6921) or(a=6920) or(a=6919) or(a=6918) or(a=6917) or(a=6916) or(a=6915) or(a=6914) or(a=6913) or(a=6912) or(a=6911) or(a=6910) or(a=6909) or(a=6908) or
118 (a=6907) or(a=6906) or(a=6905) or(a=6904) or(a=6903) or(a=6902) or(a=6901) or(a=6900) or(a=6899) or(a=6898) or(a=6897) or(a=6896) or(a=6895) or(a=6894) or(a=6893) or(a=6892) or(a=6891) or(a=6890) or(a=6889) or(a=6888) or(a=6887) or(a=6886) or(a=6885) or(a=6884) or(a=6883) or(a=6882) or(a=6881) or(a=6880) or(a=6879) or(a=6878) or
119 (a=9814) or(a=9813) or(a=9812) or(a=9811) or(a=9810) or(a=9809) or(a=9808) or(a=9807) or(a=9806) or(a=9805) or(a=9804) or(a=9803) or(a=9802) or(a=9801) or(a=9800) or(a=9799) or(a=9798) or(a=9797) or
120 (a=9796) or(a=9795) or(a=9794) or(a=9793) or(a=9792) or(a=9791) or(a=9790) or(a=9789) or(a=9788) or(a=9787) or(a=9786) or(a=9785) or(a=9784) or(a=9783) or(a=9782) or(a=9781) or(a=9780) or(a=9779) or
121 (a=9778) or(a=9777) or(a=9776) or(a=9775) or(a=9774) or(a=9773) or(a=9772) or(a=9771) or(a=9770) or(a=9769) or(a=9768) or(a=9767) or(a=9766) or(a=9765) or(a=9764) or(a=9763) or(a=9762) or(a=9761) or
122 (a=9760) or(a=9759) or(a=9758) or(a=9757) or(a=9756) or(a=9755) or(a=9754) or(a=9753) or(a=9752) or(a=9751) or(a=9750) or(a=9749) or(a=9748) or(a=9747) or(a=9746) or(a=9745) or(a=9744) or(a=9743) or
123 (a=9742) or(a=9741) or(a=9740) or(a=9739) or(a=9738) or(a=9737) or(a=9736) or(a=9735) or(a=9734) or(a=9733) or(a=9732) or(a=9731) or(a=9730) or(a=9729) or(a=9728) or(a=9727) or(a=9726) or(a=9725) or
124 (a=9724) or(a=9723) or(a=9722) or(a=9721) or(a=9720) or(a=9719) or(a=9718) or(a=9717) or(a=9716) or(a=9715) or(a=9714) or(a=9713) or(a=9712) or(a=9711) or(a=9710) or(a=9709) or(a=9708) or(a=9707) or
125 (a=9706) or(a=9705) or(a=9704) or(a=9703) or(a=9702) or(a=9701) or(a=9700) or(a=9699) or(a=9698) or(a=9697) or(a=9696) or(a=9695) or(a=9694) or(a=9693) or(a=9692) or(a=9691) or(a=9690) or(a=9689) or
126 (a=9688) or(a=9687) or(a=9686) or(a=9685) or(a=9684) or(a=9683) or(a=9682) or(a=9681) or(a=9680) or(a=9679) or(a=9678) or(a=9677) or(a=9676) or(a=9675) or(a=9674) or(a=9673) or(a=9672) or(a=9671) or
127 (a=9670) or(a=9669) or(a=9668) or(a=9667) or(a=9666) or(a=9665) or(a=9664) or(a=9663) or(a=9662) or(a=9661) or(a=9660) or(a=9659) or(a=9658) or(a=9657) or(a=9656) or(a=9655) or(a=9654) or(a=9653) or
128 (a=9652) or(a=9651) or(a=9650) or(a=9649) or(a=9648) or(a=9647) or(a=9646) or(a=9645) or(a=9644) or(a=9643) or(a=9642) or(a=9641) or(a=9640) or(a=9639) or(a=9638) or(a=9637) or(a=9636) or(a=9635) or
129 (a=9634) or(a=9633) or(a=9632) or(a=9631) or(a=9630) or(a=9629) or(a=9628) or(a=9627) or(a=9626) or(a=9625) or(a=9624) or(a=9623) or(a=9622) or(a=9621) or(a=9620) or(a=9619) or(a=9618) or(a=9617) or
130 (a=9616) or(a=9615) or(a=9614) or(a=9613) or(a=9612) or(a=9611) or(a=9610) or(a=9609) or(a=9608) or(a=9607) or(a=9606) or(a=9605) or(a=9604) or(a=9603) or(a=9602) or(a=9601) or(a=9600) or(a=9599) or
131 (a=9598) or(a=9597) or(a=9596) or(a=9595) or(a=9594) or(a=9593) or(a=9592) or(a=9591) or(a=9590) or(a=9589) or(a=9588) or(a=9587) or(a=9586) or(a=9585) or(a=9584) or(a=9583) or(a=9582) or(a=9581) or
132 (a=9580) or(a=9579) or(a=9578) or(a=9577) or(a=9576) or(a=9575) or(a=9574) or(a=9573) or(a=9572) or(a=9571) or(a=9570) or(a=9569) or(a=9568) or(a=9567) or(a=9566) or(a=9565) or(a=9564) or(a=9563) or
133 (a=9562) or(a=9561) or(a=9560) or(a=9559) or(a=9558) or(a=9557) or(a=9556) or(a=9555) or(a=9554) or(a=9553) or(a=9552) or(a=9551) or(a=9550) or(a=9549) or(a=9548) or(a=9547) or(a=9546) or(a=9545) or
134 (a=9544) or(a=9543) or(a=9542) or(a=9541) or(a=9540) or(a=9539) or(a=9538) or(a=9537) or(a=9536) or(a=9535) or(a=9534) or(a=9533) or(a=9532) or(a=9531) or(a=9530) or(a=9529) or(a=9528) or(a=9527) or
135 (a=9526) or(a=9525) or(a=9524) or(a=9523) or(a=9522) or(a=9521) or(a=9520) or(a=9519) or(a=9518) or(a=9517) or(a=9516) or(a=9515) or(a=9514) or(a=9513) or(a=9512) or(a=9511) or(a=9510) or(a=9509) or
136 (a=9508) or(a=9507) or(a=9506) or(a=9505) or(a=9504) or(a=9503) or(a=9502) or(a=9501) or(a=9500) or(a=9499) or(a=9498) or(a=9497) or(a=9496) or(a=9495) or(a=9494) or(a=9493) or(a=9492) or(a=9491) or
137 (a=9490) or(a=9489) or(a=9488) or(a=9487) or(a=9486) or(a=9485) or(a=9484) or(a=9483) or(a=9482) or(a=9481) or(a=9480) or(a=9479) or(a=9478) or(a=9477) or(a=9476) or(a=9475) or(a=9474) or(a=9473) or
138 (a=9472) or(a=9471) or(a=9470) or(a=9469) or(a=9468) or(a=9467) or(a=9466) or(a=9465) or(a=9464) or(a=9463) or(a=9462) or(a=9461) or(a=9460) or(a=9459) or(a=9458) or(a=9457) or(a=9456) or(a=9455) or
139 (a=9454) or(a=9453) or(a=9452) or(a=9451) or(a=9450) or(a=9449) or(a=9448) or(a=9447) or(a=9446) or(a=9445) or(a=9444) or(a=9443) or(a=9442) or(a=9441) or(a=9440) or(a=9439) or(a=9438) or(a=9437) or
140 (a=9436) or(a=9435) or(a=9434) or(a=9433) or(a=9432) or(a=9431) or(a=9430) or(a=9429) or(a=9428) or(a=9427) or(a=9426) or(a=9425) or(a=9424) or(a=9423) or(a=9422) or(a=9421) or(a=9420) or(a=9419) or
141 (a=9418) or(a=9417) or(a=9416) or(a=9415) or(a=9414) or(a=9413) or(a=9412) or(a=9411) or(a=9410) or(a=9409) or(a=9408) or(a=9407) or(a=9406) or(a=9405) or(a=9404) or(a=9403) or(a=9402) or(a=9401) or
142 (a=9400) or(a=9399) or(a=9398) or(a=9397) or(a=9396) or(a=9395) or(a=9394) or(a=9393) or(a=9392) or(a=9391) or(a=9390) or(a=9389) or(a=9388) or(a=9387) or(a=9386) or(a=9385) or(a=9384) or(a=9383) or
143 (a=9382) or(a=9381) or(a=9380) or(a=9379) or(a=9378) or(a=9377) or(a=9376) or(a=9375) or(a=9374) or(a=9373) or(a=9372) or(a=9371) or(a=9370) or(a=9369) or(a=9368) or(a=9367) or(a=9366) or(a=9365) or
144 (a=9364) or(a=9363) or(a=9362) or(a=9361) or(a=9360) or(a=9359) or(a=9358) or(a=9357) or(a=9356) or(a=9355) or(a=9354) or(a=9353) or(a=9352) or(a=9351) or(a=9350) or(a=9349) or(a=9348) or(a=9347) or
145 (a=9346) or(a=9345) or(a=9344) or(a=9343) or(a=9342) or(a=9341) or(a=9340) or(a=9339) or(a=9338) or(a=9337) or(a=9336) or(a=9335) or(a=9334) or(a=9333) or(a=9332) or(a=9331) or(a=9330) or(a=9329) or
146 (a=9328) or(a=9327) or(a=9326) or(a=9325) or(a=9324) or(a=9323) or(a=9322) or(a=9321) or(a=9320) or(a=9319) or(a=9318) or(a=9317) or(a=9316) or(a=9315) or(a=9314) or(a=9313) or(a=9312) or(a=9311) or
147 (a=9310) or(a=9309) or(a=9308) or(a=9307) or(a=9306) or(a=9305) or(a=9304) or(a=9303) or(a=9302) or(a=9301) or(a=9300) or(a=9299) or(a=9298) or(a=9297) or(a=9296) or(a=9295) or(a=9294) or(a=9293) or
148 (a=9292) or(a=9291) or(a=9290) or(a=9289) or(a=9288) or(a=9287) or(a=9286) or(a=9285) or(a=9284) or(a=9283) or(a=9282) or(a=9281) or(a=9280) or(a=9279) or(a=9278) or(a=9277) or(a=9276) or(a=9275) or
149 (a=9274) or(a=9273) or(a=9272) or(a=9271) or(a=9270) or(a=9269) or(a=9268) or(a=9267) or(a=9266) or(a=9265) or(a=9264) or(a=9263) or(a=9262) or(a=9261) or(a=9260) or(a=9259) or(a=9258) or(a=9257) or
150 (a=9256) or(a=9255) or(a=9254) or(a=9253) or(a=9252) or(a=9251) or(a=9250) or(a=9249) or(a=9248) or(a=9247) or(a=9246) or(a=9245) or(a=9244) or(a=9243) or(a=9242) or(a=9241) or(a=9240) or(a=9239) or
151 (a=9238) or(a=9237) or(a=9236) or(a=9235) or(a=9234) or(a=9233) or(a=9232) or(a=9231) or(a=9230) or(a=9229) or(a=9228) or(a=9227) or(a=9226) or(a=9225) or(a=9224) or(a=9223) or(a=9222) or(a=9221) or
152 (a=9220) or(a=9219) or(a=9218) or(a=9217) or(a=9216) or(a=9215) or(a=9214) or(a=9213) or(a=9212) or(a=9211) or(a=9210) or(a=9209) or(a=9208) or(a=9207) or(a=9206) or(a=9205) or(a=9204) or(a=9203) or
153 (a=9202) or(a=9201) or(a=9200) or(a=9199) or(a=9198) or(a=9197) or(a=9196) or(a=9195) or(a=9194) or(a=9193) or(a=9192) or(a=9191) or(a=9190) or(a=9189) or(a=9188) or(a=9187) or(a=9186) or(a=9185) or
154 (a=9184) or(a=9183) or(a=9182) or(a=9181) or(a=9180) or(a=9179) or(a=9178) or(a=9177) or(a=9176) or(a=9175) or(a=9174) or(a=9173) or(a=9172) or(a=9171) or(a=9170) or(a=9169) or(a=9168) or(a=9167) or
155 (a=9166) or(a=9165) or(a=9164) or(a=9163) or(a=9162) or(a=9161) or(a=9160) or(a=9159) or(a=9158) or(a=9157) or(a=9156) or(a=9155) or(a=9154) or(a=9153) or(a=9152) or(a=9151) or(a=9150) or(a=9149) or
156 (a=9148) or(a=9147) or(a=9146) or(a=9145) or(a=9144) or(a=9143) or(a=9142) or(a=9141) or(a=9140) or(a=9139) or(a=9138) or(a=9137) or(a=9136) or(a=9135) or(a=9134) or(a=9133) or(a=9132) or(a=9131) or
157 (a=9130) or(a=9129) or(a=9128) or(a=9127) or(a=9126) or(a=9125) or(a=9124) or(a=9123) or(a=9122) or(a=9121) or(a=9120) or(a=9119) or(a=9118) or(a=9117) or(a=9116) or(a=9115) or(a=9114) or(a=9113) or
158 (a=9112) or(a=9111) or(a=9110) or(a=9109) or(a=9108) or(a=9107) or(a=9106) or(a=9105) or(a=9104) or(a=9103) or(a=9102) or(a=9101) or(a=9100) or(a=9099) or(a=9098) or(a=9097) or(a=9096) or(a=9095) or
159 (a=9094) or(a=9093) or(a=9092) or(a=9091) or(a=9090) or(a=9089) or(a=9088) or(a=9087) or(a=9086) or(a=9085) or(a=9084) or(a=9083) or(a=9082) or(a=9081) or(a=9080) or(a=9079) or(a=9078) or(a=9077) or
160 (a=9076) or(a=9075) or(a=9074) or(a=9073) or(a=9072) or(a=9071) or(a=9070) or(a=9069) or(a=9068) or(a=9067) or(a=9066) or(a=9065) or(a=9064) or(a=9063) or(a=9062) or(a=9061) or(a=9060) or(a=9059) or
161 (a=9058) or(a=9057) or(a=9056) or(a=9055) or(a=9054) or(a=9053) or(a=9052) or(a=9051) or(a=9050) or(a=9049) or(a=9048) or(a=9047) or(a=9046) or(a=9045) or(a=9044) or(a=9043) or(a=9042) or(a=9041) or
162 (a=9040) or(a=9039) or(a=9038) or(a=9037) or(a=9036) or(a=9035) or(a=9034) or(a=9033) or(a=9032) or(a=9031) or(a=9030) or(a=9029) or(a=9028) or(a=9027) or(a=9026) or(a=9025) or(a=9024) or(a=9023) or
163 (a=9022) or(a=9021) or(a=9020) or(a=9019) or(a=9018) or(a=9017) or(a=9016) or(a=9015) or(a=9014) or(a=9013) or(a=9012) or(a=9011) or(a=9010) or(a=9009) or(a=9008) or(a=9007) or(a=9006) or(a=9005) or(a=9004) or(a=9003) or(a=9002) or
164 (a=9001) or(a=9000) or(a=8999) or(a=8998) or(a=8997) or(a=8996) or(a=8995) or(a=8994) or(a=8993) or(a=8992) or(a=8991) or(a=8990) or(a=8989) or(a=8988) or(a=8987) or(a=8986) or(a=8985) or(a=8984) or(a=8983) or(a=8982) or(a=8981) or
165 (a=8980) or(a=8979) or(a=8978) or(a=8977) or(a=8976) or(a=8975) or(a=8974) or(a=8973) or(a=8972) or(a=8971) or(a=8970) or(a=8969) or(a=8968) or(a=8967) or(a=8966) or(a=8965) or(a=8964) or(a=8963) or(a=8962) or(a=8961) or(a=8960) or
166 (a=8959) or(a=8958) or(a=8957) or(a=8956) or(a=8955) or(a=8954) or(a=8953) or(a=8952) or(a=8951) or(a=8950) or(a=8949) or(a=8948) or(a=8947) or(a=8946) or(a=8945) or(a=8944) or(a=8943) or(a=8942) or(a=8941) or(a=8940) or(a=8939) or
167 (a=8938) or(a=8937) or(a=8936) or(a=8935) or(a=8934) or(a=8933) or(a=8932) or(a=8931) or(a=8930) or(a=8929) or(a=8928) or(a=8927) or(a=8926) or(a=8925) or(a=8924) or(a=8923) or(a=8922) or(a=8921) or(a=8920) or(a=8919) or(a=8918) or
168 (a=8917) or(a=8916) or(a=8915) or(a=8914) or(a=8913) or(a=8912) or(a=8911) or(a=8910) or(a=8909) or(a=8908) or(a=8907) or(a=8906) or(a=8905) or(a=8904) or(a=8903) or(a=8902) or(a=8901) or(a=8900) or(a=8899) or(a=8898) or(a=8897) or(a=8896) or(a=8895) or(a=8894) or(a=8893) or(a=8892) or(a=8891) or(a=8890) or(a=8889) or(a=8888) or
169 (a=8887) or(a=8886) or(a=8885) or(a=8884) or(a=8883) or(a=8882) or(a=8881) or(a=8880) or(a=8879) or(a=8878) or(a=8877) or(a=8876) or(a=8875) or(a=8874) or(a=8873) or(a=8872) or(a=8871) or(a=8870) or(a=8869) or(a=8868) or(a=8867) or(a=8866) or(a=8865) or(a=8864) or(a=8863) or(a=8862) or(a=8861) or(a=8860) or(a=8859) or(a=8858) or
170 (a=8857) or(a=8856) or(a=8855) or(a=8854) or(a=8853) or(a=8852) or(a=8851) or(a=8850) or(a=8849) or(a=8848) or(a=8847) or(a=8846) or(a=8845) or(a=8844) or(a=8843) or(a=8842) or(a=8841) or(a=8840) or(a=8839) or(a=8838) or(a=8837) or(a=8836) or(a=8835) or(a=8834) or(a=8833) or(a=8832) or(a=8831) or(a=8830) or(a=8829) or(a=8828) or
171 (a=8827) or(a=8826) or(a=8825) or(a=8824) or(a=8823) or(a=8822) or(a=8821) or(a=8820) or(a=8819) or(a=8818) or(a=8817) or(a=8816) or(a=8815) or(a=8814) or(a=8813) or(a=8812) or(a=8811) or(a=8810) or(a=8809) or(a=8808) or(a=8807) or(a=8806) or(a=8805) or(a=8804) or(a=8803) or(a=8802) or(a=8801) or(a=8800) or(a=8799) or(a=8798) or
172 (a=8797) or(a=8796) or(a=8795) or(a=8794) or(a=8793) or(a=8792) or(a=8791) or(a=8790) or(a=8789) or(a=8788) or(a=8787) or(a=8786) or(a=8785) or(a=8784) or(a=8783) or(a=8782) or(a=8781) or(a=8780) or(a=8779) or(a=8778) or(a=8777) or(a=8776) or(a=8775) or(a=8774) or(a=8773) or(a=8772) or(a=8771) or(a=8770) or(a=8769) or(a=8768) or
173 (a=8767) or(a=8766) or(a=8765) or(a=8764) or(a=8763) or(a=8762) or(a=8761) or(a=8760) or(a=8759) or(a=8758) or(a=8757) or(a=8756) or(a=8755) or(a=8754) or(a=8753) or(a=8752) or(a=8751) or(a=8750) or(a=8749) or(a=8748) or(a=8747) or(a=8746) or(a=8745) or(a=8744) or(a=8743) or(a=8742) or(a=8741) or(a=8740) or(a=8739) or(a=8738) or
174 (a=8737) or(a=8736) or(a=8735) or(a=8734) or(a=8733) or(a=8732) or(a=8731) or(a=8730) or(a=8729) or(a=8728) or(a=8727) or(a=8726) or(a=8725) or(a=8724) or(a=8723) or(a=8722) or(a=8721) or(a=8720) or(a=8719) or(a=8718) or(a=8717) or(a=8716) or(a=8715) or(a=8714) or(a=8713) or(a=8712) or(a=8711) or(a=8710) or(a=8709) or(a=8708) or
175 (a=8707) or(a=8706) or(a=8705) or(a=8704) or(a=8703) or(a=8702) or(a=8701) or(a=8700) or(a=8699) or(a=8698) or(a=8697) or(a=8696) or(a=8695) or(a=8694) or(a=8693) or(a=8692) or(a=8691) or(a=8690) or(a=8689) or(a=8688) or(a=8687) or(a=8686) or(a=8685) or(a=8684) or(a=8683) or(a=8682) or(a=8681) or(a=8680) or(a=8679) or(a=8678) or
176 (a=8677) or(a=8676) or(a=8675) or(a=8674) or(a=8673) or(a=8672) or(a=8671) or(a=8670) or(a=8669) or(a=8668) or(a=8667) or(a=8666) or(a=8665) or(a=8664) or(a=8663) or(a=8662) or(a=8661) or(a=8660) or(a=8659) or(a=8658) or(a=8657) or(a=8656) or(a=8655) or(a=8654) or(a=8653) or(a=8652) or(a=8651) or(a=8650) or(a=8649) or(a=8648) or
177 (a=8647) or(a=8646) or(a=8645) or(a=8644) or(a=8643) or(a=8642) or(a=8641) or(a=8640) or(a=8639) or(a=8638) or(a=8637) or(a=8636) or(a=8635) or(a=8634) or(a=8633) or(a=8632) or(a=8631) or(a=8630) or(a=8629) or(a=8628) or(a=8627) or(a=8626) or(a=8625) or(a=8624) or(a=8623) or(a=8622) or(a=8621) or(a=8620) or(a=8619) or(a=8618) or
178 (a=8617) or(a=8616) or(a=8615) or(a=8614) or(a=8613) or(a=8612) or(a=8611) or(a=8610) or(a=8609) or(a=8608) or(a=8607) or(a=8606) or(a=8605) or(a=8604) or(a=8603) or(a=8602) or(a=8601) or(a=8600) or(a=8599) or(a=8598) or(a=8597) or(a=8596) or(a=8595) or(a=8594) or(a=8593) or(a=8592) or(a=8591) or(a=8590) or(a=8589) or(a=8588) or
179 (a=8587) or(a=8586) or(a=8585) or(a=8584) or(a=8583) or(a=8582) or(a=8581) or(a=8580) or(a=8579) or(a=8578) or(a=8577) or(a=8576) or(a=8575) or(a=8574) or(a=8573) or(a=8572) or(a=8571) or(a=8570) or(a=8569) or(a=8568) or(a=8567) or(a=8566) or(a=8565) or(a=8564) or(a=8563) or(a=8562) or(a=8561) or(a=8560) or(a=8559) or(a=8558) or
180 (a=8557) or(a=8556) or(a=8555) or(a=8554) or(a=8553) or(a=8552) or(a=8551) or(a=8550) or(a=8549) or(a=8548) or(a=8547) or(a=8546) or(a=8545) or(a=8544) or(a=8543) or(a=8542) or(a=8541) or(a=8540) or(a=8539) or(a=8538) or(a=8537) or(a=8536) or(a=8535) or(a=8534) or(a=8533) or(a=8532) or(a=8531) or(a=8530) or(a=8529) or(a=8528) or
181 (a=8527) or(a=8526) or(a=8525) or(a=8524) or(a=8523) or(a=8522) or(a=8521) or(a=8520) or(a=8519) or(a=8518) or(a=8517) or(a=8516) or(a=8515) or(a=8514) or(a=8513) or(a=8512) or(a=8511) or(a=8510) or(a=8509) or(a=8508) or(a=8507) or(a=8506) or(a=8505) or(a=8504) or(a=8503) or(a=8502) or(a=8501) or(a=8500) or(a=8499) or(a=8498) or
182 (a=8497) or(a=8496) or(a=8495) or(a=8494) or(a=8493) or(a=8492) or(a=8491) or(a=8490) or(a=8489) or(a=8488) or(a=8487) or(a=8486) or(a=8485) or(a=8484) or(a=8483) or(a=8482) or(a=8481) or(a=8480) or(a=8479) or(a=8478) or(a=8477) or(a=8476) or(a=8475) or(a=8474) or(a=8473) or(a=8472) or(a=8471) or(a=8470) or(a=8469) or(a=8468) or
183 (a=8467) or(a=8466) or(a=8465) or(a=8464) or(a=8463) or(a=8462) or(a=8461) or(a=8460) or(a=8459) or(a=8458) or(a=8457) or(a=8456) or(a=8455) or(a=8454) or(a=8453) or(a=8452) or(a=8451) or(a=8450) or(a=8449) or(a=8448) or(a=8447) or(a=8446) or(a=8445) or(a=8444) or(a=8443) or(a=8442) or(a=8441) or(a=8440) or(a=8439) or(a=8438) or
184 (a=8437) or(a=8436) or(a=8435) or(a=8434) or(a=8433) or(a=8432) or(a=8431) or(a=8430) or(a=8429) or(a=8428) or(a=8427) or(a=8426) or(a=8425) or(a=8424) or(a=8423) or(a=8422) or(a=8421) or(a=8420) or(a=8419) or(a=8418) or(a=8417) or(a=8416) or(a=8415) or(a=8414) or(a=8413) or(a=8412) or(a=8411) or(a=8410) or(a=8409) or(a=8408) or
185 (a=8407) or(a=8406) or(a=8405) or(a=8404) or(a=8403) or(a=8402) or(a=8401) or(a=8400) or(a=8399) or(a=8398) or(a=8397) or(a=8396) or(a=8395) or(a=8394) or(a=8393) or(a=8392) or(a=8391) or(a=8390) or(a=8389) or(a=8388) or(a=8387) or(a=8386) or(a=8385) or(a=8384) or(a=8383) or(a=8382) or(a=8381) or(a=8380) or(a=8379) or(a=8378) or
186 (a=8377) or(a=8376) or(a=8375) or(a=8374) or(a=8373) or(a=8372) or(a=8371) or(a=8370) or(a=8369) or(a=8368) or(a=8367) or(a=8366) or(a=8365) or(a=8364) or(a=8363) or(a=8362) or(a=8361) or(a=8360) or(a=8359) or(a=8358) or(a=8357) or(a=8356) or(a=8355) or(a=8354) or(a=8353) or(a=8352) or(a=8351) or(a=8350) or(a=8349) or(a=8348) or
187 (a=8347) or(a=8346) or(a=8345) or(a=8344) or(a=8343) or(a=8342) or(a=8341) or(a=8340) or(a=8339) or(a=8338) or(a=8337) or(a=8336) or(a=8335) or(a=8334) or(a=8333) or(a=8332) or(a=8331) or(a=8330) or(a=8329) or(a=8328) or(a=8327) or(a=8326) or(a=8325) or(a=8324) or(a=8323) or(a=8322) or(a=8321) or(a=8320) or(a=8319) or(a=8318) or
188 (a=8317) or(a=8316) or(a=8315) or(a=8314) or(a=8313) or(a=8312) or(a=8311) or(a=8310) or(a=8309) or(a=8308) or(a=8307) or(a=8306) or(a=8305) or(a=8304) or(a=8303) or(a=8302) or(a=8301) or(a=8300) or(a=8299) or(a=8298) or(a=8297) or(a=8296) or(a=8295) or(a=8294) or(a=8293) or(a=8292) or(a=8291) or(a=8290) or(a=8289) or(a=8288) or
189 (a=8287) or(a=8286) or(a=8285) or(a=8284) or(a=8283) or(a=8282) or(a=8281) or(a=8280) or(a=8279) or(a=8278) or(a=8277) or(a=8276) or(a=8275) or(a=8274) or(a=8273) or(a=8272) or(a=8271) or(a=8270) or(a=8269) or(a=8268) or(a=8267) or(a=8266) or(a=8265) or(a=8264) or(a=8263) or(a=8262) or(a=8261) or(a=8260) or(a=8259) or(a=8258) or
190 (a=8257) or(a=8256) or(a=8255) or(a=8254) or(a=8253) or(a=8252) or(a=8251) or(a=8250) or(a=8249) or(a=8248) or(a=8247) or(a=8246) or(a=8245) or(a=8244) or(a=8243) or(a=8242) or(a=8241) or(a=8240) or(a=8239) or(a=8238) or(a=8237) or(a=8236) or(a=8235) or(a=8234) or(a=8233) or(a=8232) or(a=8231) or(a=8230) or(a=8229) or(a=8228) or
191 (a=8227) or(a=8226) or(a=8225) or(a=8224) or(a=8223) or(a=8222) or(a=8221) or(a=8220) or(a=8219) or(a=8218) or(a=8217) or(a=8216) or(a=8215) or(a=8214) or(a=8213) or(a=8212) or(a=8211) or(a=8210) or(a=8209) or(a=8208) or(a=8207) or(a=8206) or(a=8205) or(a=8204) or(a=8203) or(a=8202) or(a=8201) or(a=8200) or(a=8199) or(a=8198) or
192 (a=8197) or(a=8196) or(a=8195) or(a=8194) or(a=8193) or(a=8192) or(a=8191) or(a=8190) or(a=8189) or(a=8188) or(a=8187) or(a=8186) or(a=8185) or(a=8184) or(a=8183) or(a=8182) or(a=8181) or(a=8180) or(a=8179) or(a=8178) or(a=8177) or(a=8176) or(a=8175) or(a=8174) or(a=8173) or(a=8172) or(a=8171) or(a=8170) or(a=8169) or(a=8168) or
193 (a=8167) or(a=8166) or(a=8165) or(a=8164) or(a=8163) or(a=8162) or(a=8161) or(a=8160) or(a=8159) or(a=8158) or(a=8157) or(a=8156) or(a=8155) or(a=8154) or(a=8153) or(a=8152) or(a=8151) or(a=8150) or(a=8149) or(a=8148) or(a=8147) or(a=8146) or(a=8145) or(a=8144) or(a=8143) or(a=8142) or(a=8141) or(a=8140) or(a=8139) or(a=8138) or
194 (a=8137) or(a=8136) or(a=8135) or(a=8134) or(a=8133) or(a=8132) or(a=8131) or(a=8130) or(a=8129) or(a=8128) or(a=8127) or(a=8126) or(a=8125) or(a=8124) or(a=8123) or(a=8122) or(a=8121) or(a=8120) or(a=8119) or(a=8118) or(a=8117) or(a=8116) or(a=8115) or(a=8114) or(a=8113) or(a=8112) or(a=8111) or(a=8110) or(a=8109) or(a=8108) or
195 (a=8107) or(a=8106) or(a=8105) or(a=8104) or(a=8103) or(a=8102) or(a=8101) or(a=8100) or(a=8099) or(a=8098) or(a=8097) or(a=8096) or(a=8095) or(a=8094) or(a=8093) or(a=8092) or(a=8091) or(a=8090) or(a=8089) or(a=8088) or(a=8087) or(a=8086) or(a=8085) or(a=8084) or(a=8083) or(a=8082) or(a=8081) or(a=8080) or(a=8079) or(a=8078) or
196 (a=8077) or(a=8076) or(a=8075) or(a=8074) or(a=8073) or(a=8072) or(a=8071) or(a=8070) or(a=8069) or(a=8068) or(a=8067) or(a=8066) or(a=8065) or(a=8064) or(a=8063) or(a=8062) or(a=8061) or(a=8060) or(a=8059) or(a=8058) or(a=8057) or(a=8056) or(a=8055) or(a=8054) or(a=8053) or(a=8052) or(a=8051) or(a=8050) or(a=8049) or(a=8048) or
197 (a=8047) or(a=8046) or(a=8045) or(a=8044) or(a=8043) or(a=8042) or(a=8041) or(a=8040) or(a=8039) or(a=8038) or(a=8037) or(a=8036) or(a=8035) or(a=8034) or(a=8033) or(a=8032) or(a=8031) or(a=8030) or(a=8029) or(a=8028) or(a=8027) or(a=8026) or(a=8025) or(a=8024) or(a=8023) or(a=8022) or(a=8021) or(a=8020) or(a=8019) or(a=8018) or
198 (a=8017) or(a=8016) or(a=8015) or(a=8014) or(a=8013) or(a=8012) or(a=8011) or(a=8010) or(a=8009) or(a=8008) or(a=8007) or(a=8006) or(a=8005) or(a=8004) or(a=8003) or(a=8002) or(a=8001) or(a=8000) or(a=7999) or(a=7998) or(a=7997) or(a=7996) or(a=7995) or(a=7994) or(a=7993) or(a=7992) or(a=7991) or(a=7990) or(a=7989) or(a=7988) or
199 (a=7987) or(a=7986) or(a=7985) or(a=7984) or(a=7983) or(a=7982) or(a=7981) or(a=7980) or(a=7979) or(a=7978) or(a=7977) or(a=7976) or(a=7975) or(a=7974) or(a=7973) or(a=7972) or(a=7971) or(a=7970) or(a=7969) or(a=7968) or(a=7967) or(a=7966) or(a=7965) or(a=7964) or(a=7963) or(a=7962) or(a=7961) or(a=7960) or(a=7959) or(a=7958) or
200 (a=7957) or(a=7956) or(a=7955) or(a=7954) or(a=7953) or(a=7952) or(a=7951) or(a=7950) or(a=7949) or(a=7948) or(a=7947) or(a=7946) or(a=7945) or(a=7944) or(a=7943) or(a=7942) or(a=7941) or(a=7940) or(a=7939) or(a=7938) or(a=7937) or(a=7936) or(a=7935) or(a=7934) or(a=7933) or(a=7932) or(a=7931) or(a=7930) or(a=7929) or(a=7928) or
201 (a=7927) or(a=7926) or(a=7925) or(a=7924) or(a=7923) or(a=7922) or(a=7921) or(a=7920) or(a=7919) or(a=7918) or(a=7917) or(a=7916) or(a=7915) or(a=7914) or(a=7913) or(a=7912) or(a=7911) or(a=7910) or(a=7909) or(a=7908) or(a=7907) or(a=7906) or(a=7905) or(a=7904) or(a=7903) or(a=7902) or(a=7901) or(a=7900) or(a=7899) or(a=7898) or
202 (a=7897) or(a=7896) or(a=7895) or(a=7894) or(a=7893) or(a=7892) or(a=7891) or(a=7890) or(a=7889) or(a=7888) or(a=7887) or(a=7886) or(a=7885) or(a=7884) or(a=7883) or(a=7882) or(a=7881) or(a=7880) or(a=7879) or(a=7878) or(a=7877) or(a=7876) or(a=7875) or(a=7874) or(a=7873) or(a=7872) or(a=7871) or(a=7870) or(a=7869) or(a=7868) or
203 (a=7867) or(a=7866) or(a=7865) or(a=7864) or(a=7863) or(a=7862) or(a=7861) or(a=7860) or(a=7859) or(a=7858) or(a=7857) or(a=7856) or(a=7855) or(a=7854) or(a=7853) or(a=7852) or(a=7851) or(a=7850) or(a=7849) or(a=7848) or(a=7847) or(a=7846) or(a=7845) or(a=7844) or(a=7843) or(a=7842) or(a=7841) or(a=7840) or(a=7839) or(a=7838) or
204 (a=7837) or(a=7836) or(a=7835) or(a=7834) or(a=7833) or(a=7832) or(a=7831) or(a=7830) or(a=7829) or(a=7828) or(a=7827) or(a=7826) or(a=7825) or(a=7824) or(a=7823) or(a=7822) or(a=7821) or(a=7820) or(a=7819) or(a=7818) or(a=7817) or(a=7816) or(a=7815) or(a=7814) or(a=7813) or(a=7812) or(a=7811) or(a=7810) or(a=7809) or(a=7808) or
205 (a=7807) or(a=7806) or(a=7805) or(a=7804) or(a=7803) or(a=7802) or(a=7801) or(a=7800) or(a=7799) or(a=7798) or(a=7797) or(a=7796) or(a=7795) or(a=7794) or(a=7793) or(a=7792) or(a=7791) or(a=7790) or(a=7789) or(a=7788) or(a=7787) or(a=7786) or(a=7785) or(a=7784) or(a=7783) or(a=7782) or(a=7781) or(a=7780) or(a=7779) or(a=7778) or
206 (a=7777) or(a=7776) or(a=7775) or(a=7774) or(a=7773) or(a=7772) or(a=7771) or(a=7770) or(a=7769) or(a=7768) or(a=7767) or(a=7766) or(a=7765) or(a=7764) or(a=7763) or(a=7762) or(a=7761) or(a=7760) or(a=7759) or(a=7758) or(a=7757) or(a=7756) or(a=7755) or(a=7754) or(a=7753) or(a=7752) or(a=7751) or(a=7750) or(a=7749) or(a=7748) or
207 (a=7747) or(a=7746) or(a=7745) or(a=7744) or(a=7743) or(a=7742) or(a=7741) or(a=7740) or(a=7739) or(a=7738) or(a=7737) or(a=7736) or(a=7735) or(a=7734) or(a=7733) or(a=7732) or(a=7731) or(a=7730) or(a=7729) or(a=7728) or(a=7727) or(a=7726) or(a=7725) or(a=7724) or(a=7723) or(a=7722) or(a=7721) or(a=7720) or(a=7719) or(a=7718) or
208 (a=7717) or(a=7716) or(a=7715) or(a=7714) or(a=7713) or(a=7712) or(a=7711) or(a=7710) or(a=7709) or(a=7708) or(a=7707) or(a=7706) or(a=7705) or(a=7704) or(a=7703) or(a=7702) or(a=7701) or(a=7700) or(a=7699) or(a=7698) or(a=7697) or(a=7696) or(a=7695) or(a=7694) or(a=7693) or(a=7692) or(a=7691) or(a=7690) or(a=7689) or(a=7688) or
209 (a=7687) or(a=7686) or(a=7685) or(a=7684) or(a=7683) or(a=7682) or(a=7681) or(a=7680) or(a=7679) or(a=7678) or(a=7677) or(a=7676) or(a=7675) or(a=7674) or(a=7673) or(a=7672) or(a=7671) or(a=7670) or(a=7669) or(a=7668) or(a=7667) or(a=7666) or(a=7665) or(a=7664) or(a=7663) or(a=7662) or(a=7661) or(a=7660) or(a=7659) or(a=7658) or
210 (a=7657) or(a=7656) or(a=7655) or(a=7654) or(a=7653) or(a=7652) or(a=7651) or(a=7650) or(a=7649) or(a=7648) or(a=7647) or(a=7646) or(a=7645) or(a=7644) or(a=7643) or(a=7642) or(a=7641) or(a=7640) or(a=7639) or(a=7638) or(a=7637) or(a=7636) or(a=7635) or(a=7634) or(a=7633) or(a=7632) or(a=7631) or(a=7630) or(a=7629) or(a=7628) or
211 (a=7627) or(a=7626) or(a=7625) or(a=7624) or(a=7623) or(a=7622) or(a=7621) or(a=7620) or(a=7619) or(a=7618) or(a=7617) or(a=7616) or(a=7615) or(a=7614) or(a=7613) or(a=7612) or(a=7611) or(a=7610) or(a=7609) or(a=7608) or(a=7607) or(a=7606) or(a=7605) or(a=7604) or(a=7603) or(a=7602) or(a=7601) or(a=7600) or(a=7599) or(a=7598) or
212 (a=7597) or(a=7596) or(a=7595) or(a=7594) or(a=7593) or(a=7592) or(a=7591) or(a=7590) or(a=7589) or(a=7588) or(a=7587) or(a=7586) or(a=7585) or(a=7584) or(a=7583) or(a=7582) or(a=7581) or(a=7580) or(a=7579) or(a=7578) or(a=7577) or(a=7576) or(a=7575) or(a=7574) or(a=7573) or(a=7572) or(a=7571) or(a=7570) or(a=7569) or(a=7568) or
213 (a=7567) or(a=7566) or(a=7565) or(a=7564) or(a=7563) or(a=7562) or(a=7561) or(a=7560) or(a=7559) or(a=7558) or(a=7557) or(a=7556) or(a=7555) or(a=7554) or(a=7553) or(a=7552) or(a=7551) or(a=7550) or(a=7549) or(a=7548) or(a=7547) or(a=7546) or(a=7545) or(a=7544) or(a=7543) or(a=7542) or(a=7541) or(a=7540) or(a=7539) or(a=7538) or
214 (a=7537) or(a=7536) or(a=7535) or(a=7534) or(a=7533) or(a=7532) or(a=7531) or(a=7530) or(a=7529) or(a=7528) or(a=7527) or(a=7526) or(a=7525) or(a=7524) or(a=7523) or(a=7522) or(a=7521) or(a=7520) or(a=7519) or(a=7518) or(a=7517) or(a=7516) or(a=7515) or(a=7514) or(a=7513) or(a=7512) or(a=7511) or(a=7510) or(a=7509) or(a=7508) or
215 (a=7507) or(a=7506) or(a=7505) or(a=7504) or(a=7503) or(a=7502) or(a=7501) or(a=7500) or(a=7499) or(a=7498) or(a=7497) or(a=7496) or(a=7495) or(a=7494) or(a=7493) or(a=7492) or(a=7491) or(a=7490) or(a=7489) or(a=7488) or(a=7487) or(a=7486) or(a=7485) or(a=7484) or(a=7483) or(a=7482) or(a=7481) or(a=7480) or(a=7479) or(a=7478) or
216 (a=7477) or(a=7476) or(a=7475) or(a=7474) or(a=7473) or(a=7472) or(a=7471) or(a=7470) or(a=7469) or(a=7468) or(a=7467) or(a=7466) or(a=7465) or(a=7464) or(a=7463) or(a=7462) or(a=7461) or(a=7460) or(a=7459) or(a=7458) or(a=7457) or(a=7456) or(a=7455) or(a=7454) or(a=7453) or(a=7452) or(a=7451) or(a=7450) or(a=7449) or(a=7448) or
217 (a=7447) or(a=7446) or(a=7445) or(a=7444) or(a=7443) or(a=7442) or(a=7441) or(a=7440) or(a=7439) or(a=7438) or(a=7437) or(a=7436) or(a=7435) or(a=7434) or(a=7433) or(a=7432) or(a=7431) or(a=7430) or(a=7429) or(a=7428) or(a=7427) or(a=7426) or(a=7425) or(a=7424) or(a=7423) or(a=7422) or(a=7421) or(a=7420) or(a=7419) or(a=7418) or
218 (a=7417) or(a=7416) or(a=7415) or(a=7414) or(a=7413) or(a=7412) or(a=7411) or(a=7410) or(a=7409) or(a=7408) or(a=7407) or(a=7406) or(a=7405) or(a=7404) or(a=7403) or(a=7402) or(a=7401) or(a=7400) or(a=7399) or(a=7398) or(a=7397) or(a=7396) or(a=7395) or(a=7394) or(a=7393) or(a=7392) or(a=7391) or(a=7390) or(a=7389) or(a=7388) or
219 (a=7387) or(a=7386) or(a=7385) or(a=7384) or(a=7383) or(a=7382) or(a=7381) or(a=7380) or(a=7379) or(a=7378) or(a=7377) or(a=7376) or(a=7375) or(a=7374) or(a=7373) or(a=7372) or(a=7371) or(a=7370) or(a=7369) or(a=7368) or(a=7367) or(a=7366) or(a=7365) or(a=7364) or(a=7363) or(a=7362) or(a=7361) or(a=7360) or(a=7359) or(a=7358) or
220 (a=7357) or(a=7356) or(a=7355) or(a=7354) or(a=7353) or(a=7352) or(a=7351) or(a=7350) or(a=7349) or(a=7348) or(a=7347) or(a=7346) or(a=7345) or(a=7344) or(a=7343) or(a=7342) or(a=7341) or(a=7340) or(a=7339) or(a=7338) or(a=7337) or(a=7336) or(a=7335) or(a=7334) or(a=7333) or(a=7332) or(a=7331) or(a=7330) or(a=7329) or(a=7328) or
221 (a=7327) or(a=7326) or(a=7325) or(a=7324) or(a=7323) or(a=7322) or(a=7321) or(a=7320) or(a=7319) or(a=7318) or(a=7317) or(a=7316) or(a=7315) or(a=7314) or(a=7313) or(a=7312) or(a=7311) or(a=7310) or(a=7309) or(a=7308) or(a=7307) or(a=7306) or(a=7305) or(a=7304) or(a=7303) or(a=7302) or(a=7301) or(a=7300) or(a=7299) or(a=7298) or
222 (a=7297) or(a=7296) or(a=7295) or(a=7294) or(a=7293) or(a=7292) or(a=7291) or(a=7290) or(a=7289) or(a=7288) or(a=7287) or(a=7286) or(a=7285) or(a=7284) or(a=7283) or(a=7282) or(a=7281) or(a=7280) or(a=7279) or(a=7278) or(a=7277) or(a=7276) or(a=7275) or(a=7274) or(a=7273) or(a=7272) or(a=7271) or(a=7270) or(a=7269) or(a=7268) or
223 (a=7267) or(a=7266) or(a=7265) or(a=7264) or(a=7263) or(a=7262) or(a=7261) or(a=7260) or(a=7259) or(a=7258) or(a=7257) or(a=7256) or(a=7255) or(a=7254) or(a=7253) or(a=7252) or(a=7251) or(a=7250) or(a=7249) or(a=7248) or(a=7247) or(a=7246) or(a=7245) or(a=7244) or(a=7243) or(a=7242) or(a=7241) or(a=7240) or(a=7239) or(a=7238) or
224 (a=7237) or(a=7236) or(a=7235) or(a=7234) or(a=7233) or(a=7232) or(a=7231) or(a=7230) or(a=7229) or(a=7228) or(a=7227) or(a=7226) or(a=7225) or(a=7224) or(a=7223) or(a=7222) or(a=7221) or(a=7220) or(a=7219) or(a=7218) or(a=7217) or(a=7216) or(a=7215) or(a=7214) or(a=7213) or(a=7212) or(a=7211) or(a=7210) or(a=7209) or(a=7208) or
225 (a=7207) or(a=7206) or(a=7205) or(a=7204) or(a=7203) or(a=7202) or(a=7201) or(a=7200) or(a=7199) or(a=7198) or(a=7197) or(a=7196) or(a=7195) or(a=7194) or(a=7193) or(a=7192) or(a=7191) or(a=7190) or(a=7189) or(a=7188) or(a=7187) or(a=7186) or(a=7185) or(a=7184) or(a=7183) or(a=7182) or(a=7181) or(a=7180) or(a=7179) or(a=7178) or
226 (a=7177) or(a=7176) or(a=7175) or(a=7174) or(a=7173) or(a=7172) or(a=7171) or(a=7170) or(a=7169) or(a=7168) or(a=7167) or(a=7166) or(a=7165) or(a=7164) or(a=7163) or(a=7162) or(a=7161) or(a=7160) or(a=7159) or(a=7158) or(a=7157) or(a=7156) or(a=7155) or(a=7154) or(a=7153) or(a=7152) or(a=7151) or(a=7150) or(a=7149) or(a=7148) or
227 (a=7147) or(a=7146) or(a=7145) or(a=7144) or(a=7143) or(a=7142) or(a=7141) or(a=7140) or(a=7139) or(a=7138) or(a=7137) or(a=7136) or(a=7135) or(a=7134) or(a=7133) or(a=7132) or(a=7131) or(a=7130) or(a=7129) or(a=7128) or(a=7127) or(a=7126) or(a=7125) or(a=7124) or(a=7123) or(a=7122) or(a=7121) or(a=7120) or(a=7119) or(a=7118) or
228 (a=7117) or(a=7116) or(a=7115) or(a=7114) or(a=7113) or(a=7112) or(a=7111) or(a=7110) or(a=7109) or(a=7108) or(a=7107) or(a=7106) or(a=7105) or(a=7104) or(a=7103) or(a=7102) or(a=7101) or(a=7100) or(a=7099) or(a=7098) or(a=7097) or(a=7096) or(a=7095) or(a=7094) or(a=7093) or(a=7092) or(a=7091) or(a=7090) or(a=7089) or(a=7088) or
229 (a=7087) or(a=7086) or(a=7085) or(a=7084) or(a=7083) or(a=7082) or(a=7081) or(a=7080) or(a=7079) or(a=7078) or(a=7077) or(a=7076) or(a=7075) or(a=7074) or(a=7073) or(a=7072) or(a=7071) or(a=7070) or(a=7069) or(a=7068) or(a=7067) or(a=7066) or(a=7065) or(a=7064) or(a=7063) or(a=7062) or(a=7061) or(a=7060) or(a=7059) or(a=7058) or
230 (a=7057) or(a=7056) or(a=7055) or(a=7054) or(a=7053) or(a=7052) or(a=7051) or(a=7050) or(a=7049) or(a=7048) or(a=7047) or(a=7046) or(a=7045) or(a=7044) or(a=7043) or(a=7042) or(a=7041) or(a=7040) or(a=7039) or(a=7038) or(a=7037) or(a=7036) or(a=7035) or(a=7034) or(a=7033) or(a=7032) or(a=7031) or(a=7030) or(a=7029) or(a=7028) or
231 (a=7027) or(a=7026) or(a=7025) or(a=7024) or(a=7023) or(a=7022) or(a=7021) or(a=7020) or(a=7019) or(a=7018) or(a=7017) or(a=7016) or(a=7015) or(a=7014) or(a=7013) or(a=7012) or(a=7011) or(a=7010) or(a=7009) or(a=7008) or(a=7007) or(a=7006) or(a=7005) or(a=7004) or(a=7003) or(a=7002) or(a=7001) or(a=7000) or(a=6999) or(a=6998) or
232 (a=6997) or(a=6996) or(a=6995) or(a=6994) or(a=6993) or(a=6992) or(a=6991) or(a=6990) or(a=6989) or(a=6988) or(a=6987) or(a=6986) or(a=6985) or(a=6984) or(a=6983) or(a=6982) or(a=6981) or(a=6980) or(a=6979) or(a=6978) or(a=6977) or(a=6976) or(a=6975) or(a=6974) or(a=6973) or(a=6972) or(a=6971) or(a=6970) or(a=6969) or(a=6968) or
233 (a=6967) or(a=6966) or(a=6965) or(a=6964) or(a=6963) or(a=6962) or(a=6961) or(a=6960) or(a=6959) or(a=6958) or(a=6957) or(a=6956) or(a=6955) or(a=6954) or(a=6953) or(a=6952) or(a=6951) or(a=6950) or(a=6949) or(a=6948) or(a=6947) or(a=6946) or(a=6945) or(a=6944) or(a=6943) or(a=6942) or(a=6941) or(a=6940) or(a=6939) or(a=6938) or
234 (a=6937) or(a=6936) or(a=6935) or(a=6934) or(a=6933) or(a=6932) or(a=6931) or(a=6930) or(a=6929) or(a=6928) or(a=6927) or(a=6926) or(a=6925) or(a=6924) or(a=6923) or(a=6922) or(a=6921) or(a=6920) or(a=6919) or(a=6918) or(a=6917) or(a=6916) or(a=6915) or(a=6914) or(a=6913) or(a=6912) or(a=6911) or(a=6910) or(a=6909) or(a=6908) or
235 (a=6907) or(a=6906) or(a=6905) or(a=6904) or(a=6903) or(a=6902) or(a=6901) or(a=6900) or(a=6899) or(a=6898) or(a=6897) or(a=6896) or(a=6895) or(a=6894) or(a=6893) or(a=6892) or(a=6891) or(a=6890) or(a=6889) or(a=6888) or(a=6887) or(a=6886) or(a=6885) or(a=6884) or(a=6883) or(a=6882) or(a=6881) or(a=6880) or(a=6879) or(a=6878) or
236 (a=9814) or(a=9813) or(a=9812) or(a=9811) or(a=9810) or(a=9809) or(a=9808) or(a=9807) or(a=9806) or(a=9805) or(a=9804) or(a=9803) or(a=9802) or(a=9801) or(a=9800) or(a=9799) or(a=9798) or(a=9797) or
237 (a=9796) or(a=9795) or(a=9794) or(a=9793) or(a=9792) or(a=9791) or(a=9790) or(a=9789) or(a=9788) or(a=9787) or(a=9786) or(a=9785) or(a=9784) or(a=9783) or(a=9782) or(a=9781) or(a=9780) or(a=9779) or
238 (a=9778) or(a=9777) or(a=9776) or(a=9775) or(a=9774) or(a=9773) or(a=9772) or(a=9771) or(a=9770) or(a=9769) or(a=9768) or(a=9767) or(a=9766) or(a=9765) or(a=9764) or(a=9763) or(a=9762) or(a=9761) or
239 (a=9760) or(a=9759) or(a=9758) or(a=9757) or(a=9756) or(a=9755) or(a=9754) or(a=9753) or(a=9752) or(a=9751) or(a=9750) or(a=9749) or(a=9748) or(a=9747) or(a=9746) or(a=9745) or(a=9744) or(a=9743) or
240 (a=9742) or(a=9741) or(a=9740) or(a=9739) or(a=9738) or(a=9737) or(a=9736) or(a=9735) or(a=9734) or(a=9733) or(a=9732) or(a=9731) or(a=9730) or(a=9729) or(a=9728) or(a=9727) or(a=9726) or(a=9725) or
241 (a=9724) or(a=9723) or(a=9722) or(a=9721) or(a=9720) or(a=9719) or(a=9718) or(a=9717) or(a=9716) or(a=9715) or(a=9714) or(a=9713) or(a=9712) or(a=9711) or(a=9710) or(a=9709) or(a=9708) or(a=9707) or
242 (a=9706) or(a=9705) or(a=9704) or(a=9703) or(a=9702) or(a=9701) or(a=9700) or(a=9699) or(a=9698) or(a=9697) or(a=9696) or(a=9695) or(a=9694) or(a=9693) or(a=9692) or(a=9691) or(a=9690) or(a=9689) or
243 (a=9688) or(a=9687) or(a=9686) or(a=9685) or(a=9684) or(a=9683) or(a=9682) or(a=9681) or(a=9680) or(a=9679) or(a=9678) or(a=9677) or(a=9676) or(a=9675) or(a=9674) or(a=9673) or(a=9672) or(a=9671) or
244 (a=9670) or(a=9669) or(a=9668) or(a=9667) or(a=9666) or(a=9665) or(a=9664) or(a=9663) or(a=9662) or(a=9661) or(a=9660) or(a=9659) or(a=9658) or(a=9657) or(a=9656) or(a=9655) or(a=9654) or(a=9653) or
245 (a=9652) or(a=9651) or(a=9650) or(a=9649) or(a=9648) or(a=9647) or(a=9646) or(a=9645) or(a=9644) or(a=9643) or(a=9642) or(a=9641) or(a=9640) or(a=9639) or(a=9638) or(a=9637) or(a=9636) or(a=9635) or
246 (a=9634) or(a=9633) or(a=9632) or(a=9631) or(a=9630) or(a=9629) or(a=9628) or(a=9627) or(a=9626) or(a=9625) or(a=9624) or(a=9623) or(a=9622) or(a=9621) or(a=9620) or(a=9619) or(a=9618) or(a=9617) or
247 (a=9616) or(a=9615) or(a=9614) or(a=9613) or(a=9612) or(a=9611) or(a=9610) or(a=9609) or(a=9608) or(a=9607) or(a=9606) or(a=9605) or(a=9604) or(a=9603) or(a=9602) or(a=9601) or(a=9600) or(a=9599) or
248 (a=9598) or(a=9597) or(a=9596) or(a=9595) or(a=9594) or(a=9593) or(a=9592) or(a=9591) or(a=9590) or(a=9589) or(a=9588) or(a=9587) or(a=9586) or(a=9585) or(a=9584) or(a=9583) or(a=9582) or(a=9581) or
249 (a=9580) or(a=9579) or(a=9578) or(a=9577) or(a=9576) or(a=9575) or(a=9574) or(a=9573) or(a=9572) or(a=9571) or(a=9570) or(a=9569) or(a=9568) or(a=9567) or(a=9566) or(a=9565) or(a=9564) or(a=9563) or
250 (a=9562) or(a=9561) or(a=9560) or(a=9559) or(a=9558) or(a=9557) or(a=9556) or(a=9555) or(a=9554) or(a=9553) or(a=9552) or(a=9551) or(a=9550) or(a=9549) or(a=9548) or(a=9547) or(a=9546) or(a=9545) or
251 (a=9544) or(a=9543) or(a=9542) or(a=9541) or(a=9540) or(a=9539) or(a=9538) or(a=9537) or(a=9536) or(a=9535) or(a=9534) or(a=9533) or(a=9532) or(a=9531) or(a=9530) or(a=9529) or(a=9528) or(a=9527) or
252 (a=9526) or(a=9525) or(a=9524) or(a=9523) or(a=9522) or(a=9521) or(a=9520) or(a=9519) or(a=9518) or(a=9517) or(a=9516) or(a=9515) or(a=9514) or(a=9513) or(a=9512) or(a=9511) or(a=9510) or(a=9509) or
253 (a=9508) or(a=9507) or(a=9506) or(a=9505) or(a=9504) or(a=9503) or(a=9502) or(a=9501) or(a=9500) or(a=9499) or(a=9498) or(a=9497) or(a=9496) or(a=9495) or(a=9494) or(a=9493) or(a=9492) or(a=9491) or
254 (a=9490) or(a=9489) or(a=9488) or(a=9487) or(a=9486) or(a=9485) or(a=9484) or(a=9483) or(a=9482) or(a=9481) or(a=9480) or(a=9479) or(a=9478) or(a=9477) or(a=9476) or(a=9475) or(a=9474) or(a=9473) or
255 (a=9472) or(a=9471) or(a=9470) or(a=9469) or(a=9468) or(a=9467) or(a=9466) or(a=9465) or(a=9464) or(a=9463) or(a=9462) or(a=9461) or(a=9460) or(a=9459) or(a=9458) or(a=9457) or(a=9456) or(a=9455) or
256 (a=9454) or(a=9453) or(a=9452) or(a=9451) or(a=9450) or(a=9449) or(a=9448) or(a=9447) or(a=9446) or(a=9445) or(a=9444) or(a=9443) or(a=9442) or(a=9441) or(a=9440) or(a=9439) or(a=9438) or(a=9437) or
257 (a=9436) or(a=9435) or(a=9434) or(a=9433) or(a=9432) or(a=9431) or(a=9430) or(a=9429) or(a=9428) or(a=9427) or(a=9426) or(a=9425) or(a=9424) or(a=9423) or(a=9422) or(a=9421) or(a=9420) or(a=9419) or
258 (a=9418) or(a=9417) or(a=9416) or(a=9415) or(a=9414) or(a=9413) or(a=9412) or(a=9411) or(a=9410) or(a=9409) or(a=9408) or(a=9407) or(a=9406) or(a=9405) or(a=9404) or(a=9403) or(a=9402) or(a=9401) or
259 (a=9400) or(a=9399) or(a=9398) or(a=9397) or(a=9396) or(a=9395) or(a=9394) or(a=9393) or(a=9392) or(a=9391) or(a=9390) or(a=9389) or(a=9388) or(a=9387) or(a=9386) or(a=9385) or(a=9384) or(a=9383) or
260 (a=9382) or(a=9381) or(a=9380) or(a=9379) or(a=9378) or(a=9377) or(a=9376) or(a=9375) or(a=9374) or(a=9373) or(a=9372) or(a=9371) or(a=9370) or(a=9369) or(a=9368) or(a=9367) or(a=9366) or(a=9365) or
261 (a=9364) or(a=9363) or(a=9362) or(a=9361) or(a=9360) or(a=9359) or(a=9358) or(a=9357) or(a=9356) or(a=9355) or(a=9354) or(a=9353) or(a=9352) or(a=9351) or(a=9350) or(a=9349) or(a=9348) or(a=9347) or
262 (a=9346) or(a=9345) or(a=9344) or(a=9343) or(a=9342) or(a=9341) or(a=9340) or(a=9339) or(a=9338) or(a=9337) or(a=9336) or(a=9335) or(a=9334) or(a=9333) or(a=9332) or(a=9331) or(a=9330) or(a=9329) or
263 (a=9328) or(a=9327) or(a=9326) or(a=9325) or(a=9324) or(a=9323) or(a=9322) or(a=9321) or(a=9320) or(a=9319) or(a=9318) or(a=9317) or(a=9316) or(a=9315) or(a=9314) or(a=9313) or(a=9312) or(a=9311) or
264 (a=9310) or(a=9309) or(a=9308) or(a=9307) or(a=9306) or(a=9305) or(a=9304) or(a=9303) or(a=9302) or(a=9301) or(a=9300) or(a=9299) or(a=9298) or(a=9297) or(a=9296) or(a=9295) or(a=9294) or(a=9293) or
265 (a=9292) or(a=9291) or(a=9290) or(a=9289) or(a=9288) or(a=9287) or(a=9286) or(a=9285) or(a=9284) or(a=9283) or(a=9282) or(a=9281) or(a=9280) or(a=9279) or(a=9278) or(a=9277) or(a=9276) or(a=9275) or
266 (a=9274) or(a=9273) or(a=9272) or(a=9271) or(a=9270) or(a=9269) or(a=9268) or(a=9267) or(a=9266) or(a=9265) or(a=9264) or(a=9263) or(a=9262) or(a=9261) or(a=9260) or(a=9259) or(a=9258) or(a=9257) or
267 (a=9256) or(a=9255) or(a=9254) or(a=9253) or(a=9252) or(a=9251) or(a=9250) or(a=9249) or(a=9248) or(a=9247) or(a=9246) or(a=9245) or(a=9244) or(a=9243) or(a=9242) or(a=9241) or(a=9240) or(a=9239) or
268 (a=9238) or(a=9237) or(a=9236) or(a=9235) or(a=9234) or(a=9233) or(a=9232) or(a=9231) or(a=9230) or(a=9229) or(a=9228) or(a=9227) or(a=9226) or(a=9225) or(a=9224) or(a=9223) or(a=9222) or(a=9221) or
269 (a=9220) or(a=9219) or(a=9218) or(a=9217) or(a=9216) or(a=9215) or(a=9214) or(a=9213) or(a=9212) or(a=9211) or(a=9210) or(a=9209) or(a=9208) or(a=9207) or(a=9206) or(a=9205) or(a=9204) or(a=9203) or
270 (a=9202) or(a=9201) or(a=9200) or(a=9199) or(a=9198) or(a=9197) or(a=9196) or(a=9195) or(a=9194) or(a=9193) or(a=9192) or(a=9191) or(a=9190) or(a=9189) or(a=9188) or(a=9187) or(a=9186) or(a=9185) or
271 (a=9184) or(a=9183) or(a=9182) or(a=9181) or(a=9180) or(a=9179) or(a=9178) or(a=9177) or(a=9176) or(a=9175) or(a=9174) or(a=9173) or(a=9172) or(a=9171) or(a=9170) or(a=9169) or(a=9168) or(a=9167) or
272 (a=9166) or(a=9165) or(a=9164) or(a=9163) or(a=9162) or(a=9161) or(a=9160) or(a=9159) or(a=9158) or(a=9157) or(a=9156) or(a=9155) or(a=9154) or(a=9153) or(a=9152) or(a=9151) or(a=9150) or(a=9149) or
273 (a=9148) or(a=9147) or(a=9146) or(a=9145) or(a=9144) or(a=9143) or(a=9142) or(a=9141) or(a=9140) or(a=9139) or(a=9138) or(a=9137) or(a=9136) or(a=9135) or(a=9134) or(a=9133) or(a=9132) or(a=9131) or
274 (a=9130) or(a=9129) or(a=9128) or(a=9127) or(a=9126) or(a=9125) or(a=9124) or(a=9123) or(a=9122) or(a=9121) or(a=9120) or(a=9119) or(a=9118) or(a=9117) or(a=9116) or(a=9115) or(a=9114) or(a=9113) or
275 (a=9112) or(a=9111) or(a=9110) or(a=9109) or(a=9108) or(a=9107) or(a=9106) or(a=9105) or(a=9104) or(a=9103) or(a=9102) or(a=9101) or(a=9100) or(a=9099) or(a=9098) or(a=9097) or(a=9096) or(a=9095) or
276 (a=9094) or(a=9093) or(a=9092) or(a=9091) or(a=9090) or(a=9089) or(a=9088) or(a=9087) or(a=9086) or(a=9085) or(a=9084) or(a=9083) or(a=9082) or(a=9081) or(a=9080) or(a=9079) or(a=9078) or(a=9077) or
277 (a=9076) or(a=9075) or(a=9074) or(a=9073) or(a=9072) or(a=9071) or(a=9070) or(a=9069) or(a=9068) or(a=9067) or(a=9066) or(a=9065) or(a=9064) or(a=9063) or(a=9062) or(a=9061) or(a=9060) or(a=9059) or
278 (a=9058) or(a=9057) or(a=9056) or(a=9055) or(a=9054) or(a=9053) or(a=9052) or(a=9051) or(a=9050) or(a=9049) or(a=9048) or(a=9047) or(a=9046) or(a=9045) or(a=9044) or(a=9043) or(a=9042) or(a=9041) or
279 (a=9040) or(a=9039) or(a=9038) or(a=9037) or(a=9036) or(a=9035) or(a=9034) or(a=9033) or(a=9032) or(a=9031) or(a=9030) or(a=9029) or(a=9028) or(a=9027) or(a=9026) or(a=9025) or(a=9024) or(a=9023) or
280 (a=9022) or(a=9021) or(a=9020) or(a=9019) or(a=9018) or(a=9017) or(a=9016) or(a=9015) or(a=9014) or(a=9013) or(a=9012) or(a=9011) or(a=9010) or(a=9009) or(a=9008) or(a=9007) or(a=9006) or(a=9005) or(a=9004) or(a=9003) or(a=9002) or
281 (a=9001) or(a=9000) or(a=8999) or(a=8998) or(a=8997) or(a=8996) or(a=8995) or(a=8994) or(a=8993) or(a=8992) or(a=8991) or(a=8990) or(a=8989) or(a=8988) or(a=8987) or(a=8986) or(a=8985) or(a=8984) or(a=8983) or(a=8982) or(a=8981) or
282 (a=8980) or(a=8979) or(a=8978) or(a=8977) or(a=8976) or(a=8975) or(a=8974) or(a=8973) or(a=8972) or(a=8971) or(a=8970) or(a=8969) or(a=8968) or(a=8967) or(a=8966) or(a=8965) or(a=8964) or(a=8963) or(a=8962) or(a=8961) or(a=8960) or
283 (a=8959) or(a=8958) or(a=8957) or(a=8956) or(a=8955) or(a=8954) or(a=8953) or(a=8952) or(a=8951) or(a=8950) or(a=8949) or(a=8948) or(a=8947) or(a=8946) or(a=8945) or(a=8944) or(a=8943) or(a=8942) or(a=8941) or(a=8940) or(a=8939) or
284 (a=8938) or(a=8937) or(a=8936) or(a=8935) or(a=8934) or(a=8933) or(a=8932) or(a=8931) or(a=8930) or(a=8929) or(a=8928) or(a=8927) or(a=8926) or(a=8925) or(a=8924) or(a=8923) or(a=8922) or(a=8921) or(a=8920) or(a=8919) or(a=8918) or
285 (a=8917) or(a=8916) or(a=8915) or(a=8914) or(a=8913) or(a=8912) or(a=8911) or(a=8910) or(a=8909) or(a=8908) or(a=8907) or(a=8906) or(a=8905) or(a=8904) or(a=8903) or(a=8902) or(a=8901) or(a=8900) or(a=8899) or(a=8898) or(a=8897) or(a=8896) or(a=8895) or(a=8894) or(a=8893) or(a=8892) or(a=8891) or(a=8890) or(a=8889) or(a=8888) or
286 (a=8887) or(a=8886) or(a=8885) or(a=8884) or(a=8883) or(a=8882) or(a=8881) or(a=8880) or(a=8879) or(a=8878) or(a=8877) or(a=8876) or(a=8875) or(a=8874) or(a=8873) or(a=8872) or(a=8871) or(a=8870) or(a=8869) or(a=8868) or(a=8867) or(a=8866) or(a=8865) or(a=8864) or(a=8863) or(a=8862) or(a=8861) or(a=8860) or(a=8859) or(a=8858) or
287 (a=8857) or(a=8856) or(a=8855) or(a=8854) or(a=8853) or(a=8852) or(a=8851) or(a=8850) or(a=8849) or(a=8848) or(a=8847) or(a=8846) or(a=8845) or(a=8844) or(a=8843) or(a=8842) or(a=8841) or(a=8840) or(a=8839) or(a=8838) or(a=8837) or(a=8836) or(a=8835) or(a=8834) or(a=8833) or(a=8832) or(a=8831) or(a=8830) or(a=8829) or(a=8828) or
288 (a=8827) or(a=8826) or(a=8825) or(a=8824) or(a=8823) or(a=8822) or(a=8821) or(a=8820) or(a=8819) or(a=8818) or(a=8817) or(a=8816) or(a=8815) or(a=8814) or(a=8813) or(a=8812) or(a=8811) or(a=8810) or(a=8809) or(a=8808) or(a=8807) or(a=8806) or(a=8805) or(a=8804) or(a=8803) or(a=8802) or(a=8801) or(a=8800) or(a=8799) or(a=8798) or
289 (a=8797) or(a=8796) or(a=8795) or(a=8794) or(a=8793) or(a=8792) or(a=8791) or(a=8790) or(a=8789) or(a=8788) or(a=8787) or(a=8786) or(a=8785) or(a=8784) or(a=8783) or(a=8782) or(a=8781) or(a=8780) or(a=8779) or(a=8778) or(a=8777) or(a=8776) or(a=8775) or(a=8774) or(a=8773) or(a=8772) or(a=8771) or(a=8770) or(a=8769) or(a=8768) or
290 (a=8767) or(a=8766) or(a=8765) or(a=8764) or(a=8763) or(a=8762) or(a=8761) or(a=8760) or(a=8759) or(a=8758) or(a=8757) or(a=8756) or(a=8755) or(a=8754) or(a=8753) or(a=8752) or(a=8751) or(a=8750) or(a=8749) or(a=8748) or(a=8747) or(a=8746) or(a=8745) or(a=8744) or(a=8743) or(a=8742) or(a=8741) or(a=8740) or(a=8739) or(a=8738) or
291 (a=8737) or(a=8736) or(a=8735) or(a=8734) or(a=8733) or(a=8732) or(a=8731) or(a=8730) or(a=8729) or(a=8728) or(a=8727) or(a=8726) or(a=8725) or(a=8724) or(a=8723) or(a=8722) or(a=8721) or(a=8720) or(a=8719) or(a=8718) or(a=8717) or(a=8716) or(a=8715) or(a=8714) or(a=8713) or(a=8712) or(a=8711) or(a=8710) or(a=8709) or(a=8708) or
292 (a=8707) or(a=8706) or(a=8705) or(a=8704) or(a=8703) or(a=8702) or(a=8701) or(a=8700) or(a=8699) or(a=8698) or(a=8697) or(a=8696) or(a=8695) or(a=8694) or(a=8693) or(a=8692) or(a=8691) or(a=8690) or(a=8689) or(a=8688) or(a=8687) or(a=8686) or(a=8685) or(a=8684) or(a=8683) or(a=8682) or(a=8681) or(a=8680) or(a=8679) or(a=8678) or
293 (a=8677) or(a=8676) or(a=8675) or(a=8674) or(a=8673) or(a=8672) or(a=8671) or(a=8670) or(a=8669) or(a=8668) or(a=8667) or(a=8666) or(a=8665) or(a=8664) or(a=8663) or(a=8662) or(a=8661) or(a=8660) or(a=8659) or(a=8658) or(a=8657) or(a=8656) or(a=8655) or(a=8654) or(a=8653) or(a=8652) or(a=8651) or(a=8650) or(a=8649) or(a=8648) or
294 (a=8647) or(a=8646) or(a=8645) or(a=8644) or(a=8643) or(a=8642) or(a=8641) or(a=8640) or(a=8639) or(a=8638) or(a=8637) or(a=8636) or(a=8635) or(a=8634) or(a=8633) or(a=8632) or(a=8631) or(a=8630) or(a=8629) or(a=8628) or(a=8627) or(a=8626) or(a=8625) or(a=8624) or(a=8623) or(a=8622) or(a=8621) or(a=8620) or(a=8619) or(a=8618) or
295 (a=8617) or(a=8616) or(a=8615) or(a=8614) or(a=8613) or(a=8612) or(a=8611) or(a=8610) or(a=8609) or(a=8608) or(a=8607) or(a=8606) or(a=8605) or(a=8604) or(a=8603) or(a=8602) or(a=8601) or(a=8600) or(a=8599) or(a=8598) or(a=8597) or(a=8596) or(a=8595) or(a=8594) or(a=8593) or(a=8592) or(a=8591) or(a=8590) or(a=8589) or(a=8588) or
296 (a=8587) or(a=8586) or(a=8585) or(a=8584) or(a=8583) or(a=8582) or(a=8581) or(a=8580) or(a=8579) or(a=8578) or(a=8577) or(a=8576) or(a=8575) or(a=8574) or(a=8573) or(a=8572) or(a=8571) or(a=8570) or(a=8569) or(a=8568) or(a=8567) or(a=8566) or(a=8565) or(a=8564) or(a=8563) or(a=8562) or(a=8561) or(a=8560) or(a=8559) or(a=8558) or
297 (a=8557) or(a=8556) or(a=8555) or(a=8554) or(a=8553) or(a=8552) or(a=8551) or(a=8550) or(a=8549) or(a=8548) or(a=8547) or(a=8546) or(a=8545) or(a=8544) or(a=8543) or(a=8542) or(a=8541) or(a=8540) or(a=8539) or(a=8538) or(a=8537) or(a=8536) or(a=8535) or(a=8534) or(a=8533) or(a=8532) or(a=8531) or(a=8530) or(a=8529) or(a=8528) or
298 (a=8527) or(a=8526) or(a=8525) or(a=8524) or(a=8523) or(a=8522) or(a=8521) or(a=8520) or(a=8519) or(a=8518) or(a=8517) or(a=8516) or(a=8515) or(a=8514) or(a=8513) or(a=8512) or(a=8511) or(a=8510) or(a=8509) or(a=8508) or(a=8507) or(a=8506) or(a=8505) or(a=8504) or(a=8503) or(a=8502) or(a=8501) or(a=8500) or(a=8499) or(a=8498) or
299 (a=8497) or(a=8496) or(a=8495) or(a=8494) or(a=8493) or(a=8492) or(a=8491) or(a=8490) or(a=8489) or(a=8488) or(a=8487) or(a=8486) or(a=8485) or(a=8484) or(a=8483) or(a=8482) or(a=8481) or(a=8480) or(a=8479) or(a=8478) or(a=8477) or(a=8476) or(a=8475) or(a=8474) or(a=8473) or(a=8472) or(a=8471) or(a=8470) or(a=8469) or(a=8468) or
300 (a=8467) or(a=8466) or(a=8465) or(a=8464) or(a=8463) or(a=8462) or(a=8461) or(a=8460) or(a=8459) or(a=8458) or(a=8457) or(a=8456) or(a=8455) or(a=8454) or(a=8453) or(a=8452) or(a=8451) or(a=8450) or(a=8449) or(a=8448) or(a=8447) or(a=8446) or(a=8445) or(a=8444) or(a=8443) or(a=8442) or(a=8441) or(a=8440) or(a=8439) or(a=8438) or
301 (a=8437) or(a=8436) or(a=8435) or(a=8434) or(a=8433) or(a=8432) or(a=8431) or(a=8430) or(a=8429) or(a=8428) or(a=8427) or(a=8426) or(a=8425) or(a=8424) or(a=8423) or(a=8422) or(a=8421) or(a=8420) or(a=8419) or(a=8418) or(a=8417) or(a=8416) or(a=8415) or(a=8414) or(a=8413) or(a=8412) or(a=8411) or(a=8410) or(a=8409) or(a=8408) or
302 (a=8407) or(a=8406) or(a=8405) or(a=8404) or(a=8403) or(a=8402) or(a=8401) or(a=8400) or(a=8399) or(a=8398) or(a=8397) or(a=8396) or(a=8395) or(a=8394) or(a=8393) or(a=8392) or(a=8391) or(a=8390) or(a=8389) or(a=8388) or(a=8387) or(a=8386) or(a=8385) or(a=8384) or(a=8383) or(a=8382) or(a=8381) or(a=8380) or(a=8379) or(a=8378) or
303 (a=8377) or(a=8376) or(a=8375) or(a=8374) or(a=8373) or(a=8372) or(a=8371) or(a=8370) or(a=8369) or(a=8368) or(a=8367) or(a=8366) or(a=8365) or(a=8364) or(a=8363) or(a=8362) or(a=8361) or(a=8360) or(a=8359) or(a=8358) or(a=8357) or(a=8356) or(a=8355) or(a=8354) or(a=8353) or(a=8352) or(a=8351) or(a=8350) or(a=8349) or(a=8348) or
304 (a=8347) or(a=8346) or(a=8345) or(a=8344) or(a=8343) or(a=8342) or(a=8341) or(a=8340) or(a=8339) or(a=8338) or(a=8337) or(a=8336) or(a=8335) or(a=8334) or(a=8333) or(a=8332) or(a=8331) or(a=8330) or(a=8329) or(a=8328) or(a=8327) or(a=8326) or(a=8325) or(a=8324) or(a=8323) or(a=8322) or(a=8321) or(a=8320) or(a=8319) or(a=8318) or
305 (a=8317) or(a=8316) or(a=8315) or(a=8314) or(a=8313) or(a=8312) or(a=8311) or(a=8310) or(a=8309) or(a=8308) or(a=8307) or(a=8306) or(a=8305) or(a=8304) or(a=8303) or(a=8302) or(a=8301) or(a=8300) or(a=8299) or(a=8298) or(a=8297) or(a=8296) or(a=8295) or(a=8294) or(a=8293) or(a=8292) or(a=8291) or(a=8290) or(a=8289) or(a=8288) or
306 (a=8287) or(a=8286) or(a=8285) or(a=8284) or(a=8283) or(a=8282) or(a=8281) or(a=8280) or(a=8279) or(a=8278) or(a=8277) or(a=8276) or(a=8275) or(a=8274) or(a=8273) or(a=8272) or(a=8271) or(a=8270) or(a=8269) or(a=8268) or(a=8267) or(a=8266) or(a=8265) or(a=8264) or(a=8263) or(a=8262) or(a=8261) or(a=8260) or(a=8259) or(a=8258) or
307 (a=8257) or(a=8256) or(a=8255) or(a=8254) or(a=8253) or(a=8252) or(a=8251) or(a=8250) or(a=8249) or(a=8248) or(a=8247) or(a=8246) or(a=8245) or(a=8244) or(a=8243) or(a=8242) or(a=8241) or(a=8240) or(a=8239) or(a=8238) or(a=8237) or(a=8236) or(a=8235) or(a=8234) or(a=8233) or(a=8232) or(a=8231) or(a=8230) or(a=8229) or(a=8228) or
308 (a=8227) or(a=8226) or(a=8225) or(a=8224) or(a=8223) or(a=8222) or(a=8221) or(a=8220) or(a=8219) or(a=8218) or(a=8217) or(a=8216) or(a=8215) or(a=8214) or(a=8213) or(a=8212) or(a=8211) or(a=8210) or(a=8209) or(a=8208) or(a=8207) or(a=8206) or(a=8205) or(a=8204) or(a=8203) or(a=8202) or(a=8201) or(a=8200) or(a=8199) or(a=8198) or
309 (a=8197) or(a=8196) or(a=8195) or(a=8194) or(a=8193) or(a=8192) or(a=8191) or(a=8190) or(a=8189) or(a=8188) or(a=8187) or(a=8186) or(a=8185) or(a=8184) or(a=8183) or(a=8182) or(a=8181) or(a=8180) or(a=8179) or(a=8178) or(a=8177) or(a=8176) or(a=8175) or(a=8174) or(a=8173) or(a=8172) or(a=8171) or(a=8170) or(a=8169) or(a=8168) or
310 (a=8167) or(a=8166) or(a=8165) or(a=8164) or(a=8163) or(a=8162) or(a=8161) or(a=8160) or(a=8159) or(a=8158) or(a=8157) or(a=8156) or(a=8155) or(a=8154) or(a=8153) or(a=8152) or(a=8151) or(a=8150) or(a=8149) or(a=8148) or(a=8147) or(a=8146) or(a=8145) or(a=8144) or(a=8143) or(a=8142) or(a=8141) or(a=8140) or(a=8139) or(a=8138) or
311 (a=8137) or(a=8136) or(a=8135) or(a=8134) or(a=8133) or(a=8132) or(a=8131) or(a=8130) or(a=8129) or(a=8128) or(a=8127) or(a=8126) or(a=8125) or(a=8124) or(a=8123) or(a=8122) or(a=8121) or(a=8120) or(a=8119) or(a=8118) or(a=8117) or(a=8116) or(a=8115) or(a=8114) or(a=8113) or(a=8112) or(a=8111) or(a=8110) or(a=8109) or(a=8108) or
312 (a=8107) or(a=8106) or(a=8105) or(a=8104) or(a=8103) or(a=8102) or(a=8101) or(a=8100) or(a=8099) or(a=8098) or(a=8097) or(a=8096) or(a=8095) or(a=8094) or(a=8093) or(a=8092) or(a=8091) or(a=8090) or(a=8089) or(a=8088) or(a=8087) or(a=8086) or(a=8085) or(a=8084) or(a=8083) or(a=8082) or(a=8081) or(a=8080) or(a=8079) or(a=8078) or
313 (a=8077) or(a=8076) or(a=8075) or(a=8074) or(a=8073) or(a=8072) or(a=8071) or(a=8070) or(a=8069) or(a=8068) or(a=8067) or(a=8066) or(a=8065) or(a=8064) or(a=8063) or(a=8062) or(a=8061) or(a=8060) or(a=8059) or(a=8058) or(a=8057) or(a=8056) or(a=8055) or(a=8054) or(a=8053) or(a=8052) or(a=8051) or(a=8050) or(a=8049) or(a=8048) or
314 (a=8047) or(a=8046) or(a=8045) or(a=8044) or(a=8043) or(a=8042) or(a=8041) or(a=8040) or(a=8039) or(a=8038) or(a=8037) or(a=8036) or(a=8035) or(a=8034) or(a=8033) or(a=8032) or(a=8031) or(a=8030) or(a=8029) or(a=8028) or(a=8027) or(a=8026) or(a=8025) or(a=8024) or(a=8023) or(a=8022) or(a=8021) or(a=8020) or(a=8019) or(a=8018) or
315 (a=8017) or(a=8016) or(a=8015) or(a=8014) or(a=8013) or(a=8012) or(a=8011) or(a=8010) or(a=8009) or(a=8008) or(a=8007) or(a=8006) or(a=8005) or(a=8004) or(a=8003) or(a=8002) or(a=8001) or(a=8000) or(a=7999) or(a=7998) or(a=7997) or(a=7996) or(a=7995) or(a=7994) or(a=7993) or(a=7992) or(a=7991) or(a=7990) or(a=7989) or(a=7988) or
316 (a=7987) or(a=7986) or(a=7985) or(a=7984) or(a=7983) or(a=7982) or(a=7981) or(a=7980) or(a=7979) or(a=7978) or(a=7977) or(a=7976) or(a=7975) or(a=7974) or(a=7973) or(a=7972) or(a=7971) or(a=7970) or(a=7969) or(a=7968) or(a=7967) or(a=7966) or(a=7965) or(a=7964) or(a=7963) or(a=7962) or(a=7961) or(a=7960) or(a=7959) or(a=7958) or
317 (a=7957) or(a=7956) or(a=7955) or(a=7954) or(a=7953) or(a=7952) or(a=7951) or(a=7950) or(a=7949) or(a=7948) or(a=7947) or(a=7946) or(a=7945) or(a=7944) or(a=7943) or(a=7942) or(a=7941) or(a=7940) or(a=7939) or(a=7938) or(a=7937) or(a=7936) or(a=7935) or(a=7934) or(a=7933) or(a=7932) or(a=7931) or(a=7930) or(a=7929) or(a=7928) or
318 (a=7927) or(a=7926) or(a=7925) or(a=7924) or(a=7923) or(a=7922) or(a=7921) or(a=7920) or(a=7919) or(a=7918) or(a=7917) or(a=7916) or(a=7915) or(a=7914) or(a=7913) or(a=7912) or(a=7911) or(a=7910) or(a=7909) or(a=7908) or(a=7907) or(a=7906) or(a=7905) or(a=7904) or(a=7903) or(a=7902) or(a=7901) or(a=7900) or(a=7899) or(a=7898) or
319 (a=7897) or(a=7896) or(a=7895) or(a=7894) or(a=7893) or(a=7892) or(a=7891) or(a=7890) or(a=7889) or(a=7888) or(a=7887) or(a=7886) or(a=7885) or(a=7884) or(a=7883) or(a=7882) or(a=7881) or(a=7880) or(a=7879) or(a=7878) or(a=7877) or(a=7876) or(a=7875) or(a=7874) or(a=7873) or(a=7872) or(a=7871) or(a=7870) or(a=7869) or(a=7868) or
320 (a=7867) or(a=7866) or(a=7865) or(a=7864) or(a=7863) or(a=7862) or(a=7861) or(a=7860) or(a=7859) or(a=7858) or(a=7857) or(a=7856) or(a=7855) or(a=7854) or(a=7853) or(a=7852) or(a=7851) or(a=7850) or(a=7849) or(a=7848) or(a=7847) or(a=7846) or(a=7845) or(a=7844) or(a=7843) or(a=7842) or(a=7841) or(a=7840) or(a=7839) or(a=7838) or
321 (a=7837) or(a=7836) or(a=7835) or(a=7834) or(a=7833) or(a=7832) or(a=7831) or(a=7830) or(a=7829) or(a=7828) or(a=7827) or(a=7826) or(a=7825) or(a=7824) or(a=7823) or(a=7822) or(a=7821) or(a=7820) or(a=7819) or(a=7818) or(a=7817) or(a=7816) or(a=7815) or(a=7814) or(a=7813) or(a=7812) or(a=7811) or(a=7810) or(a=7809) or(a=7808) or
322 (a=7807) or(a=7806) or(a=7805) or(a=7804) or(a=7803) or(a=7802) or(a=7801) or(a=7800) or(a=7799) or(a=7798) or(a=7797) or(a=7796) or(a=7795) or(a=7794) or(a=7793) or(a=7792) or(a=7791) or(a=7790) or(a=7789) or(a=7788) or(a=7787) or(a=7786) or(a=7785) or(a=7784) or(a=7783) or(a=7782) or(a=7781) or(a=7780) or(a=7779) or(a=7778) or
323 (a=7777) or(a=7776) or(a=7775) or(a=7774) or(a=7773) or(a=7772) or(a=7771) or(a=7770) or(a=7769) or(a=7768) or(a=7767) or(a=7766) or(a=7765) or(a=7764) or(a=7763) or(a=7762) or(a=7761) or(a=7760) or(a=7759) or(a=7758) or(a=7757) or(a=7756) or(a=7755) or(a=7754) or(a=7753) or(a=7752) or(a=7751) or(a=7750) or(a=7749) or(a=7748) or
324 (a=7747) or(a=7746) or(a=7745) or(a=7744) or(a=7743) or(a=7742) or(a=7741) or(a=7740) or(a=7739) or(a=7738) or(a=7737) or(a=7736) or(a=7735) or(a=7734) or(a=7733) or(a=7732) or(a=7731) or(a=7730) or(a=7729) or(a=7728) or(a=7727) or(a=7726) or(a=7725) or(a=7724) or(a=7723) or(a=7722) or(a=7721) or(a=7720) or(a=7719) or(a=7718) or
325 (a=7717) or(a=7716) or(a=7715) or(a=7714) or(a=7713) or(a=7712) or(a=7711) or(a=7710) or(a=7709) or(a=7708) or(a=7707) or(a=7706) or(a=7705) or(a=7704) or(a=7703) or(a=7702) or(a=7701) or(a=7700) or(a=7699) or(a=7698) or(a=7697) or(a=7696) or(a=7695) or(a=7694) or(a=7693) or(a=7692) or(a=7691) or(a=7690) or(a=7689) or(a=7688) or
326 (a=7687) or(a=7686) or(a=7685) or(a=7684) or(a=7683) or(a=7682) or(a=7681) or(a=7680) or(a=7679) or(a=7678) or(a=7677) or(a=7676) or(a=7675) or(a=7674) or(a=7673) or(a=7672) or(a=7671) or(a=7670) or(a=7669) or(a=7668) or(a=7667) or(a=7666) or(a=7665) or(a=7664) or(a=7663) or(a=7662) or(a=7661) or(a=7660) or(a=7659) or(a=7658) or
327 (a=7657) or(a=7656) or(a=7655) or(a=7654) or(a=7653) or(a=7652) or(a=7651) or(a=7650) or(a=7649) or(a=7648) or(a=7647) or(a=7646) or(a=7645) or(a=7644) or(a=7643) or(a=7642) or(a=7641) or(a=7640) or(a=7639) or(a=7638) or(a=7637) or(a=7636) or(a=7635) or(a=7634) or(a=7633) or(a=7632) or(a=7631) or(a=7630) or(a=7629) or(a=7628) or
328 (a=7627) or(a=7626) or(a=7625) or(a=7624) or(a=7623) or(a=7622) or(a=7621) or(a=7620) or(a=7619) or(a=7618) or(a=7617) or(a=7616) or(a=7615) or(a=7614) or(a=7613) or(a=7612) or(a=7611) or(a=7610) or(a=7609) or(a=7608) or(a=7607) or(a=7606) or(a=7605) or(a=7604) or(a=7603) or(a=7602) or(a=7601) or(a=7600) or(a=7599) or(a=7598) or
329 (a=7597) or(a=7596) or(a=7595) or(a=7594) or(a=7593) or(a=7592) or(a=7591) or(a=7590) or(a=7589) or(a=7588) or(a=7587) or(a=7586) or(a=7585) or(a=7584) or(a=7583) or(a=7582) or(a=7581) or(a=7580) or(a=7579) or(a=7578) or(a=7577) or(a=7576) or(a=7575) or(a=7574) or(a=7573) or(a=7572) or(a=7571) or(a=7570) or(a=7569) or(a=7568) or
330 (a=7567) or(a=7566) or(a=7565) or(a=7564) or(a=7563) or(a=7562) or(a=7561) or(a=7560) or(a=7559) or(a=7558) or(a=7557) or(a=7556) or(a=7555) or(a=7554) or(a=7553) or(a=7552) or(a=7551) or(a=7550) or(a=7549) or(a=7548) or(a=7547) or(a=7546) or(a=7545) or(a=7544) or(a=7543) or(a=7542) or(a=7541) or(a=7540) or(a=7539) or(a=7538) or
331 (a=7537) or(a=7536) or(a=7535) or(a=7534) or(a=7533) or(a=7532) or(a=7531) or(a=7530) or(a=7529) or(a=7528) or(a=7527) or(a=7526) or(a=7525) or(a=7524) or(a=7523) or(a=7522) or(a=7521) or(a=7520) or(a=7519) or(a=7518) or(a=7517) or(a=7516) or(a=7515) or(a=7514) or(a=7513) or(a=7512) or(a=7511) or(a=7510) or(a=7509) or(a=7508) or
332 (a=7507) or(a=7506) or(a=7505) or(a=7504) or(a=7503) or(a=7502) or(a=7501) or(a=7500) or(a=7499) or(a=7498) or(a=7497) or(a=7496) or(a=7495) or(a=7494) or(a=7493) or(a=7492) or(a=7491) or(a=7490) or(a=7489) or(a=7488) or(a=7487) or(a=7486) or(a=7485) or(a=7484) or(a=7483) or(a=7482) or(a=7481) or(a=7480) or(a=7479) or(a=7478) or
333 (a=7477) or(a=7476) or(a=7475) or(a=7474) or(a=7473) or(a=7472) or(a=7471) or(a=7470) or(a=7469) or(a=7468) or(a=7467) or(a=7466) or(a=7465) or(a=7464) or(a=7463) or(a=7462) or(a=7461) or(a=7460) or(a=7459) or(a=7458) or(a=7457) or(a=7456) or(a=7455) or(a=7454) or(a=7453) or(a=7452) or(a=7451) or(a=7450) or(a=7449) or(a=7448) or
334 (a=7447) or(a=7446) or(a=7445) or(a=7444) or(a=7443) or(a=7442) or(a=7441) or(a=7440) or(a=7439) or(a=7438) or(a=7437) or(a=7436) or(a=7435) or(a=7434) or(a=7433) or(a=7432) or(a=7431) or(a=7430) or(a=7429) or(a=7428) or(a=7427) or(a=7426) or(a=7425) or(a=7424) or(a=7423) or(a=7422) or(a=7421) or(a=7420) or(a=7419) or(a=7418) or
335 (a=7417) or(a=7416) or(a=7415) or(a=7414) or(a=7413) or(a=7412) or(a=7411) or(a=7410) or(a=7409) or(a=7408) or(a=7407) or(a=7406) or(a=7405) or(a=7404) or(a=7403) or(a=7402) or(a=7401) or(a=7400) or(a=7399) or(a=7398) or(a=7397) or(a=7396) or(a=7395) or(a=7394) or(a=7393) or(a=7392) or(a=7391) or(a=7390) or(a=7389) or(a=7388) or
336 (a=7387) or(a=7386) or(a=7385) or(a=7384) or(a=7383) or(a=7382) or(a=7381) or(a=7380) or(a=7379) or(a=7378) or(a=7377) or(a=7376) or(a=7375) or(a=7374) or(a=7373) or(a=7372) or(a=7371) or(a=7370) or(a=7369) or(a=7368) or(a=7367) or(a=7366) or(a=7365) or(a=7364) or(a=7363) or(a=7362) or(a=7361) or(a=7360) or(a=7359) or(a=7358) or
337 (a=7357) or(a=7356) or(a=7355) or(a=7354) or(a=7353) or(a=7352) or(a=7351) or(a=7350) or(a=7349) or(a=7348) or(a=7347) or(a=7346) or(a=7345) or(a=7344) or(a=7343) or(a=7342) or(a=7341) or(a=7340) or(a=7339) or(a=7338) or(a=7337) or(a=7336) or(a=7335) or(a=7334) or(a=7333) or(a=7332) or(a=7331) or(a=7330) or(a=7329) or(a=7328) or
338 (a=7327) or(a=7326) or(a=7325) or(a=7324) or(a=7323) or(a=7322) or(a=7321) or(a=7320) or(a=7319) or(a=7318) or(a=7317) or(a=7316) or(a=7315) or(a=7314) or(a=7313) or(a=7312) or(a=7311) or(a=7310) or(a=7309) or(a=7308) or(a=7307) or(a=7306) or(a=7305) or(a=7304) or(a=7303) or(a=7302) or(a=7301) or(a=7300) or(a=7299) or(a=7298) or
339 (a=7297) or(a=7296) or(a=7295) or(a=7294) or(a=7293) or(a=7292) or(a=7291) or(a=7290) or(a=7289) or(a=7288) or(a=7287) or(a=7286) or(a=7285) or(a=7284) or(a=7283) or(a=7282) or(a=7281) or(a=7280) or(a=7279) or(a=7278) or(a=7277) or(a=7276) or(a=7275) or(a=7274) or(a=7273) or(a=7272) or(a=7271) or(a=7270) or(a=7269) or(a=7268) or
340 (a=7267) or(a=7266) or(a=7265) or(a=7264) or(a=7263) or(a=7262) or(a=7261) or(a=7260) or(a=7259) or(a=7258) or(a=7257) or(a=7256) or(a=7255) or(a=7254) or(a=7253) or(a=7252) or(a=7251) or(a=7250) or(a=7249) or(a=7248) or(a=7247) or(a=7246) or(a=7245) or(a=7244) or(a=7243) or(a=7242) or(a=7241) or(a=7240) or(a=7239) or(a=7238) or
341 (a=7237) or(a=7236) or(a=7235) or(a=7234) or(a=7233) or(a=7232) or(a=7231) or(a=7230) or(a=7229) or(a=7228) or(a=7227) or(a=7226) or(a=7225) or(a=7224) or(a=7223) or(a=7222) or(a=7221) or(a=7220) or(a=7219) or(a=7218) or(a=7217) or(a=7216) or(a=7215) or(a=7214) or(a=7213) or(a=7212) or(a=7211) or(a=7210) or(a=7209) or(a=7208) or
342 (a=7207) or(a=7206) or(a=7205) or(a=7204) or(a=7203) or(a=7202) or(a=7201) or(a=7200) or(a=7199) or(a=7198) or(a=7197) or(a=7196) or(a=7195) or(a=7194) or(a=7193) or(a=7192) or(a=7191) or(a=7190) or(a=7189) or(a=7188) or(a=7187) or(a=7186) or(a=7185) or(a=7184) or(a=7183) or(a=7182) or(a=7181) or(a=7180) or(a=7179) or(a=7178) or
343 (a=7177) or(a=7176) or(a=7175) or(a=7174) or(a=7173) or(a=7172) or(a=7171) or(a=7170) or(a=7169) or(a=7168) or(a=7167) or(a=7166) or(a=7165) or(a=7164) or(a=7163) or(a=7162) or(a=7161) or(a=7160) or(a=7159) or(a=7158) or(a=7157) or(a=7156) or(a=7155) or(a=7154) or(a=7153) or(a=7152) or(a=7151) or(a=7150) or(a=7149) or(a=7148) or
344 (a=7147) or(a=7146) or(a=7145) or(a=7144) or(a=7143) or(a=7142) or(a=7141) or(a=7140) or(a=7139) or(a=7138) or(a=7137) or(a=7136) or(a=7135) or(a=7134) or(a=7133) or(a=7132) or(a=7131) or(a=7130) or(a=7129) or(a=7128) or(a=7127) or(a=7126) or(a=7125) or(a=7124) or(a=7123) or(a=7122) or(a=7121) or(a=7120) or(a=7119) or(a=7118) or
345 (a=7117) or(a=7116) or(a=7115) or(a=7114) or(a=7113) or(a=7112) or(a=7111) or(a=7110) or(a=7109) or(a=7108) or(a=7107) or(a=7106) or(a=7105) or(a=7104) or(a=7103) or(a=7102) or(a=7101) or(a=7100) or(a=7099) or(a=7098) or(a=7097) or(a=7096) or(a=7095) or(a=7094) or(a=7093) or(a=7092) or(a=7091) or(a=7090) or(a=7089) or(a=7088) or
346 (a=7087) or(a=7086) or(a=7085) or(a=7084) or(a=7083) or(a=7082) or(a=7081) or(a=7080) or(a=7079) or(a=7078) or(a=7077) or(a=7076) or(a=7075) or(a=7074) or(a=7073) or(a=7072) or(a=7071) or(a=7070) or(a=7069) or(a=7068) or(a=7067) or(a=7066) or(a=7065) or(a=7064) or(a=7063) or(a=7062) or(a=7061) or(a=7060) or(a=7059) or(a=7058) or
347 (a=7057) or(a=7056) or(a=7055) or(a=7054) or(a=7053) or(a=7052) or(a=7051) or(a=7050) or(a=7049) or(a=7048) or(a=7047) or(a=7046) or(a=7045) or(a=7044) or(a=7043) or(a=7042) or(a=7041) or(a=7040) or(a=7039) or(a=7038) or(a=7037) or(a=7036) or(a=7035) or(a=7034) or(a=7033) or(a=7032) or(a=7031) or(a=7030) or(a=7029) or(a=7028) or
348 (a=7027) or(a=7026) or(a=7025) or(a=7024) or(a=7023) or(a=7022) or(a=7021) or(a=7020) or(a=7019) or(a=7018) or(a=7017) or(a=7016) or(a=7015) or(a=7014) or(a=7013) or(a=7012) or(a=7011) or(a=7010) or(a=7009) or(a=7008) or(a=7007) or(a=7006) or(a=7005) or(a=7004) or(a=7003) or(a=7002) or(a=7001) or(a=7000) or(a=6999) or(a=6998) or
349 (a=6997) or(a=6996) or(a=6995) or(a=6994) or(a=6993) or(a=6992) or(a=6991) or(a=6990) or(a=6989) or(a=6988) or(a=6987) or(a=6986) or(a=6985) or(a=6984) or(a=6983) or(a=6982) or(a=6981) or(a=6980) or(a=6979) or(a=6978) or(a=6977) or(a=6976) or(a=6975) or(a=6974) or(a=6973) or(a=6972) or(a=6971) or(a=6970) or(a=6969) or(a=6968) or
350 (a=6967) or(a=6966) or(a=6965) or(a=6964) or(a=6963) or(a=6962) or(a=6961) or(a=6960) or(a=6959) or(a=6958) or(a=6957) or(a=6956) or(a=6955) or(a=6954) or(a=6953) or(a=6952) or(a=6951) or(a=6950) or(a=6949) or(a=6948) or(a=6947) or(a=6946) or(a=6945) or(a=6944) or(a=6943) or(a=6942) or(a=6941) or(a=6940) or(a=6939) or(a=6938) or
351 (a=6937) or(a=6936) or(a=6935) or(a=6934) or(a=6933) or(a=6932) or(a=6931) or(a=6930) or(a=6929) or(a=6928) or(a=6927) or(a=6926) or(a=6925) or(a=6924) or(a=6923) or(a=6922) or(a=6921) or(a=6920) or(a=6919) or(a=6918) or(a=6917) or(a=6916) or(a=6915) or(a=6914) or(a=6913) or(a=6912) or(a=6911) or(a=6910) or(a=6909) or(a=6908) or
352 (a=6907) or(a=6906) or(a=6905) or(a=6904) or(a=6903) or(a=6902) or(a=6901) or(a=6900) or(a=6899) or(a=6898) or(a=6897) or(a=6896) or(a=6895) or(a=6894) or(a=6893) or(a=6892) or(a=6891) or(a=6890) or(a=6889) or(a=6888) or(a=6887) or(a=6886) or(a=6885) or(a=6884) or(a=6883) or(a=6882) or(a=6881) or(a=6880) or(a=6879) or(a=6878) or
353 (a=6877) or(a=6876) or(a=6875) or(a=6874) or(a=6873) or(a=6872) or(a=6871) or(a=6870) or(a=6869) or(a=6868) or(a=6867) or(a=6866) or(a=6865) or(a=6864) or(a=6863) or(a=6862) or(a=6861) or(a=6860) or(a=6859) or(a=6858) or(a=6857) or(a=6856) or(a=6855) or(a=6854);

CT-00027, Stack depth limit exceeded
SQL> drop table t_DTS2020031805402;

Succeed.

SQL> --20200615
SQL> drop table if exists temp_20200615;

Succeed.

SQL> drop index if exists idx_temp_20200615 on temp_20200615;

CT-00843, The table or view SYS.TEMP_20200615 does not exist.

SQL> create table temp_20200615(UID BINARY_INTEGER NOT NULL,
  2 GRANTOR BINARY_INTEGER  NOT NULL,
  3 GRANTEE BINARY_INTEGER NOT NULL,
  4 PRIVILEGE BINARY_INTEGER NOT NULL,
  5 OPTION BINARY_INTEGER);

Succeed.

SQL> create unique index idx_temp_20200615 on temp_20200615(uid,grantee,privilege);

Succeed.

SQL> insert into temp_20200615 values(0,0,1,0,0);

1 rows affected.

SQL> commit;

Succeed.

SQL> --          NL
SQL> --         / \
SQL> --        a  HASH
SQL> --          / \
SQL> --         b  NLO
SQL> --            / \
SQL> --           d   c
SQL> select 1 from temp_20200615 as a inner join (((select b.GRANTOR as c0, b.GRANTOR as c5 from temp_20200615 as b) as subq_2)
  2 inner join ((((temp_20200615 as c)) right join (temp_20200615 as d) on ((c.GRANTOR is not NULL)))) on (subq_2.c0 = d.UID )) on
  3 (((EXISTS (select 1 from temp_20200615 as e where subq_2.c5 is not NULL limit 73))) or c.UID is not NULL);

1
------------
1

1 rows fetched.

SQL> select
  2   subq_0.c1 as c0,
  3   case when (((EXISTS (
  4             select
  5                 ref_7.UID as c0,
  6                 ref_1.GRANTOR as c1,
  7                 ref_1.GRANTOR as c2,
  8                 ref_7.UID as c3,
  9                 subq_2.c10 as c4,
 10                 ref_15.UID as c5,
 11                 ref_5.GRANTOR as c6,
 12                 subq_1.c0 as c7,
 13                 ref_5.UID as c8,
 14                 subq_1.c9 as c9,
 15                 ref_15.GRANTOR as c10
 16               from
 17                 temp_20200615 as ref_15
 18               where true
 19               limit 142))
 20           and ((false)
 21             and (((false)
 22                 or (false))
 23               and (ref_1.GRANTOR is NULL))))
 24         or ((EXISTS (
 25             select
 26                 subq_2.c7 as c0,
 27                 subq_2.c2 as c1,
 28                 subq_0.c2 as c2
 29               from
 30                 temp_20200615 as ref_16
 31               where false))
 32           or (ref_6.GRANTOR is not NULL)))
 33       or ((EXISTS (
 34           select
 35               ref_17.GRANTOR as c0
 36             from
 37               temp_20200615 as ref_17
 38             where (true)
 39               or ((false)
 40                 or (ref_6.UID is NULL))))
 41         and (83 is NULL)) then subq_1.c0 else subq_1.c0 end
 42      as c1
 43 from
 44   ((temp_20200615 as ref_0)
 45       inner join (temp_20200615 as ref_1)
 46       on (ref_0.GRANTOR = ref_1.UID ))
 47     inner join (((select
 48             (select UID from temp_20200615 limit 1 offset 2)
 49                as c0,
 50             ref_2.UID as c1,
 51             80 as c2,
 52             ref_2.GRANTOR as c3,
 53             ref_2.GRANTOR as c4,
 54             ref_2.GRANTOR as c5
 55           from
 56             temp_20200615 as ref_2
 57           where ref_2.GRANTOR is NULL
 58           limit 136) as subq_0)
 59       right join (((select
 60               ref_3.GRANTOR as c0,
 61               ref_3.GRANTOR as c1,
 62               ref_3.GRANTOR as c2,
 63               ref_3.GRANTOR as c3,
 64               (select GRANTOR from temp_20200615 limit 1 offset 3)
 65                  as c4,
 66               ref_3.GRANTOR as c5,
 67               ref_3.GRANTOR as c6,
 68               (select UID from temp_20200615 limit 1 offset 58)
 69                  as c7,
 70               (select UID from temp_20200615 limit 1 offset 6)
 71                  as c8,
 72               ref_3.GRANTOR as c9,
 73               ref_3.UID as c10,
 74               ref_3.GRANTOR as c11
 75             from
 76               temp_20200615 as ref_3
 77             where ref_3.GRANTOR is not NULL) as subq_1)
 78         inner join (((select
 79                 ref_4.GRANTOR as c0,
 80                 ref_4.GRANTOR as c1,
 81                 ref_4.GRANTOR as c2,
 82                 (select GRANTOR from temp_20200615 limit 1 offset 2)
 83                    as c3,
 84                 ref_4.GRANTOR as c4,
 85                 ref_4.GRANTOR as c5,
 86                 ref_4.GRANTOR as c6,
 87                 ref_4.UID as c7,
 88                 (select ID from SYS.SYS_VIEWS limit 1 offset 3)
 89                    as c8,
 90                 ref_4.GRANTOR as c9,
 91                 ref_4.GRANTOR as c10
 92               from
 93                 temp_20200615 as ref_4
 94               where true) as subq_2)
 95           inner join ((temp_20200615 as ref_5)
 96             inner join (((temp_20200615 as ref_6)
 97                 inner join (temp_20200615 as ref_7)
 98                 on (ref_6.GRANTOR = ref_7.UID ))
 99               right join (temp_20200615 as ref_8)
100               on ((false)
101                   or (ref_6.GRANTOR is not NULL)))
102             on ((ref_7.GRANTOR is not NULL)
103                 or ((ref_6.UID is NULL)
104                   or (EXISTS (
105                     select
106                         ref_9.VIEW# as c0,
107                         ref_5.GRANTOR as c1,
108                         ref_5.GRANTOR as c2,
109                         ref_5.UID as c3,
110                         ref_7.GRANTOR as c4,
111                         ref_7.GRANTOR as c5
112                       from
113                         SYS.SYS_VIEW_COLS as ref_9
114                       where false)))))
115           on (subq_2.c0 = ref_8.UID ))
116         on (((EXISTS (
117                 select
118                     ref_7.GRANTOR as c0,
119                     ref_8.GRANTOR as c1,
120                     ref_7.GRANTOR as c2
121                   from
122                     temp_20200615 as ref_10
123                   where subq_2.c5 is not NULL
124                   limit 73))
125               or (EXISTS (
126                 select
127                     subq_1.c2 as c0,
128                     ref_6.GRANTOR as c1,
129                     ref_11.GRANTOR as c2,
130                     ref_5.UID as c3
131                   from
132                     temp_20200615 as ref_11
133                   where subq_2.c1 is not NULL
134                   limit 36)))
135             or ((ref_6.UID is not NULL)
136               or (EXISTS (
137                 select
138                     ref_6.GRANTOR as c0,
139                     (select abs(UID) from temp_20200615)
140                        as c1,
141                     subq_1.c2 as c2
142                   from
143                     temp_20200615 as ref_12
144                   where ref_8.GRANTOR is not NULL)))))
145       on (((subq_0.c0 is not NULL)
146             and (false))
147           or (EXISTS (
148             select
149                 ref_14.GRANTOR as c0,
150                 ref_6.UID as c1,
151                 47 as c2
152               from
153                 (temp_20200615 as ref_13)
154                   inner join (temp_20200615 as ref_14)
155                   on ((false)
156                       and (true))
157               where subq_1.c0 is NULL
158               limit 133))))
159     on ((subq_1.c0 is not NULL)
160         or ((true)
161           and (false)))
162 where ref_8.UID is not NULL
163 limit 105;

C0           C1
------------ ------------
             0
1 rows fetched.

SQL> --20200619
SQL> insert into temp_20200615 values(2,2,1,0,0);

1 rows affected.

SQL> commit;

Succeed.

SQL> select
  2   13 as c4
  3 from
  4   ((((SYS.SYS_USER_ROLES as ref_0))
  5         right join ((((temp_20200615 as ref_7)
  6               right join (temp_20200615 as ref_8)
  7               on (true))
  8             inner join (((temp_20200615 as ref_9)
  9                 inner join ((temp_20200615 as ref_10)
 10                   inner join (temp_20200615 as ref_11)
 11                   on (false))
 12                 on ((false))))
 13             on (true))
 14           inner join (temp_20200615 as ref_14)
 15           on (false))
 16         on ((ref_10.GRANTOR is not NULL)))
 17       inner join ((select
 18             ref_16.GRANTOR as c0,
 19             ref_16.GRANTOR as c1,
 20             ref_16.UID as c2
 21           from
 22             temp_20200615 as ref_16
 23           where true
 24           limit 145) as subq_1)
 25       on ((false)))
 26     inner join (((select
 27             ref_17.GRANTOR as c0,
 28             ref_17.GRANTOR as c1,
 29             ref_17.GRANTOR as c2,
 30             ref_17.GRANTOR as c3,
 31             ref_17.GRANTOR as c4
 32           from
 33             temp_20200615 as ref_17
 34           where (((((false)))) )
 35             and (ref_17.GRANTOR is not NULL)
 36           limit 175) as subq_2)
 37       inner join (((((temp_20200615 as ref_23)
 38               left join (temp_20200615 as ref_24)
 39               on (((ref_23.UID is NULL)
 40                     or ((((ref_23.UID is not NULL)))
 41                       or ((ref_24.GRANTOR is not NULL))))))
 42             inner join ((temp_20200615 as ref_26)
 43               right join (temp_20200615 as ref_27)
 44               on (((ref_26.GRANTOR is not NULL))))
 45             on ((ref_24.GRANTOR is not NULL)
 46                 or (70 is not NULL)))
 47           left join (temp_20200615 as ref_29)
 48           on (true)))
 49       on (subq_2.c3 = ref_26.UID ))
 50     on ((((EXISTS (
 51               select
 52                   ref_11.UID as c0,
 53                   ref_8.GRANTOR as c1
 54                 from
 55                   temp_20200615 as ref_47
 56                 where 16 is not NULL
 57                 limit 60))
 58             and (((((ref_14.GRANTOR is NULL))
 59                   and ((subq_2.c3 is NULL)
 60                     or ((ref_23.GRANTOR is NULL))))
 61                 and (((ref_9.GRANTOR is NULL))))))
 62           or (subq_2.c3 is not NULL)));

C4
------------

0 rows fetched.

SQL> select
  2   case when ((((((((true)
  3                     or ((false)
  4                       or ((EXISTS (
  5                           select
  6                               ref_11.GRANTOR as c0,
  7                               ref_14.GRANTOR as c1,
  8                               ref_44.GRANTOR as c2,
  9                               ref_15.ID as c3,
 10                               ref_42.GRANTOR as c4,
 11                               ref_46.GRANTOR as c5,
 12                               ref_10.UID as c6,
 13                               ref_17.UID as c7
 14                             from
 15                               temp_20200615 as ref_46
 16                             where true))
 17                         or ((true)
 18                           and ((ref_22.GRANTOR is not NULL)
 19                             and ((ref_11.GRANTOR is not NULL)
 20                               and (ref_39.UID is not NULL)))))))
 21                   or ((ref_16.ID is not NULL)
 22                     and (false)))
 23                 or ((true)
 24                   or (true)))
 25               and ((ref_11.GRANTOR is NULL)
 26                 and ((true)
 27                   or (((EXISTS (
 28                         select
 29                             ref_44.GRANTOR as c0,
 30                             ref_13.GRANTOR as c1,
 31                             (select GRANTOR from temp_20200615 limit 1 offset 2)
 32                                as c2,
 33                             ref_23.GRANTOR as c3
 34                           from
 35                             temp_20200615 as ref_47
 36                           where false))
 37                       and (false))
 38                     and (false)))))
 39             or (ref_41.GRANTOR is not NULL))
 40           or (EXISTS (
 41             select
 42                 ref_48.ID as c0,
 43                 ref_40.GRANTOR as c1,
 44                 ref_27.GRANTEE_TYPE as c2,
 45                 ref_48.ID as c3,
 46                 ref_21.GRANTOR as c4
 47               from
 48                 (SYS.SYS_VIEWS as ref_48)
 49                   inner join (temp_20200615 as ref_49)
 50                   on (ref_23.GRANTOR is NULL)
 51               where EXISTS (
 52                 select
 53                     ref_26.ID as c0,
 54                     ref_20.GRANTOR as c1,
 55                     ref_11.GRANTOR as c2,
 56                     ref_23.GRANTOR as c3,
 57                     ref_43.STMTID as c4,
 58                     ref_10.GRANTOR as c5
 59                   from
 60                     temp_20200615 as ref_50
 61                   where true
 62                   limit 145))))
 63         and (((select GRANTOR from temp_20200615 limit 1 offset 2)
 64                is not NULL)
 65           and (EXISTS (
 66             select
 67                 ref_21.GRANTOR as c0
 68               from
 69                 temp_20200615 as ref_51
 70               where false))))
 71       or ((true)
 72         and (((false)
 73             or (ref_41.GRANTOR is not NULL))
 74           and ((90 is NULL)
 75             and ((((ref_22.GRANTOR is NULL)
 76                   or (true))
 77                 or ((ref_17.GRANTOR is not NULL)
 78                   or (((ref_26.ID is NULL)
 79                       and (ref_3.GRANTOR is not NULL))
 80                     and (((false)
 81                         or (((select UID from temp_20200615 limit 1 offset 6)
 82                                is not NULL)
 83                           or (((false)
 84                               and ((ref_16.ID is NULL)
 85                                 or (37 is not NULL)))
 86                             and (false))))
 87                       and (EXISTS (
 88                         select
 89                             ref_19.GRANTOR as c0,
 90                             ref_38.GRANTOR as c1,
 91                             ref_9.GRANTOR as c2,
 92                             ref_52.GRANTOR as c3,
 93                             80 as c4,
 94                             ref_2.GRANTOR as c5,
 95                             ref_42.GRANTOR as c6,
 96                             ref_52.GRANTOR as c7,
 97                             ref_44.GRANTOR as c8
 98                           from
 99                             temp_20200615 as ref_52
100                           where (true)
101                             or (false)))))))
102               or (ref_21.UID is NULL))))) then ref_28.GRANTOR else ref_28.GRANTOR end
103      as c0,
104   ref_11.UID as c1,
105   ref_9.GRANTOR as c2,
106   ref_8.GRANTOR as c3,
107   ref_11.GRANTOR as c4,
108   ref_5.GRANTOR as c5,
109   ref_17.GRANTOR as c6,
110   (select GRANTOR from temp_20200615 limit 1 offset 5)
111      as c7,
112   ref_44.GRANTOR as c8,
113   case when ref_28.GRANTOR is not NULL then ref_26.ID else ref_26.ID end
114      as c9,
115   ref_10.GRANTOR as c10,
116   ref_14.UID as c11,
117   ref_11.GRANTOR as c12,
118   (select GRANTOR from temp_20200615 limit 1 offset 3)
119      as c13,
120   ref_44.GRANTOR as c14,
121   74 as c15
122 from
123   (((select
124             ref_0.GRANTOR as c0,
125             ref_0.GRANTOR as c1,
126             ref_0.GRANTOR as c2,
127             ref_0.GRANTOR as c3,
128             85 as c4,
129             ref_0.GRANTOR as c5
130           from
131             temp_20200615 as ref_0
132           where ((EXISTS (
133                 select
134                     ref_0.GRANTOR as c0,
135                     ref_0.GRANTOR as c1,
136                     ref_1.GRANTOR as c2
137                   from
138                     temp_20200615 as ref_1
139                   where (true)
140                     and (ref_0.UID is not NULL)
141                   limit 88))
142               and (ref_0.GRANTOR is not NULL))
143             and ((ref_0.UID is NULL)
144               or (true))
145           limit 138) as subq_0)
146       right join ((((((temp_20200615 as ref_2)
147                 right join (temp_20200615 as ref_3)
148                 on (ref_2.GRANTOR = ref_3.UID ))
149               left join (((temp_20200615 as ref_4)
150                   inner join (temp_20200615 as ref_5)
151                   on (ref_4.UID is not NULL))
152                 right join ((temp_20200615 as ref_6)
153                   inner join (temp_20200615 as ref_7)
154                   on (ref_7.GRANTOR is NULL))
155                 on (false))
156               on ((82 is not NULL)
157                   and (((((true)
158                           or (ref_4.GRANTOR is NULL))
159                         or (false))
160                       or (ref_5.GRANTOR is not NULL))
161                     and (ref_3.GRANTOR is NULL))))
162             inner join (temp_20200615 as ref_8)
163             on ((ref_6.UID is NULL)
164                 and (ref_8.GRANTOR is not NULL)))
165           inner join (temp_20200615 as ref_9)
166           on ((ref_6.GRANTOR is not NULL)
167               and (true)))
168         inner join (((((temp_20200615 as ref_10)
169                 inner join ((temp_20200615 as ref_11)
170                   inner join (temp_20200615 as ref_12)
171                   on (false))
172                 on (((false)
173                       or (false))
174                     or (ref_10.GRANTOR is not NULL)))
175               inner join ((temp_20200615 as ref_13)
176                 left join (temp_20200615 as ref_14)
177                 on (true))
178               on (true))
179             inner join ((SYS.SYS_VIEWS as ref_15)
180               right join ((SYS.SYS_VIEWS as ref_16)
181                 left join (temp_20200615 as ref_17)
182                 on (ref_16.ID = ref_17.UID ))
183               on (false))
184             on (((ref_11.GRANTOR is NULL)
185                   or (((ref_15.ID is NULL)
186                       and ((EXISTS (
187                           select
188                               ref_15.ID as c0,
189                               ref_17.GRANTOR as c1,
190                               ref_15.ID as c2,
191                               ref_13.UID as c3,
192                               ref_16.ID as c4,
193                               ref_18.GRANTOR as c5,
194                               ref_13.GRANTOR as c6,
195                               ref_17.GRANTOR as c7
196                             from
197                               temp_20200615 as ref_18
198                             where true))
199                         or ((ref_16.USER# is NULL)
200                           and (true))))
201                     and (true)))
202                 or ((select GRANTOR from temp_20200615 limit 1 offset 5)
203                      is not NULL)))
204           inner join (((((temp_20200615 as ref_19)
205                   right join (temp_20200615 as ref_20)
206                   on (ref_19.UID = ref_20.UID ))
207                 inner join (temp_20200615 as ref_21)
208                 on (ref_19.GRANTOR is not NULL))
209               left join (temp_20200615 as ref_22)
210               on ((true)
211                   or ((false)
212                     and (false))))
213             left join (temp_20200615 as ref_23)
214             on ((select UID from temp_20200615 limit 1 offset 1)
215                    is not NULL))
216           on (ref_16.ID = ref_20.UID ))
217         on (((ref_21.GRANTOR is not NULL)
218               or (ref_17.UID is not NULL))
219             or (((true)
220                 and (true))
221               and ((EXISTS (
222                   select
223                       (select GRANTOR from temp_20200615 limit 1 offset 2)
224                          as c0,
225                       ref_23.UID as c1,
226                       ref_5.GRANTOR as c2,
227                       ref_13.GRANTOR as c3,
228                       ref_12.GRANTOR as c4,
229                       ref_12.GRANTOR as c5,
230                       ref_21.GRANTOR as c6,
231                       ref_16.ID as c7,
232                       ref_12.GRANTOR as c8
233                     from
234                       temp_20200615 as ref_24
235                     where true
236                     limit 121))
237                 and (EXISTS (
238                   select
239                       ref_22.UID as c0,
240                       ref_8.GRANTOR as c1,
241                       ref_2.UID as c2
242                     from
243                       temp_20200615 as ref_25
244                     where ref_13.GRANTOR is NULL
245                     limit 74))))))
246       on (subq_0.c2 = ref_15.USER# ))
247     inner join ((((SYS.SYS_VIEWS as ref_26)
248           right join ((SYS.SYS_USER_ROLES as ref_27)
249             inner join (temp_20200615 as ref_28)
250             on (((EXISTS (
251                     select
252                         (select VIEW# from SYS.SYS_VIEW_COLS limit 1 offset 5)
253                            as c0,
254                         ref_27.GRANTEE_TYPE as c1,
255                         ref_29.UID as c2,
256                         (select UID from temp_20200615 limit 1 offset 5)
257                            as c3,
258                         ref_28.GRANTOR as c4,
259                         ref_29.GRANTOR as c5,
260                         ref_27.GRANTEE_TYPE as c6,
261                         ref_29.GRANTOR as c7,
262                         ref_27.GRANTEE_ID as c8
263                       from
264                         temp_20200615 as ref_29
265                       where EXISTS (
266                         select
267                             ref_28.GRANTOR as c0,
268                             (select GRANTOR from temp_20200615 limit 1 offset 5)
269                                as c1
270                           from
271                             temp_20200615 as ref_30
272                           where ref_28.GRANTOR is not NULL)))
273                   or (false))
274                 or ((EXISTS (
275                     select
276                         ref_28.GRANTOR as c0
277                       from
278                         temp_20200615 as ref_31
279                       where ((((((false)
280                                   and (true))
281                                 or (true))
282                               or (EXISTS (
283                                 select
284                                     ref_31.GRANTOR as c0,
285                                     ref_27.GRANTEE_TYPE as c1,
286                                     ref_28.GRANTOR as c2,
287                                     ref_28.GRANTOR as c3,
288                                     ref_28.GRANTOR as c4,
289                                     ref_27.GRANTEE_TYPE as c5
290                                   from
291                                     temp_20200615 as ref_32
292                                   where EXISTS (
293                                     select
294                                         ref_27.GRANTEE_TYPE as c0
295                                       from
296                                         temp_20200615 as ref_33
297                                       where ((true)
298                                           and ((false)
299                                             and (false)))
300                                         or (ref_27.GRANTEE_TYPE is not NULL)
301                                       limit 74))))
302                             and (false))
303                           or ((true)
304                             or ((false)
305                               and (EXISTS (
306                                 select
307                                     ref_31.UID as c0,
308                                     ref_28.GRANTOR as c1,
309                                     ref_28.GRANTOR as c2
310                                   from
311                                     temp_20200615 as ref_34
312                                   where (ref_31.GRANTOR is NULL)
313                                     or (false))))))
314                         and (((EXISTS (
315                               select
316                                   ref_28.GRANTOR as c0,
317                                   ref_27.GRANTEE_TYPE as c1,
318                                   ref_31.GRANTOR as c2
319                                 from
320                                   SYS.SYS_AUDIT as ref_35
321                                 where (EXISTS (
322                                     select
323                                         ref_28.GRANTOR as c0,
324                                         ref_31.GRANTOR as c1
325                                       from
326                                         temp_20200615 as ref_36
327                                       where false
328                                       limit 102))
329                                   and ((false)
330                                     or (EXISTS (
331                                       select
332                                           17 as c0
333                                         from
334                                           temp_20200615 as ref_37
335                                         where (true)
336                                           or (ref_37.GRANTOR is NULL)
337                                         limit 125)))))
338                             and (false))
339                           and (((false)
340                               or (true))
341                             and (ref_28.GRANTOR is NULL)))))
342                   and (ref_28.UID is not NULL))))
343           on (ref_26.USER# = ref_27.GRANTEE_ID ))
344         inner join ((temp_20200615 as ref_38)
345           left join (temp_20200615 as ref_39)
346           on (false))
347         on (true))
348       inner join (((temp_20200615 as ref_40)
349           inner join (temp_20200615 as ref_41)
350           on (ref_40.GRANTOR = ref_41.UID ))
351         right join (((temp_20200615 as ref_42)
352             right join (SYS.SYS_AUDIT as ref_43)
353             on ((select GRANTOR from temp_20200615 limit 1 offset 4)
354                    is NULL))
355           inner join (temp_20200615 as ref_44)
356           on (ref_44.UID is NULL))
357         on ((false)
358             and (false)))
359       on (EXISTS (
360           select
361               ref_42.GRANTOR as c0,
362               ref_45.GRANTOR as c1
363             from
364               temp_20200615 as ref_45
365             where ref_26.ID is not NULL)))
366     on (ref_5.GRANTOR = ref_28.UID )
367 where true;

C0           C1           C2           C3           C4           C5           C6           C7           C8           C9           C10          C11          C12          C13          C14          C15
------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> select
  2   subq_0.c0 as c0,
  3   ref_23.GRANTOR as c1,
  4   ref_8.GRANTOR as c2,
  5   subq_2.c2 as c3,
  6   13 as c4
  7 from
  8   ((((SYS.SYS_USER_ROLES as ref_0)
  9           left join ((select
 10                 ref_1.GRANTOR as c0
 11               from
 12                 temp_20200615 as ref_1
 13               where (false)
 14                 or ((((((EXISTS (
 15                             select
 16                                 ref_1.GRANTOR as c0,
 17                                 ref_1.GRANTOR as c1,
 18                                 ref_1.GRANTOR as c2,
 19                                 ref_2.UID as c3,
 20                                 ref_2.GRANTOR as c4
 21                               from
 22                                 temp_20200615 as ref_2
 23                               where (true)
 24                                 or (true)
 25                               limit 86))
 26                           or ((ref_1.GRANTOR is NULL)
 27                             or (ref_1.GRANTOR is NULL)))
 28                         and (EXISTS (
 29                           select
 30                               ref_3.GRANTOR as c0,
 31                               ref_3.GRANTOR as c1,
 32                               ref_3.GRANTOR as c2,
 33                               ref_1.UID as c3,
 34                               ref_1.GRANTOR as c4,
 35                               ref_3.UID as c5,
 36                               92 as c6,
 37                               ref_1.GRANTOR as c7,
 38                               ref_3.GRANTOR as c8,
 39                               ref_1.GRANTOR as c9,
 40                               ref_1.GRANTOR as c10
 41                             from
 42                               temp_20200615 as ref_3
 43                             where ref_3.GRANTOR is not NULL
 44                             limit 94)))
 45                       and (ref_1.GRANTOR is not NULL))
 46                     and ((EXISTS (
 47                         select
 48                             ref_1.GRANTOR as c0,
 49                             ref_4.GRANTOR as c1
 50                           from
 51                             temp_20200615 as ref_4
 52                           where EXISTS (
 53                             select
 54                                 ref_1.UID as c0,
 55                                 ref_1.GRANTOR as c1,
 56                                 ref_5.UID as c2
 57                               from
 58                                 temp_20200615 as ref_5
 59                               where ((ref_4.GRANTOR is not NULL)
 60                                   or (false))
 61                                 or (EXISTS (
 62                                   select
 63                                       ref_4.GRANTOR as c0,
 64                                       ref_4.GRANTOR as c1
 65                                     from
 66                                       temp_20200615 as ref_6
 67                                     where false
 68                                     limit 77))
 69                               limit 99)
 70                           limit 36))
 71                       and ((true)
 72                         or (false))))
 73                   and (ref_1.GRANTOR is NULL))
 74               limit 80) as subq_0)
 75           on (ref_0.GRANTEE_ID = subq_0.c0 ))
 76         right join ((((temp_20200615 as ref_7)
 77               right join (temp_20200615 as ref_8)
 78               on (true))
 79             inner join (((temp_20200615 as ref_9)
 80                 inner join ((temp_20200615 as ref_10)
 81                   inner join (temp_20200615 as ref_11)
 82                   on (false))
 83                 on ((((ref_11.UID is NULL)
 84                         and (((((true)
 85                                 and (EXISTS (
 86                                   select
 87                                       ref_9.GRANTOR as c0
 88                                     from
 89                                       temp_20200615 as ref_12
 90                                     where ref_9.GRANTOR is NULL)))
 91                               and (false))
 92                             or (((true)
 93                                 or ((((false)
 94                                       or (ref_11.GRANTOR is NULL))
 95                                     and (ref_9.GRANTOR is NULL))
 96                                   or (true)))
 97                               and (true)))
 98                           or (ref_11.UID is NULL)))
 99                       and (ref_11.GRANTOR is not NULL))
100                     and (false)))
101               left join (temp_20200615 as ref_13)
102               on (true))
103             on (true))
104           inner join (temp_20200615 as ref_14)
105           on (false))
106         on ((ref_10.GRANTOR is not NULL)
107             and (EXISTS (
108               select
109                   subq_0.c0 as c0
110                 from
111                   temp_20200615 as ref_15
112                 where (((true)
113                       or (ref_15.GRANTOR is NULL))
114                     and (ref_9.GRANTOR is NULL))
115                   or (ref_10.GRANTOR is not NULL)
116                 limit 53))))
117       inner join ((select
118             ref_16.GRANTOR as c0,
119             ref_16.GRANTOR as c1,
120             ref_16.UID as c2
121           from
122             temp_20200615 as ref_16
123           where true
124           limit 145) as subq_1)
125       on ((false)
126           or (false)))
127     inner join (((select
128             ref_17.GRANTOR as c0,
129             ref_17.GRANTOR as c1,
130             ref_17.GRANTOR as c2,
131             ref_17.GRANTOR as c3,
132             ref_17.GRANTOR as c4
133           from
134             temp_20200615 as ref_17
135           where (((((select VIEW# from SYS.SYS_VIEW_COLS limit 1 offset 2)
136                        is NULL)
137                   or (false))
138                 and (((EXISTS (
139                       select
140                           ref_17.GRANTOR as c0,
141                           ref_18.GRANTOR as c1,
142                           (select UID from temp_20200615 limit 1 offset 5)
143                              as c2,
144                           ref_17.UID as c3
145                         from
146                           temp_20200615 as ref_18
147                         where false))
148                     and (EXISTS (
149                       select
150                           ref_17.GRANTOR as c0,
151                           ref_19.GRANTOR as c1,
152                           ref_17.UID as c2,
153                           ref_17.GRANTOR as c3,
154                           ref_19.GRANTOR as c4,
155                           ref_17.GRANTOR as c5,
156                           (select GRANTOR from temp_20200615 limit 1 offset 63)
157                              as c6,
158                           ref_19.UID as c7,
159                           ref_19.GRANTOR as c8,
160                           ref_17.GRANTOR as c9,
161                           ref_17.GRANTOR as c10,
162                           ref_19.GRANTOR as c11,
163                           ref_17.GRANTOR as c12,
164                           ref_19.GRANTOR as c13,
165                           ref_17.GRANTOR as c14,
166                           ref_17.GRANTOR as c15,
167                           ref_17.GRANTOR as c16,
168                           51 as c17,
169                           ref_17.UID as c18,
170                           (select GRANTOR from temp_20200615 limit 1 offset 3)
171                              as c19,
172                           ref_17.GRANTOR as c20
173                         from
174                           temp_20200615 as ref_19
175                         where false)))
176                   or (false)))
177               and ((false)
178                 and (((false)
179                     or (ref_17.GRANTOR is NULL))
180                   or (EXISTS (
181                     select
182                         (select GRANTOR from temp_20200615 limit 1 offset 6)
183                            as c0,
184                         ref_17.GRANTOR as c1,
185                         ref_17.GRANTOR as c2,
186                         ref_20.GRANTOR as c3,
187                         ref_20.GRANTOR as c4,
188                         ref_20.GRANTOR as c5
189                       from
190                         temp_20200615 as ref_20
191                       where EXISTS (
192                         select
193                             ref_20.GRANTOR as c0,
194                             (select GRANTOR from temp_20200615 limit 1 offset 57)
195                                as c1,
196                             ref_17.UID as c2,
197                             (select UID from temp_20200615 limit 1 offset 3)
198                                as c3,
199                             ref_20.GRANTOR as c4,
200                             ref_20.GRANTOR as c5,
201                             ref_21.GRANTOR as c6,
202                             (select UID from temp_20200615 limit 1 offset 7)
203                                as c7,
204                             ref_17.GRANTOR as c8,
205                             ref_21.GRANTOR as c9,
206                             ref_17.GRANTOR as c10
207                           from
208                             temp_20200615 as ref_21
209                           where EXISTS (
210                             select
211                                 ref_21.UID as c0,
212                                 30 as c1,
213                                 ref_20.GRANTOR as c2,
214                                 ref_21.UID as c3,
215                                 ref_20.GRANTOR as c4
216                               from
217                                 temp_20200615 as ref_22
218                               where (true)
219                                 and ((false)
220                                   and ((((false)
221                                         or (ref_22.GRANTOR is not NULL))
222                                       or ((true)
223                                         and (true)))
224                                     or (ref_22.GRANTOR is not NULL))))
225                           limit 120)
226                       limit 130)))))
227             and (ref_17.GRANTOR is not NULL)
228           limit 175) as subq_2)
229       inner join (((((temp_20200615 as ref_23)
230               left join (temp_20200615 as ref_24)
231               on (((ref_23.UID is NULL)
232                     or ((((false)
233                           or (ref_23.UID is not NULL))
234                         or (false))
235                       or ((false)
236                         or (ref_24.GRANTOR is not NULL))))
237                   or (EXISTS (
238                     select
239                         (select GRANTOR from temp_20200615 limit 1 offset 2)
240                            as c0,
241                         ref_23.UID as c1,
242                         ref_23.GRANTOR as c2,
243                         ref_23.UID as c3,
244                         ref_24.GRANTOR as c4,
245                         ref_24.UID as c5,
246                         ref_25.GRANTOR as c6,
247                         ref_24.GRANTOR as c7,
248                         ref_23.UID as c8,
249                         98 as c9,
250                         ref_25.GRANTOR as c10,
251                         33 as c11
252                       from
253                         temp_20200615 as ref_25
254                       where ref_23.GRANTOR is not NULL
255                       limit 80))))
256             inner join ((temp_20200615 as ref_26)
257               right join (temp_20200615 as ref_27)
258               on ((((((84 is NULL)
259                           and (false))
260                         and (false))
261                       or (true))
262                     and (ref_26.GRANTOR is not NULL))
263                   and (EXISTS (
264                     select
265                         ref_28.GRANTOR as c0,
266                         ref_28.GRANTOR as c1,
267                         ref_27.GRANTOR as c2,
268                         ref_27.GRANTOR as c3,
269                         ref_27.GRANTOR as c4,
270                         (select GRANTOR from temp_20200615 limit 1 offset 6)
271                            as c5,
272                         ref_27.GRANTOR as c6
273                       from
274                         temp_20200615 as ref_28
275                       where ref_26.GRANTOR is NULL
276                       limit 98))))
277             on ((ref_24.GRANTOR is not NULL)
278                 or (70 is not NULL)))
279           left join (temp_20200615 as ref_29)
280           on (true))
281         inner join (((temp_20200615 as ref_30)
282             right join (temp_20200615 as ref_31)
283             on (ref_30.GRANTOR is NULL))
284           inner join ((select
285                 ref_32.GRANTOR as c0,
286                 ref_32.UID as c1,
287                 ref_32.UID as c2,
288                 ref_32.GRANTOR as c3,
289                 ref_32.GRANTOR as c4,
290                 ref_32.GRANTOR as c5
291               from
292                 temp_20200615 as ref_32
293               where ((ref_32.GRANTOR is not NULL)
294                   and (false))
295                 and ((true)
296                   and (((EXISTS (
297                         select
298                             ref_32.GRANTOR as c0,
299                             ref_33.VIEW# as c1,
300                             ref_32.UID as c2,
301                             ref_33.VIEW# as c3,
302                             ref_32.GRANTOR as c4,
303                             ref_32.UID as c5,
304                             ref_33.VIEW# as c6,
305                             ref_32.GRANTOR as c7,
306                             ref_32.GRANTOR as c8,
307                             ref_32.GRANTOR as c9
308                           from
309                             SYS.SYS_VIEW_COLS as ref_33
310                           where EXISTS (
311                             select
312                                 ref_32.UID as c0
313                               from
314                                 temp_20200615 as ref_34
315                               where (false)
316                                 and (false)
317                               limit 64)
318                           limit 78))
319                       or (false))
320                     and (((false)
321                         and (ref_32.GRANTOR is not NULL))
322                       and (EXISTS (
323                         select
324                             ref_35.UID as c0
325                           from
326                             temp_20200615 as ref_35
327                           where (EXISTS (
328                               select
329                                   ref_35.GRANTOR as c0
330                                 from
331                                   temp_20200615 as ref_36
332                                 where true))
333                             and (false)
334                           limit 90)))))
335               limit 103) as subq_3)
336           on ((false)
337               and ((ref_31.GRANTOR is not NULL)
338                 and (EXISTS (
339                   select
340                       ref_31.GRANTOR as c0,
341                       (select UID from temp_20200615 limit 1 offset 2)
342                          as c1,
343                       ref_31.GRANTOR as c2,
344                       ref_31.GRANTOR as c3,
345                       (select GRANTOR from temp_20200615 limit 1 offset 6)
346                          as c4,
347                       ref_30.UID as c5,
348                       ref_37.UID as c6,
349                       ref_30.GRANTOR as c7,
350                       subq_3.c5 as c8,
351                       ref_30.UID as c9,
352                       ref_31.UID as c10,
353                       ref_31.GRANTOR as c11,
354                       ref_31.GRANTOR as c12,
355                       ref_30.GRANTOR as c13,
356                       subq_3.c3 as c14,
357                       ref_30.GRANTOR as c15,
358                       ref_37.UID as c16,
359                       ref_37.GRANTOR as c17,
360                       ref_30.GRANTOR as c18,
361                       ref_30.GRANTOR as c19,
362                       ref_30.UID as c20
363                     from
364                       temp_20200615 as ref_37
365                     where ((true)
366                         and ((((EXISTS (
367                                 select
368                                     subq_3.c5 as c0
369                                   from
370                                     temp_20200615 as ref_38
371                                   where (ref_30.UID is not NULL)
372                                     or (EXISTS (
373                                       select
374                                           ref_37.UID as c0
375                                         from
376                                           temp_20200615 as ref_39
377                                         where true))
378                                   limit 112))
379                               or (true))
380                             or (false))
381                           and ((true)
382                             or (true))))
383                       or (EXISTS (
384                         select
385                             ref_40.UID as c0
386                           from
387                             temp_20200615 as ref_40
388                           where (false)
389                             or (true))))))))
390         on ((ref_29.GRANTOR is not NULL)
391             or (((ref_27.GRANTOR is not NULL)
392                 or ((false)
393                   and (((false)
394                       and (EXISTS (
395                         select
396                             ref_26.UID as c0,
397                             41 as c1
398                           from
399                             temp_20200615 as ref_41
400                           where (true)
401                             and (true)
402                           limit 60)))
403                     or (false))))
404               and ((((95 is NULL)
405                     and ((EXISTS (
406                         select
407                             ref_24.UID as c0,
408                             ref_24.GRANTOR as c1,
409                             ref_26.UID as c2,
410                             ref_29.GRANTOR as c3,
411                             ref_27.GRANTOR as c4,
412                             ref_26.GRANTOR as c5,
413                             ref_42.UID as c6,
414                             ref_24.GRANTOR as c7,
415                             ref_29.GRANTOR as c8,
416                             90 as c9,
417                             ref_27.GRANTOR as c10,
418                             ref_23.GRANTOR as c11
419                           from
420                             temp_20200615 as ref_42
421                           where ref_24.GRANTOR is NULL))
422                       and (true)))
423                   or ((false)
424                     and (ref_24.GRANTOR is not NULL)))
425                 and (EXISTS (
426                   select
427                       ref_31.GRANTOR as c0,
428                       ref_23.UID as c1,
429                       subq_3.c1 as c2,
430                       ref_24.UID as c3,
431                       ref_29.GRANTOR as c4,
432                       90 as c5,
433                       ref_26.UID as c6
434                     from
435                       SYS.SYS_AUDIT as ref_43
436                     where EXISTS (
437                       select
438                           ref_29.GRANTOR as c0,
439                           ref_27.GRANTOR as c1,
440                           ref_24.UID as c2,
441                           ref_29.GRANTOR as c3,
442                           ref_44.GRANTOR as c4,
443                           ref_26.UID as c5
444                         from
445                           temp_20200615 as ref_44
446                         where ((EXISTS (
447                               select
448                                   ref_26.GRANTOR as c0,
449                                   ref_31.GRANTOR as c1,
450                                   ref_31.GRANTOR as c2,
451                                   ref_26.UID as c3,
452                                   ref_45.GRANTOR as c4
453                                 from
454                                   temp_20200615 as ref_45
455                                 where false
456                                 limit 129))
457                             and (false))
458                           or (EXISTS (
459                             select
460                                 ref_44.GRANTOR as c0,
461                                 ref_31.UID as c1,
462                                 ref_29.GRANTOR as c2,
463                                 ref_26.GRANTOR as c3,
464                                 ref_43.STMTID as c4,
465                                 (select GRANTOR from temp_20200615 limit 1 offset 2)
466                                    as c5,
467                                 subq_3.c0 as c6,
468                                 ref_46.UID as c7,
469                                 ref_31.GRANTOR as c8,
470                                 64 as c9,
471                                 ref_27.GRANTOR as c10,
472                                 ref_46.GRANTOR as c11,
473                                 ref_30.GRANTOR as c12,
474                                 ref_23.GRANTOR as c13,
475                                 ref_24.UID as c14,
476                                 ref_29.GRANTOR as c15,
477                                 ref_27.GRANTOR as c16,
478                                 ref_23.UID as c17,
479                                 ref_44.GRANTOR as c18,
480                                 ref_27.GRANTOR as c19
481                               from
482                                 temp_20200615 as ref_46
483                               where false
484                               limit 148))
485                         limit 124)
486                     limit 128))))))
487       on (subq_2.c3 = ref_26.UID ))
488     on ((((EXISTS (
489               select
490                   ref_11.UID as c0,
491                   ref_8.GRANTOR as c1
492                 from
493                   temp_20200615 as ref_47
494                 where 16 is not NULL
495                 limit 60))
496             and (((ref_13.UID is NULL)
497                 or (true))
498               and ((((true)
499                     and (ref_14.GRANTOR is NULL))
500                   and ((subq_2.c3 is NULL)
501                     or ((ref_23.GRANTOR is NULL)
502                       and (true))))
503                 and (((ref_9.GRANTOR is NULL)
504                     and (EXISTS (
505                       select
506                           ref_30.GRANTOR as c0,
507                           ref_7.GRANTOR as c1,
508                           (select UID from temp_20200615 limit 1 offset 30)
509                              as c2
510                         from
511                           temp_20200615 as ref_48
512                         where (select UID from temp_20200615 limit 1 offset 1)
513                              is NULL)))
514                   and (true)))))
515           or (subq_2.c3 is not NULL))
516         or (false))
517 where ref_27.GRANTOR is not NULL
518 limit 88;

C0           C1           C2           C3           C4
------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> --20200613
SQL> select
  2   ref_2.GRANTOR as c3
  3 from
  4   (((select
  5               ref_0.GRANTOR as c0,
  6               ref_0.GRANTOR as c1,
  7               ref_0.GRANTOR as c2,
  8               ref_0.GRANTOR as c3
  9             from
 10               temp_20200615 as ref_0) as subq_0)
 11         left join ((temp_20200615 as ref_1)
 12           right join temp_20200615 as ref_2
 13           on ((false)))
 14         on (subq_0.c3 = ref_1.UID ))
 15       inner join (temp_20200615 as ref_4)
 16       on (((((ref_1.GRANTOR is not NULL)
 17                 or (EXISTS (
 18                   select
 19                       ref_4.GRANTOR as c0,
 20                       subq_0.c0 as c1,
 21                       20 as c2
 22                     from
 23                       temp_20200615 as ref_5)))
 24               and ((EXISTS (
 25                   select
 26                       subq_0.c2 as c0,
 27                       33 as c1,
 28                       ref_1.GRANTOR as c4
 29                     from
 30                       temp_20200615 as ref_6
 31                     where subq_0.c1 is not NULL))
 32                 and (false)))
 33             or (true))) offset 1;

C3
------------




3 rows fetched.

SQL> select
  2   subq_2.c9 as c0,
  3   subq_1.c0 as c1,
  4   ref_10.GRANTOR as c2,
  5   ref_0.GRANTOR as c3
  6 from
  7   ((((temp_20200615 as ref_0)
  8           inner join ((select
  9                 ref_1.GRANTOR as c0,
 10                 ref_1.GRANTOR as c1,
 11                 ref_1.GRANTOR as c2,
 12                 ref_1.GRANTOR as c3,
 13                 ref_1.GRANTOR as c4,
 14                 ref_1.GRANTOR as c5
 15               from
 16                 temp_20200615 as ref_1
 17               where (select GRANTOR from temp_20200615 limit 1 offset 5)
 18                    is not NULL
 19               limit 68) as subq_0)
 20           on ((((ref_0.GRANTOR is not NULL)
 21                   and ((ref_0.GRANTOR is not NULL)
 22                     and (EXISTS (
 23                       select
 24                           ref_2.GRANTOR as c0,
 25                           ref_2.GRANTOR as c1
 26                         from
 27                           temp_20200615 as ref_2
 28                         where (true)
 29                           and (EXISTS (
 30                             select
 31                                 ref_2.UID as c0,
 32                                 subq_0.c3 as c1,
 33                                 subq_0.c4 as c2,
 34                                 subq_0.c4 as c3,
 35                                 ref_0.GRANTOR as c4,
 36                                 ref_3.UID as c5,
 37                                 ref_3.GRANTOR as c6,
 38                                 ref_3.UID as c7,
 39                                 ref_2.GRANTOR as c8,
 40                                 ref_0.GRANTOR as c9,
 41                                 ref_3.GRANTOR as c10,
 42                                 ref_2.UID as c11,
 43                                 ref_2.GRANTOR as c12,
 44                                 ref_0.GRANTOR as c13,
 45                                 (select GRANTOR from temp_20200615 limit 1 offset 4)
 46                                    as c14,
 47                                 ref_0.GRANTOR as c15,
 48                                 ref_0.GRANTOR as c16
 49                               from
 50                                 temp_20200615 as ref_3
 51                               where (EXISTS (
 52                                   select
 53                                       ref_0.GRANTOR as c0,
 54                                       ref_2.GRANTOR as c1,
 55                                       ref_3.GRANTOR as c2,
 56                                       ref_3.UID as c3,
 57                                       subq_0.c1 as c4
 58                                     from
 59                                       temp_20200615 as ref_4
 60                                     where (((ref_3.GRANTOR is not NULL)
 61                                           or (true))
 62                                         and ((subq_0.c0 is NULL)
 63                                           and (((true)
 64                                               and ((true)
 65                                                 and (true)))
 66                                             and (true))))
 67                                       and ((false)
 68                                         or ((((false)
 69                                               and (EXISTS (
 70                                                 select
 71                                                     ref_4.GRANTOR as c0,
 72                                                     ref_0.GRANTOR as c1,
 73                                                     subq_0.c5 as c2,
 74                                                     ref_5.GRANTOR as c3,
 75                                                     ref_2.GRANTOR as c4,
 76                                                     subq_0.c0 as c5,
 77                                                     ref_3.GRANTOR as c6
 78                                                   from
 79                                                     temp_20200615 as ref_5
 80                                                   where ref_5.UID is not NULL
 81                                                   limit 101)))
 82                                             and (false))
 83                                           or (true)))))
 84                                 or (true)))))))
 85                 or (ref_0.GRANTOR is NULL))
 86               and (subq_0.c1 is NULL)))
 87         right join ((select
 88               ref_6.GRANTOR as c0
 89             from
 90               temp_20200615 as ref_6
 91             where ((false)
 92                 or (false))
 93               and (ref_6.GRANTOR is not NULL)) as subq_1)
 94         on (ref_0.GRANTOR = subq_1.c0 ))
 95       inner join ((select
 96             ref_7.GRANTOR as c0,
 97             ref_7.GRANTOR as c1,
 98             (select UID from temp_20200615 limit 1 offset 3)
 99                as c2,
100             61 as c3,
101             ref_7.GRANTOR as c4,
102             ref_7.GRANTOR as c5,
103             ref_7.GRANTOR as c6,
104             ref_7.GRANTOR as c7,
105             ref_7.GRANTOR as c8,
106             ref_7.GRANTOR as c9,
107             ref_7.GRANTOR as c10,
108             ref_7.GRANTOR as c11
109           from
110             temp_20200615 as ref_7
111           where true) as subq_2)
112       on (((EXISTS (
113               select
114                   ref_0.GRANTOR as c0
115                 from
116                   temp_20200615 as ref_8
117                 where (subq_1.c0 is NULL)
118                   or ((EXISTS (
119                       select
120                           subq_1.c0 as c0
121                         from
122                           temp_20200615 as ref_9
123                         where false))
124                     and (true))))
125             or (false))
126           or (subq_0.c4 is NULL)))
127     right join (temp_20200615 as ref_10)
128     on (subq_2.c10 is not NULL)
129 where true
130 limit 93 offset 1;

C0           C1           C2           C3
------------ ------------ ------------ ------------
                          2

1 rows fetched.

SQL> select
  2   ref_7.GRANTOR as c0,
  3   case when EXISTS (
  4       select
  5           ref_10.GRANTOR as c0,
  6           ref_2.GRANTOR as c1,
  7           ref_3.GRANTOR as c2,
  8           ref_3.GRANTOR as c3
  9         from
 10           ((temp_20200615 as ref_9)
 11               inner join (temp_20200615 as ref_10)
 12               on (ref_9.GRANTOR = ref_10.UID ))
 13             left join (temp_20200615 as ref_11)
 14             on (EXISTS (
 15                 select
 16                     ref_1.GRANTOR as c0,
 17                     ref_4.UID as c1,
 18                     ref_4.GRANTOR as c2,
 19                     ref_7.GRANTOR as c3,
 20                     ref_4.GRANTOR as c4,
 21                     ref_4.GRANTOR as c5
 22                   from
 23                     temp_20200615 as ref_12
 24                   where (EXISTS (
 25                       select
 26                           ref_3.GRANTOR as c0
 27                         from
 28                           temp_20200615 as ref_13
 29                         where ref_2.GRANTOR is not NULL
 30                         limit 142))
 31                     or (true)
 32                   limit 83))
 33         where (true)
 34           and (((EXISTS (
 35                 select
 36                     subq_0.c0 as c0,
 37                     ref_14.GRANTOR as c1,
 38                     (select GRANTOR from temp_20200615 limit 1 offset 4)
 39                        as c2,
 40                     ref_1.GRANTOR as c3,
 41                     ref_1.GRANTOR as c4,
 42                     ref_14.GRANTOR as c5,
 43                     ref_14.GRANTOR as c6,
 44                     ref_14.GRANTOR as c7,
 45                     subq_0.c1 as c8,
 46                     ref_11.GRANTOR as c9,
 47                     ref_9.GRANTOR as c10,
 48                     ref_9.GRANTOR as c11,
 49                     ref_10.GRANTOR as c12,
 50                     ref_2.GRANTOR as c13,
 51                     27 as c14,
 52                     ref_1.GRANTOR as c15,
 53                     ref_11.GRANTOR as c16,
 54                     ref_2.GRANTOR as c17,
 55                     ref_1.GRANTOR as c18,
 56                     subq_0.c0 as c19,
 57                     ref_10.GRANTOR as c20,
 58                     subq_0.c3 as c21,
 59                     ref_10.GRANTOR as c22,
 60                     ref_14.GRANTOR as c23
 61                   from
 62                     temp_20200615 as ref_14
 63                   where (subq_0.c0 is NULL)
 64                     or (true)))
 65               and ((ref_3.GRANTOR is NULL)
 66                 and (ref_11.GRANTOR is NULL)))
 67             or (((true)
 68                 and ((EXISTS (
 69                     select
 70                         ref_3.GRANTOR as c0,
 71                         ref_4.GRANTOR as c1,
 72                         (select GRANTOR from temp_20200615 limit 1 offset 2)
 73                            as c2,
 74                         (select GRANTOR from temp_20200615 limit 1 offset 3)
 75                            as c3,
 76                         ref_1.GRANTOR as c4,
 77                         ref_3.GRANTOR as c5,
 78                         ref_2.GRANTOR as c6,
 79                         (select GRANTOR from temp_20200615 limit 1 offset 1)
 80                            as c7,
 81                         ref_1.UID as c8,
 82                         ref_1.GRANTOR as c9,
 83                         ref_10.GRANTOR as c10
 84                       from
 85                         temp_20200615 as ref_15
 86                       where (EXISTS (
 87                           select
 88                               ref_11.GRANTOR as c0,
 89                               ref_10.GRANTOR as c1
 90                             from
 91                               temp_20200615 as ref_16
 92                             where (((true)
 93                                   or ((true)
 94                                     and (false)))
 95                                 and (true))
 96                               or (false)))
 97                         and (false)
 98                       limit 124))
 99                   or (ref_7.GRANTOR is NULL)))
100               and (false)))
101         limit 138) then ref_2.GRANTOR else ref_2.GRANTOR end
102      as c1,
103   ref_4.GRANTOR as c2,
104   ref_2.GRANTOR as c3,
105   ref_7.GRANTOR as c4,
106   (select GRANTOR from temp_20200615 limit 1 offset 56)
107      as c5
108 from
109   ((((select
110               ref_0.GRANTOR as c0,
111               ref_0.GRANTOR as c1,
112               ref_0.GRANTOR as c2,
113               ref_0.GRANTOR as c3
114             from
115               temp_20200615 as ref_0
116             where ((((false)
117                     and (true))
118                   or (ref_0.GRANTOR is NULL))
119                 or ((true)
120                   or (true)))
121               and (ref_0.GRANTOR is NULL)
122             limit 28) as subq_0)
123         left join ((temp_20200615 as ref_1)
124           right join ((temp_20200615 as ref_2)
125             left join (temp_20200615 as ref_3)
126             on (ref_2.GRANTOR = ref_3.UID ))
127           on ((true)
128               and (false)))
129         on (subq_0.c3 = ref_1.UID ))
130       inner join (temp_20200615 as ref_4)
131       on (((((ref_1.GRANTOR is not NULL)
132                 or (EXISTS (
133                   select
134                       ref_4.GRANTOR as c0,
135                       subq_0.c0 as c1,
136                       20 as c2
137                     from
138                       temp_20200615 as ref_5
139                     where (true)
140                       or (ref_3.UID is not NULL)
141                     limit 108)))
142               and ((EXISTS (
143                   select
144                       subq_0.c2 as c0,
145                       33 as c1,
146                       subq_0.c2 as c2,
147                       subq_0.c0 as c3,
148                       ref_1.GRANTOR as c4,
149                       (select GRANTOR from temp_20200615 limit 1 offset 6)
150                          as c5,
151                       10 as c6,
152                       47 as c7,
153                       ref_3.UID as c8,
154                       ref_2.GRANTOR as c9,
155                       ref_6.GRANTOR as c10,
156                       ref_6.GRANTOR as c11
157                     from
158                       temp_20200615 as ref_6
159                     where subq_0.c1 is not NULL
160                     limit 107))
161                 and (false)))
162             or (true))
163           or (false)))
164     inner join (temp_20200615 as ref_7)
165     on ((((false)
166             or ((ref_1.GRANTOR is not NULL)
167               and (ref_3.GRANTOR is NULL)))
168           or (EXISTS (
169             select
170                 ref_7.UID as c0
171               from
172                 temp_20200615 as ref_8
173               where ref_3.GRANTOR is not NULL)))
174         or ((ref_3.GRANTOR is not NULL)
175           or (true)))
176 where ref_7.GRANTOR is not NULL
177 limit 121;

C0           C1           C2           C3           C4           C5
------------ ------------ ------------ ------------ ------------ ------------

0 rows fetched.

SQL> drop table temp_20200615;

Succeed.

SQL> 
SQL> -- not equal any rewrite
SQL> drop table if exists ne_any_2_exists_t1;

Succeed.

SQL> drop table if exists ne_any_2_exists_t2;

Succeed.

SQL> 
SQL> create table ne_any_2_exists_t1
  2 (
  3     id number(8) not null,
  4     c_int number(8) not null,
  5     c_name varchar(50),
  6     grade number(8)
  7 );

Succeed.

SQL> 
SQL> create table ne_any_2_exists_t2
  2 (
  3     id number(6),
  4     c_int number(8)
  5 );

Succeed.

SQL> 
SQL> select
  2   subq_0.c8 as c5
  3 from
  4    (select
  5         ref_0.c_name as c1,
  6         ref_0.grade as c2,
  7         ref_0.c_int as c3,
  8         ref_0.id as c4,
  9         ref_0.c_int as c5,
 10         ref_0.id as c6,
 11         ref_0.c_int as c8,
 12         ref_0.id as c9
 13     from
 14         ne_any_2_exists_t1 as ref_0
 15     limit 90
 16     ) as subq_0
 17 where exists (
 18     select
 19       subq_1.c1 as c2,
 20       subq_0.c9 as c3
 21     from
 22       (select distinct
 23             ref_3.id as c0,
 24             ref_3.c_int as c1
 25        from
 26             ne_any_2_exists_t2 as ref_3) as subq_1
 27     where subq_0.c1 > cast(case when (subq_0.c5 <> some(select ref_4.id as c1 from ne_any_2_exists_t1 as ref_4)) 
 28                            then 'aa' else 'bb' end
 29                            as varchar(50))
 30     );

C5                                      
----------------------------------------

0 rows fetched.

SQL> drop table ne_any_2_exists_t1;

Succeed.

SQL> drop table ne_any_2_exists_t2;
Succeed.

SQL> 
SQL> -- DTS202104080EB86YP1I00
SQL> drop table if exists diff_type_index_t;

Succeed.

SQL> create table diff_type_index_t(c_int int, c_uint32 binary_uint32, c_bigint bigint, c_bool boolean, c_number number(12), c_decimal decimal(10,3), c_real real, c_float float, 
  2                                c_char char(10), c_varchar varchar(10), c_binary binary(10), c_varbinary varbinary(10), c_raw raw(10), c_clob clob, c_blob blob, c_image image,
  3                                c_date date, c_timestamp timestamp(6), c_timestamp_tz timestamp(6) with time zone, c_timestamp_ltz timestamp(6) with local time zone, 
  4                                c_interval_ds interval day(7) to second, c_interval_ym interval year(4) to month);

Succeed.

SQL> insert into diff_type_index_t values(1,1,100000,true,12,20.333,5.6,6.6,'1111','2222','100','101','102','103','104','105', '1999-09-27 00:00:00','2000-01-01 12:59:59.999999',
  2 '2021-04-08 07:00:00.000000 +04:00', '2021-04-08 14:36:25.046731', '123 9:20:27', '2020-10');

1 rows affected.

SQL> insert into diff_type_index_t values(2,2,200000,false,22,40.666,7.8,8.8,'2222','3333','200','201','202','203','204','205', '2000-09-27 00:00:00','2001-01-01 12:59:59.999999',
  2 '2022-04-08 07:00:00.000000 +04:00', '2022-04-08 14:36:25.046731', '234 9:20:27', '2020-11');

1 rows affected.

SQL> 
SQL> create index diff_type_int_idx on diff_type_index_t(c_int);

Succeed.

SQL> create index diff_type_uint_idx on diff_type_index_t(c_uint32);

Succeed.

SQL> create index diff_type_bigint_idx on diff_type_index_t(c_bigint);

Succeed.

SQL> create index diff_type_bool_idx on diff_type_index_t(c_bool);

Succeed.

SQL> create index diff_type_number_idx on diff_type_index_t(c_number);

Succeed.

SQL> create index diff_type_decimal_idx on diff_type_index_t(c_decimal);

Succeed.

SQL> create index diff_type_real_idx on diff_type_index_t(c_real);

Succeed.

SQL> create index diff_type_float_idx on diff_type_index_t(c_float);

Succeed.

SQL> create index diff_type_char_idx on diff_type_index_t(c_char);

Succeed.

SQL> create index diff_type_varchar_idx on diff_type_index_t(c_varchar);

Succeed.

SQL> create index diff_type_binary_idx on diff_type_index_t(c_binary);

Succeed.

SQL> create index diff_type_varbinary_idx on diff_type_index_t(c_varbinary);

Succeed.

SQL> create index diff_type_raw_idx on diff_type_index_t(c_raw);

Succeed.

SQL> create index diff_type_date_idx on diff_type_index_t(c_date);

Succeed.

SQL> create index diff_type_timestamp_idx on diff_type_index_t(c_timestamp);

Succeed.

SQL> create index diff_type_timestamp_tz_idx on diff_type_index_t(c_timestamp_tz);

Succeed.

SQL> create index diff_type_c_timestamp_ltz_idx on diff_type_index_t(c_timestamp_ltz);

Succeed.

SQL> create index diff_type_interval_ds_idx on diff_type_index_t(c_interval_ds);

Succeed.

SQL> create index diff_type_interval_ym_idx on diff_type_index_t(c_interval_ym);

Succeed.

SQL> 
SQL> select c_int from diff_type_index_t where c_int='1';

C_INT       
------------
1           

1 rows fetched.

SQL> select c_int from diff_type_index_t where c_int=true;

C_INT       
------------
1           

1 rows fetched.

SQL> select c_int from diff_type_index_t where c_int=cast('1.4' as binary(3));

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_int=cast('1.4' as varchar(3));

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_int=cast('1.4' as decimal(3,1));

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_int='1.4';

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_int=1.4;

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_int=1.0;

C_INT       
------------
1           

1 rows fetched.

SQL> select c_int from diff_type_index_t where c_int=cast('1.0' as varchar(3));

C_INT       
------------
1           

1 rows fetched.

SQL> select c_int from diff_type_index_t where c_int=2147483648;

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_int='p1';

CT-00636, Invalid number -- unexpected character
SQL> select c_bigint from diff_type_index_t where c_bigint = 100000;

C_BIGINT            
--------------------
100000              

1 rows fetched.

SQL> select c_bigint from diff_type_index_t where c_bigint = cast(100000.1 as number(7,1));

C_BIGINT            
--------------------

0 rows fetched.

SQL> select c_uint32 from diff_type_index_t where c_uint32=2.1;

C_UINT32    
------------

0 rows fetched.

SQL> select c_uint32 from diff_type_index_t where c_uint32=-1;

C_UINT32    
------------

0 rows fetched.

SQL> select c_decimal from diff_type_index_t where c_decimal = 20.333;

C_DECIMAL                               
----------------------------------------
20.333                                  

1 rows fetched.

SQL> select c_decimal from diff_type_index_t where c_decimal = 20.3333;

C_DECIMAL                               
----------------------------------------

0 rows fetched.

SQL> select c_decimal from diff_type_index_t where c_decimal = cast(20.333 as real);

C_DECIMAL                               
----------------------------------------
20.333                                  

1 rows fetched.

SQL> select c_decimal from diff_type_index_t where c_decimal = cast(20.3333 as real);

C_DECIMAL                               
----------------------------------------

0 rows fetched.

SQL> select c_decimal from diff_type_index_t where c_decimal = '20.333';

C_DECIMAL                               
----------------------------------------
20.333                                  

1 rows fetched.

SQL> select c_decimal from diff_type_index_t where c_decimal = '20.3333';

C_DECIMAL                               
----------------------------------------

0 rows fetched.

SQL> select c_number from diff_type_index_t where c_number = '12.00';

C_NUMBER                                
----------------------------------------
12                                      

1 rows fetched.

SQL> select c_real from diff_type_index_t where c_real = '5.6';

C_REAL              
--------------------
5.6                 

1 rows fetched.

SQL> select c_real from diff_type_index_t where c_real = 5.6;

C_REAL              
--------------------
5.6                 

1 rows fetched.

SQL> select c_real from diff_type_index_t where c_real = 5.5999999899999997;

C_REAL              
--------------------

0 rows fetched.

SQL> select c_char from diff_type_index_t where c_char = cast('1111' as binary(10));

C_CHAR    
----------

0 rows fetched.

SQL> select c_char from diff_type_index_t where c_char = cast('1111' as varbinary(10));

C_CHAR    
----------

0 rows fetched.

SQL> select c_char from diff_type_index_t where c_char = cast('1111' as raw(10));

C_CHAR    
----------

0 rows fetched.

SQL> select c_char from diff_type_index_t where c_char = to_blob('1111');

C_CHAR    
----------

0 rows fetched.

SQL> select c_char from diff_type_index_t where c_char = to_clob('1111');

C_CHAR    
----------

0 rows fetched.

SQL> select c_char from diff_type_index_t where c_char = cast('1111' as char(11));

C_CHAR    
----------
1111      

1 rows fetched.

SQL> select c_char from diff_type_index_t where c_char = '1111       ';

C_CHAR    
----------
1111      

1 rows fetched.

SQL> select c_char from diff_type_index_t where c_char = '1111      1';

C_CHAR    
----------

0 rows fetched.

SQL> select c_varchar from diff_type_index_t where c_varchar = cast('2222' as binary(4));

C_VARCHAR 
----------
2222      

1 rows fetched.

SQL> select c_varchar from diff_type_index_t where c_varchar = cast('2222' as varbinary(4));

C_VARCHAR 
----------
2222      

1 rows fetched.

SQL> select c_varchar from diff_type_index_t where c_varchar = cast('2222' as raw(4));

C_VARCHAR 
----------
2222      

1 rows fetched.

SQL> select c_varchar from diff_type_index_t where c_varchar = '2222 ';

C_VARCHAR 
----------

0 rows fetched.

SQL> select c_varchar from diff_type_index_t where c_varchar = '2222      2';

C_VARCHAR 
----------

0 rows fetched.

SQL> select c_varchar from diff_type_index_t where c_varchar = 2222;

C_VARCHAR 
----------
2222      

1 rows fetched.

SQL> select c_varchar from diff_type_index_t where c_varchar = to_date('2000-01-01 12:59:59');

C_VARCHAR 
----------

0 rows fetched.

SQL> select c_binary from diff_type_index_t where c_binary = 100;

C_BINARY                                                        
----------------------------------------------------------------
100                                                             

1 rows fetched.

SQL> select c_binary from diff_type_index_t where c_binary = '100';

C_BINARY                                                        
----------------------------------------------------------------

0 rows fetched.

SQL> select c_binary from diff_type_index_t where c_binary = cast(cast('100' as varchar(10)) as binary(10));

C_BINARY                                                        
----------------------------------------------------------------
100                                                             

1 rows fetched.

SQL> select c_binary from diff_type_index_t where c_binary = cast('100' as raw(10));

C_BINARY                                                        
----------------------------------------------------------------

0 rows fetched.

SQL> select c_binary from diff_type_index_t where c_binary = cast('0100' as char(10));

C_BINARY                                                        
----------------------------------------------------------------

0 rows fetched.

SQL> select c_raw from diff_type_index_t where c_raw = '0202';

C_RAW                                                           
----------------------------------------------------------------
0202                                                            

1 rows fetched.

SQL> select c_raw from diff_type_index_t where c_raw = '0202 ';

C_RAW                                                           
----------------------------------------------------------------

0 rows fetched.

SQL> select c_raw from diff_type_index_t where c_raw = '0202 1';

C_RAW                                                           
----------------------------------------------------------------

0 rows fetched.

SQL> select c_raw from diff_type_index_t where c_raw = cast('0202' as varchar(5));

C_RAW                                                           
----------------------------------------------------------------
0202                                                            

1 rows fetched.

SQL> select c_date from diff_type_index_t where c_date = '1999-09-27 00:00:00';

C_DATE                
----------------------
1999-09-27 00:00:00   

1 rows fetched.

SQL> select c_date from diff_type_index_t where c_date = '1999-09-27 00:00:00.999999';

CT-00105, Invalid format of datetime
SQL> select c_date from diff_type_index_t where c_date = to_timestamp('1999-09-27 00:00:00','YYYY-MM-DD HH24:MI:SS');

C_DATE                
----------------------
1999-09-27 00:00:00   

1 rows fetched.

SQL> select c_date from diff_type_index_t where c_date = to_timestamp('1999-09-27 00:00:00.999999','YYYY-MM-DD HH24:MI:SSXFF6');

C_DATE                
----------------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp = '2000-01-01 12:59:59.999999';

C_INT       
------------
1           

1 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp = '2000-01-01 12:59:59';

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp = to_date('2000-01-01 12:59:59');

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp = from_tz(timestamp '2000-01-01 12:59:59.999999', '4:00');

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp = to_timestamp('2000-01-01 12:59:59.999999','YYYY-MM-DD HH24:MI:SSXFF6');

C_INT       
------------
1           

1 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp = to_timestamp('2000-01-01 12:59:59.999','YYYY-MM-DD HH24:MI:SSXFF3');

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp_tz = '2021-04-08 07:00:00.000000 +04:00';

C_INT       
------------
1           

1 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp_tz = '2021-04-08 07:00:00.000000';

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp_tz = to_timestamp('2019-01-04 16:33:47.123456','YYYY-MM-DD HH24:MI:SSXFF6');

C_INT       
------------

0 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp_ltz = '2022-04-08 14:36:25.046731';

C_INT       
------------
2           

1 rows fetched.

SQL> select c_int from diff_type_index_t where c_timestamp_ltz = to_timestamp('2019-01-04 16:33:47.123456','YYYY-MM-DD HH24:MI:SS.FF6');

C_INT       
------------

0 rows fetched.

SQL> select c_interval_ds from diff_type_index_t where c_interval_ds='234 9:20:27';

C_INTERVAL_DS           
------------------------
+0000234 09:20:27.000000

1 rows fetched.

SQL> select c_interval_ds from diff_type_index_t where c_interval_ds='234 9:20:27 1';

CT-00673, Invalid interval text -- unexpected character
SQL> select c_interval_ym from diff_type_index_t where c_interval_ym='2020-11';

C_INTERVAL_YM
-------------
+2020-11     

1 rows fetched.

SQL> select c_interval_ym from diff_type_index_t where c_interval_ym='2020-11 1';

CT-00673, Invalid interval text -- unexpected character
SQL> drop table diff_type_index_t;
Succeed.




