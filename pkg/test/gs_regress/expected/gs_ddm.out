

SQL> --date
SQL> -- view
SQL> -- distinct   
SQL> -- col expr
SQL> -- common col
SQL> -- winsort group
SQL> -- where col
SQL> -- order
SQL> -- group
SQL> -- subselect
SQL> conn / as sysdba

connected.

SQL> drop user if exists DDMUSER cascade;

Succeed.

SQL> drop user if exists DDMUSER1 cascade;

Succeed.

SQL> drop user if exists DDMUSER2 cascade;

Succeed.

SQL> drop user if exists DDMUSER3 cascade;

Succeed.

SQL> create user DDMUSER identified by CANTIAN_234;

Succeed.

SQL> create user DDMUSER1 identified by CANTIAN_234;

Succeed.

SQL> create user DDMUSER2 identified by CANTIAN_234;

Succeed.

SQL> grant connect , resource  to DDMUSER;

Succeed.

SQL> grant create table to DDMUSER;

Succeed.

SQL> grant create view to DDMUSER;

Succeed.

SQL> grant execute on DBE_MASK_DATA to DDMUSER;

Succeed.

SQL> grant unlimited tablespace to DDMUSER;

Succeed.

SQL> grant connect , resource  to DDMUSER1;

Succeed.

SQL> grant create table to DDMUSER1;

Succeed.

SQL> grant EXEMPT REDACTION POLICY  to DDMUSER1;

Succeed.

SQL> grant unlimited tablespace to DDMUSER1;

Succeed.

SQL> grant connect , resource  to DDMUSER2;

Succeed.

SQL> grant dba to DDMUSER2;

Succeed.

SQL> grant unlimited tablespace to DDMUSER2;

Succeed.

SQL> conn DDMUSER/CANTIAN_234@127.0.0.1:1611

connected.

SQL> drop table if exists najinschool;

Succeed.

SQL> create table najinschool(gradeid int, classid int, groupid int, stdid int, stdsco int);

Succeed.

SQL> insert into najinschool values(1,1,1,1,1000);

1 rows affected.

SQL> insert into najinschool values(1,1,1,2,1200);

1 rows affected.

SQL> insert into najinschool values(1,1,1,3,1300);

1 rows affected.

SQL> insert into najinschool values(1,1,1,4,1400);

1 rows affected.

SQL> insert into najinschool values(1,1,1,5,1500);

1 rows affected.

SQL> insert into najinschool values(1,1,1,6,16000);

1 rows affected.

SQL> insert into najinschool values(1,1,1,7,1700);

1 rows affected.

SQL> insert into najinschool values(1,1,1,8,1800);

1 rows affected.

SQL> insert into najinschool values(1,1,1,9,1900);

1 rows affected.

SQL> insert into najinschool values(1,1,1,10,2000);

1 rows affected.

SQL> insert into najinschool values(1,1,2,1,20);

1 rows affected.

SQL> insert into najinschool values(1,1,2,2,22);

1 rows affected.

SQL> insert into najinschool values(1,1,2,3,23);

1 rows affected.

SQL> insert into najinschool values(1,1,2,4,24);

1 rows affected.

SQL> insert into najinschool values(1,1,2,5,25);

1 rows affected.

SQL> insert into najinschool values(1,1,2,6,260);

1 rows affected.

SQL> insert into najinschool values(1,1,2,7,27);

1 rows affected.

SQL> insert into najinschool values(1,1,2,8,28);

1 rows affected.

SQL> insert into najinschool values(1,1,2,9,29);

1 rows affected.

SQL> insert into najinschool values(1,1,2,10,30);

1 rows affected.

SQL> insert into najinschool values(1,2,1,1,100);

1 rows affected.

SQL> insert into najinschool values(1,2,1,2,120);

1 rows affected.

SQL> insert into najinschool values(1,2,1,3,130);

1 rows affected.

SQL> insert into najinschool values(1,2,1,4,140);

1 rows affected.

SQL> insert into najinschool values(1,2,1,5,150);

1 rows affected.

SQL> insert into najinschool values(1,2,1,6,160);

1 rows affected.

SQL> insert into najinschool values(1,2,1,7,1700);

1 rows affected.

SQL> insert into najinschool values(1,2,1,8,180);

1 rows affected.

SQL> insert into najinschool values(1,2,1,9,190);

1 rows affected.

SQL> insert into najinschool values(1,2,1,10,200);

1 rows affected.

SQL> insert into najinschool values(1,2,2,1,200);

1 rows affected.

SQL> insert into najinschool values(1,2,2,2,220);

1 rows affected.

SQL> insert into najinschool values(1,2,2,3,230);

1 rows affected.

SQL> insert into najinschool values(1,2,2,4,240);

1 rows affected.

SQL> insert into najinschool values(1,2,2,5,250);

1 rows affected.

SQL> insert into najinschool values(1,2,2,6,260);

1 rows affected.

SQL> insert into najinschool values(1,2,2,7,270);

1 rows affected.

SQL> insert into najinschool values(1,2,2,8,280);

1 rows affected.

SQL> insert into najinschool values(1,2,2,9,290);

1 rows affected.

SQL> insert into najinschool values(1,2,2,10,300);

1 rows affected.

SQL> commit;

Succeed.

SQL> create table najinschool1(gradeid int, classid int, groupid int, stdid int, stdsco int);

Succeed.

SQL> insert into najinschool1 values(1,1,1,1,1000);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,2,1200);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,3,1300);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,4,1400);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,5,1500);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,6,16000);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,7,1700);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,8,1800);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,9,1900);

1 rows affected.

SQL> insert into najinschool1 values(1,1,1,10,2000);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,1,1000);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,2,1200);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,3,1300);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,4,1400);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,5,1500);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,6,16000);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,7,1700);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,8,1800);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,9,1900);

1 rows affected.

SQL> insert into najinschool1 values(2,1,1,10,2000);

1 rows affected.

SQL>
SQL> commit;

Succeed.

SQL> BEGIN
  2  SYS.DBE_MASK_DATA.ADD_POLICY(
  3    object_schema    => 'DDMUSER',
  4    object_name      => 'najinschool',
  5    column_name      => 'stdsco',
  6    policy_name      => 'RULE1',
  7    policy_type    => 'FULL',
  8    mask_value => '7');
  9 END;
 10 /

PL/SQL procedure successfully completed.

SQL> conn DDMUSER/CANTIAN_234@127.0.0.1:1611

connected.

SQL> create view view1 as select * from najinschool;

Succeed.

SQL> create table najinschoolas as select * from najinschool;

CT-00613, Invalid operation, the command references a redacted object
SQL> select * from view1;

GRADEID      CLASSID      GROUPID      STDID        STDSCO
------------ ------------ ------------ ------------ ------------
1            1            1            1            7
1            1            1            2            7
1            1            1            3            7
1            1            1            4            7
1            1            1            5            7
1            1            1            6            7
1            1            1            7            7
1            1            1            8            7
1            1            1            9            7
1            1            1            10           7
1            1            2            1            7
1            1            2            2            7
1            1            2            3            7
1            1            2            4            7
1            1            2            5            7
1            1            2            6            7
1            1            2            7            7
1            1            2            8            7
1            1            2            9            7
1            1            2            10           7
1            2            1            1            7
1            2            1            2            7
1            2            1            3            7
1            2            1            4            7
1            2            1            5            7
1            2            1            6            7
1            2            1            7            7
1            2            1            8            7
1            2            1            9            7
1            2            1            10           7
1            2            2            1            7
1            2            2            2            7
1            2            2            3            7
1            2            2            4            7
1            2            2            5            7
1            2            2            6            7
1            2            2            7            7
1            2            2            8            7
1            2            2            9            7
1            2            2            10           7

40 rows fetched.

SQL> select stdsco+1 from najinschool;

STDSCO+1
--------------------
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8

40 rows fetched.

SQL> select gradeid , classid, groupid, stdid, stdsco from najinschool;

GRADEID      CLASSID      GROUPID      STDID        STDSCO
------------ ------------ ------------ ------------ ------------
1            1            1            1            7
1            1            1            2            7
1            1            1            3            7
1            1            1            4            7
1            1            1            5            7
1            1            1            6            7
1            1            1            7            7
1            1            1            8            7
1            1            1            9            7
1            1            1            10           7
1            1            2            1            7
1            1            2            2            7
1            1            2            3            7
1            1            2            4            7
1            1            2            5            7
1            1            2            6            7
1            1            2            7            7
1            1            2            8            7
1            1            2            9            7
1            1            2            10           7
1            2            1            1            7
1            2            1            2            7
1            2            1            3            7
1            2            1            4            7
1            2            1            5            7
1            2            1            6            7
1            2            1            7            7
1            2            1            8            7
1            2            1            9            7
1            2            1            10           7
1            2            2            1            7
1            2            2            2            7
1            2            2            3            7
1            2            2            4            7
1            2            2            5            7
1            2            2            6            7
1            2            2            7            7
1            2            2            8            7
1            2            2            9            7
1            2            2            10           7

40 rows fetched.

SQL> select *  from najinschool where stdsco = 16000;

GRADEID      CLASSID      GROUPID      STDID        STDSCO
------------ ------------ ------------ ------------ ------------
1            1            1            6            7

1 rows fetched.

SQL> select sum(groupid), stdsco from najinschool group by stdsco;

SUM(GROUPID)         STDSCO
-------------------- ------------
1                    7
2                    7
2                    7
1                    7
3                    7
1                    7
1                    7
1                    7
4                    7
2                    7
1                    7
1                    7
2                    7
1                    7
2                    7
1                    7
1                    7
1                    7
2                    7
1                    7
2                    7
2                    7
2                    7
1                    7
2                    7
2                    7
2                    7
2                    7
2                    7
1                    7
1                    7
2                    7
2                    7
1                    7
2                    7
1                    7
2                    7

37 rows fetched.

SQL> select distinct stdsco from najinschool;

STDSCO
------------
7

1 rows fetched.

SQL> select groupid, plus0 from (select groupid, stdsco+10 plus0 from najinschool);

GROUPID      PLUS0
------------ --------------------
1            17
1            17
1            17
1            17
1            17
1            17
1            17
1            17
1            17
1            17
2            17
2            17
2            17
2            17
2            17
2            17
2            17
2            17
2            17
2            17
1            17
1            17
1            17
1            17
1            17
1            17
1            17
1            17
1            17
1            17
2            17
2            17
2            17
2            17
2            17
2            17
2            17
2            17
2            17
2            17

40 rows fetched.

SQL> select * from (select stdsco+10 from najinschool) ;

STDSCO+10
--------------------
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17

40 rows fetched.

SQL> with t_tmp1 as (select * from najinschool) select * from t_tmp1;

GRADEID      CLASSID      GROUPID      STDID        STDSCO
------------ ------------ ------------ ------------ ------------
1            1            1            1            7
1            1            1            2            7
1            1            1            3            7
1            1            1            4            7
1            1            1            5            7
1            1            1            6            7
1            1            1            7            7
1            1            1            8            7
1            1            1            9            7
1            1            1            10           7
1            1            2            1            7
1            1            2            2            7
1            1            2            3            7
1            1            2            4            7
1            1            2            5            7
1            1            2            6            7
1            1            2            7            7
1            1            2            8            7
1            1            2            9            7
1            1            2            10           7
1            2            1            1            7
1            2            1            2            7
1            2            1            3            7
1            2            1            4            7
1            2            1            5            7
1            2            1            6            7
1            2            1            7            7
1            2            1            8            7
1            2            1            9            7
1            2            1            10           7
1            2            2            1            7
1            2            2            2            7
1            2            2            3            7
1            2            2            4            7
1            2            2            5            7
1            2            2            6            7
1            2            2            7            7
1            2            2            8            7
1            2            2            9            7
1            2            2            10           7

40 rows fetched.

SQL> select sum(stdsco) from najinschool;

SUM(STDSCO)
--------------------
280

1 rows fetched.

SQL> select sco from (select gradeid , classid, groupid, stdid, stdsco+1 sco  from najinschool);

SCO
--------------------
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8

40 rows fetched.

SQL> select sumg, plus10 from (select sum(groupid) as sumg,  stdsco+10 as plus10 from najinschool group by stdsco);

SUMG                 PLUS10
-------------------- --------------------
1                    17
2                    17
2                    17
1                    17
3                    17
1                    17
1                    17
1                    17
4                    17
2                    17
1                    17
1                    17
2                    17
1                    17
2                    17
1                    17
1                    17
1                    17
2                    17
1                    17
2                    17
2                    17
2                    17
1                    17
2                    17
2                    17
2                    17
2                    17
2                    17
1                    17
1                    17
2                    17
2                    17
1                    17
2                    17
1                    17
2                    17

37 rows fetched.

SQL> select
  2 sum(stdsco) over() sumsco,
  3 sum(stdsco) over (partition by groupid) groupsum,
  4 sum(stdsco) over (order by groupid) ordsum,
  5 sum(stdsco) over (partition by groupid order by groupid) gosum from najinschool;

SUMSCO               GROUPSUM             ORDSUM               GOSUM
-------------------- -------------------- -------------------- --------------------
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  140                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140
280                  140                  280                  140

40 rows fetched.

SQL> select *  from najinschool order by stdsco, classid;

GRADEID      CLASSID      GROUPID      STDID        STDSCO
------------ ------------ ------------ ------------ ------------
1            1            2            1            7
1            1            2            2            7
1            1            2            3            7
1            1            2            4            7
1            1            2            5            7
1            1            2            7            7
1            1            2            8            7
1            1            2            9            7
1            1            2            10           7
1            2            1            1            7
1            2            1            2            7
1            2            1            3            7
1            2            1            4            7
1            2            1            5            7
1            2            1            6            7
1            2            1            8            7
1            2            1            9            7
1            2            1            10           7
1            2            2            1            7
1            2            2            2            7
1            2            2            3            7
1            2            2            4            7
1            2            2            5            7
1            1            2            6            7
1            2            2            6            7
1            2            2            7            7
1            2            2            8            7
1            2            2            9            7
1            2            2            10           7
1            1            1            1            7
1            1            1            2            7
1            1            1            3            7
1            1            1            4            7
1            1            1            5            7
1            1            1            7            7
1            2            1            7            7
1            1            1            8            7
1            1            1            9            7
1            1            1            10           7
1            1            1            6            7

40 rows fetched.

SQL> select sum(stdsco) from najinschool group by groupid;

SUM(STDSCO)
--------------------
140
140

2 rows fetched.

SQL> select sum(groupid), stdsco from (select * from najinschool) group by stdsco;

SUM(GROUPID)         STDSCO
-------------------- ------------
1                    7
2                    7
2                    7
1                    7
3                    7
1                    7
1                    7
1                    7
4                    7
2                    7
1                    7
1                    7
2                    7
1                    7
2                    7
1                    7
1                    7
1                    7
2                    7
1                    7
2                    7
2                    7
2                    7
1                    7
2                    7
2                    7
2                    7
2                    7
2                    7
1                    7
1                    7
2                    7
2                    7
1                    7
2                    7
1                    7
2                    7

37 rows fetched.

SQL> select na.groupid, na.stdsco  from najinschool na,najinschool1 where na.stdsco =najinschool1.stdsco;

GROUPID      STDSCO
------------ ------------
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7
1            7

22 rows fetched.

SQL> select groupid, stdsco from DDMUSER.najinschool minus select groupid, stdsco  from DDMUSER.najinschool1 order by 1;

GROUPID      STDSCO
------------ ------------
1            7
2            7

2 rows fetched.

SQL> select groupid, stdsco from DDMUSER.najinschool union select groupid, stdsco  from DDMUSER.najinschool1;

GROUPID      STDSCO      
------------ ------------
1            1000        
1            1200        
1            1300        
1            1400        
1            1500        
1            16000       
1            1700        
1            1800        
1            1900        
1            2000        
1            7           
2            7           

12 rows fetched.

SQL> select groupid, stdsco from DDMUSER.najinschool1 union select groupid, stdsco  from DDMUSER.najinschool;

GROUPID      STDSCO      
------------ ------------
1            7           
2            7           
1            1000        
1            1200        
1            1300        
1            1400        
1            1500        
1            16000       
1            1700        
1            1800        
1            1900        
1            2000        

12 rows fetched.

SQL> create table najinschoolas as select * from DDMUSER.najinschool;

CT-00613, Invalid operation, the command references a redacted object
SQL> create table najinschoolas as select stdsco+1 plus1 from DDMUSER.najinschool;

CT-00613, Invalid operation, the command references a redacted object
SQL> EXEC DBE_MASK_DATA.DROP_POLICY('DDMUSER','NAJINSCHOOL','RULE1' );

PL/SQL procedure successfully completed.

SQL> conn / as sysdba

connected.

SQL> drop user if exists DDMUSER cascade;

Succeed.

SQL> drop user if exists DDMUSER1 cascade;

Succeed.

SQL> drop user if exists DDMUSER2 cascade;

Succeed.

SQL> drop user if exists DDMUSER3 cascade;

Succeed.

SQL> CONN / as  sysdba

connected.

SQL> drop user if exists DDMUSER cascade;

Succeed.

SQL> create user DDMUSER identified by cao102_cao;

Succeed.

SQL> grant connect , resource  to DDMUSER;

Succeed.

SQL> grant create table to DDMUSER;

Succeed.

SQL> grant execute on DBE_MASK_DATA to DDMUSER;

Succeed.

SQL> grant select on sys_ddm to DDMUSER;

Succeed.

SQL> conn DDMUSER/cao102_cao@127.0.0.1:1611

connected.

SQL> create table TT3 (id DOUBLE, id2 DOUBLE, id3 DOUBLE, id4 DOUBLE, id5 DOUBLE, id6 DOUBLE);

Succeed.

SQL> exec DBE_MASK_DATA.ADD_POLICY('DDMUSER', 'TT3', 'ID2','', 'FULL','0.5');

CT-00932, [1:2] PL/SQL(DDMUSER.ANONYMOUS BLOCK) terminated with execute errors
[1:2] PL/SQL(DBE_MASK_DATA.ADD_POLICY) terminated with execute errors
CT-00613, Invalid operation, rulename is too short

SQL> insert into tt3 (id2) values ('0.5');

1 rows affected.

SQL> exec DBE_MASK_DATA.ADD_POLICY('DDMUSER', 'TT3', 'ID3','rulecccccccccccccccccccccccccCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC00002', 'FULL','1.000006');

PL/SQL procedure successfully completed.

SQL> insert into tt3 (id3) values ('1.000006');

1 rows affected.

SQL> exec DBE_MASK_DATA.ADD_POLICY('DDMUSER', 'TT3', 'ID4','rulecccccccccccccccccccccccccCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC00003', 'FULL','2.6');

PL/SQL procedure successfully completed.

SQL> select* from my_redaction_policies order by RULE_NAME;

USER_NAME                                                        OBJECT_NAME                                                      COL_NAME                                                         RULE_NAME                                                        TYPE_NAME                                                        PARAM                                                           
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------
DDMUSER                                                          TT3                                                              ID3                                                              RULECCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC00002 FULL                                                             '1.000006'                                                      
DDMUSER                                                          TT3                                                              ID4                                                              RULECCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC00003 FULL                                                             '2.6'                                                           

2 rows fetched.

SQL> exec DBE_MASK_DATA.DROP_POLICY('DDMUSER', 'TT3', 'rulecccccccccccccccccccccccccCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC00003');

PL/SQL procedure successfully completed.

SQL> exec DBE_MASK_DATA.DROP_POLICY('DDMUSER', 'TT3', 'rulecccccccccccccccccccccccccCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC00002');

PL/SQL procedure successfully completed.

SQL> select* from my_redaction_policies order by RULE_NAME;

USER_NAME                                                        OBJECT_NAME                                                      COL_NAME                                                         RULE_NAME                                                        TYPE_NAME                                                        PARAM
---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ----------------------------------------------------------------

0 rows fetched.

SQL> CONN / as  sysdba

connected.

SQL> drop user if exists DDMUSER cascade;

Succeed.

SQL> conn / as sysdba

connected.

SQL> drop user if exists DDMUSER cascade;

Succeed.

SQL> drop user if exists DDMUSER3 cascade;

Succeed.

SQL> create user DDMUSER identified by cao102_cao;

Succeed.

SQL> create user DDMUSER3 identified by cao102_cao;

Succeed.

SQL> grant connect , resource  to DDMUSER;

Succeed.

SQL> grant create table to DDMUSER;

Succeed.

SQL> grant execute on DBE_MASK_DATA to DDMUSER;

Succeed.

SQL> grant unlimited tablespace to DDMUSER;

Succeed.

SQL> grant dba to DDMUSER3;

Succeed.

SQL> conn DDMUSER/cao102_cao@127.0.0.1:1611

connected.

SQL> create table TT3 (id DOUBLE, id2 DOUBLE, id3 DOUBLE, id4 DOUBLE, id5 DOUBLE, id6 DOUBLE);

Succeed.

SQL> exec DBE_MASK_DATA.ADD_POLICY('DDMUSER', 'TT3', 'ID2','rule1', 'FULL','0.5');

PL/SQL procedure successfully completed.

SQL> insert into TT3 values ('1','1','1.0506','1.0506','1.0506','1.0506');

1 rows affected.

SQL> insert into TT3 values ('2','2','1.0506','1.0506','1.0506','1.0506');

1 rows affected.

SQL> insert into TT3 values ('3','3','1.0506','1.0506','1.0506','1.0506');

1 rows affected.

SQL> create table TT1 (id DOUBLE, id2 DOUBLE, id3 DOUBLE, id4 DOUBLE, id5 DOUBLE, id6 DOUBLE);

Succeed.

SQL> exec DBE_MASK_DATA.ADD_POLICY('DDMUSER', 'TT1', 'ID2','rule1', 'FULL','0.5');

PL/SQL procedure successfully completed.

SQL> insert into TT1 values ('1','5','1.0506','1.0506','1.0506','1.0506');

1 rows affected.

SQL> insert into TT1 values ('2','2','1.0506','1.0506','1.0506','1.0506');

1 rows affected.

SQL> insert into TT1 values ('3','6','1.0506','1.0506','1.0506','1.0506');

1 rows affected.

SQL> commit;

Succeed.

SQL> conn DDMUSER/cao102_cao@127.0.0.1:1611

connected.

SQL> select * from DDMUSER.TT3 where id2 in (1,2,3);

ID                   ID2                  ID3                  ID4                  ID5                  ID6
-------------------- -------------------- -------------------- -------------------- -------------------- --------------------
1                    0.5                  1.0506               1.0506               1.0506               1.0506
2                    0.5                  1.0506               1.0506               1.0506               1.0506
3                    0.5                  1.0506               1.0506               1.0506               1.0506

3 rows fetched.

SQL> select * from DDMUSER.TT3 where id2 = 1 or id2 = 2 or id2 = 3;

ID                   ID2                  ID3                  ID4                  ID5                  ID6
-------------------- -------------------- -------------------- -------------------- -------------------- --------------------
1                    0.5                  1.0506               1.0506               1.0506               1.0506
2                    0.5                  1.0506               1.0506               1.0506               1.0506
3                    0.5                  1.0506               1.0506               1.0506               1.0506

3 rows fetched.

SQL> select DDMUSER.TT1.ID2, DDMUSER.TT3.ID2 from DDMUSER.TT1 left join  DDMUSER.TT3 on DDMUSER.TT1.ID2=DDMUSER.TT3.ID2;

ID2                  ID2
-------------------- --------------------
0.5                  0.5
0.5                  0.5
0.5                  0.5

3 rows fetched.

SQL> conn DDMUSER3/cao102_cao@127.0.0.1:1611

connected.

SQL> select * from DDMUSER.TT3 where id2 in (1,2,3);

ID                   ID2                  ID3                  ID4                  ID5                  ID6
-------------------- -------------------- -------------------- -------------------- -------------------- --------------------
1                    1                    1.0506               1.0506               1.0506               1.0506
2                    2                    1.0506               1.0506               1.0506               1.0506
3                    3                    1.0506               1.0506               1.0506               1.0506

3 rows fetched.

SQL> conn DDMUSER/cao102_cao@127.0.0.1:1611

connected.

SQL> exec DBE_MASK_DATA.drop_POLICY('DDMUSER', 'TT1', 'rule1');

PL/SQL procedure successfully completed.

SQL> exec DBE_MASK_DATA.drop_POLICY('DDMUSER', 'TT3', 'rule1');

PL/SQL procedure successfully completed.

SQL> conn / as sysdba

connected.

SQL> drop user if exists DDMUSER cascade;

Succeed.

SQL> drop user if exists DDMUSER3 cascade;

Succeed.

SQL> conn / as sysdba

connected.

SQL> drop user if exists C##DDMUSER11 cascade;

Succeed.

SQL> create user C##DDMUSER11 identified by cao102_cao;

Succeed.

SQL> grant connect , resource  to C##DDMUSER11;

Succeed.

SQL> grant create any table to C##DDMUSER11;

Succeed.

SQL> grant execute on DBE_MASK_DATA to C##DDMUSER11;

Succeed.

SQL> conn C##DDMUSER11/cao102_cao@127.0.0.1:1611

connected.

SQL> create table TT3 (id DOUBLE, id2 DOUBLE);

Succeed.

SQL> create table TT2 (id DOUBLE, id2 DOUBLE);

Succeed.

SQL> create table TT1 (id DOUBLE, id2 DOUBLE);

Succeed.

SQL> create table TT0 (id DOUBLE, id2 DOUBLE);

Succeed.

SQL> exec DBE_MASK_DATA.ADD_POLICY('C##DDMUSER11', 'TT3', 'ID2','rule1', 'FULL','0');

PL/SQL procedure successfully completed.

SQL> exec DBE_MASK_DATA.ADD_POLICY('C##DDMUSER11', 'TT2', 'ID2','rule1', 'FULL','0');

PL/SQL procedure successfully completed.

SQL> exec DBE_MASK_DATA.ADD_POLICY('C##DDMUSER11', 'TT1', 'ID2','rule1', 'FULL','0');

PL/SQL procedure successfully completed.

SQL> exec DBE_MASK_DATA.ADD_POLICY('C##DDMUSER11', 'TT0', 'ID2','rule1', 'FULL','0');

PL/SQL procedure successfully completed.

SQL> select count(*) from my_redaction_policies where USER_NAME = 'C##DDMUSER11';

COUNT(*)
--------------------
4

1 rows fetched.

SQL> drop table TT0 purge;

CT-00613, Invalid operation, the table has rule, please drop rule firstly.
SQL> exec DBE_MASK_DATA.drop_POLICY('C##DDMUSER11', 'TT0','rule1');

PL/SQL procedure successfully completed.

SQL> drop table TT0 purge;

Succeed.

SQL> select count(*) from my_redaction_policies where USER_NAME = 'C##DDMUSER11';

COUNT(*)
--------------------
3

1 rows fetched.

SQL> drop table TT3;

CT-00613, Invalid operation, the table has rule, please drop rule firstly.
SQL> exec DBE_MASK_DATA.drop_POLICY('C##DDMUSER11', 'TT3','rule1');

PL/SQL procedure successfully completed.

SQL> drop table TT3;

Succeed.

SQL> select count(*) from my_redaction_policies where USER_NAME = 'C##DDMUSER11';

COUNT(*)
--------------------
2

1 rows fetched.

SQL> alter table TT2 drop column ID2;

CT-00613, Invalid operation, this col has rule , please drop rule firstly.
SQL> exec DBE_MASK_DATA.drop_POLICY('C##DDMUSER11', 'TT2','rule1');

PL/SQL procedure successfully completed.

SQL> alter table TT2 drop column ID2;

Succeed.

SQL> select count(*) from my_redaction_policies where USER_NAME = 'C##DDMUSER11';

COUNT(*)
--------------------
1

1 rows fetched.

SQL> conn / as sysdba

connected.

SQL> drop user C##DDMUSER11 cascade;

CT-00613, Invalid operation, the user has rule, please drop rule firstly.
SQL> exec DBE_MASK_DATA.drop_POLICY('C##DDMUSER11', 'TT1','rule1');

PL/SQL procedure successfully completed.

SQL> drop user C##DDMUSER11 cascade;

Succeed.

SQL> select count(*) from adm_redaction_policies where USER_NAME = 'C##DDMUSER11';

COUNT(*)
--------------------
0

1 rows fetched.

SQL> conn / as sysdba

connected.

SQL> drop user if exists u_tc_sec_trigger_002 cascade;

Succeed.

SQL> create user u_tc_sec_trigger_002 identified by Changeme123;

Succeed.

SQL> grant create session,create table,create trigger to u_tc_sec_trigger_002;

Succeed.

SQL> create table u_tc_sec_trigger_002.t_tc_sec_trigger_002(c1 int, c2 varchar(1000));

Succeed.

SQL> insert into u_tc_sec_trigger_002.t_tc_sec_trigger_002 values(1,'zhangsan'),(2,'lisi'),(3,'wangwu'),(4,'zhaoliu');

4 rows affected.

SQL> --添加脱敏规则
SQL> BEGIN DBE_MASK_DATA.ADD_POLICY(
  2 object_schema    => 'u_tc_sec_trigger_002',
  3 object_name      => 't_tc_sec_trigger_002',
  4 column_name      => 'c1',
  5 policy_name      => 'rule1',
  6 policy_type    => 'FULL',
  7 mask_value=> '0');
  8 END;
  9 /

PL/SQL procedure successfully completed.

SQL> conn u_tc_sec_trigger_002/Changeme123@127.0.0.1:1611

connected.

SQL> select * from t_tc_sec_trigger_002 order by c2;

C1           C2
------------ ----------------------------------------------------------------
0            lisi
0            wangwu
0            zhangsan
0            zhaoliu

4 rows fetched.

SQL> create table t_tc_sec_trigger_002_2(c1 int, c2 varchar(1000));

Succeed.

SQL> create table t_tc(c1 int, c2 varchar(1000)) as select * from t_tc_sec_trigger_002;

CT-00613, Invalid operation, the command references a redacted object
SQL> insert into t_tc_sec_trigger_002_2 select * from t_tc_sec_trigger_002;

CT-00613, Invalid operation, the command references a redacted object
SQL> insert into t_tc_sec_trigger_002_2 select c1+1, c2 from t_tc_sec_trigger_002;

CT-00613, Invalid operation, the command references a redacted object
SQL> select * from t_tc_sec_trigger_002_2 order by c1, c2;

C1           C2
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> conn / as sysdba

connected.

SQL> grant EXEMPT REDACTION POLICY to u_tc_sec_trigger_002;

Succeed.

SQL> conn u_tc_sec_trigger_002/Changeme123@127.0.0.1:1611

connected.

SQL> insert into t_tc_sec_trigger_002_2 select * from t_tc_sec_trigger_002;

CT-00613, Invalid operation, the command references a redacted object
SQL> insert into t_tc_sec_trigger_002_2 select c1+10, c2 from t_tc_sec_trigger_002;

CT-00613, Invalid operation, the command references a redacted object
SQL> select * from t_tc_sec_trigger_002_2 order by c1;

C1           C2
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> conn / as sysdba

connected.

SQL> BEGIN DBE_MASK_DATA.DROP_POLICY(
  2 object_schema    => 'u_tc_sec_trigger_002',
  3 object_name      => 't_tc_sec_trigger_002',
  4 policy_name      => 'rule1');
  5 END;
  6 /

PL/SQL procedure successfully completed.

SQL> drop user if exists u_tc_sec_trigger_002 cascade;

Succeed.

SQL> 
SQL> create user test_ddm_p1 identified by Changeme_123;

Succeed.

SQL> grant create session,create table to test_ddm_p1;

Succeed.

SQL> grant create procedure to test_ddm_p1;

Succeed.

SQL> GRANT EXECUTE ON DBE_AC_ROW TO test_ddm_p1;

Succeed.

SQL> GRANT EXECUTE ON DBE_MASK_DATA TO test_ddm_p1;

Succeed.

SQL> create user test_ddm_p2 identified by Changeme_123;

Succeed.

SQL> grant create session,SELECT ANY TABLE to test_ddm_p2;

Succeed.

SQL> grant create table to test_ddm_p2;

Succeed.

SQL> grant create procedure to test_ddm_p2;

Succeed.

SQL> GRANT EXECUTE ON DBE_AC_ROW TO test_ddm_p2;

Succeed.

SQL> GRANT EXECUTE ON DBE_MASK_DATA TO test_ddm_p2;

Succeed.

SQL> conn test_ddm_p1/Changeme_123@127.0.0.1:1611

connected.

SQL> create table P_TEST(id int,data CHAR(8) NOT NULL);

Succeed.

SQL> insert into P_TEST values (1,'pite');

1 rows affected.

SQL> insert into P_TEST values (2,'p1');

1 rows affected.

SQL> insert into P_TEST values (3,'p2');

1 rows affected.

SQL> insert into P_TEST values (4,'p3');

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> CREATE OR REPLACE FUNCTION Fn_GetPolicy(P_Schema in varchar2,P_Object in varchar2) return varchar2
  2            AS
  3            BEGIN
  4                    RETURN 'ID>2';
  5           END Fn_GetPolicy;
  6            /

Succeed.

SQL> DECLARE
  2   BEGIN
  3        DBE_AC_ROW.ADD_POLICY('test_ddm_p1','P_TEST','policy_testabxihjf','test_ddm_p1','Fn_GetPolicy', 'SELECT',TRUE);
  4    END;
  5    /

PL/SQL procedure successfully completed.

SQL> select * from P_TEST;

ID           DATA    
------------ --------
3            p2      
4            p3      

2 rows fetched.

SQL> conn / as sysdba

connected.

SQL> grant execute on test_ddm_p1.Fn_GetPolicy to test_ddm_p2;

Succeed.

SQL> conn test_ddm_p2/Changeme_123@127.0.0.1:1611

connected.

SQL> select * from test_ddm_p1.P_TEST;

ID           DATA    
------------ --------
3            p2      
4            p3      

2 rows fetched.

SQL> create table P_TEST_merge (id int,data CHAR(8) NOT NULL);

Succeed.

SQL> MERGE INTO test_ddm_p2.P_TEST_merge p using test_ddm_p1.P_TEST np on (p.id = np.id) when matched then update set p.data = np.data when not matched then insert values (np.id,np.data);

2 rows affected.

SQL> commit;

Succeed.

SQL> select * from P_TEST_merge order by id;

ID           DATA    
------------ --------
3            p2      
4            p3      

2 rows fetched.

SQL> create table P_TEST_3 (id int,data CHAR(8) NOT NULL);

Succeed.

SQL> replace into test_ddm_p2.P_TEST_3 select * from test_ddm_p1.P_TEST;

2 rows affected.

SQL> select * from test_ddm_p2.P_TEST_3;

ID           DATA    
------------ --------
3            p2      
4            p3      

2 rows fetched.

SQL> 
SQL> conn test_ddm_p1/Changeme_123@127.0.0.1:1611

connected.

SQL> DECLARE
  2   BEGIN
  3        DBE_AC_ROW.drop_POLICY('test_ddm_p1','P_TEST','policy_testabxihjf');
  4    END;
  5    /

PL/SQL procedure successfully completed.

SQL> drop  FUNCTION Fn_GetPolicy;

Succeed.

SQL> select * from P_TEST;

ID           DATA    
------------ --------
1            pite    
2            p1      
3            p2      
4            p3      

4 rows fetched.

SQL> BEGIN 
  2 DBE_MASK_DATA.ADD_POLICY(   
  3 object_schema    => 'test_ddm_p1',   
  4 object_name      => 'P_TEST',  
  5 column_name      => 'data',  
  6 policy_name      => 'RULE_TEST_PO1',   
  7 policy_type    => 'FULL',   
  8 mask_value   => 'xx');
  9 END;
 10 /

PL/SQL procedure successfully completed.

SQL> select * from P_TEST;

ID           DATA    
------------ --------
1            XX      
2            XX      
3            XX      
4            XX      

4 rows fetched.

SQL> conn test_ddm_p2/Changeme_123@127.0.0.1:1611

connected.

SQL> delete from test_ddm_p2.P_TEST_merge;

2 rows affected.

SQL> MERGE INTO test_ddm_p2.P_TEST_merge p using test_ddm_p1.P_TEST np on (p.id = np.id) when matched then update set p.data = np.data when not matched then insert values (np.id,np.data);

CT-00613, Invalid operation, the command references a redacted object
SQL> insert into test_ddm_p2.P_TEST_merge values (1,'x');

1 rows affected.

SQL> update test_ddm_p2.P_TEST_merge p,test_ddm_p1.P_TEST np set p.data=np.data where p.id=np.id;

CT-00613, Invalid operation, the command references a redacted object
SQL> replace into P_TEST_merge select * from test_ddm_p1.P_TEST;

CT-00613, Invalid operation, the command references a redacted object
SQL> conn test_ddm_p1/Changeme_123@127.0.0.1:1611

connected.

SQL> DECLARE
  2   BEGIN
  3        DBE_MASK_DATA.drop_POLICY('TEST_DDM_P1','P_TEST','RULE_TEST_PO1');
  4    END;
  5    /

PL/SQL procedure successfully completed.

SQL> conn / as sysdba

connected.

SQL> drop user if exists test_ddm_p1 cascade;

Succeed.

SQL> drop user if exists test_ddm_p2 cascade;

Succeed.

SQL> 
SQL> DROP USER IF EXISTS DDMUSER CASCADE;

Succeed.

SQL> DROP TABLE IF EXISTS TEST_S_DBE_MASK_DATA;

Succeed.

SQL> CREATE USER DDMUSER IDENTIFIED BY Cantian_234;

Succeed.

SQL> GRANT CONNECT,RESOURCE TO DDMUSER;

Succeed.

SQL> GRANT CREATE TABLE TO DDMUSER;

Succeed.

SQL> GRANT EXECUTE ON DBE_MASK_DATA TO DDMUSER;

Succeed.

SQL> conn DDMUSER/Cantian_234@127.0.0.1:1611

connected.

SQL> DROP TABLE IF EXISTS TEST_S_DBE_MASK_DATA CASCADE;

CT-00601, [1:50]Sql syntax error: CONSTRAINTS expected
SQL> CREATE TABLE TEST_S_DBE_MASK_DATA(gradeid int, classid int, groupid int, stdid int, stdsco int);

Succeed.

SQL> conn / as sysdba 

connected.

SQL> CREATE OR REPLACE function f2_S_DBE_MASK_DATA() return int
  2 as
  3 BEGIN
  4        SYS.DBE_MASK_DATA.ADD_POLICY(
  5        object_schema    => 'DDMUSER',
  6        object_name      => 'TEST_S_DBE_MASK_DATA',
  7        column_name      => 'stdsco',
  8        policy_name      => 'RULE1',
  9        policy_type      => 'FULL',
 10        mask_value       => '7');
 11        return 1;
 12 END;
 13 /

Succeed.

SQL> select f2_S_DBE_MASK_DATA();

F2_S_DBE_MASK_DATA()
--------------------
1                   

1 rows fetched.

SQL> EXEC DBE_MASK_DATA.DROP_POLICY('DDMUSER','TEST_S_DBE_MASK_DATA','RULE1' );

PL/SQL procedure successfully completed.

SQL> drop user DDMUSER cascade;
Succeed.




