
SQL> select current_timestamp($1) from dual;--error

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
CT-00601, [1:8]Sql syntax error: fraction must between 0 and 6. 
SQL>
SQL> select trunc($1,'dd') from dual;

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
TRUNC($1,'DD')        
----------------------
2019-02-13 00:00:00   

1 rows fetched.

SQL> 
SQL> 
SQL> select trunc($1,$2) from dual;  

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: The 2th param:
Direction : DataType : BindValue: Bind params successfully.
TRUNC($1,$2)          
----------------------
2019-02-01 00:00:00   

1 rows fetched.

SQL> 
SQL> 
SQL> select trunc(to_date('2018-06-13 12:12:12', 'yyyy-mm-dd hh24:mi:ss') , $1) from dual; 

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
TRUNC(TO_DATE('2018-06-13 12:12:12', 'YYYY-MM-DD HH24:MI:SS') , 
----------------------------------------------------------------
2018-06-13 00:00:00                                             

1 rows fetched.

SQL> 
SQL> select trunc(to_date('2018-06-13 12:12:12', 'yyyy-mm-dd hh24:mi:ss') , $1) from dual; --error

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
CT-00105, Invalid format of datetime
SQL> 
SQL> 
SQL> select trunc($1,$2) from dual; 

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: The 2th param:
Direction : DataType : BindValue: Bind params successfully.
TRUNC($1,$2)                            
----------------------------------------
3.1                                     

1 rows fetched.

SQL> 
SQL> select DBE_LOB.SUBSTR(:1,2,2);

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
DBE_LOB.SUBSTR(:1,2,2)                                         
----------------------------------------------------------------
bc                                                              

1 rows fetched.

SQL> 
SQL> select DBE_LOB.SUBSTR(:1,2,2);--error

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
CT-01304, [1:23]Data type 'BINARY_INTEGER' is not supported
SQL> 
SQL> select DBE_LOB.get_length(:1);

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
DBE_LOB.GET_LENGTH(:1)                                          
----------------------
3                                                               

1 rows fetched.

SQL> 
SQL> select DBE_LOB.get_length(:1);--error

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
CT-01304, [1:27]Data type 'BINARY_INTEGER' is not supported
SQL> 
SQL> --DTS2019080610346
SQL> drop table if exists PROC_DML_KEY_006_TAB_01;

Succeed.

SQL> create table PROC_DML_KEY_006_TAB_01(empno int,ename varchar(10),job varchar(10) ,sal integer);

Succeed.

SQL> insert into PROC_DML_KEY_006_TAB_01 values(1,'zhangsan','doctor1',10000),(2,'zhangsan2','doctor2',10000),(123,'zhangsan3','doctor3',10000);

3 rows affected.

SQL> insert into PROC_DML_KEY_006_TAB_01 values(1,'zhansi','doctor1',10000),(2,'lisiabc','doctor2',10000),(123,'zhangwu123','doctor3',10000);

3 rows affected.

SQL> insert into PROC_DML_KEY_006_TAB_01 values(null,'abc','worker',9000);

1 rows affected.

SQL> insert into PROC_DML_KEY_006_TAB_01 values(716,null,'leader',20000);

1 rows affected.

SQL> insert into PROC_DML_KEY_006_TAB_01 values(null,'abc','worker',9000);

1 rows affected.

SQL> insert into PROC_DML_KEY_006_TAB_01 values(null,null,'worker',9000);

1 rows affected.

SQL> insert into PROC_DML_KEY_006_TAB_01 values(null,null,null,null);

1 rows affected.

SQL> insert into PROC_DML_KEY_006_TAB_01 values(null,null,null,null);

1 rows affected.

SQL> 
SQL> 
SQL> begin
  2 delete from  sys.PROC_DML_KEY_006_TAB_01   limit :f1 ;
  3 end;
  4 /

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
PL/SQL procedure successfully completed.

SQL> 
SQL> begin
  2 delete from  sys.PROC_DML_KEY_006_TAB_01   offset :f1 ;
  3 end;
  4 /

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
PL/SQL procedure successfully completed.

SQL> 
SQL> begin
  2 delete from  sys.PROC_DML_KEY_006_TAB_01   order by  :f1 ;
  3 end;
  4 /

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
PL/SQL procedure successfully completed.

SQL> commit;

Succeed.

SQL> 
SQL> drop table  PROC_DML_KEY_006_TAB_01;

Succeed.

SQL> 
SQL> --DTS2019122608716
SQL> select array_agg(:) from dual;

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
ARRAY_AGG(:)
----------------------------------------------------------------
{a}

1 rows fetched.

SQL> --DTS2019110700720
SQL> drop table if exists bind_param_test_004 ;

Succeed.

SQL> create table bind_param_test_004(id int,id2 varchar(100));

Succeed.

SQL> create or replace procedure proc_bind_param_004(p1 int,p2 varchar,p3 int,p4 varchar) is
  2  begin
  3         insert into bind_param_test_004 values(p1,p2);
  4         insert into bind_param_test_004 values(p3,p4);
  5         commit;
  6  end;
  7  /

Succeed.

SQL> 
SQL> call proc_bind_param_004(:f1,:f2,:f1,:f4);

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: The 2th param:
Direction : DataType : BindValue: The 3th param:
Direction : DataType : BindValue: The 4th param:
Direction : DataType : BindValue: Bind params successfully.
PL/SQL procedure successfully completed.

SQL> 
SQL> select * from bind_param_test_004 where id = :f1;

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
ID           ID2                                                             
------------ ----------------------------------------------------------------

0 rows fetched.

SQL> 
SQL> select * from bind_param_test_004 order by id,id2;

ID           ID2                                                             
------------ ----------------------------------------------------------------
1            Cantian@#!(_+)=\/
1            test$%$^&*@~                                                    

2 rows fetched.

SQL> 
SQL> drop table bind_param_test_004;

Succeed.

SQL> drop procedure proc_bind_param_004;

Succeed.

SQL> 
SQL> 
SQL> -- DTS2020020506518
SQL> drop table if exists subsidies_dep1_2018_2;

Succeed.

SQL> CREATE TABLE subsidies_dep1_2018_2(staff_id INT NOT NULL, staff_name CHAR(50), job VARCHAR(30),subsidies NUMBER);

Succeed.

SQL> select * from subsidies_dep1_2018_2 as of scn :scn1 order by 1,2;

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
CT-00635, Value error: NULL value is not a valid system change number
SQL> 
SQL> 
SQL> -- DTS202008040OHAVEP0D00
SQL> DROP TABLE IF EXISTS ZONEBASICINFO_1001 CASCADE CONSTRAINTS;

Succeed.

SQL> CREATE TABLE ZONEBASICINFO_1001
  2 (
  3   "ZONEID" NUMBER(12) NOT NULL,
  4   "ZONEDESC" VARCHAR(255 BYTE) NOT NULL,
  5   "UPPERZONEID" NUMBER(12) NOT NULL
  6 );

Succeed.

SQL> INSERT INTO ZONEBASICINFO_1001 values(1,'Center POP',0);

1 rows affected.

SQL> INSERT INTO ZONEBASICINFO_1001 values(9999,'idle devices',0);

1 rows affected.

SQL> INSERT INTO ZONEBASICINFO_1001 values(100,'Standby POP',0);

1 rows affected.

SQL> INSERT INTO ZONEBASICINFO_1001 values(3,'Edge POP',100);

1 rows affected.

SQL> 
SQL> DROP TABLE IF EXISTS CONTENT_DISTRIBUTION_1214 CASCADE CONSTRAINTS;

Succeed.

SQL> CREATE TABLE CONTENT_DISTRIBUTION_1214
  2 (
  3   "CONTENT_ID" NUMBER(12) NOT NULL,
  4   "CONTENT_STATUS" NUMBER(12),
  5   "POP_ID" NUMBER(12)
  6 );

Succeed.

SQL> INSERT INTO CONTENT_DISTRIBUTION_1214 values (268435469,0,1);

1 rows affected.

SQL> INSERT INTO CONTENT_DISTRIBUTION_1214 values (268435469,0,1);

1 rows affected.

SQL> INSERT INTO CONTENT_DISTRIBUTION_1214 values (268435429,4,1);

1 rows affected.

SQL> commit;

Succeed.

SQL> 
SQL> CREATE OR REPLACE FUNCTION GET_POP_CONTENT_STATUS_DSH_1001(v_popid integer, v_content_id integer, v_service_type integer) return number
  2 as
  3 v_distrib_num number :=0;
  4 v_pop_content_status number :=-1;
  5 BEGIN
  6     if ( v_service_type = 16 ) then
  7         select count(1) into v_distrib_num from CONTENT_DISTRIBUTION_1214 where content_status = 4 and pop_id = v_popid and content_id = v_content_id;
  8         if ( v_distrib_num >= 1 ) then
  9             v_pop_content_status := 4;
 10             return v_pop_content_status;
 11         end if;
 12 	end if;
 13 	return v_pop_content_status;
 14 end;
 15 /

Succeed.

SQL> ALTER SYSTEM SET _LOG_LEVEL = 375;

Succeed.

SQL> ALTER SYSTEM SET LONGSQL_TIMEOUT = 0;

Succeed.

SQL> select GET_POP_CONTENT_STATUS_DSH_1001(zoneid, :p1, 16) RESULT from ZONEBASICINFO_1001 order by RESULT desc;

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
RESULT                                  
----------------------------------------
4                                       
-1                                      
-1                                      
-1                                      

4 rows fetched.

SQL> 
SQL> ALTER SYSTEM SET _LOG_LEVEL = 7;

Succeed.

SQL> ALTER SYSTEM SET LONGSQL_TIMEOUT = 10;

Succeed.

SQL> DROP TABLE IF EXISTS ZONEBASICINFO_1001 CASCADE CONSTRAINTS;

Succeed.

SQL> DROP TABLE IF EXISTS CONTENT_DISTRIBUTION_1214 CASCADE CONSTRAINTS;

Succeed.

SQL> DROP FUNCTION GET_POP_CONTENT_STATUS_DSH_1001;

Succeed.

SQL> 
SQL> --fix rs column is bind param
SQL> drop table if exists R_EQUIPMENT_POSITIONMODEL;

Succeed.

SQL> 
SQL> CREATE TABLE "R_EQUIPMENT_POSITIONMODEL"
  2 (
  3   "ID" BINARY_BIGINT NOT NULL,
  4   "RELATION_NAME" VARCHAR(180 BYTE),
  5   "RELATION_ID" BINARY_BIGINT,
  6   "SOURCE_INSTANCE_ID" BINARY_BIGINT,
  7   "TARGET_INSTANCE_ID" BINARY_BIGINT,
  8   "LAST_MODIFIED" BINARY_BIGINT,
  9   "ENDU" BINARY_INTEGER,
 10   "STARTU" BINARY_INTEGER
 11 );

Succeed.

SQL> 
SQL> INSERT INTO "R_EQUIPMENT_POSITIONMODEL" ("ID","RELATION_NAME","RELATION_ID","SOURCE_INSTANCE_ID","TARGET_INSTANCE_ID","LAST_MODIFIED","ENDU","STARTU") values
  2   (3654306952349892209,'Equipment_PositionModel',1002,6640699855611377066,753170169163755937,1606460227234,30,29);

1 rows affected.

SQL> 
SQL> drop table if exists R_EQUIPMENT_CHASSIS;

Succeed.

SQL> CREATE TABLE "R_EQUIPMENT_CHASSIS"
  2 (
  3   "ID" BINARY_BIGINT NOT NULL,
  4   "RELATION_NAME" VARCHAR(180 BYTE),
  5   "RELATION_ID" BINARY_BIGINT,
  6   "SOURCE_INSTANCE_ID" BINARY_BIGINT,
  7   "TARGET_INSTANCE_ID" BINARY_BIGINT,
  8   "LAST_MODIFIED" BINARY_BIGINT,
  9   "ISFONT" VARCHAR(1000 BYTE),
 10   "SLOTNO" VARCHAR(192 BYTE),
 11   "ISHALF" VARCHAR(1000 BYTE)
 12 );

Succeed.

SQL> 
SQL> SELECT ep.target_Instance_Id FROM r_equipment_positionmodel ep 
  2 WHERE  ep.source_Instance_Id = (SELECT IF(EXISTS( SELECT target_Instance_Id from r_equipment_positionmodel r WHERE  r.source_Instance_Id=:p1 ), :p2 ,(SELECT  ec.target_Instance_Id
  3                                 FROM r_equipment_chassis ec
  4                                 WHERE ec.source_Instance_Id = :p3
  5                             ) ) );

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: The 2th param:
Direction : DataType : BindValue: The 3th param:
Direction : DataType : BindValue: Bind params successfully.
TARGET_INSTANCE_ID  
--------------------
753170169163755937  

1 rows fetched.

SQL> 
SQL> drop table if exists R_EQUIPMENT_POSITIONMODEL;

Succeed.

SQL> drop table if exists R_EQUIPMENT_CHASSIS;

Succeed.

SQL> 
SQL> --DTS2020120803S82TP1400
SQL> CREATE OR REPLACE procedure DTS2020120803S82TP1400(v_content_id int[2]) 
  2 as
  3 BEGIN
  4 dbe_output.print_line(v_content_id[1]);
  5 end;
  6 /

Succeed.

SQL> 
SQL> call DTS2020120803S82TP1400(:p1);

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
CT-00932, [1:2] PL/SQL(SYS.ANONYMOUS BLOCK) terminated with execute errors
[1:25] CT-00606, Inconsistent datatypes, expected ARRAY - got BINARY_INTEGER

SQL> 
SQL> drop procedure if exists DTS2020120803S82TP1400;

Succeed.

SQL> 
SQL> select :p1,:p2,:p3 from sys_dummy;

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: The 2th param:
Direction : DataType : BindValue: The 3th param:
Direction : DataType : BindValue: Bind params successfully.
:P1    :P2    :P3   
------ ------ ------
TRUE   FALSE  TRUE  

1 rows fetched.

SQL> --20200113
SQL> drop table if exists temp_20200113;

Succeed.

SQL> create table temp_20200113 (f1 int, f2 int[]);

Succeed.

SQL> insert into temp_20200113 values(1,(select array_agg(f1) from temp_20200113));

1 rows affected.

SQL> insert into temp_20200113 values(2,(select array_agg(:) from temp_20200113));

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: Bind params successfully.
1 rows affected.

SQL> select * from temp_20200113;

F1           F2
------------ ----------------------------------------------------------------
1            {}
2            {60}

2 rows fetched.

SQL> drop table temp_20200113;

Succeed.

SQL> 
SQL> SELECT DBE_UTIL.EDIT_DISTANCE(:1,:2)  FROM DUAL;

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: The 2th param:
Direction : DataType : BindValue: Bind params successfully.
DBE_UTIL.EDIT_DISTANCE(:1,:2)
-----------------------------
3                            

1 rows fetched.

SQL> SELECT DBE_UTIL.EDIT_DISTANCE(:1,:2)  FROM DUAL;

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: The 2th param:
Direction : DataType : BindValue: Bind params successfully.
DBE_UTIL.EDIT_DISTANCE(:1,:2)
-----------------------------
3                            

1 rows fetched.

SQL> --20210821
SQL> drop table if exists test_list_part;

Succeed.

SQL> create table test_list_part (  "DATA_DAY" VARCHAR(8 BYTE),  "REGION_NAME" VARCHAR(50 BYTE))
  2 PARTITION BY LIST ("DATA_DAY")
  3 (    PARTITION PR_DATA_DAY_YYYYMMDD VALUES('yyyymmdd'),    PARTITION PR_DATA_DAY_20210514 VALUES('20210514'),    PARTITION PR_DATA_DAY_20210519 VALUES('20210519'),    PARTITION PR_DATA_DAY_20210501 VALUES('20210501'),
  4     PARTITION PR_DATA_DAY_20210520 VALUES('20210520'),    PARTITION PR_DATA_DAY_20210521 VALUES('20210521'),    PARTITION PR_DATA_DAY_20210522 VALUES('20210522'),    PARTITION PR_DATA_DAY_20210523 VALUES('20210523'));

Succeed.

SQL> insert into test_list_part values ('20210514',1),('20210519',2),('20210501',3),('20210521',4),('20210522',5),('20210523',6);

6 rows affected.

SQL> insert into test_list_part select * from test_list_part;

6 rows affected.

SQL> insert into test_list_part select * from test_list_part;

12 rows affected.

SQL> insert into test_list_part select * from test_list_part;

24 rows affected.

SQL> insert into test_list_part select * from test_list_part;

48 rows affected.

SQL> insert into test_list_part select * from test_list_part;

96 rows affected.

SQL> insert into test_list_part select * from test_list_part;

192 rows affected.

SQL> insert into test_list_part select * from test_list_part;

384 rows affected.

SQL> insert into test_list_part select * from test_list_part;

768 rows affected.

SQL> insert into test_list_part select * from test_list_part;

1536 rows affected.

SQL> insert into test_list_part select * from test_list_part;

3072 rows affected.

SQL> insert into test_list_part select * from test_list_part;

6144 rows affected.

SQL> insert into test_list_part select * from test_list_part;

12288 rows affected.

SQL> insert into test_list_part select * from test_list_part;

24576 rows affected.

SQL> insert into test_list_part select * from test_list_part;

49152 rows affected.

SQL> insert into test_list_part select * from test_list_part;

98304 rows affected.

SQL> insert into test_list_part select * from test_list_part;

196608 rows affected.

SQL> insert into test_list_part select * from test_list_part;

393216 rows affected.

SQL> insert into test_list_part select * from test_list_part;

786432 rows affected.

SQL> insert into test_list_part select * from test_list_part;

1572864 rows affected.

SQL> insert into test_list_part values ('20210520',7);

1 rows affected.

SQL> commit;

Succeed.

SQL> select count(*) from test_list_part where data_day between to_char(?, 'yyyymmdd') and to_char(?, 'yyyymmdd');

+-------------------------------------------------+
|                CTSQL Bind Param                  |
+-------------------------------------------------+
The 1th param:
Direction : DataType : BindValue: The 2th param:
Direction : DataType : BindValue: Bind params successfully.
COUNT(*)
--------------------
1

1 rows fetched.

SQL> spool off
