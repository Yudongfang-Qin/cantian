--FLASHBACK QUERY WITH INVALID SCN
DROP TABLE IF EXISTS FB_QTBL_INVALID_1;
CREATE TABLE FB_QTBL_INVALID_1 (ID INT);
INSERT INTO FB_QTBL_INVALID_1 VALUES(1);
COMMIT;
SELECT * FROM FB_QTBL_INVALID_1;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 0;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 1;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 9999999999999999;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 9999999999999998 + 1/1;
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN 'ASDFGAG';
SELECT * FROM FB_QTBL_INVALID_1 AS OF SCN (SELECT CURRENT_SCN FROM V$DATABASE);
DROP TABLE FB_QTBL_INVALID_1;

--FLASHBACK QUERY WITH INVALID TIMESTAMP
DROP TABLE IF EXISTS FB_QTBL_INVALID_2;
CREATE TABLE FB_QTBL_INVALID_2 (ID INT);
INSERT INTO FB_QTBL_INVALID_2 VALUES(1);
COMMIT;
SELECT * FROM FB_QTBL_INVALID_2;
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP 0;
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP 123.45678;
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP 'ASDFGAG';
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP SYSDATE - 1/24;
SELECT * FROM FB_QTBL_INVALID_2 AS OF TIMESTAMP SYSTIMESTAMP + 1/24;
SELECT * FROM FB_QTBL_INVALID_1 AS OF TIMESTAMP (SELECT CURRENT_SCN FROM V$DATABASE);
DROP TABLE FB_QTBL_INVALID_2;

--FLASHBACK QUERY TO BEFORE DDL
DROP TABLE IF EXISTS FB_QTBL_INVALID_3;
CREATE TABLE FB_QTBL_INVALID_3 (ID INT);
INSERT INTO FB_QTBL_INVALID_3 VALUES(1);
COMMIT;
SELECT SLEEP(2);

CREATE INDEX IDX_FB_QTBL_INVALID_3 ON FB_QTBL_INVALID_3 (ID);
DROP INDEX IDX_FB_QTBL_INVALID_3 ON FB_QTBL_INVALID_3;
SELECT * FROM FB_QTBL_INVALID_3 AS OF TIMESTAMP SYSDATE - 1/(24*60*60);
DROP TABLE FB_QTBL_INVALID_3;

DROP TABLE IF EXISTS FB_QTBL_INVALID_4;
CREATE TABLE FB_QTBL_INVALID_4 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
INSERT INTO FB_QTBL_INVALID_4 VALUES(1);
COMMIT;
SELECT SLEEP(2);

ALTER TABLE FB_QTBL_INVALID_4 ADD PARTITION P3 VALUES LESS THAN (30);
SELECT * FROM FB_QTBL_INVALID_4 AS OF TIMESTAMP SYSDATE - 1/(24*60*60);
DROP TABLE FB_QTBL_INVALID_4;

--FLASHBACK QUERY NORMAL TABLE
DROP TABLE IF EXISTS FB_QTBL_NORMAL_1;
CREATE TABLE FB_QTBL_NORMAL_1 (ID INT);
INSERT INTO FB_QTBL_NORMAL_1 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_NORMAL_1 SET ID = 2 WHERE ID = 1;
COMMIT;
SELECT * FROM FB_QTBL_NORMAL_1;
SELECT * FROM FB_QTBL_NORMAL_1 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
DROP TABLE FB_QTBL_NORMAL_1;

--FLASHBACK QUERY NORMAL TABLE WITH INDEX
DROP TABLE IF EXISTS FB_QTBL_NORMAL_2;
CREATE TABLE FB_QTBL_NORMAL_2 (ID INT);
CREATE INDEX IDX_FB_QTBL_NORMAL_2 ON FB_QTBL_NORMAL_2 (ID);
INSERT INTO FB_QTBL_NORMAL_2 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_NORMAL_2 SET ID = 2 WHERE ID = 1;
COMMIT;
INSERT INTO FB_QTBL_NORMAL_2 VALUES (10);
COMMIT;
SELECT * FROM FB_QTBL_NORMAL_2;
SELECT * FROM FB_QTBL_NORMAL_2 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID > 0;

EXPLAIN PLAN FOR SELECT * FROM FB_QTBL_NORMAL_2 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID > 0;
EXPLAIN PLAN FOR SELECT * FROM FB_QTBL_NORMAL_2 WHERE ID > 0;
DROP TABLE FB_QTBL_NORMAL_2;

--FLASHBACK QUERY NORMAL TABLE WITH INDEX AND LOB
DROP TABLE IF EXISTS FB_QTBL_NORMAL_3;
CREATE TABLE FB_QTBL_NORMAL_3 (ID INT, TT CLOB);
CREATE INDEX IDX_FB_QTBL_NORMAL_3 ON FB_QTBL_NORMAL_3 (ID);
INSERT INTO FB_QTBL_NORMAL_3 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_NORMAL_3 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_QTBL_NORMAL_3 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_QTBL_NORMAL_3;
SELECT * FROM FB_QTBL_NORMAL_3 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID > 0;
DROP TABLE FB_QTBL_NORMAL_3;

--FLASHBACK QUERY PARTITION TABLE
DROP TABLE IF EXISTS FB_QTBL_PART_1;
CREATE TABLE FB_QTBL_PART_1 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
INSERT INTO FB_QTBL_PART_1 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_PART_1 SET ID = 2 WHERE ID = 1;
COMMIT;
SELECT * FROM FB_QTBL_PART_1;
SELECT * FROM FB_QTBL_PART_1 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
DROP TABLE FB_QTBL_PART_1;

--FLASHBACK QUERY PARTITION TABLE WITH GLOBAL INDEX
DROP TABLE IF EXISTS FB_QTBL_PART_2;
CREATE TABLE FB_QTBL_PART_2 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
CREATE INDEX IDX_FB_QTBL_PART_2 ON FB_QTBL_PART_2 (ID);
INSERT INTO FB_QTBL_PART_2 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_PART_2 SET ID = 2 WHERE ID = 1;
COMMIT;
INSERT INTO FB_QTBL_PART_2 VALUES (10);
COMMIT;
SELECT * FROM FB_QTBL_PART_2;
SELECT * FROM FB_QTBL_PART_2 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID > 0;

EXPLAIN PLAN FOR SELECT * FROM FB_QTBL_PART_2 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID >= 10;
EXPLAIN PLAN FOR SELECT * FROM FB_QTBL_PART_2 WHERE ID >= 10;
DROP TABLE FB_QTBL_PART_2;

--FLASHBACK QUERY PARTITION TABLE WITH LOCAL INDEX AND LOB
DROP TABLE IF EXISTS FB_QTBL_PART_3;
CREATE TABLE FB_QTBL_PART_3 (ID INT, TT CLOB)
PARTITION BY LIST(ID)
(
PARTITION P1 VALUES (1,2,3,4,5),
PARTITION P2 VALUES (6,7,8,9,10)
);
CREATE INDEX IDX_FB_QTBL_PART_3 ON FB_QTBL_PART_3 (ID) LOCAL;
INSERT INTO FB_QTBL_PART_3 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_QTBL_PART_3 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_QTBL_PART_3 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_QTBL_PART_3;
SELECT * FROM FB_QTBL_PART_3 AS OF TIMESTAMP SYSTIMESTAMP - 1/(24*60*60) WHERE ID > 0;
DROP TABLE FB_QTBL_PART_3;


--FLASHBACK WITH INVALID SCN
DROP TABLE IF EXISTS FB_TBL_INVALID_1;
CREATE TABLE FB_TBL_INVALID_1 (ID INT);
INSERT INTO FB_TBL_INVALID_1 VALUES(1);
COMMIT;
SELECT * FROM FB_TBL_INVALID_1;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 0;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 1;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 9999999999999999;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 9999999999999999 / 1;
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN 'ASDFGAG';
FLASHBACK TABLE FB_TBL_INVALID_1 TO SCN (SELECT CURRENT_SCN FROM V$DATABASE);
DROP TABLE FB_TBL_INVALID_1;

--FLASHBACK WITH INVALID TIMESTAMP
DROP TABLE IF EXISTS FB_TBL_INVALID_2;
CREATE TABLE FB_TBL_INVALID_2 (ID INT);
INSERT INTO FB_TBL_INVALID_2 VALUES(1);
COMMIT;
SELECT * FROM FB_TBL_INVALID_2;
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP 0;
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP 123.45678;
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP 'ASDFGAG';
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP SYSDATE - 1/24;
FLASHBACK TABLE FB_TBL_INVALID_2 TO TIMESTAMP SYSTIMESTAMP + 1/24;
FLASHBACK TABLE FB_TBL_INVALID_1 TO TIMESTAMP (SELECT CURRENT_SCN FROM V$DATABASE);
DROP TABLE FB_TBL_INVALID_2;

--FLASHBACK TO BEFORE DDL
DROP TABLE IF EXISTS FB_TBL_INVALID_3;
CREATE TABLE FB_TBL_INVALID_3 (ID INT);
INSERT INTO FB_TBL_INVALID_3 VALUES(1);
COMMIT;
SELECT SLEEP(2);

CREATE INDEX IDX_FB_TBL_INVALID_3 ON FB_TBL_INVALID_3 (ID);
DROP INDEX IDX_FB_TBL_INVALID_3 ON FB_TBL_INVALID_3;
FLASHBACK TABLE FB_TBL_INVALID_3 TO TIMESTAMP SYSDATE - 1/(24*60*60);
DROP TABLE FB_TBL_INVALID_3;

DROP TABLE IF EXISTS FB_TBL_INVALID_4;
CREATE TABLE FB_TBL_INVALID_4 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
INSERT INTO FB_TBL_INVALID_4 VALUES(1);
COMMIT;
SELECT SLEEP(2);

ALTER TABLE FB_TBL_INVALID_4 ADD PARTITION P3 VALUES LESS THAN (30);
FLASHBACK TABLE FB_TBL_INVALID_4 TO TIMESTAMP SYSDATE - 1/(24*60*60);
DROP TABLE FB_TBL_INVALID_4;

--FLASHBACK NORMAL TABLE
DROP TABLE IF EXISTS FB_TBL_NORMAL_1;
CREATE TABLE FB_TBL_NORMAL_1 (ID INT);
INSERT INTO FB_TBL_NORMAL_1 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_NORMAL_1 SET ID = 2 WHERE ID = 1;
COMMIT;
SELECT * FROM FB_TBL_NORMAL_1;
FLASHBACK TABLE FB_TBL_NORMAL_1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_NORMAL_1;
DROP TABLE FB_TBL_NORMAL_1;

--FLASHBACK NORMAL TABLE WITH INDEX
DROP TABLE IF EXISTS FB_TBL_NORMAL_2;
CREATE TABLE FB_TBL_NORMAL_2 (ID INT);
CREATE INDEX IDX_FB_TBL_NORMAL_2 ON FB_TBL_NORMAL_2 (ID);
INSERT INTO FB_TBL_NORMAL_2 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_NORMAL_2 SET ID = 2 WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_NORMAL_2 VALUES (10);
COMMIT;
SELECT * FROM FB_TBL_NORMAL_2;
FLASHBACK TABLE FB_TBL_NORMAL_2 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_NORMAL_2 WHERE ID > 0;
EXPLAIN PLAN FOR SELECT * FROM FB_TBL_NORMAL_2 WHERE ID > 0;
DROP TABLE FB_TBL_NORMAL_2;

--FLASHBACK NORMAL TABLE WITH INDEX AND LOB
DROP TABLE IF EXISTS FB_TBL_NORMAL_3;
CREATE TABLE FB_TBL_NORMAL_3 (ID INT, TT CLOB);
CREATE INDEX IDX_FB_TBL_NORMAL_3 ON FB_TBL_NORMAL_3 (ID);
INSERT INTO FB_TBL_NORMAL_3 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_NORMAL_3 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_NORMAL_3 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_NORMAL_3;
FLASHBACK TABLE FB_TBL_NORMAL_3 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_NORMAL_3;
DROP TABLE FB_TBL_NORMAL_3;

--FLASHBACK PARTITION TABLE
DROP TABLE IF EXISTS FB_TBL_PART_1;
CREATE TABLE FB_TBL_PART_1 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
INSERT INTO FB_TBL_PART_1 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_PART_1 SET ID = 2 WHERE ID = 1;
COMMIT;
SELECT * FROM FB_TBL_PART_1;
FLASHBACK TABLE FB_TBL_PART_1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_PART_1;
DROP TABLE FB_TBL_PART_1;

--FLASHBACK PARTITION TABLE WITH GLOBAL INDEX
DROP TABLE IF EXISTS FB_TBL_PART_2;
CREATE TABLE FB_TBL_PART_2 (ID INT)
PARTITION BY RANGE (ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
);
CREATE INDEX IDX_FB_TBL_PART_2 ON FB_TBL_PART_2 (ID);
INSERT INTO FB_TBL_PART_2 VALUES(1);
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_PART_2 SET ID = 2 WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_PART_2 VALUES (10);
COMMIT;
SELECT * FROM FB_TBL_PART_2;
FLASHBACK TABLE FB_TBL_PART_2 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_PART_2;

EXPLAIN PLAN FOR SELECT * FROM FB_TBL_PART_2 WHERE ID >= 10;
DROP TABLE FB_TBL_PART_2;

--FLASHBACK PARTITION TABLE WITH LOCAL INDEX AND LOB
DROP TABLE IF EXISTS FB_TBL_PART_3;
CREATE TABLE FB_TBL_PART_3 (ID INT, TT CLOB)
PARTITION BY LIST(ID)
(
PARTITION P1 VALUES (1,2,3,4,5),
PARTITION P2 VALUES (6,7,8,9,10)
);
CREATE INDEX IDX_FB_TBL_PART_3 ON FB_TBL_PART_3 (ID) LOCAL;
INSERT INTO FB_TBL_PART_3 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_PART_3 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_PART_3 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_PART_3;
FLASHBACK TABLE FB_TBL_PART_3 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_PART_3;
DROP TABLE FB_TBL_PART_3;


--RE-FLASHBACK NORMAL TABLE
DROP TABLE IF EXISTS FB_TBL_NORMAL_RE1;
CREATE TABLE FB_TBL_NORMAL_RE1 (ID INT, TT CLOB);
CREATE INDEX IDX_FB_TBL_NORMAL_RE1 ON FB_TBL_NORMAL_RE1 (ID);
INSERT INTO FB_TBL_NORMAL_RE1 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_NORMAL_RE1 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_NORMAL_RE1 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_NORMAL_RE1;
FLASHBACK TABLE FB_TBL_NORMAL_RE1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_NORMAL_RE1;
FLASHBACK TABLE FB_TBL_NORMAL_RE1 TO BEFORE TRUNCATE FORCE;
SELECT * FROM FB_TBL_NORMAL_RE1;
FLASHBACK TABLE FB_TBL_NORMAL_RE1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_NORMAL_RE1;
DROP TABLE FB_TBL_NORMAL_RE1;

--RE-FLASHBACK PART TABLE
DROP TABLE IF EXISTS FB_TBL_PART_RE1;
CREATE TABLE FB_TBL_PART_RE1 (ID INT, TT CLOB)
PARTITION BY LIST(ID)
(
PARTITION P1 VALUES (1,2,3,4,5),
PARTITION P2 VALUES (6,7,8,9,10)
);
CREATE INDEX IDX_FB_TBL_PART_RE1 ON FB_TBL_PART_RE1 (ID) LOCAL;
INSERT INTO FB_TBL_PART_RE1 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_PART_RE1 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
INSERT INTO FB_TBL_PART_RE1 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_PART_RE1;
FLASHBACK TABLE FB_TBL_PART_RE1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_PART_RE1;
FLASHBACK TABLE FB_TBL_PART_RE1 TO BEFORE TRUNCATE FORCE;
SELECT * FROM FB_TBL_PART_RE1;
FLASHBACK TABLE FB_TBL_PART_RE1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_PART_RE1;
DROP TABLE FB_TBL_PART_RE1;

--FLASHBACK NORMAL TABLE AFTER FLASHBACK DROP
DROP TABLE IF EXISTS FB_TBL_NORMAL_RB1;
CREATE TABLE FB_TBL_NORMAL_RB1 (ID INT, TT CLOB) tablespace users;
CREATE INDEX IDX_FB_TBL_NORMAL_RB1 ON FB_TBL_NORMAL_RB1 (ID);
INSERT INTO FB_TBL_NORMAL_RB1 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_NORMAL_RB1 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
DROP TABLE FB_TBL_NORMAL_RB1;
FLASHBACK TABLE FB_TBL_NORMAL_RB1 TO BEFORE DROP;
INSERT INTO FB_TBL_NORMAL_RB1 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_NORMAL_RB1;
FLASHBACK TABLE FB_TBL_NORMAL_RB1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_NORMAL_RB1;
DROP TABLE FB_TBL_NORMAL_RB1;

--FLASHBACK NORMAL TABLE AFTER FLASHBACK TRUNCATE
DROP TABLE IF EXISTS FB_TBL_NORMAL_RB2;
CREATE TABLE FB_TBL_NORMAL_RB2 (ID INT, TT CLOB) tablespace users;
CREATE INDEX IDX_FB_TBL_NORMAL_RB2 ON FB_TBL_NORMAL_RB2 (ID);
INSERT INTO FB_TBL_NORMAL_RB2 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_NORMAL_RB2 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
TRUNCATE TABLE FB_TBL_NORMAL_RB2;
INSERT INTO FB_TBL_NORMAL_RB2 VALUES (10, 'QWETYUUQER');
COMMIT;
FLASHBACK TABLE FB_TBL_NORMAL_RB2 TO BEFORE TRUNCATE;
FLASHBACK TABLE FB_TBL_NORMAL_RB2 TO BEFORE TRUNCATE FORCE;
SELECT * FROM FB_TBL_NORMAL_RB2;
FLASHBACK TABLE FB_TBL_NORMAL_RB2 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_NORMAL_RB2;
DROP TABLE FB_TBL_NORMAL_RB2;

--FLASHBACK PART TABLE AFTER FLASHBACK DROP
DROP TABLE IF EXISTS FB_TBL_PART_RB1;
CREATE TABLE FB_TBL_PART_RB1 (ID INT, TT CLOB)
PARTITION BY RANGE(ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
) tablespace users;
CREATE INDEX IDX_FB_TBL_PART_RB1 ON FB_TBL_PART_RB1 (ID) LOCAL;
INSERT INTO FB_TBL_PART_RB1 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_PART_RB1 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
DROP TABLE FB_TBL_PART_RB1;
FLASHBACK TABLE FB_TBL_PART_RB1 TO BEFORE DROP;
INSERT INTO FB_TBL_PART_RB1 VALUES (10, 'QWETYUUQER');
COMMIT;
SELECT * FROM FB_TBL_PART_RB1;
FLASHBACK TABLE FB_TBL_PART_RB1 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_PART_RB1;
DROP TABLE FB_TBL_PART_RB1;

--FLASHBACK PART TABLE AFTER FLASHBACK TRUNCATE
DROP TABLE IF EXISTS FB_TBL_PART_RB2;
CREATE TABLE FB_TBL_PART_RB2 (ID INT, TT CLOB)
PARTITION BY RANGE(ID)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20)
) tablespace users;
CREATE INDEX IDX_FB_TBL_PART_RB2 ON FB_TBL_PART_RB2 (ID) LOCAL;
INSERT INTO FB_TBL_PART_RB2 VALUES(1,'ADGASDFASG');
COMMIT;
SELECT SLEEP(2);
UPDATE FB_TBL_PART_RB2 SET ID = 2, TT = 'AFAGADGHH' WHERE ID = 1;
COMMIT;
TRUNCATE TABLE FB_TBL_PART_RB2;
INSERT INTO FB_TBL_PART_RB2 VALUES (10, 'QWETYUUQER');
COMMIT;
FLASHBACK TABLE FB_TBL_PART_RB2 TO BEFORE TRUNCATE;
FLASHBACK TABLE FB_TBL_PART_RB2 TO BEFORE TRUNCATE FORCE;
SELECT * FROM FB_TBL_PART_RB2;
FLASHBACK TABLE FB_TBL_PART_RB2 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
SELECT * FROM FB_TBL_PART_RB2;
DROP TABLE FB_TBL_PART_RB2;

--FLASHBACK PART TABLE TO BEFORE SCN AFTER TRUNCATE(ALLOWED BUT NOT RECOMMENDED)
DROP TABLE IF EXISTS FB_TABLE_PART_RB3;
CREATE TABLE FB_TBL_PART_RB3(ID1 INT, CONSTRAINT PK_FB_TBL_PART_RB3 PRIMARY KEY(ID1), ID2 INT, ID3 INT)
PARTITION BY RANGE (ID3)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20),
PARTITION P3 VALUES LESS THAN (30)
) TABLESPACE USERS;
CREATE INDEX IDX_FB_TBL_PART_RB3_1 ON FB_TBL_PART_RB3 (ID2);
CREATE INDEX IDX_FB_TBL_PART_RB3_2 ON FB_TBL_PART_RB3 (ID3) LOCAL;

INSERT INTO FB_TBL_PART_RB3 VALUES (1, 1, 1);
INSERT INTO FB_TBL_PART_RB3 VALUES (11, 11, 11);
INSERT INTO FB_TBL_PART_RB3 VALUES (21, 21, 21);
COMMIT;
SELECT SLEEP(2);

ALTER TABLE FB_TBL_PART_RB3 TRUNCATE PARTITION P1;
UPDATE FB_TBL_PART_RB3 SET ID1 = 22, ID2 = 22, ID3 = 22 WHERE ID3 = 21;
DROP TABLE FB_TBL_PART_RB3 PURGE;

DROP TABLE IF EXISTS FB_TABLE_PART_RB4;
CREATE TABLE FB_TBL_PART_RB4(ID1 INT, ID2 INT, ID3 INT)
PARTITION BY RANGE (ID3)
(
PARTITION P1 VALUES LESS THAN (10),
PARTITION P2 VALUES LESS THAN (20),
PARTITION P3 VALUES LESS THAN (30)
) TABLESPACE USERS;
CREATE INDEX IDX_FB_TBL_PART_RB3_1 ON FB_TBL_PART_RB4 (ID2);
CREATE INDEX IDX_FB_TBL_PART_RB3_2 ON FB_TBL_PART_RB4 (ID3) LOCAL;

INSERT INTO FB_TBL_PART_RB4 VALUES (1, 1, 1);
INSERT INTO FB_TBL_PART_RB4 VALUES (11, 11, 11);
INSERT INTO FB_TBL_PART_RB4 VALUES (21, 21, 21);
COMMIT;

ALTER TABLE FB_TBL_PART_RB4 TRUNCATE PARTITION P1;
SELECT SLEEP(2);
UPDATE FB_TBL_PART_RB4 SET ID1 = 22, ID2 = 22, ID3 = 22 WHERE ID3 = 21;
FLASHBACK TABLE FB_TBL_PART_RB4 TO TIMESTAMP SYSTIMESTAMP - 1/(24*60*60);
DROP TABLE FB_TBL_PART_RB4 PURGE;

--CLEANUP
PURGE RECYCLEBIN;