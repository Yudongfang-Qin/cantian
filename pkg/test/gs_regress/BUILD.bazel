# Generated by cmake2bazel.
# Any issue please report to https://open.codehub.huawei.com/innersource/hazel/toolkits/issues
# Caesar Task Force@Data Storage Product Line

load ("//:global_options.bzl","GLOBAL_COPTS","GLOBAL_LOCAL_DEFINES","GLOBAL_LINKOPTS",)

load("//pkg/test:test_opt.bzl", "TEST_COPTS")

package(default_visibility = ["//visibility:public"])

COMMON_LINKOPTS = GLOBAL_LINKOPTS + []

COMMON_LOCAL_DEFINES = GLOBAL_LOCAL_DEFINES + []

COMMON_COPTS = GLOBAL_COPTS + []

cc_test (
    name = "gs_regress",
    srcs =  [
        "gs_regress_main.c",
        "//pkg/src/cluster:cluster_hdrs",
        "//pkg/src/common:common_hdrs",
        "//pkg/src/common:variant_hdrs",
        "//platform:huawei_security_hdrs",
        "//pkg/src/kernel:common",
        "//pkg/src/kernel:include",
        "//pkg/src/cms:interface_hdrs",
        "//pkg/src/protocol:protocol_hdrs",
        "//pkg/src/protocol:libzeprotocol.so",
        "//pkg/src/driver/ctconn:libzeclient.so",
        "//pkg/src/common:libzecommon.so",
    ],
    linkstatic = True,
    local_defines = [
        "GETDBVERSION=ctconn_get_dbversion",
        "KNL_PREFIX",
        "WSEC_AES_GCM_SUPPORT",
        "WSEC_COMPILE_CAC_OPENSSL",
        "WSEC_COMPILE_MIP_OTHER",
        "WSEC_DEBUG",
        "WSEC_ERR_CODE_BASE=0x10000000",
        "WSEC_TRACE_MEMORY",
        "WSEC_USE_OPENSSL_110",
        "_CANTIAN_LCOV_TEST_",
        "_CMS_LCOV_TEST_",
        "_DEBUG",
        "_GNU_SOURCE",
        "_LARGEFILE64_SOURCE",
        "_REENTRANT",
    ] + COMMON_LOCAL_DEFINES,
    copts = [
        "-std=c99",
        "-g",
        "-ldl",
        "-pthread",
        "-g",
        "-fPIE",
        "-mtune=nocona",
        "-fsigned-char",
        "-msse4.2",
        "-fprofile-arcs",
        "-ftest-coverage",
        "-fPIC",
        "-Wall",
        "-MMD",
        "-fno-strict-aliasing",
        "-fms-extensions",
        "-fvisibility=default",
        "-fstack-protector-strong",
        "--param",
        "ssp-buffer-size=4",
        "-fno-common",
        "-Wtrampolines",
        "-freg-struct-return",
        "-pipe",
        '-DCT_LIB_VERSION="static char* str_CT_LIB_VERSION=\'Cantian Debug 2.0.0 a1d2efcd5a\'"',
    ] + TEST_COPTS + COMMON_COPTS,
    linkopts = [
        "-std=c99",
        "-g",
        "-ldl",
        "-pthread",
        "-g",
        "-pie",
        "-fprofile-arcs",
        "-ftest-coverage",
        "-Wl,-z,noexecstack",
        "-Wl,-z,relro",
        "-Wl,-z,now",
        "-Wl,-Bsymbolic",
        "-rdynamic",
        "-ldl",
        "-lm",
        "-lrt",
        "-lpthread",
    ] + COMMON_LINKOPTS,
    deps = [
        "//pkg/src/sql:zesql",
        "//pkg/src/kernel:zekernel",
        "//library:z",
        "//library:zstd",
        "//library:lz4",
        "//library:cgw_client",
        "//library:dbstoreClient",
        "//library:dbstor_tool",
        "//library:nomlnx/xnetlite",
        "//library:iod",
        "//library:lwt",
        "//library:dplog",
        "//library:ftds_stub",
        "//library:ftdsclient",
        "//library:dposax",
        "//library:securec",
        "//library:scpart_mgr",
        "//library:mxml",
        "//library:dpdiagnose",
        "//library:patmatch",
        "//library:dpumm_mm",
        "//library:dphpuc_roc",
        "//library:dptracepoint",
        "//library:dpumm_cmm",
        "//library:osax_util",
        "//library:dswcore_mem",
        "//library:byte_buffer",
        "//library:simpopb",
        "//library:dntf",
        "//library:dposen",
        "//library:cmclient",
        "//library:kmc",
        "//library:kmcext",
        "//library:sdp",
        "//library:fdsa",
        "//library:fdsa_util",
        "//library:dif_usr",
        "@com_google_googletest//:googletest_inc",
        "@com_google_googletest//:googlemock_inc",
        #"//pkg/test/unit_test:mockcpp_3rdparty_inc",
        #"//pkg/test/unit_test:mockcpp_include_inc",
    ],
)
